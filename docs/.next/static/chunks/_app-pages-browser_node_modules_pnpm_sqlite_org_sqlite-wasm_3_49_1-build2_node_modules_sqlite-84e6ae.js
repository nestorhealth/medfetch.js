/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	// runtime can't be in strict mode because a global variable is assign and maybe created.
/******/ 	var __webpack_modules__ = ({

/***/ "(app-pages-browser)/../node_modules/.pnpm/@sqlite.org+sqlite-wasm@3.49.1-build2/node_modules/@sqlite.org/sqlite-wasm/sqlite-wasm/jswasm/sqlite3-opfs-async-proxy.js":
/*!*******************************************************************************************************************************************************!*\
  !*** ../node_modules/.pnpm/@sqlite.org+sqlite-wasm@3.49.1-build2/node_modules/@sqlite.org/sqlite-wasm/sqlite-wasm/jswasm/sqlite3-opfs-async-proxy.js ***!
  \*******************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/*\n  2022-09-16\n\n  The author disclaims copyright to this source code.  In place of a\n  legal notice, here is a blessing:\n\n  *   May you do good and not evil.\n  *   May you find forgiveness for yourself and forgive others.\n  *   May you share freely, never taking more than you give.\n\n  ***********************************************************************\n\n  A Worker which manages asynchronous OPFS handles on behalf of a\n  synchronous API which controls it via a combination of Worker\n  messages, SharedArrayBuffer, and Atomics. It is the asynchronous\n  counterpart of the API defined in sqlite3-vfs-opfs.js.\n\n  Highly indebted to:\n\n  https://github.com/rhashimoto/wa-sqlite/blob/master/src/examples/OriginPrivateFileSystemVFS.js\n\n  for demonstrating how to use the OPFS APIs.\n\n  This file is to be loaded as a Worker. It does not have any direct\n  access to the sqlite3 JS/WASM bits, so any bits which it needs (most\n  notably SQLITE_xxx integer codes) have to be imported into it via an\n  initialization process.\n\n  This file represents an implementation detail of a larger piece of\n  code, and not a public interface. Its details may change at any time\n  and are not intended to be used by any client-level code.\n\n  2022-11-27: Chrome v108 changes some async methods to synchronous, as\n  documented at:\n\n  https://developer.chrome.com/blog/sync-methods-for-accesshandles/\n\n  Firefox v111 and Safari 16.4, both released in March 2023, also\n  include this.\n\n  We cannot change to the sync forms at this point without breaking\n  clients who use Chrome v104-ish or higher. truncate(), getSize(),\n  flush(), and close() are now (as of v108) synchronous. Calling them\n  with an \"await\", as we have to for the async forms, is still legal\n  with the sync forms but is superfluous. Calling the async forms with\n  theFunc().then(...) is not compatible with the change to\n  synchronous, but we do do not use those APIs that way. i.e. we don't\n  _need_ to change anything for this, but at some point (after Chrome\n  versions (approximately) 104-107 are extinct) should change our\n  usage of those methods to remove the \"await\".\n*/\n\nconst wPost = (type, ...args) => postMessage({ type, payload: args });\nconst installAsyncProxy = function () {\n  const toss = function (...args) {\n    throw new Error(args.join(' '));\n  };\n  if (globalThis.window === globalThis) {\n    toss(\n      'This code cannot run from the main thread.',\n      'Load it as a Worker from a separate Worker.',\n    );\n  } else if (!navigator?.storage?.getDirectory) {\n    toss('This API requires navigator.storage.getDirectory.');\n  }\n\n  const state = Object.create(null);\n\n  state.verbose = 1;\n\n  const loggers = {\n    0: console.error.bind(console),\n    1: console.warn.bind(console),\n    2: console.log.bind(console),\n  };\n  const logImpl = (level, ...args) => {\n    if (state.verbose > level) loggers[level]('OPFS asyncer:', ...args);\n  };\n  const log = (...args) => logImpl(2, ...args);\n  const warn = (...args) => logImpl(1, ...args);\n  const error = (...args) => logImpl(0, ...args);\n\n  const __openFiles = Object.create(null);\n\n  const __implicitLocks = new Set();\n\n  const getResolvedPath = function (filename, splitIt) {\n    const p = new URL(filename, 'file://irrelevant').pathname;\n    return splitIt ? p.split('/').filter((v) => !!v) : p;\n  };\n\n  const getDirForFilename = async function f(absFilename, createDirs = false) {\n    const path = getResolvedPath(absFilename, true);\n    const filename = path.pop();\n    let dh = state.rootDir;\n    for (const dirName of path) {\n      if (dirName) {\n        dh = await dh.getDirectoryHandle(dirName, { create: !!createDirs });\n      }\n    }\n    return [dh, filename];\n  };\n\n  const closeSyncHandle = async (fh) => {\n    if (fh.syncHandle) {\n      log('Closing sync handle for', fh.filenameAbs);\n      const h = fh.syncHandle;\n      delete fh.syncHandle;\n      delete fh.xLock;\n      __implicitLocks.delete(fh.fid);\n      return h.close();\n    }\n  };\n\n  const closeSyncHandleNoThrow = async (fh) => {\n    try {\n      await closeSyncHandle(fh);\n    } catch (e) {\n      warn('closeSyncHandleNoThrow() ignoring:', e, fh);\n    }\n  };\n\n  const releaseImplicitLocks = async () => {\n    if (__implicitLocks.size) {\n      for (const fid of __implicitLocks) {\n        const fh = __openFiles[fid];\n        await closeSyncHandleNoThrow(fh);\n        log('Auto-unlocked', fid, fh.filenameAbs);\n      }\n    }\n  };\n\n  const releaseImplicitLock = async (fh) => {\n    if (fh.releaseImplicitLocks && __implicitLocks.has(fh.fid)) {\n      return closeSyncHandleNoThrow(fh);\n    }\n  };\n\n  class GetSyncHandleError extends Error {\n    constructor(errorObject, ...msg) {\n      super(\n        [...msg, ': ' + errorObject.name + ':', errorObject.message].join(' '),\n        {\n          cause: errorObject,\n        },\n      );\n      this.name = 'GetSyncHandleError';\n    }\n  }\n\n  GetSyncHandleError.convertRc = (e, rc) => {\n    if (e instanceof GetSyncHandleError) {\n      if (\n        e.cause.name === 'NoModificationAllowedError' ||\n        (e.cause.name === 'DOMException' &&\n          0 === e.cause.message.indexOf('Access Handles cannot'))\n      ) {\n        return state.sq3Codes.SQLITE_BUSY;\n      } else if ('NotFoundError' === e.cause.name) {\n        return state.sq3Codes.SQLITE_CANTOPEN;\n      }\n    } else if ('NotFoundError' === e?.name) {\n      return state.sq3Codes.SQLITE_CANTOPEN;\n    }\n    return rc;\n  };\n\n  const getSyncHandle = async (fh, opName) => {\n    if (!fh.syncHandle) {\n      const t = performance.now();\n      log('Acquiring sync handle for', fh.filenameAbs);\n      const maxTries = 6,\n        msBase = state.asyncIdleWaitTime * 2;\n      let i = 1,\n        ms = msBase;\n      for (; true; ms = msBase * ++i) {\n        try {\n          fh.syncHandle = await fh.fileHandle.createSyncAccessHandle();\n          break;\n        } catch (e) {\n          if (i === maxTries) {\n            throw new GetSyncHandleError(\n              e,\n              'Error getting sync handle for',\n              opName + '().',\n              maxTries,\n              'attempts failed.',\n              fh.filenameAbs,\n            );\n          }\n          warn(\n            'Error getting sync handle for',\n            opName + '(). Waiting',\n            ms,\n            'ms and trying again.',\n            fh.filenameAbs,\n            e,\n          );\n          Atomics.wait(state.sabOPView, state.opIds.retry, 0, ms);\n        }\n      }\n      log(\n        'Got',\n        opName + '() sync handle for',\n        fh.filenameAbs,\n        'in',\n        performance.now() - t,\n        'ms',\n      );\n      if (!fh.xLock) {\n        __implicitLocks.add(fh.fid);\n        log(\n          'Acquired implicit lock for',\n          opName + '()',\n          fh.fid,\n          fh.filenameAbs,\n        );\n      }\n    }\n    return fh.syncHandle;\n  };\n\n  const storeAndNotify = (opName, value) => {\n    log(opName + '() => notify(', value, ')');\n    Atomics.store(state.sabOPView, state.opIds.rc, value);\n    Atomics.notify(state.sabOPView, state.opIds.rc);\n  };\n\n  const affirmNotRO = function (opName, fh) {\n    if (fh.readOnly) toss(opName + '(): File is read-only: ' + fh.filenameAbs);\n  };\n\n  let flagAsyncShutdown = false;\n\n  const vfsAsyncImpls = {\n    'opfs-async-shutdown': async () => {\n      flagAsyncShutdown = true;\n      storeAndNotify('opfs-async-shutdown', 0);\n    },\n    mkdir: async (dirname) => {\n      let rc = 0;\n      try {\n        await getDirForFilename(dirname + '/filepart', true);\n      } catch (e) {\n        state.s11n.storeException(2, e);\n        rc = state.sq3Codes.SQLITE_IOERR;\n      }\n      storeAndNotify('mkdir', rc);\n    },\n    xAccess: async (filename) => {\n      let rc = 0;\n      try {\n        const [dh, fn] = await getDirForFilename(filename);\n        await dh.getFileHandle(fn);\n      } catch (e) {\n        state.s11n.storeException(2, e);\n        rc = state.sq3Codes.SQLITE_IOERR;\n      }\n      storeAndNotify('xAccess', rc);\n    },\n    xClose: async function (fid) {\n      const opName = 'xClose';\n      __implicitLocks.delete(fid);\n      const fh = __openFiles[fid];\n      let rc = 0;\n      if (fh) {\n        delete __openFiles[fid];\n        await closeSyncHandle(fh);\n        if (fh.deleteOnClose) {\n          try {\n            await fh.dirHandle.removeEntry(fh.filenamePart);\n          } catch (e) {\n            warn('Ignoring dirHandle.removeEntry() failure of', fh, e);\n          }\n        }\n      } else {\n        state.s11n.serialize();\n        rc = state.sq3Codes.SQLITE_NOTFOUND;\n      }\n      storeAndNotify(opName, rc);\n    },\n    xDelete: async function (...args) {\n      const rc = await vfsAsyncImpls.xDeleteNoWait(...args);\n      storeAndNotify('xDelete', rc);\n    },\n    xDeleteNoWait: async function (filename, syncDir = 0, recursive = false) {\n      let rc = 0;\n      try {\n        while (filename) {\n          const [hDir, filenamePart] = await getDirForFilename(filename, false);\n          if (!filenamePart) break;\n          await hDir.removeEntry(filenamePart, { recursive });\n          if (0x1234 !== syncDir) break;\n          recursive = false;\n          filename = getResolvedPath(filename, true);\n          filename.pop();\n          filename = filename.join('/');\n        }\n      } catch (e) {\n        state.s11n.storeException(2, e);\n        rc = state.sq3Codes.SQLITE_IOERR_DELETE;\n      }\n      return rc;\n    },\n    xFileSize: async function (fid) {\n      const fh = __openFiles[fid];\n      let rc = 0;\n      try {\n        const sz = await (await getSyncHandle(fh, 'xFileSize')).getSize();\n        state.s11n.serialize(Number(sz));\n      } catch (e) {\n        state.s11n.storeException(1, e);\n        rc = GetSyncHandleError.convertRc(e, state.sq3Codes.SQLITE_IOERR);\n      }\n      await releaseImplicitLock(fh);\n      storeAndNotify('xFileSize', rc);\n    },\n    xLock: async function (fid, lockType) {\n      const fh = __openFiles[fid];\n      let rc = 0;\n      const oldLockType = fh.xLock;\n      fh.xLock = lockType;\n      if (!fh.syncHandle) {\n        try {\n          await getSyncHandle(fh, 'xLock');\n          __implicitLocks.delete(fid);\n        } catch (e) {\n          state.s11n.storeException(1, e);\n          rc = GetSyncHandleError.convertRc(\n            e,\n            state.sq3Codes.SQLITE_IOERR_LOCK,\n          );\n          fh.xLock = oldLockType;\n        }\n      }\n      storeAndNotify('xLock', rc);\n    },\n    xOpen: async function (fid, filename, flags, opfsFlags) {\n      const opName = 'xOpen';\n      const create = state.sq3Codes.SQLITE_OPEN_CREATE & flags;\n      try {\n        let hDir, filenamePart;\n        try {\n          [hDir, filenamePart] = await getDirForFilename(filename, !!create);\n        } catch (e) {\n          state.s11n.storeException(1, e);\n          storeAndNotify(opName, state.sq3Codes.SQLITE_NOTFOUND);\n          return;\n        }\n        if (state.opfsFlags.OPFS_UNLINK_BEFORE_OPEN & opfsFlags) {\n          try {\n            await hDir.removeEntry(filenamePart);\n          } catch (e) {}\n        }\n        const hFile = await hDir.getFileHandle(filenamePart, { create });\n        const fh = Object.assign(Object.create(null), {\n          fid: fid,\n          filenameAbs: filename,\n          filenamePart: filenamePart,\n          dirHandle: hDir,\n          fileHandle: hFile,\n          sabView: state.sabFileBufView,\n          readOnly: !create && !!(state.sq3Codes.SQLITE_OPEN_READONLY & flags),\n          deleteOnClose: !!(state.sq3Codes.SQLITE_OPEN_DELETEONCLOSE & flags),\n        });\n        fh.releaseImplicitLocks =\n          opfsFlags & state.opfsFlags.OPFS_UNLOCK_ASAP ||\n          state.opfsFlags.defaultUnlockAsap;\n        __openFiles[fid] = fh;\n        storeAndNotify(opName, 0);\n      } catch (e) {\n        error(opName, e);\n        state.s11n.storeException(1, e);\n        storeAndNotify(opName, state.sq3Codes.SQLITE_IOERR);\n      }\n    },\n    xRead: async function (fid, n, offset64) {\n      let rc = 0,\n        nRead;\n      const fh = __openFiles[fid];\n      try {\n        nRead = (await getSyncHandle(fh, 'xRead')).read(\n          fh.sabView.subarray(0, n),\n          { at: Number(offset64) },\n        );\n        if (nRead < n) {\n          fh.sabView.fill(0, nRead, n);\n          rc = state.sq3Codes.SQLITE_IOERR_SHORT_READ;\n        }\n      } catch (e) {\n        error('xRead() failed', e, fh);\n        state.s11n.storeException(1, e);\n        rc = GetSyncHandleError.convertRc(e, state.sq3Codes.SQLITE_IOERR_READ);\n      }\n      await releaseImplicitLock(fh);\n      storeAndNotify('xRead', rc);\n    },\n    xSync: async function (fid, flags) {\n      const fh = __openFiles[fid];\n      let rc = 0;\n      if (!fh.readOnly && fh.syncHandle) {\n        try {\n          await fh.syncHandle.flush();\n        } catch (e) {\n          state.s11n.storeException(2, e);\n          rc = state.sq3Codes.SQLITE_IOERR_FSYNC;\n        }\n      }\n      storeAndNotify('xSync', rc);\n    },\n    xTruncate: async function (fid, size) {\n      let rc = 0;\n      const fh = __openFiles[fid];\n      try {\n        affirmNotRO('xTruncate', fh);\n        await (await getSyncHandle(fh, 'xTruncate')).truncate(size);\n      } catch (e) {\n        error('xTruncate():', e, fh);\n        state.s11n.storeException(2, e);\n        rc = GetSyncHandleError.convertRc(\n          e,\n          state.sq3Codes.SQLITE_IOERR_TRUNCATE,\n        );\n      }\n      await releaseImplicitLock(fh);\n      storeAndNotify('xTruncate', rc);\n    },\n    xUnlock: async function (fid, lockType) {\n      let rc = 0;\n      const fh = __openFiles[fid];\n      if (fh.syncHandle && state.sq3Codes.SQLITE_LOCK_NONE === lockType) {\n        try {\n          await closeSyncHandle(fh);\n        } catch (e) {\n          state.s11n.storeException(1, e);\n          rc = state.sq3Codes.SQLITE_IOERR_UNLOCK;\n        }\n      }\n      storeAndNotify('xUnlock', rc);\n    },\n    xWrite: async function (fid, n, offset64) {\n      let rc;\n      const fh = __openFiles[fid];\n      try {\n        affirmNotRO('xWrite', fh);\n        rc =\n          n ===\n          (await getSyncHandle(fh, 'xWrite')).write(fh.sabView.subarray(0, n), {\n            at: Number(offset64),\n          })\n            ? 0\n            : state.sq3Codes.SQLITE_IOERR_WRITE;\n      } catch (e) {\n        error('xWrite():', e, fh);\n        state.s11n.storeException(1, e);\n        rc = GetSyncHandleError.convertRc(e, state.sq3Codes.SQLITE_IOERR_WRITE);\n      }\n      await releaseImplicitLock(fh);\n      storeAndNotify('xWrite', rc);\n    },\n  };\n\n  const initS11n = () => {\n    if (state.s11n) return state.s11n;\n    const textDecoder = new TextDecoder(),\n      textEncoder = new TextEncoder('utf-8'),\n      viewU8 = new Uint8Array(\n        state.sabIO,\n        state.sabS11nOffset,\n        state.sabS11nSize,\n      ),\n      viewDV = new DataView(\n        state.sabIO,\n        state.sabS11nOffset,\n        state.sabS11nSize,\n      );\n    state.s11n = Object.create(null);\n    const TypeIds = Object.create(null);\n    TypeIds.number = {\n      id: 1,\n      size: 8,\n      getter: 'getFloat64',\n      setter: 'setFloat64',\n    };\n    TypeIds.bigint = {\n      id: 2,\n      size: 8,\n      getter: 'getBigInt64',\n      setter: 'setBigInt64',\n    };\n    TypeIds.boolean = {\n      id: 3,\n      size: 4,\n      getter: 'getInt32',\n      setter: 'setInt32',\n    };\n    TypeIds.string = { id: 4 };\n    const getTypeId = (v) =>\n      TypeIds[typeof v] ||\n      toss('Maintenance required: this value type cannot be serialized.', v);\n    const getTypeIdById = (tid) => {\n      switch (tid) {\n        case TypeIds.number.id:\n          return TypeIds.number;\n        case TypeIds.bigint.id:\n          return TypeIds.bigint;\n        case TypeIds.boolean.id:\n          return TypeIds.boolean;\n        case TypeIds.string.id:\n          return TypeIds.string;\n        default:\n          toss('Invalid type ID:', tid);\n      }\n    };\n    state.s11n.deserialize = function (clear = false) {\n      const argc = viewU8[0];\n      const rc = argc ? [] : null;\n      if (argc) {\n        const typeIds = [];\n        let offset = 1,\n          i,\n          n,\n          v;\n        for (i = 0; i < argc; ++i, ++offset) {\n          typeIds.push(getTypeIdById(viewU8[offset]));\n        }\n        for (i = 0; i < argc; ++i) {\n          const t = typeIds[i];\n          if (t.getter) {\n            v = viewDV[t.getter](offset, state.littleEndian);\n            offset += t.size;\n          } else {\n            n = viewDV.getInt32(offset, state.littleEndian);\n            offset += 4;\n            v = textDecoder.decode(viewU8.slice(offset, offset + n));\n            offset += n;\n          }\n          rc.push(v);\n        }\n      }\n      if (clear) viewU8[0] = 0;\n\n      return rc;\n    };\n    state.s11n.serialize = function (...args) {\n      if (args.length) {\n        const typeIds = [];\n        let i = 0,\n          offset = 1;\n        viewU8[0] = args.length & 0xff;\n        for (; i < args.length; ++i, ++offset) {\n          typeIds.push(getTypeId(args[i]));\n          viewU8[offset] = typeIds[i].id;\n        }\n        for (i = 0; i < args.length; ++i) {\n          const t = typeIds[i];\n          if (t.setter) {\n            viewDV[t.setter](offset, args[i], state.littleEndian);\n            offset += t.size;\n          } else {\n            const s = textEncoder.encode(args[i]);\n            viewDV.setInt32(offset, s.byteLength, state.littleEndian);\n            offset += 4;\n            viewU8.set(s, offset);\n            offset += s.byteLength;\n          }\n        }\n      } else {\n        viewU8[0] = 0;\n      }\n    };\n\n    state.s11n.storeException = state.asyncS11nExceptions\n      ? (priority, e) => {\n          if (priority <= state.asyncS11nExceptions) {\n            state.s11n.serialize([e.name, ': ', e.message].join(''));\n          }\n        }\n      : () => {};\n\n    return state.s11n;\n  };\n\n  const waitLoop = async function f() {\n    const opHandlers = Object.create(null);\n    for (let k of Object.keys(state.opIds)) {\n      const vi = vfsAsyncImpls[k];\n      if (!vi) continue;\n      const o = Object.create(null);\n      opHandlers[state.opIds[k]] = o;\n      o.key = k;\n      o.f = vi;\n    }\n    while (!flagAsyncShutdown) {\n      try {\n        if (\n          'not-equal' !==\n          Atomics.wait(\n            state.sabOPView,\n            state.opIds.whichOp,\n            0,\n            state.asyncIdleWaitTime,\n          )\n        ) {\n          await releaseImplicitLocks();\n          continue;\n        }\n        const opId = Atomics.load(state.sabOPView, state.opIds.whichOp);\n        Atomics.store(state.sabOPView, state.opIds.whichOp, 0);\n        const hnd =\n          opHandlers[opId] ?? toss('No waitLoop handler for whichOp #', opId);\n        const args = state.s11n.deserialize(true) || [];\n\n        if (hnd.f) await hnd.f(...args);\n        else error('Missing callback for opId', opId);\n      } catch (e) {\n        error('in waitLoop():', e);\n      }\n    }\n  };\n\n  navigator.storage\n    .getDirectory()\n    .then(function (d) {\n      state.rootDir = d;\n      globalThis.onmessage = function ({ data }) {\n        switch (data.type) {\n          case 'opfs-async-init': {\n            const opt = data.args;\n            for (const k in opt) state[k] = opt[k];\n            state.verbose = opt.verbose ?? 1;\n            state.sabOPView = new Int32Array(state.sabOP);\n            state.sabFileBufView = new Uint8Array(\n              state.sabIO,\n              0,\n              state.fileBufferSize,\n            );\n            state.sabS11nView = new Uint8Array(\n              state.sabIO,\n              state.sabS11nOffset,\n              state.sabS11nSize,\n            );\n            Object.keys(vfsAsyncImpls).forEach((k) => {\n              if (!Number.isFinite(state.opIds[k])) {\n                toss('Maintenance required: missing state.opIds[', k, ']');\n              }\n            });\n            initS11n();\n            log('init state', state);\n            wPost('opfs-async-inited');\n            waitLoop();\n            break;\n          }\n          case 'opfs-async-restart':\n            if (flagAsyncShutdown) {\n              warn(\n                'Restarting after opfs-async-shutdown. Might or might not work.',\n              );\n              flagAsyncShutdown = false;\n              waitLoop();\n            }\n            break;\n        }\n      };\n      wPost('opfs-async-loaded');\n    })\n    .catch((e) => error('error initializing OPFS asyncer:', e));\n};\nif (!globalThis.SharedArrayBuffer) {\n  wPost(\n    'opfs-unavailable',\n    'Missing SharedArrayBuffer API.',\n    'The server must emit the COOP/COEP response headers to enable that.',\n  );\n} else if (!globalThis.Atomics) {\n  wPost(\n    'opfs-unavailable',\n    'Missing Atomics API.',\n    'The server must emit the COOP/COEP response headers to enable that.',\n  );\n} else if (\n  !globalThis.FileSystemHandle ||\n  !globalThis.FileSystemDirectoryHandle ||\n  !globalThis.FileSystemFileHandle ||\n  !globalThis.FileSystemFileHandle.prototype.createSyncAccessHandle ||\n  !navigator?.storage?.getDirectory\n) {\n  wPost('opfs-unavailable', 'Missing required OPFS APIs.');\n} else {\n  installAsyncProxy();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/../node_modules/.pnpm/@sqlite.org+sqlite-wasm@3.49.1-build2/node_modules/@sqlite.org/sqlite-wasm/sqlite-wasm/jswasm/sqlite3-opfs-async-proxy.js\n"));

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			if (cachedModule.error !== undefined) throw cachedModule.error;
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		var threw = true;
/******/ 		try {
/******/ 			var execOptions = { id: moduleId, module: module, factory: __webpack_modules__[moduleId], require: __webpack_require__ };
/******/ 			__webpack_require__.i.forEach(function(handler) { handler(execOptions); });
/******/ 			module = execOptions.module;
/******/ 			execOptions.factory.call(module.exports, module, module.exports, execOptions.require);
/******/ 			threw = false;
/******/ 		} finally {
/******/ 			if(threw) delete __webpack_module_cache__[moduleId];
/******/ 		}
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = __webpack_module_cache__;
/******/ 	
/******/ 	// expose the module execution interceptor
/******/ 	__webpack_require__.i = [];
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/get javascript update chunk filename */
/******/ 	(() => {
/******/ 		// This function allow to reference all chunks
/******/ 		__webpack_require__.hu = (chunkId) => {
/******/ 			// return url for filenames based on template
/******/ 			return "static/webpack/" + chunkId + "." + __webpack_require__.h() + ".hot-update.js";
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/get mini-css chunk filename */
/******/ 	(() => {
/******/ 		// This function allow to reference async chunks
/******/ 		__webpack_require__.miniCssF = (chunkId) => {
/******/ 			// return url for filenames based on template
/******/ 			return undefined;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/get update manifest filename */
/******/ 	(() => {
/******/ 		__webpack_require__.hmrF = () => ("static/webpack/" + __webpack_require__.h() + ".380f9a00738b313f.hot-update.json");
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/getFullHash */
/******/ 	(() => {
/******/ 		__webpack_require__.h = () => ("bcb6e6710cc2cdd3")
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/trusted types policy */
/******/ 	(() => {
/******/ 		var policy;
/******/ 		__webpack_require__.tt = () => {
/******/ 			// Create Trusted Type policy if Trusted Types are available and the policy doesn't exist yet.
/******/ 			if (policy === undefined) {
/******/ 				policy = {
/******/ 					createScript: (script) => (script),
/******/ 					createScriptURL: (url) => (url)
/******/ 				};
/******/ 				if (typeof trustedTypes !== "undefined" && trustedTypes.createPolicy) {
/******/ 					policy = trustedTypes.createPolicy("nextjs#bundler", policy);
/******/ 				}
/******/ 			}
/******/ 			return policy;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/trusted types script */
/******/ 	(() => {
/******/ 		__webpack_require__.ts = (script) => (__webpack_require__.tt().createScript(script));
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/trusted types script url */
/******/ 	(() => {
/******/ 		__webpack_require__.tu = (url) => (__webpack_require__.tt().createScriptURL(url));
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hot module replacement */
/******/ 	(() => {
/******/ 		var currentModuleData = {};
/******/ 		var installedModules = __webpack_require__.c;
/******/ 		
/******/ 		// module and require creation
/******/ 		var currentChildModule;
/******/ 		var currentParents = [];
/******/ 		
/******/ 		// status
/******/ 		var registeredStatusHandlers = [];
/******/ 		var currentStatus = "idle";
/******/ 		
/******/ 		// while downloading
/******/ 		var blockingPromises = 0;
/******/ 		var blockingPromisesWaiting = [];
/******/ 		
/******/ 		// The update info
/******/ 		var currentUpdateApplyHandlers;
/******/ 		var queuedInvalidatedModules;
/******/ 		
/******/ 		__webpack_require__.hmrD = currentModuleData;
/******/ 		
/******/ 		__webpack_require__.i.push(function (options) {
/******/ 			var module = options.module;
/******/ 			var require = createRequire(options.require, options.id);
/******/ 			module.hot = createModuleHotObject(options.id, module);
/******/ 			module.parents = currentParents;
/******/ 			module.children = [];
/******/ 			currentParents = [];
/******/ 			options.require = require;
/******/ 		});
/******/ 		
/******/ 		__webpack_require__.hmrC = {};
/******/ 		__webpack_require__.hmrI = {};
/******/ 		
/******/ 		function createRequire(require, moduleId) {
/******/ 			var me = installedModules[moduleId];
/******/ 			if (!me) return require;
/******/ 			var fn = function (request) {
/******/ 				if (me.hot.active) {
/******/ 					if (installedModules[request]) {
/******/ 						var parents = installedModules[request].parents;
/******/ 						if (parents.indexOf(moduleId) === -1) {
/******/ 							parents.push(moduleId);
/******/ 						}
/******/ 					} else {
/******/ 						currentParents = [moduleId];
/******/ 						currentChildModule = request;
/******/ 					}
/******/ 					if (me.children.indexOf(request) === -1) {
/******/ 						me.children.push(request);
/******/ 					}
/******/ 				} else {
/******/ 					console.warn(
/******/ 						"[HMR] unexpected require(" +
/******/ 							request +
/******/ 							") from disposed module " +
/******/ 							moduleId
/******/ 					);
/******/ 					currentParents = [];
/******/ 				}
/******/ 				return require(request);
/******/ 			};
/******/ 			var createPropertyDescriptor = function (name) {
/******/ 				return {
/******/ 					configurable: true,
/******/ 					enumerable: true,
/******/ 					get: function () {
/******/ 						return require[name];
/******/ 					},
/******/ 					set: function (value) {
/******/ 						require[name] = value;
/******/ 					}
/******/ 				};
/******/ 			};
/******/ 			for (var name in require) {
/******/ 				if (Object.prototype.hasOwnProperty.call(require, name) && name !== "e") {
/******/ 					Object.defineProperty(fn, name, createPropertyDescriptor(name));
/******/ 				}
/******/ 			}
/******/ 			fn.e = function (chunkId, fetchPriority) {
/******/ 				return trackBlockingPromise(require.e(chunkId, fetchPriority));
/******/ 			};
/******/ 			return fn;
/******/ 		}
/******/ 		
/******/ 		function createModuleHotObject(moduleId, me) {
/******/ 			var _main = currentChildModule !== moduleId;
/******/ 			var hot = {
/******/ 				// private stuff
/******/ 				_acceptedDependencies: {},
/******/ 				_acceptedErrorHandlers: {},
/******/ 				_declinedDependencies: {},
/******/ 				_selfAccepted: false,
/******/ 				_selfDeclined: false,
/******/ 				_selfInvalidated: false,
/******/ 				_disposeHandlers: [],
/******/ 				_main: _main,
/******/ 				_requireSelf: function () {
/******/ 					currentParents = me.parents.slice();
/******/ 					currentChildModule = _main ? undefined : moduleId;
/******/ 					__webpack_require__(moduleId);
/******/ 				},
/******/ 		
/******/ 				// Module API
/******/ 				active: true,
/******/ 				accept: function (dep, callback, errorHandler) {
/******/ 					if (dep === undefined) hot._selfAccepted = true;
/******/ 					else if (typeof dep === "function") hot._selfAccepted = dep;
/******/ 					else if (typeof dep === "object" && dep !== null) {
/******/ 						for (var i = 0; i < dep.length; i++) {
/******/ 							hot._acceptedDependencies[dep[i]] = callback || function () {};
/******/ 							hot._acceptedErrorHandlers[dep[i]] = errorHandler;
/******/ 						}
/******/ 					} else {
/******/ 						hot._acceptedDependencies[dep] = callback || function () {};
/******/ 						hot._acceptedErrorHandlers[dep] = errorHandler;
/******/ 					}
/******/ 				},
/******/ 				decline: function (dep) {
/******/ 					if (dep === undefined) hot._selfDeclined = true;
/******/ 					else if (typeof dep === "object" && dep !== null)
/******/ 						for (var i = 0; i < dep.length; i++)
/******/ 							hot._declinedDependencies[dep[i]] = true;
/******/ 					else hot._declinedDependencies[dep] = true;
/******/ 				},
/******/ 				dispose: function (callback) {
/******/ 					hot._disposeHandlers.push(callback);
/******/ 				},
/******/ 				addDisposeHandler: function (callback) {
/******/ 					hot._disposeHandlers.push(callback);
/******/ 				},
/******/ 				removeDisposeHandler: function (callback) {
/******/ 					var idx = hot._disposeHandlers.indexOf(callback);
/******/ 					if (idx >= 0) hot._disposeHandlers.splice(idx, 1);
/******/ 				},
/******/ 				invalidate: function () {
/******/ 					this._selfInvalidated = true;
/******/ 					switch (currentStatus) {
/******/ 						case "idle":
/******/ 							currentUpdateApplyHandlers = [];
/******/ 							Object.keys(__webpack_require__.hmrI).forEach(function (key) {
/******/ 								__webpack_require__.hmrI[key](
/******/ 									moduleId,
/******/ 									currentUpdateApplyHandlers
/******/ 								);
/******/ 							});
/******/ 							setStatus("ready");
/******/ 							break;
/******/ 						case "ready":
/******/ 							Object.keys(__webpack_require__.hmrI).forEach(function (key) {
/******/ 								__webpack_require__.hmrI[key](
/******/ 									moduleId,
/******/ 									currentUpdateApplyHandlers
/******/ 								);
/******/ 							});
/******/ 							break;
/******/ 						case "prepare":
/******/ 						case "check":
/******/ 						case "dispose":
/******/ 						case "apply":
/******/ 							(queuedInvalidatedModules = queuedInvalidatedModules || []).push(
/******/ 								moduleId
/******/ 							);
/******/ 							break;
/******/ 						default:
/******/ 							// ignore requests in error states
/******/ 							break;
/******/ 					}
/******/ 				},
/******/ 		
/******/ 				// Management API
/******/ 				check: hotCheck,
/******/ 				apply: hotApply,
/******/ 				status: function (l) {
/******/ 					if (!l) return currentStatus;
/******/ 					registeredStatusHandlers.push(l);
/******/ 				},
/******/ 				addStatusHandler: function (l) {
/******/ 					registeredStatusHandlers.push(l);
/******/ 				},
/******/ 				removeStatusHandler: function (l) {
/******/ 					var idx = registeredStatusHandlers.indexOf(l);
/******/ 					if (idx >= 0) registeredStatusHandlers.splice(idx, 1);
/******/ 				},
/******/ 		
/******/ 				// inherit from previous dispose call
/******/ 				data: currentModuleData[moduleId]
/******/ 			};
/******/ 			currentChildModule = undefined;
/******/ 			return hot;
/******/ 		}
/******/ 		
/******/ 		function setStatus(newStatus) {
/******/ 			currentStatus = newStatus;
/******/ 			var results = [];
/******/ 		
/******/ 			for (var i = 0; i < registeredStatusHandlers.length; i++)
/******/ 				results[i] = registeredStatusHandlers[i].call(null, newStatus);
/******/ 		
/******/ 			return Promise.all(results).then(function () {});
/******/ 		}
/******/ 		
/******/ 		function unblock() {
/******/ 			if (--blockingPromises === 0) {
/******/ 				setStatus("ready").then(function () {
/******/ 					if (blockingPromises === 0) {
/******/ 						var list = blockingPromisesWaiting;
/******/ 						blockingPromisesWaiting = [];
/******/ 						for (var i = 0; i < list.length; i++) {
/******/ 							list[i]();
/******/ 						}
/******/ 					}
/******/ 				});
/******/ 			}
/******/ 		}
/******/ 		
/******/ 		function trackBlockingPromise(promise) {
/******/ 			switch (currentStatus) {
/******/ 				case "ready":
/******/ 					setStatus("prepare");
/******/ 				/* fallthrough */
/******/ 				case "prepare":
/******/ 					blockingPromises++;
/******/ 					promise.then(unblock, unblock);
/******/ 					return promise;
/******/ 				default:
/******/ 					return promise;
/******/ 			}
/******/ 		}
/******/ 		
/******/ 		function waitForBlockingPromises(fn) {
/******/ 			if (blockingPromises === 0) return fn();
/******/ 			return new Promise(function (resolve) {
/******/ 				blockingPromisesWaiting.push(function () {
/******/ 					resolve(fn());
/******/ 				});
/******/ 			});
/******/ 		}
/******/ 		
/******/ 		function hotCheck(applyOnUpdate) {
/******/ 			if (currentStatus !== "idle") {
/******/ 				throw new Error("check() is only allowed in idle status");
/******/ 			}
/******/ 			return setStatus("check")
/******/ 				.then(__webpack_require__.hmrM)
/******/ 				.then(function (update) {
/******/ 					if (!update) {
/******/ 						return setStatus(applyInvalidatedModules() ? "ready" : "idle").then(
/******/ 							function () {
/******/ 								return null;
/******/ 							}
/******/ 						);
/******/ 					}
/******/ 		
/******/ 					return setStatus("prepare").then(function () {
/******/ 						var updatedModules = [];
/******/ 						currentUpdateApplyHandlers = [];
/******/ 		
/******/ 						return Promise.all(
/******/ 							Object.keys(__webpack_require__.hmrC).reduce(function (
/******/ 								promises,
/******/ 								key
/******/ 							) {
/******/ 								__webpack_require__.hmrC[key](
/******/ 									update.c,
/******/ 									update.r,
/******/ 									update.m,
/******/ 									promises,
/******/ 									currentUpdateApplyHandlers,
/******/ 									updatedModules
/******/ 								);
/******/ 								return promises;
/******/ 							}, [])
/******/ 						).then(function () {
/******/ 							return waitForBlockingPromises(function () {
/******/ 								if (applyOnUpdate) {
/******/ 									return internalApply(applyOnUpdate);
/******/ 								}
/******/ 								return setStatus("ready").then(function () {
/******/ 									return updatedModules;
/******/ 								});
/******/ 							});
/******/ 						});
/******/ 					});
/******/ 				});
/******/ 		}
/******/ 		
/******/ 		function hotApply(options) {
/******/ 			if (currentStatus !== "ready") {
/******/ 				return Promise.resolve().then(function () {
/******/ 					throw new Error(
/******/ 						"apply() is only allowed in ready status (state: " +
/******/ 							currentStatus +
/******/ 							")"
/******/ 					);
/******/ 				});
/******/ 			}
/******/ 			return internalApply(options);
/******/ 		}
/******/ 		
/******/ 		function internalApply(options) {
/******/ 			options = options || {};
/******/ 		
/******/ 			applyInvalidatedModules();
/******/ 		
/******/ 			var results = currentUpdateApplyHandlers.map(function (handler) {
/******/ 				return handler(options);
/******/ 			});
/******/ 			currentUpdateApplyHandlers = undefined;
/******/ 		
/******/ 			var errors = results
/******/ 				.map(function (r) {
/******/ 					return r.error;
/******/ 				})
/******/ 				.filter(Boolean);
/******/ 		
/******/ 			if (errors.length > 0) {
/******/ 				return setStatus("abort").then(function () {
/******/ 					throw errors[0];
/******/ 				});
/******/ 			}
/******/ 		
/******/ 			// Now in "dispose" phase
/******/ 			var disposePromise = setStatus("dispose");
/******/ 		
/******/ 			results.forEach(function (result) {
/******/ 				if (result.dispose) result.dispose();
/******/ 			});
/******/ 		
/******/ 			// Now in "apply" phase
/******/ 			var applyPromise = setStatus("apply");
/******/ 		
/******/ 			var error;
/******/ 			var reportError = function (err) {
/******/ 				if (!error) error = err;
/******/ 			};
/******/ 		
/******/ 			var outdatedModules = [];
/******/ 			results.forEach(function (result) {
/******/ 				if (result.apply) {
/******/ 					var modules = result.apply(reportError);
/******/ 					if (modules) {
/******/ 						for (var i = 0; i < modules.length; i++) {
/******/ 							outdatedModules.push(modules[i]);
/******/ 						}
/******/ 					}
/******/ 				}
/******/ 			});
/******/ 		
/******/ 			return Promise.all([disposePromise, applyPromise]).then(function () {
/******/ 				// handle errors in accept handlers and self accepted module load
/******/ 				if (error) {
/******/ 					return setStatus("fail").then(function () {
/******/ 						throw error;
/******/ 					});
/******/ 				}
/******/ 		
/******/ 				if (queuedInvalidatedModules) {
/******/ 					return internalApply(options).then(function (list) {
/******/ 						outdatedModules.forEach(function (moduleId) {
/******/ 							if (list.indexOf(moduleId) < 0) list.push(moduleId);
/******/ 						});
/******/ 						return list;
/******/ 					});
/******/ 				}
/******/ 		
/******/ 				return setStatus("idle").then(function () {
/******/ 					return outdatedModules;
/******/ 				});
/******/ 			});
/******/ 		}
/******/ 		
/******/ 		function applyInvalidatedModules() {
/******/ 			if (queuedInvalidatedModules) {
/******/ 				if (!currentUpdateApplyHandlers) currentUpdateApplyHandlers = [];
/******/ 				Object.keys(__webpack_require__.hmrI).forEach(function (key) {
/******/ 					queuedInvalidatedModules.forEach(function (moduleId) {
/******/ 						__webpack_require__.hmrI[key](
/******/ 							moduleId,
/******/ 							currentUpdateApplyHandlers
/******/ 						);
/******/ 					});
/******/ 				});
/******/ 				queuedInvalidatedModules = undefined;
/******/ 				return true;
/******/ 			}
/******/ 		}
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		__webpack_require__.p = "/_next/";
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/react refresh */
/******/ 	(() => {
/******/ 		if (__webpack_require__.i) {
/******/ 		__webpack_require__.i.push((options) => {
/******/ 			const originalFactory = options.factory;
/******/ 			options.factory = (moduleObject, moduleExports, webpackRequire) => {
/******/ 				const hasRefresh = typeof self !== "undefined" && !!self.$RefreshInterceptModuleExecution$;
/******/ 				const cleanup = hasRefresh ? self.$RefreshInterceptModuleExecution$(moduleObject.id) : () => {};
/******/ 				try {
/******/ 					originalFactory.call(this, moduleObject, moduleExports, webpackRequire);
/******/ 				} finally {
/******/ 					cleanup();
/******/ 				}
/******/ 			}
/******/ 		})
/******/ 		}
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/compat */
/******/ 	
/******/ 	
/******/ 	// noop fns to prevent runtime errors during initialization
/******/ 	if (typeof self !== "undefined") {
/******/ 		self.$RefreshReg$ = function () {};
/******/ 		self.$RefreshSig$ = function () {
/******/ 			return function (type) {
/******/ 				return type;
/******/ 			};
/******/ 		};
/******/ 	}
/******/ 	
/******/ 	/* webpack/runtime/css loading */
/******/ 	(() => {
/******/ 		var createStylesheet = (chunkId, fullhref, resolve, reject) => {
/******/ 			var linkTag = document.createElement("link");
/******/ 		
/******/ 			linkTag.rel = "stylesheet";
/******/ 			linkTag.type = "text/css";
/******/ 			var onLinkComplete = (event) => {
/******/ 				// avoid mem leaks.
/******/ 				linkTag.onerror = linkTag.onload = null;
/******/ 				if (event.type === 'load') {
/******/ 					resolve();
/******/ 				} else {
/******/ 					var errorType = event && (event.type === 'load' ? 'missing' : event.type);
/******/ 					var realHref = event && event.target && event.target.href || fullhref;
/******/ 					var err = new Error("Loading CSS chunk " + chunkId + " failed.\n(" + realHref + ")");
/******/ 					err.code = "CSS_CHUNK_LOAD_FAILED";
/******/ 					err.type = errorType;
/******/ 					err.request = realHref;
/******/ 					linkTag.parentNode.removeChild(linkTag)
/******/ 					reject(err);
/******/ 				}
/******/ 			}
/******/ 			linkTag.onerror = linkTag.onload = onLinkComplete;
/******/ 			linkTag.href = fullhref;
/******/ 		
/******/ 			(function(linkTag) {
/******/ 			                if (typeof _N_E_STYLE_LOAD === 'function') {
/******/ 			                    const { href, onload, onerror } = linkTag;
/******/ 			                    _N_E_STYLE_LOAD(href.indexOf(window.location.origin) === 0 ? new URL(href).pathname : href).then(()=>onload == null ? void 0 : onload.call(linkTag, {
/******/ 			                            type: 'load'
/******/ 			                        }), ()=>onerror == null ? void 0 : onerror.call(linkTag, {}));
/******/ 			                } else {
/******/ 			                    document.head.appendChild(linkTag);
/******/ 			                }
/******/ 			            })(linkTag)
/******/ 			return linkTag;
/******/ 		};
/******/ 		var findStylesheet = (href, fullhref) => {
/******/ 			var existingLinkTags = document.getElementsByTagName("link");
/******/ 			for(var i = 0; i < existingLinkTags.length; i++) {
/******/ 				var tag = existingLinkTags[i];
/******/ 				var dataHref = tag.getAttribute("data-href") || tag.getAttribute("href");
/******/ 				if(tag.rel === "stylesheet" && (dataHref === href || dataHref === fullhref)) return tag;
/******/ 			}
/******/ 			var existingStyleTags = document.getElementsByTagName("style");
/******/ 			for(var i = 0; i < existingStyleTags.length; i++) {
/******/ 				var tag = existingStyleTags[i];
/******/ 				var dataHref = tag.getAttribute("data-href");
/******/ 				if(dataHref === href || dataHref === fullhref) return tag;
/******/ 			}
/******/ 		};
/******/ 		var loadStylesheet = (chunkId) => {
/******/ 			return new Promise((resolve, reject) => {
/******/ 				var href = __webpack_require__.miniCssF(chunkId);
/******/ 				var fullhref = __webpack_require__.p + href;
/******/ 				if(findStylesheet(href, fullhref)) return resolve();
/******/ 				createStylesheet(chunkId, fullhref, resolve, reject);
/******/ 			});
/******/ 		}
/******/ 		// no chunk loading
/******/ 		
/******/ 		var oldTags = [];
/******/ 		var newTags = [];
/******/ 		var applyHandler = (options) => {
/******/ 			return { dispose: () => {
/******/ 				for(var i = 0; i < oldTags.length; i++) {
/******/ 					var oldTag = oldTags[i];
/******/ 					if(oldTag.parentNode) oldTag.parentNode.removeChild(oldTag);
/******/ 				}
/******/ 				oldTags.length = 0;
/******/ 			}, apply: () => {
/******/ 				for(var i = 0; i < newTags.length; i++) newTags[i].rel = "stylesheet";
/******/ 				newTags.length = 0;
/******/ 			} };
/******/ 		}
/******/ 		__webpack_require__.hmrC.miniCss = (chunkIds, removedChunks, removedModules, promises, applyHandlers, updatedModulesList) => {
/******/ 			applyHandlers.push(applyHandler);
/******/ 			chunkIds.forEach((chunkId) => {
/******/ 				var href = __webpack_require__.miniCssF(chunkId);
/******/ 				var fullhref = __webpack_require__.p + href;
/******/ 				var oldTag = findStylesheet(href, fullhref);
/******/ 				if(!oldTag) return;
/******/ 				promises.push(new Promise((resolve, reject) => {
/******/ 					var tag = createStylesheet(chunkId, fullhref, () => {
/******/ 						tag.as = "style";
/******/ 						tag.rel = "preload";
/******/ 						resolve();
/******/ 					}, reject);
/******/ 					oldTags.push(oldTag);
/******/ 					newTags.push(tag);
/******/ 				}));
/******/ 			});
/******/ 		}
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/importScripts chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded chunks
/******/ 		// "1" means "already loaded"
/******/ 		var installedChunks = __webpack_require__.hmrS_importScripts = __webpack_require__.hmrS_importScripts || {
/******/ 			"_app-pages-browser_node_modules_pnpm_sqlite_org_sqlite-wasm_3_49_1-build2_node_modules_sqlite-84e6ae": 1
/******/ 		};
/******/ 		
/******/ 		// no chunk install function needed
/******/ 		// no chunk loading
/******/ 		
/******/ 		function loadUpdateChunk(chunkId, updatedModulesList) {
/******/ 			var success = false;
/******/ 			self["webpackHotUpdate_N_E"] = (_, moreModules, runtime) => {
/******/ 				for(var moduleId in moreModules) {
/******/ 					if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 						currentUpdate[moduleId] = moreModules[moduleId];
/******/ 						if(updatedModulesList) updatedModulesList.push(moduleId);
/******/ 					}
/******/ 				}
/******/ 				if(runtime) currentUpdateRuntime.push(runtime);
/******/ 				success = true;
/******/ 			};
/******/ 			// start update chunk loading
/******/ 			importScripts(__webpack_require__.tu(__webpack_require__.p + __webpack_require__.hu(chunkId)));
/******/ 			if(!success) throw new Error("Loading update chunk failed for unknown reason");
/******/ 		}
/******/ 		
/******/ 		var currentUpdateChunks;
/******/ 		var currentUpdate;
/******/ 		var currentUpdateRemovedChunks;
/******/ 		var currentUpdateRuntime;
/******/ 		function applyHandler(options) {
/******/ 			if (__webpack_require__.f) delete __webpack_require__.f.importScriptsHmr;
/******/ 			currentUpdateChunks = undefined;
/******/ 			function getAffectedModuleEffects(updateModuleId) {
/******/ 				var outdatedModules = [updateModuleId];
/******/ 				var outdatedDependencies = {};
/******/ 		
/******/ 				var queue = outdatedModules.map(function (id) {
/******/ 					return {
/******/ 						chain: [id],
/******/ 						id: id
/******/ 					};
/******/ 				});
/******/ 				while (queue.length > 0) {
/******/ 					var queueItem = queue.pop();
/******/ 					var moduleId = queueItem.id;
/******/ 					var chain = queueItem.chain;
/******/ 					var module = __webpack_require__.c[moduleId];
/******/ 					if (
/******/ 						!module ||
/******/ 						(module.hot._selfAccepted && !module.hot._selfInvalidated)
/******/ 					)
/******/ 						continue;
/******/ 					if (module.hot._selfDeclined) {
/******/ 						return {
/******/ 							type: "self-declined",
/******/ 							chain: chain,
/******/ 							moduleId: moduleId
/******/ 						};
/******/ 					}
/******/ 					if (module.hot._main) {
/******/ 						return {
/******/ 							type: "unaccepted",
/******/ 							chain: chain,
/******/ 							moduleId: moduleId
/******/ 						};
/******/ 					}
/******/ 					for (var i = 0; i < module.parents.length; i++) {
/******/ 						var parentId = module.parents[i];
/******/ 						var parent = __webpack_require__.c[parentId];
/******/ 						if (!parent) continue;
/******/ 						if (parent.hot._declinedDependencies[moduleId]) {
/******/ 							return {
/******/ 								type: "declined",
/******/ 								chain: chain.concat([parentId]),
/******/ 								moduleId: moduleId,
/******/ 								parentId: parentId
/******/ 							};
/******/ 						}
/******/ 						if (outdatedModules.indexOf(parentId) !== -1) continue;
/******/ 						if (parent.hot._acceptedDependencies[moduleId]) {
/******/ 							if (!outdatedDependencies[parentId])
/******/ 								outdatedDependencies[parentId] = [];
/******/ 							addAllToSet(outdatedDependencies[parentId], [moduleId]);
/******/ 							continue;
/******/ 						}
/******/ 						delete outdatedDependencies[parentId];
/******/ 						outdatedModules.push(parentId);
/******/ 						queue.push({
/******/ 							chain: chain.concat([parentId]),
/******/ 							id: parentId
/******/ 						});
/******/ 					}
/******/ 				}
/******/ 		
/******/ 				return {
/******/ 					type: "accepted",
/******/ 					moduleId: updateModuleId,
/******/ 					outdatedModules: outdatedModules,
/******/ 					outdatedDependencies: outdatedDependencies
/******/ 				};
/******/ 			}
/******/ 		
/******/ 			function addAllToSet(a, b) {
/******/ 				for (var i = 0; i < b.length; i++) {
/******/ 					var item = b[i];
/******/ 					if (a.indexOf(item) === -1) a.push(item);
/******/ 				}
/******/ 			}
/******/ 		
/******/ 			// at begin all updates modules are outdated
/******/ 			// the "outdated" status can propagate to parents if they don't accept the children
/******/ 			var outdatedDependencies = {};
/******/ 			var outdatedModules = [];
/******/ 			var appliedUpdate = {};
/******/ 		
/******/ 			var warnUnexpectedRequire = function warnUnexpectedRequire(module) {
/******/ 				console.warn(
/******/ 					"[HMR] unexpected require(" + module.id + ") to disposed module"
/******/ 				);
/******/ 			};
/******/ 		
/******/ 			for (var moduleId in currentUpdate) {
/******/ 				if (__webpack_require__.o(currentUpdate, moduleId)) {
/******/ 					var newModuleFactory = currentUpdate[moduleId];
/******/ 					/** @type {TODO} */
/******/ 					var result = newModuleFactory
/******/ 						? getAffectedModuleEffects(moduleId)
/******/ 						: {
/******/ 								type: "disposed",
/******/ 								moduleId: moduleId
/******/ 							};
/******/ 					/** @type {Error|false} */
/******/ 					var abortError = false;
/******/ 					var doApply = false;
/******/ 					var doDispose = false;
/******/ 					var chainInfo = "";
/******/ 					if (result.chain) {
/******/ 						chainInfo = "\nUpdate propagation: " + result.chain.join(" -> ");
/******/ 					}
/******/ 					switch (result.type) {
/******/ 						case "self-declined":
/******/ 							if (options.onDeclined) options.onDeclined(result);
/******/ 							if (!options.ignoreDeclined)
/******/ 								abortError = new Error(
/******/ 									"Aborted because of self decline: " +
/******/ 										result.moduleId +
/******/ 										chainInfo
/******/ 								);
/******/ 							break;
/******/ 						case "declined":
/******/ 							if (options.onDeclined) options.onDeclined(result);
/******/ 							if (!options.ignoreDeclined)
/******/ 								abortError = new Error(
/******/ 									"Aborted because of declined dependency: " +
/******/ 										result.moduleId +
/******/ 										" in " +
/******/ 										result.parentId +
/******/ 										chainInfo
/******/ 								);
/******/ 							break;
/******/ 						case "unaccepted":
/******/ 							if (options.onUnaccepted) options.onUnaccepted(result);
/******/ 							if (!options.ignoreUnaccepted)
/******/ 								abortError = new Error(
/******/ 									"Aborted because " + moduleId + " is not accepted" + chainInfo
/******/ 								);
/******/ 							break;
/******/ 						case "accepted":
/******/ 							if (options.onAccepted) options.onAccepted(result);
/******/ 							doApply = true;
/******/ 							break;
/******/ 						case "disposed":
/******/ 							if (options.onDisposed) options.onDisposed(result);
/******/ 							doDispose = true;
/******/ 							break;
/******/ 						default:
/******/ 							throw new Error("Unexception type " + result.type);
/******/ 					}
/******/ 					if (abortError) {
/******/ 						return {
/******/ 							error: abortError
/******/ 						};
/******/ 					}
/******/ 					if (doApply) {
/******/ 						appliedUpdate[moduleId] = newModuleFactory;
/******/ 						addAllToSet(outdatedModules, result.outdatedModules);
/******/ 						for (moduleId in result.outdatedDependencies) {
/******/ 							if (__webpack_require__.o(result.outdatedDependencies, moduleId)) {
/******/ 								if (!outdatedDependencies[moduleId])
/******/ 									outdatedDependencies[moduleId] = [];
/******/ 								addAllToSet(
/******/ 									outdatedDependencies[moduleId],
/******/ 									result.outdatedDependencies[moduleId]
/******/ 								);
/******/ 							}
/******/ 						}
/******/ 					}
/******/ 					if (doDispose) {
/******/ 						addAllToSet(outdatedModules, [result.moduleId]);
/******/ 						appliedUpdate[moduleId] = warnUnexpectedRequire;
/******/ 					}
/******/ 				}
/******/ 			}
/******/ 			currentUpdate = undefined;
/******/ 		
/******/ 			// Store self accepted outdated modules to require them later by the module system
/******/ 			var outdatedSelfAcceptedModules = [];
/******/ 			for (var j = 0; j < outdatedModules.length; j++) {
/******/ 				var outdatedModuleId = outdatedModules[j];
/******/ 				var module = __webpack_require__.c[outdatedModuleId];
/******/ 				if (
/******/ 					module &&
/******/ 					(module.hot._selfAccepted || module.hot._main) &&
/******/ 					// removed self-accepted modules should not be required
/******/ 					appliedUpdate[outdatedModuleId] !== warnUnexpectedRequire &&
/******/ 					// when called invalidate self-accepting is not possible
/******/ 					!module.hot._selfInvalidated
/******/ 				) {
/******/ 					outdatedSelfAcceptedModules.push({
/******/ 						module: outdatedModuleId,
/******/ 						require: module.hot._requireSelf,
/******/ 						errorHandler: module.hot._selfAccepted
/******/ 					});
/******/ 				}
/******/ 			}
/******/ 		
/******/ 			var moduleOutdatedDependencies;
/******/ 		
/******/ 			return {
/******/ 				dispose: function () {
/******/ 					currentUpdateRemovedChunks.forEach(function (chunkId) {
/******/ 						delete installedChunks[chunkId];
/******/ 					});
/******/ 					currentUpdateRemovedChunks = undefined;
/******/ 		
/******/ 					var idx;
/******/ 					var queue = outdatedModules.slice();
/******/ 					while (queue.length > 0) {
/******/ 						var moduleId = queue.pop();
/******/ 						var module = __webpack_require__.c[moduleId];
/******/ 						if (!module) continue;
/******/ 		
/******/ 						var data = {};
/******/ 		
/******/ 						// Call dispose handlers
/******/ 						var disposeHandlers = module.hot._disposeHandlers;
/******/ 						for (j = 0; j < disposeHandlers.length; j++) {
/******/ 							disposeHandlers[j].call(null, data);
/******/ 						}
/******/ 						__webpack_require__.hmrD[moduleId] = data;
/******/ 		
/******/ 						// disable module (this disables requires from this module)
/******/ 						module.hot.active = false;
/******/ 		
/******/ 						// remove module from cache
/******/ 						delete __webpack_require__.c[moduleId];
/******/ 		
/******/ 						// when disposing there is no need to call dispose handler
/******/ 						delete outdatedDependencies[moduleId];
/******/ 		
/******/ 						// remove "parents" references from all children
/******/ 						for (j = 0; j < module.children.length; j++) {
/******/ 							var child = __webpack_require__.c[module.children[j]];
/******/ 							if (!child) continue;
/******/ 							idx = child.parents.indexOf(moduleId);
/******/ 							if (idx >= 0) {
/******/ 								child.parents.splice(idx, 1);
/******/ 							}
/******/ 						}
/******/ 					}
/******/ 		
/******/ 					// remove outdated dependency from module children
/******/ 					var dependency;
/******/ 					for (var outdatedModuleId in outdatedDependencies) {
/******/ 						if (__webpack_require__.o(outdatedDependencies, outdatedModuleId)) {
/******/ 							module = __webpack_require__.c[outdatedModuleId];
/******/ 							if (module) {
/******/ 								moduleOutdatedDependencies =
/******/ 									outdatedDependencies[outdatedModuleId];
/******/ 								for (j = 0; j < moduleOutdatedDependencies.length; j++) {
/******/ 									dependency = moduleOutdatedDependencies[j];
/******/ 									idx = module.children.indexOf(dependency);
/******/ 									if (idx >= 0) module.children.splice(idx, 1);
/******/ 								}
/******/ 							}
/******/ 						}
/******/ 					}
/******/ 				},
/******/ 				apply: function (reportError) {
/******/ 					// insert new code
/******/ 					for (var updateModuleId in appliedUpdate) {
/******/ 						if (__webpack_require__.o(appliedUpdate, updateModuleId)) {
/******/ 							__webpack_require__.m[updateModuleId] = appliedUpdate[updateModuleId];
/******/ 						}
/******/ 					}
/******/ 		
/******/ 					// run new runtime modules
/******/ 					for (var i = 0; i < currentUpdateRuntime.length; i++) {
/******/ 						currentUpdateRuntime[i](__webpack_require__);
/******/ 					}
/******/ 		
/******/ 					// call accept handlers
/******/ 					for (var outdatedModuleId in outdatedDependencies) {
/******/ 						if (__webpack_require__.o(outdatedDependencies, outdatedModuleId)) {
/******/ 							var module = __webpack_require__.c[outdatedModuleId];
/******/ 							if (module) {
/******/ 								moduleOutdatedDependencies =
/******/ 									outdatedDependencies[outdatedModuleId];
/******/ 								var callbacks = [];
/******/ 								var errorHandlers = [];
/******/ 								var dependenciesForCallbacks = [];
/******/ 								for (var j = 0; j < moduleOutdatedDependencies.length; j++) {
/******/ 									var dependency = moduleOutdatedDependencies[j];
/******/ 									var acceptCallback =
/******/ 										module.hot._acceptedDependencies[dependency];
/******/ 									var errorHandler =
/******/ 										module.hot._acceptedErrorHandlers[dependency];
/******/ 									if (acceptCallback) {
/******/ 										if (callbacks.indexOf(acceptCallback) !== -1) continue;
/******/ 										callbacks.push(acceptCallback);
/******/ 										errorHandlers.push(errorHandler);
/******/ 										dependenciesForCallbacks.push(dependency);
/******/ 									}
/******/ 								}
/******/ 								for (var k = 0; k < callbacks.length; k++) {
/******/ 									try {
/******/ 										callbacks[k].call(null, moduleOutdatedDependencies);
/******/ 									} catch (err) {
/******/ 										if (typeof errorHandlers[k] === "function") {
/******/ 											try {
/******/ 												errorHandlers[k](err, {
/******/ 													moduleId: outdatedModuleId,
/******/ 													dependencyId: dependenciesForCallbacks[k]
/******/ 												});
/******/ 											} catch (err2) {
/******/ 												if (options.onErrored) {
/******/ 													options.onErrored({
/******/ 														type: "accept-error-handler-errored",
/******/ 														moduleId: outdatedModuleId,
/******/ 														dependencyId: dependenciesForCallbacks[k],
/******/ 														error: err2,
/******/ 														originalError: err
/******/ 													});
/******/ 												}
/******/ 												if (!options.ignoreErrored) {
/******/ 													reportError(err2);
/******/ 													reportError(err);
/******/ 												}
/******/ 											}
/******/ 										} else {
/******/ 											if (options.onErrored) {
/******/ 												options.onErrored({
/******/ 													type: "accept-errored",
/******/ 													moduleId: outdatedModuleId,
/******/ 													dependencyId: dependenciesForCallbacks[k],
/******/ 													error: err
/******/ 												});
/******/ 											}
/******/ 											if (!options.ignoreErrored) {
/******/ 												reportError(err);
/******/ 											}
/******/ 										}
/******/ 									}
/******/ 								}
/******/ 							}
/******/ 						}
/******/ 					}
/******/ 		
/******/ 					// Load self accepted modules
/******/ 					for (var o = 0; o < outdatedSelfAcceptedModules.length; o++) {
/******/ 						var item = outdatedSelfAcceptedModules[o];
/******/ 						var moduleId = item.module;
/******/ 						try {
/******/ 							item.require(moduleId);
/******/ 						} catch (err) {
/******/ 							if (typeof item.errorHandler === "function") {
/******/ 								try {
/******/ 									item.errorHandler(err, {
/******/ 										moduleId: moduleId,
/******/ 										module: __webpack_require__.c[moduleId]
/******/ 									});
/******/ 								} catch (err1) {
/******/ 									if (options.onErrored) {
/******/ 										options.onErrored({
/******/ 											type: "self-accept-error-handler-errored",
/******/ 											moduleId: moduleId,
/******/ 											error: err1,
/******/ 											originalError: err
/******/ 										});
/******/ 									}
/******/ 									if (!options.ignoreErrored) {
/******/ 										reportError(err1);
/******/ 										reportError(err);
/******/ 									}
/******/ 								}
/******/ 							} else {
/******/ 								if (options.onErrored) {
/******/ 									options.onErrored({
/******/ 										type: "self-accept-errored",
/******/ 										moduleId: moduleId,
/******/ 										error: err
/******/ 									});
/******/ 								}
/******/ 								if (!options.ignoreErrored) {
/******/ 									reportError(err);
/******/ 								}
/******/ 							}
/******/ 						}
/******/ 					}
/******/ 		
/******/ 					return outdatedModules;
/******/ 				}
/******/ 			};
/******/ 		}
/******/ 		__webpack_require__.hmrI.importScripts = function (moduleId, applyHandlers) {
/******/ 			if (!currentUpdate) {
/******/ 				currentUpdate = {};
/******/ 				currentUpdateRuntime = [];
/******/ 				currentUpdateRemovedChunks = [];
/******/ 				applyHandlers.push(applyHandler);
/******/ 			}
/******/ 			if (!__webpack_require__.o(currentUpdate, moduleId)) {
/******/ 				currentUpdate[moduleId] = __webpack_require__.m[moduleId];
/******/ 			}
/******/ 		};
/******/ 		__webpack_require__.hmrC.importScripts = function (
/******/ 			chunkIds,
/******/ 			removedChunks,
/******/ 			removedModules,
/******/ 			promises,
/******/ 			applyHandlers,
/******/ 			updatedModulesList
/******/ 		) {
/******/ 			applyHandlers.push(applyHandler);
/******/ 			currentUpdateChunks = {};
/******/ 			currentUpdateRemovedChunks = removedChunks;
/******/ 			currentUpdate = removedModules.reduce(function (obj, key) {
/******/ 				obj[key] = false;
/******/ 				return obj;
/******/ 			}, {});
/******/ 			currentUpdateRuntime = [];
/******/ 			chunkIds.forEach(function (chunkId) {
/******/ 				if (
/******/ 					__webpack_require__.o(installedChunks, chunkId) &&
/******/ 					installedChunks[chunkId] !== undefined
/******/ 				) {
/******/ 					promises.push(loadUpdateChunk(chunkId, updatedModulesList));
/******/ 					currentUpdateChunks[chunkId] = true;
/******/ 				} else {
/******/ 					currentUpdateChunks[chunkId] = false;
/******/ 				}
/******/ 			});
/******/ 			if (__webpack_require__.f) {
/******/ 				__webpack_require__.f.importScriptsHmr = function (chunkId, promises) {
/******/ 					if (
/******/ 						currentUpdateChunks &&
/******/ 						__webpack_require__.o(currentUpdateChunks, chunkId) &&
/******/ 						!currentUpdateChunks[chunkId]
/******/ 					) {
/******/ 						promises.push(loadUpdateChunk(chunkId));
/******/ 						currentUpdateChunks[chunkId] = true;
/******/ 					}
/******/ 				};
/******/ 			}
/******/ 		};
/******/ 		
/******/ 		__webpack_require__.hmrM = () => {
/******/ 			if (typeof fetch === "undefined") throw new Error("No browser support: need fetch API");
/******/ 			return fetch(__webpack_require__.p + __webpack_require__.hmrF()).then((response) => {
/******/ 				if(response.status === 404) return; // no update available
/******/ 				if(!response.ok) throw new Error("Failed to fetch update manifest " + response.statusText);
/******/ 				return response.json();
/******/ 			});
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// module cache are used so entry inlining is disabled
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	var __webpack_exports__ = __webpack_require__("(app-pages-browser)/../node_modules/.pnpm/@sqlite.org+sqlite-wasm@3.49.1-build2/node_modules/@sqlite.org/sqlite-wasm/sqlite-wasm/jswasm/sqlite3-opfs-async-proxy.js");
/******/ 	_N_E = __webpack_exports__;
/******/ 	
/******/ })()
;