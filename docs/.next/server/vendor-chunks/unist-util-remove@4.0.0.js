"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/unist-util-remove@4.0.0";
exports.ids = ["vendor-chunks/unist-util-remove@4.0.0"];
exports.modules = {

/***/ "(rsc)/../node_modules/.pnpm/unist-util-remove@4.0.0/node_modules/unist-util-remove/lib/index.js":
/*!*************************************************************************************************!*\
  !*** ../node_modules/.pnpm/unist-util-remove@4.0.0/node_modules/unist-util-remove/lib/index.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   remove: () => (/* binding */ remove)\n/* harmony export */ });\n/* harmony import */ var unist_util_is__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! unist-util-is */ \"(rsc)/../node_modules/.pnpm/unist-util-is@6.0.0/node_modules/unist-util-is/lib/index.js\");\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [cascade=true]\n *   Whether to drop parent nodes if they had children, but all their children\n *   were filtered out (default: `true`).\n */\n\n\n\n/**\n * Change the given `tree` by removing all nodes that pass `test`.\n *\n * `tree` itself is never tested.\n * The tree is walked in preorder (NLR), visiting the node itself, then its\n * head, etc.\n *\n * @overload\n * @param {Node} node\n * @param {Test} [test]\n * @returns {undefined}\n *\n * @overload\n * @param {Node} node\n * @param {Options | null | undefined} options\n * @param {Test} [test]\n * @returns {undefined}\n *\n * @param {Node} tree\n *   Tree to change.\n * @param {Options | Test} options\n *   Configuration (optional).\n * @param {Test} [test]\n *   `unist-util-is` compatible test.\n * @returns {undefined}\n *   Nothing.\n */\nfunction remove(tree, options, test) {\n  const is = (0,unist_util_is__WEBPACK_IMPORTED_MODULE_0__.convert)(test || options)\n  let cascade = true\n\n  if (\n    options &&\n    typeof options === 'object' &&\n    'cascade' in options &&\n    typeof options.cascade === 'boolean'\n  ) {\n    cascade = options.cascade\n  }\n\n  preorder(tree)\n\n  /**\n   * Check and remove nodes recursively in preorder.\n   * For each composite node, modify its children array in-place.\n   *\n   * @param {Node} node\n   * @param {number | undefined} [index]\n   * @param {Parent | undefined} [parent]\n   * @returns {boolean}\n   */\n  function preorder(node, index, parent) {\n    if (node !== tree && is(node, index, parent)) {\n      return false\n    }\n\n    if ('children' in node && Array.isArray(node.children)) {\n      const nodeAsParent = /** @type {Parent} */ (node)\n      const children = nodeAsParent.children\n      let oldChildIndex = -1\n      let newChildIndex = 0\n\n      if (children.length > 0) {\n        // Move all living children to the beginning of the children array.\n        while (++oldChildIndex < children.length) {\n          if (preorder(children[oldChildIndex], oldChildIndex, nodeAsParent)) {\n            children[newChildIndex++] = children[oldChildIndex]\n          }\n        }\n\n        // Cascade delete.\n        if (node !== tree && cascade && !newChildIndex) {\n          return false\n        }\n\n        // Drop other nodes.\n        children.length = newChildIndex\n      }\n    }\n\n    return true\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vbm9kZV9tb2R1bGVzLy5wbnBtL3VuaXN0LXV0aWwtcmVtb3ZlQDQuMC4wL25vZGVfbW9kdWxlcy91bmlzdC11dGlsLXJlbW92ZS9saWIvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBLGFBQWEsc0JBQXNCO0FBQ25DLGFBQWEsd0JBQXdCO0FBQ3JDLGFBQWEsOEJBQThCO0FBQzNDOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsNEJBQTRCO0FBQzFDO0FBQ0E7QUFDQTs7QUFFcUM7O0FBRXJDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLE1BQU07QUFDakIsV0FBVyxNQUFNO0FBQ2pCLGFBQWE7QUFDYjtBQUNBO0FBQ0EsV0FBVyxNQUFNO0FBQ2pCLFdBQVcsNEJBQTRCO0FBQ3ZDLFdBQVcsTUFBTTtBQUNqQixhQUFhO0FBQ2I7QUFDQSxXQUFXLE1BQU07QUFDakI7QUFDQSxXQUFXLGdCQUFnQjtBQUMzQjtBQUNBLFdBQVcsTUFBTTtBQUNqQjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ087QUFDUCxhQUFhLHNEQUFPO0FBQ3BCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLE1BQU07QUFDbkIsYUFBYSxvQkFBb0I7QUFDakMsYUFBYSxvQkFBb0I7QUFDakMsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxzQ0FBc0MsUUFBUTtBQUM5QztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvZXRoYW5raW0vTmVzdG9yL21lZGZldGNoLmpzL25vZGVfbW9kdWxlcy8ucG5wbS91bmlzdC11dGlsLXJlbW92ZUA0LjAuMC9ub2RlX21vZHVsZXMvdW5pc3QtdXRpbC1yZW1vdmUvbGliL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQHR5cGVkZWYge2ltcG9ydCgndW5pc3QnKS5Ob2RlfSBOb2RlXG4gKiBAdHlwZWRlZiB7aW1wb3J0KCd1bmlzdCcpLlBhcmVudH0gUGFyZW50XG4gKiBAdHlwZWRlZiB7aW1wb3J0KCd1bmlzdC11dGlsLWlzJykuVGVzdH0gVGVzdFxuICovXG5cbi8qKlxuICogQHR5cGVkZWYgT3B0aW9uc1xuICogICBDb25maWd1cmF0aW9uLlxuICogQHByb3BlcnR5IHtib29sZWFuIHwgbnVsbCB8IHVuZGVmaW5lZH0gW2Nhc2NhZGU9dHJ1ZV1cbiAqICAgV2hldGhlciB0byBkcm9wIHBhcmVudCBub2RlcyBpZiB0aGV5IGhhZCBjaGlsZHJlbiwgYnV0IGFsbCB0aGVpciBjaGlsZHJlblxuICogICB3ZXJlIGZpbHRlcmVkIG91dCAoZGVmYXVsdDogYHRydWVgKS5cbiAqL1xuXG5pbXBvcnQge2NvbnZlcnR9IGZyb20gJ3VuaXN0LXV0aWwtaXMnXG5cbi8qKlxuICogQ2hhbmdlIHRoZSBnaXZlbiBgdHJlZWAgYnkgcmVtb3ZpbmcgYWxsIG5vZGVzIHRoYXQgcGFzcyBgdGVzdGAuXG4gKlxuICogYHRyZWVgIGl0c2VsZiBpcyBuZXZlciB0ZXN0ZWQuXG4gKiBUaGUgdHJlZSBpcyB3YWxrZWQgaW4gcHJlb3JkZXIgKE5MUiksIHZpc2l0aW5nIHRoZSBub2RlIGl0c2VsZiwgdGhlbiBpdHNcbiAqIGhlYWQsIGV0Yy5cbiAqXG4gKiBAb3ZlcmxvYWRcbiAqIEBwYXJhbSB7Tm9kZX0gbm9kZVxuICogQHBhcmFtIHtUZXN0fSBbdGVzdF1cbiAqIEByZXR1cm5zIHt1bmRlZmluZWR9XG4gKlxuICogQG92ZXJsb2FkXG4gKiBAcGFyYW0ge05vZGV9IG5vZGVcbiAqIEBwYXJhbSB7T3B0aW9ucyB8IG51bGwgfCB1bmRlZmluZWR9IG9wdGlvbnNcbiAqIEBwYXJhbSB7VGVzdH0gW3Rlc3RdXG4gKiBAcmV0dXJucyB7dW5kZWZpbmVkfVxuICpcbiAqIEBwYXJhbSB7Tm9kZX0gdHJlZVxuICogICBUcmVlIHRvIGNoYW5nZS5cbiAqIEBwYXJhbSB7T3B0aW9ucyB8IFRlc3R9IG9wdGlvbnNcbiAqICAgQ29uZmlndXJhdGlvbiAob3B0aW9uYWwpLlxuICogQHBhcmFtIHtUZXN0fSBbdGVzdF1cbiAqICAgYHVuaXN0LXV0aWwtaXNgIGNvbXBhdGlibGUgdGVzdC5cbiAqIEByZXR1cm5zIHt1bmRlZmluZWR9XG4gKiAgIE5vdGhpbmcuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiByZW1vdmUodHJlZSwgb3B0aW9ucywgdGVzdCkge1xuICBjb25zdCBpcyA9IGNvbnZlcnQodGVzdCB8fCBvcHRpb25zKVxuICBsZXQgY2FzY2FkZSA9IHRydWVcblxuICBpZiAoXG4gICAgb3B0aW9ucyAmJlxuICAgIHR5cGVvZiBvcHRpb25zID09PSAnb2JqZWN0JyAmJlxuICAgICdjYXNjYWRlJyBpbiBvcHRpb25zICYmXG4gICAgdHlwZW9mIG9wdGlvbnMuY2FzY2FkZSA9PT0gJ2Jvb2xlYW4nXG4gICkge1xuICAgIGNhc2NhZGUgPSBvcHRpb25zLmNhc2NhZGVcbiAgfVxuXG4gIHByZW9yZGVyKHRyZWUpXG5cbiAgLyoqXG4gICAqIENoZWNrIGFuZCByZW1vdmUgbm9kZXMgcmVjdXJzaXZlbHkgaW4gcHJlb3JkZXIuXG4gICAqIEZvciBlYWNoIGNvbXBvc2l0ZSBub2RlLCBtb2RpZnkgaXRzIGNoaWxkcmVuIGFycmF5IGluLXBsYWNlLlxuICAgKlxuICAgKiBAcGFyYW0ge05vZGV9IG5vZGVcbiAgICogQHBhcmFtIHtudW1iZXIgfCB1bmRlZmluZWR9IFtpbmRleF1cbiAgICogQHBhcmFtIHtQYXJlbnQgfCB1bmRlZmluZWR9IFtwYXJlbnRdXG4gICAqIEByZXR1cm5zIHtib29sZWFufVxuICAgKi9cbiAgZnVuY3Rpb24gcHJlb3JkZXIobm9kZSwgaW5kZXgsIHBhcmVudCkge1xuICAgIGlmIChub2RlICE9PSB0cmVlICYmIGlzKG5vZGUsIGluZGV4LCBwYXJlbnQpKSB7XG4gICAgICByZXR1cm4gZmFsc2VcbiAgICB9XG5cbiAgICBpZiAoJ2NoaWxkcmVuJyBpbiBub2RlICYmIEFycmF5LmlzQXJyYXkobm9kZS5jaGlsZHJlbikpIHtcbiAgICAgIGNvbnN0IG5vZGVBc1BhcmVudCA9IC8qKiBAdHlwZSB7UGFyZW50fSAqLyAobm9kZSlcbiAgICAgIGNvbnN0IGNoaWxkcmVuID0gbm9kZUFzUGFyZW50LmNoaWxkcmVuXG4gICAgICBsZXQgb2xkQ2hpbGRJbmRleCA9IC0xXG4gICAgICBsZXQgbmV3Q2hpbGRJbmRleCA9IDBcblxuICAgICAgaWYgKGNoaWxkcmVuLmxlbmd0aCA+IDApIHtcbiAgICAgICAgLy8gTW92ZSBhbGwgbGl2aW5nIGNoaWxkcmVuIHRvIHRoZSBiZWdpbm5pbmcgb2YgdGhlIGNoaWxkcmVuIGFycmF5LlxuICAgICAgICB3aGlsZSAoKytvbGRDaGlsZEluZGV4IDwgY2hpbGRyZW4ubGVuZ3RoKSB7XG4gICAgICAgICAgaWYgKHByZW9yZGVyKGNoaWxkcmVuW29sZENoaWxkSW5kZXhdLCBvbGRDaGlsZEluZGV4LCBub2RlQXNQYXJlbnQpKSB7XG4gICAgICAgICAgICBjaGlsZHJlbltuZXdDaGlsZEluZGV4KytdID0gY2hpbGRyZW5bb2xkQ2hpbGRJbmRleF1cbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAvLyBDYXNjYWRlIGRlbGV0ZS5cbiAgICAgICAgaWYgKG5vZGUgIT09IHRyZWUgJiYgY2FzY2FkZSAmJiAhbmV3Q2hpbGRJbmRleCkge1xuICAgICAgICAgIHJldHVybiBmYWxzZVxuICAgICAgICB9XG5cbiAgICAgICAgLy8gRHJvcCBvdGhlciBub2Rlcy5cbiAgICAgICAgY2hpbGRyZW4ubGVuZ3RoID0gbmV3Q2hpbGRJbmRleFxuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB0cnVlXG4gIH1cbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../node_modules/.pnpm/unist-util-remove@4.0.0/node_modules/unist-util-remove/lib/index.js\n");

/***/ })

};
;