"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@braintree+sanitize-url@7.1.1";
exports.ids = ["vendor-chunks/@braintree+sanitize-url@7.1.1"];
exports.modules = {

/***/ "(ssr)/../node_modules/.pnpm/@braintree+sanitize-url@7.1.1/node_modules/@braintree/sanitize-url/dist/constants.js":
/*!******************************************************************************************************************!*\
  !*** ../node_modules/.pnpm/@braintree+sanitize-url@7.1.1/node_modules/@braintree/sanitize-url/dist/constants.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BLANK_URL = exports.relativeFirstCharacters = exports.whitespaceEscapeCharsRegex = exports.urlSchemeRegex = exports.ctrlCharactersRegex = exports.htmlCtrlEntityRegex = exports.htmlEntitiesRegex = exports.invalidProtocolRegex = void 0;\nexports.invalidProtocolRegex = /^([^\\w]*)(javascript|data|vbscript)/im;\nexports.htmlEntitiesRegex = /&#(\\w+)(^\\w|;)?/g;\nexports.htmlCtrlEntityRegex = /&(newline|tab);/gi;\nexports.ctrlCharactersRegex = /[\\u0000-\\u001F\\u007F-\\u009F\\u2000-\\u200D\\uFEFF]/gim;\nexports.urlSchemeRegex = /^.+(:|&colon;)/gim;\nexports.whitespaceEscapeCharsRegex = /(\\\\|%5[cC])((%(6[eE]|72|74))|[nrt])/g;\nexports.relativeFirstCharacters = [\".\", \"/\"];\nexports.BLANK_URL = \"about:blank\";\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BicmFpbnRyZWUrc2FuaXRpemUtdXJsQDcuMS4xL25vZGVfbW9kdWxlcy9AYnJhaW50cmVlL3Nhbml0aXplLXVybC9kaXN0L2NvbnN0YW50cy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxpQkFBaUIsR0FBRywrQkFBK0IsR0FBRyxrQ0FBa0MsR0FBRyxzQkFBc0IsR0FBRywyQkFBMkIsR0FBRywyQkFBMkIsR0FBRyx5QkFBeUIsR0FBRyw0QkFBNEI7QUFDeE8sNEJBQTRCO0FBQzVCLHlCQUF5QixpQkFBaUI7QUFDMUMsMkJBQTJCLG1CQUFtQjtBQUM5QywyQkFBMkI7QUFDM0Isc0JBQXNCLGlCQUFpQjtBQUN2QyxrQ0FBa0M7QUFDbEMsK0JBQStCO0FBQy9CLGlCQUFpQiIsInNvdXJjZXMiOlsiL1VzZXJzL2V0aGFua2ltL05lc3Rvci9tZWRmZXRjaC5qcy9ub2RlX21vZHVsZXMvLnBucG0vQGJyYWludHJlZStzYW5pdGl6ZS11cmxANy4xLjEvbm9kZV9tb2R1bGVzL0BicmFpbnRyZWUvc2FuaXRpemUtdXJsL2Rpc3QvY29uc3RhbnRzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5CTEFOS19VUkwgPSBleHBvcnRzLnJlbGF0aXZlRmlyc3RDaGFyYWN0ZXJzID0gZXhwb3J0cy53aGl0ZXNwYWNlRXNjYXBlQ2hhcnNSZWdleCA9IGV4cG9ydHMudXJsU2NoZW1lUmVnZXggPSBleHBvcnRzLmN0cmxDaGFyYWN0ZXJzUmVnZXggPSBleHBvcnRzLmh0bWxDdHJsRW50aXR5UmVnZXggPSBleHBvcnRzLmh0bWxFbnRpdGllc1JlZ2V4ID0gZXhwb3J0cy5pbnZhbGlkUHJvdG9jb2xSZWdleCA9IHZvaWQgMDtcbmV4cG9ydHMuaW52YWxpZFByb3RvY29sUmVnZXggPSAvXihbXlxcd10qKShqYXZhc2NyaXB0fGRhdGF8dmJzY3JpcHQpL2ltO1xuZXhwb3J0cy5odG1sRW50aXRpZXNSZWdleCA9IC8mIyhcXHcrKSheXFx3fDspPy9nO1xuZXhwb3J0cy5odG1sQ3RybEVudGl0eVJlZ2V4ID0gLyYobmV3bGluZXx0YWIpOy9naTtcbmV4cG9ydHMuY3RybENoYXJhY3RlcnNSZWdleCA9IC9bXFx1MDAwMC1cXHUwMDFGXFx1MDA3Ri1cXHUwMDlGXFx1MjAwMC1cXHUyMDBEXFx1RkVGRl0vZ2ltO1xuZXhwb3J0cy51cmxTY2hlbWVSZWdleCA9IC9eLisoOnwmY29sb247KS9naW07XG5leHBvcnRzLndoaXRlc3BhY2VFc2NhcGVDaGFyc1JlZ2V4ID0gLyhcXFxcfCU1W2NDXSkoKCUoNltlRV18NzJ8NzQpKXxbbnJ0XSkvZztcbmV4cG9ydHMucmVsYXRpdmVGaXJzdENoYXJhY3RlcnMgPSBbXCIuXCIsIFwiL1wiXTtcbmV4cG9ydHMuQkxBTktfVVJMID0gXCJhYm91dDpibGFua1wiO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/.pnpm/@braintree+sanitize-url@7.1.1/node_modules/@braintree/sanitize-url/dist/constants.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/.pnpm/@braintree+sanitize-url@7.1.1/node_modules/@braintree/sanitize-url/dist/index.js":
/*!**************************************************************************************************************!*\
  !*** ../node_modules/.pnpm/@braintree+sanitize-url@7.1.1/node_modules/@braintree/sanitize-url/dist/index.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.sanitizeUrl = void 0;\nvar constants_1 = __webpack_require__(/*! ./constants */ \"(ssr)/../node_modules/.pnpm/@braintree+sanitize-url@7.1.1/node_modules/@braintree/sanitize-url/dist/constants.js\");\nfunction isRelativeUrlWithoutProtocol(url) {\n    return constants_1.relativeFirstCharacters.indexOf(url[0]) > -1;\n}\nfunction decodeHtmlCharacters(str) {\n    var removedNullByte = str.replace(constants_1.ctrlCharactersRegex, \"\");\n    return removedNullByte.replace(constants_1.htmlEntitiesRegex, function (match, dec) {\n        return String.fromCharCode(dec);\n    });\n}\nfunction isValidUrl(url) {\n    return URL.canParse(url);\n}\nfunction decodeURI(uri) {\n    try {\n        return decodeURIComponent(uri);\n    }\n    catch (e) {\n        // Ignoring error\n        // It is possible that the URI contains a `%` not associated\n        // with URI/URL-encoding.\n        return uri;\n    }\n}\nfunction sanitizeUrl(url) {\n    if (!url) {\n        return constants_1.BLANK_URL;\n    }\n    var charsToDecode;\n    var decodedUrl = decodeURI(url.trim());\n    do {\n        decodedUrl = decodeHtmlCharacters(decodedUrl)\n            .replace(constants_1.htmlCtrlEntityRegex, \"\")\n            .replace(constants_1.ctrlCharactersRegex, \"\")\n            .replace(constants_1.whitespaceEscapeCharsRegex, \"\")\n            .trim();\n        decodedUrl = decodeURI(decodedUrl);\n        charsToDecode =\n            decodedUrl.match(constants_1.ctrlCharactersRegex) ||\n                decodedUrl.match(constants_1.htmlEntitiesRegex) ||\n                decodedUrl.match(constants_1.htmlCtrlEntityRegex) ||\n                decodedUrl.match(constants_1.whitespaceEscapeCharsRegex);\n    } while (charsToDecode && charsToDecode.length > 0);\n    var sanitizedUrl = decodedUrl;\n    if (!sanitizedUrl) {\n        return constants_1.BLANK_URL;\n    }\n    if (isRelativeUrlWithoutProtocol(sanitizedUrl)) {\n        return sanitizedUrl;\n    }\n    // Remove any leading whitespace before checking the URL scheme\n    var trimmedUrl = sanitizedUrl.trimStart();\n    var urlSchemeParseResults = trimmedUrl.match(constants_1.urlSchemeRegex);\n    if (!urlSchemeParseResults) {\n        return sanitizedUrl;\n    }\n    var urlScheme = urlSchemeParseResults[0].toLowerCase().trim();\n    if (constants_1.invalidProtocolRegex.test(urlScheme)) {\n        return constants_1.BLANK_URL;\n    }\n    var backSanitized = trimmedUrl.replace(/\\\\/g, \"/\");\n    // Handle special cases for mailto: and custom deep-link protocols\n    if (urlScheme === \"mailto:\" || urlScheme.includes(\"://\")) {\n        return backSanitized;\n    }\n    // For http and https URLs, perform additional validation\n    if (urlScheme === \"http:\" || urlScheme === \"https:\") {\n        if (!isValidUrl(backSanitized)) {\n            return constants_1.BLANK_URL;\n        }\n        var url_1 = new URL(backSanitized);\n        url_1.protocol = url_1.protocol.toLowerCase();\n        url_1.hostname = url_1.hostname.toLowerCase();\n        return url_1.toString();\n    }\n    return backSanitized;\n}\nexports.sanitizeUrl = sanitizeUrl;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BicmFpbnRyZWUrc2FuaXRpemUtdXJsQDcuMS4xL25vZGVfbW9kdWxlcy9AYnJhaW50cmVlL3Nhbml0aXplLXVybC9kaXN0L2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG1CQUFtQjtBQUNuQixrQkFBa0IsbUJBQU8sQ0FBQyxxSUFBYTtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIiLCJzb3VyY2VzIjpbIi9Vc2Vycy9ldGhhbmtpbS9OZXN0b3IvbWVkZmV0Y2guanMvbm9kZV9tb2R1bGVzLy5wbnBtL0BicmFpbnRyZWUrc2FuaXRpemUtdXJsQDcuMS4xL25vZGVfbW9kdWxlcy9AYnJhaW50cmVlL3Nhbml0aXplLXVybC9kaXN0L2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5zYW5pdGl6ZVVybCA9IHZvaWQgMDtcbnZhciBjb25zdGFudHNfMSA9IHJlcXVpcmUoXCIuL2NvbnN0YW50c1wiKTtcbmZ1bmN0aW9uIGlzUmVsYXRpdmVVcmxXaXRob3V0UHJvdG9jb2wodXJsKSB7XG4gICAgcmV0dXJuIGNvbnN0YW50c18xLnJlbGF0aXZlRmlyc3RDaGFyYWN0ZXJzLmluZGV4T2YodXJsWzBdKSA+IC0xO1xufVxuZnVuY3Rpb24gZGVjb2RlSHRtbENoYXJhY3RlcnMoc3RyKSB7XG4gICAgdmFyIHJlbW92ZWROdWxsQnl0ZSA9IHN0ci5yZXBsYWNlKGNvbnN0YW50c18xLmN0cmxDaGFyYWN0ZXJzUmVnZXgsIFwiXCIpO1xuICAgIHJldHVybiByZW1vdmVkTnVsbEJ5dGUucmVwbGFjZShjb25zdGFudHNfMS5odG1sRW50aXRpZXNSZWdleCwgZnVuY3Rpb24gKG1hdGNoLCBkZWMpIHtcbiAgICAgICAgcmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUoZGVjKTtcbiAgICB9KTtcbn1cbmZ1bmN0aW9uIGlzVmFsaWRVcmwodXJsKSB7XG4gICAgcmV0dXJuIFVSTC5jYW5QYXJzZSh1cmwpO1xufVxuZnVuY3Rpb24gZGVjb2RlVVJJKHVyaSkge1xuICAgIHRyeSB7XG4gICAgICAgIHJldHVybiBkZWNvZGVVUklDb21wb25lbnQodXJpKTtcbiAgICB9XG4gICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgLy8gSWdub3JpbmcgZXJyb3JcbiAgICAgICAgLy8gSXQgaXMgcG9zc2libGUgdGhhdCB0aGUgVVJJIGNvbnRhaW5zIGEgYCVgIG5vdCBhc3NvY2lhdGVkXG4gICAgICAgIC8vIHdpdGggVVJJL1VSTC1lbmNvZGluZy5cbiAgICAgICAgcmV0dXJuIHVyaTtcbiAgICB9XG59XG5mdW5jdGlvbiBzYW5pdGl6ZVVybCh1cmwpIHtcbiAgICBpZiAoIXVybCkge1xuICAgICAgICByZXR1cm4gY29uc3RhbnRzXzEuQkxBTktfVVJMO1xuICAgIH1cbiAgICB2YXIgY2hhcnNUb0RlY29kZTtcbiAgICB2YXIgZGVjb2RlZFVybCA9IGRlY29kZVVSSSh1cmwudHJpbSgpKTtcbiAgICBkbyB7XG4gICAgICAgIGRlY29kZWRVcmwgPSBkZWNvZGVIdG1sQ2hhcmFjdGVycyhkZWNvZGVkVXJsKVxuICAgICAgICAgICAgLnJlcGxhY2UoY29uc3RhbnRzXzEuaHRtbEN0cmxFbnRpdHlSZWdleCwgXCJcIilcbiAgICAgICAgICAgIC5yZXBsYWNlKGNvbnN0YW50c18xLmN0cmxDaGFyYWN0ZXJzUmVnZXgsIFwiXCIpXG4gICAgICAgICAgICAucmVwbGFjZShjb25zdGFudHNfMS53aGl0ZXNwYWNlRXNjYXBlQ2hhcnNSZWdleCwgXCJcIilcbiAgICAgICAgICAgIC50cmltKCk7XG4gICAgICAgIGRlY29kZWRVcmwgPSBkZWNvZGVVUkkoZGVjb2RlZFVybCk7XG4gICAgICAgIGNoYXJzVG9EZWNvZGUgPVxuICAgICAgICAgICAgZGVjb2RlZFVybC5tYXRjaChjb25zdGFudHNfMS5jdHJsQ2hhcmFjdGVyc1JlZ2V4KSB8fFxuICAgICAgICAgICAgICAgIGRlY29kZWRVcmwubWF0Y2goY29uc3RhbnRzXzEuaHRtbEVudGl0aWVzUmVnZXgpIHx8XG4gICAgICAgICAgICAgICAgZGVjb2RlZFVybC5tYXRjaChjb25zdGFudHNfMS5odG1sQ3RybEVudGl0eVJlZ2V4KSB8fFxuICAgICAgICAgICAgICAgIGRlY29kZWRVcmwubWF0Y2goY29uc3RhbnRzXzEud2hpdGVzcGFjZUVzY2FwZUNoYXJzUmVnZXgpO1xuICAgIH0gd2hpbGUgKGNoYXJzVG9EZWNvZGUgJiYgY2hhcnNUb0RlY29kZS5sZW5ndGggPiAwKTtcbiAgICB2YXIgc2FuaXRpemVkVXJsID0gZGVjb2RlZFVybDtcbiAgICBpZiAoIXNhbml0aXplZFVybCkge1xuICAgICAgICByZXR1cm4gY29uc3RhbnRzXzEuQkxBTktfVVJMO1xuICAgIH1cbiAgICBpZiAoaXNSZWxhdGl2ZVVybFdpdGhvdXRQcm90b2NvbChzYW5pdGl6ZWRVcmwpKSB7XG4gICAgICAgIHJldHVybiBzYW5pdGl6ZWRVcmw7XG4gICAgfVxuICAgIC8vIFJlbW92ZSBhbnkgbGVhZGluZyB3aGl0ZXNwYWNlIGJlZm9yZSBjaGVja2luZyB0aGUgVVJMIHNjaGVtZVxuICAgIHZhciB0cmltbWVkVXJsID0gc2FuaXRpemVkVXJsLnRyaW1TdGFydCgpO1xuICAgIHZhciB1cmxTY2hlbWVQYXJzZVJlc3VsdHMgPSB0cmltbWVkVXJsLm1hdGNoKGNvbnN0YW50c18xLnVybFNjaGVtZVJlZ2V4KTtcbiAgICBpZiAoIXVybFNjaGVtZVBhcnNlUmVzdWx0cykge1xuICAgICAgICByZXR1cm4gc2FuaXRpemVkVXJsO1xuICAgIH1cbiAgICB2YXIgdXJsU2NoZW1lID0gdXJsU2NoZW1lUGFyc2VSZXN1bHRzWzBdLnRvTG93ZXJDYXNlKCkudHJpbSgpO1xuICAgIGlmIChjb25zdGFudHNfMS5pbnZhbGlkUHJvdG9jb2xSZWdleC50ZXN0KHVybFNjaGVtZSkpIHtcbiAgICAgICAgcmV0dXJuIGNvbnN0YW50c18xLkJMQU5LX1VSTDtcbiAgICB9XG4gICAgdmFyIGJhY2tTYW5pdGl6ZWQgPSB0cmltbWVkVXJsLnJlcGxhY2UoL1xcXFwvZywgXCIvXCIpO1xuICAgIC8vIEhhbmRsZSBzcGVjaWFsIGNhc2VzIGZvciBtYWlsdG86IGFuZCBjdXN0b20gZGVlcC1saW5rIHByb3RvY29sc1xuICAgIGlmICh1cmxTY2hlbWUgPT09IFwibWFpbHRvOlwiIHx8IHVybFNjaGVtZS5pbmNsdWRlcyhcIjovL1wiKSkge1xuICAgICAgICByZXR1cm4gYmFja1Nhbml0aXplZDtcbiAgICB9XG4gICAgLy8gRm9yIGh0dHAgYW5kIGh0dHBzIFVSTHMsIHBlcmZvcm0gYWRkaXRpb25hbCB2YWxpZGF0aW9uXG4gICAgaWYgKHVybFNjaGVtZSA9PT0gXCJodHRwOlwiIHx8IHVybFNjaGVtZSA9PT0gXCJodHRwczpcIikge1xuICAgICAgICBpZiAoIWlzVmFsaWRVcmwoYmFja1Nhbml0aXplZCkpIHtcbiAgICAgICAgICAgIHJldHVybiBjb25zdGFudHNfMS5CTEFOS19VUkw7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIHVybF8xID0gbmV3IFVSTChiYWNrU2FuaXRpemVkKTtcbiAgICAgICAgdXJsXzEucHJvdG9jb2wgPSB1cmxfMS5wcm90b2NvbC50b0xvd2VyQ2FzZSgpO1xuICAgICAgICB1cmxfMS5ob3N0bmFtZSA9IHVybF8xLmhvc3RuYW1lLnRvTG93ZXJDYXNlKCk7XG4gICAgICAgIHJldHVybiB1cmxfMS50b1N0cmluZygpO1xuICAgIH1cbiAgICByZXR1cm4gYmFja1Nhbml0aXplZDtcbn1cbmV4cG9ydHMuc2FuaXRpemVVcmwgPSBzYW5pdGl6ZVVybDtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/.pnpm/@braintree+sanitize-url@7.1.1/node_modules/@braintree/sanitize-url/dist/index.js\n");

/***/ })

};
;