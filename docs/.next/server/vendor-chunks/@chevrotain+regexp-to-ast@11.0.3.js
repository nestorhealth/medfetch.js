"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@chevrotain+regexp-to-ast@11.0.3";
exports.ids = ["vendor-chunks/@chevrotain+regexp-to-ast@11.0.3"];
exports.modules = {

/***/ "(ssr)/../node_modules/.pnpm/@chevrotain+regexp-to-ast@11.0.3/node_modules/@chevrotain/regexp-to-ast/lib/src/api.js":
/*!********************************************************************************************************************!*\
  !*** ../node_modules/.pnpm/@chevrotain+regexp-to-ast@11.0.3/node_modules/@chevrotain/regexp-to-ast/lib/src/api.js ***!
  \********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseRegExpVisitor: () => (/* reexport safe */ _base_regexp_visitor_js__WEBPACK_IMPORTED_MODULE_1__.BaseRegExpVisitor),\n/* harmony export */   RegExpParser: () => (/* reexport safe */ _regexp_parser_js__WEBPACK_IMPORTED_MODULE_0__.RegExpParser)\n/* harmony export */ });\n/* harmony import */ var _regexp_parser_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./regexp-parser.js */ \"(ssr)/../node_modules/.pnpm/@chevrotain+regexp-to-ast@11.0.3/node_modules/@chevrotain/regexp-to-ast/lib/src/regexp-parser.js\");\n/* harmony import */ var _base_regexp_visitor_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./base-regexp-visitor.js */ \"(ssr)/../node_modules/.pnpm/@chevrotain+regexp-to-ast@11.0.3/node_modules/@chevrotain/regexp-to-ast/lib/src/base-regexp-visitor.js\");\n\n\n//# sourceMappingURL=api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BjaGV2cm90YWluK3JlZ2V4cC10by1hc3RAMTEuMC4zL25vZGVfbW9kdWxlcy9AY2hldnJvdGFpbi9yZWdleHAtdG8tYXN0L2xpYi9zcmMvYXBpLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBa0Q7QUFDVztBQUM3RCIsInNvdXJjZXMiOlsiL1VzZXJzL2V0aGFua2ltL05lc3Rvci9tZWRmZXRjaC5qcy9ub2RlX21vZHVsZXMvLnBucG0vQGNoZXZyb3RhaW4rcmVnZXhwLXRvLWFzdEAxMS4wLjMvbm9kZV9tb2R1bGVzL0BjaGV2cm90YWluL3JlZ2V4cC10by1hc3QvbGliL3NyYy9hcGkuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgUmVnRXhwUGFyc2VyIH0gZnJvbSBcIi4vcmVnZXhwLXBhcnNlci5qc1wiO1xuZXhwb3J0IHsgQmFzZVJlZ0V4cFZpc2l0b3IgfSBmcm9tIFwiLi9iYXNlLXJlZ2V4cC12aXNpdG9yLmpzXCI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcGkuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/.pnpm/@chevrotain+regexp-to-ast@11.0.3/node_modules/@chevrotain/regexp-to-ast/lib/src/api.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/.pnpm/@chevrotain+regexp-to-ast@11.0.3/node_modules/@chevrotain/regexp-to-ast/lib/src/base-regexp-visitor.js":
/*!************************************************************************************************************************************!*\
  !*** ../node_modules/.pnpm/@chevrotain+regexp-to-ast@11.0.3/node_modules/@chevrotain/regexp-to-ast/lib/src/base-regexp-visitor.js ***!
  \************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseRegExpVisitor: () => (/* binding */ BaseRegExpVisitor)\n/* harmony export */ });\nclass BaseRegExpVisitor {\n    visitChildren(node) {\n        for (const key in node) {\n            const child = node[key];\n            /* istanbul ignore else */\n            if (node.hasOwnProperty(key)) {\n                if (child.type !== undefined) {\n                    this.visit(child);\n                }\n                else if (Array.isArray(child)) {\n                    child.forEach((subChild) => {\n                        this.visit(subChild);\n                    }, this);\n                }\n            }\n        }\n    }\n    visit(node) {\n        switch (node.type) {\n            case \"Pattern\":\n                this.visitPattern(node);\n                break;\n            case \"Flags\":\n                this.visitFlags(node);\n                break;\n            case \"Disjunction\":\n                this.visitDisjunction(node);\n                break;\n            case \"Alternative\":\n                this.visitAlternative(node);\n                break;\n            case \"StartAnchor\":\n                this.visitStartAnchor(node);\n                break;\n            case \"EndAnchor\":\n                this.visitEndAnchor(node);\n                break;\n            case \"WordBoundary\":\n                this.visitWordBoundary(node);\n                break;\n            case \"NonWordBoundary\":\n                this.visitNonWordBoundary(node);\n                break;\n            case \"Lookahead\":\n                this.visitLookahead(node);\n                break;\n            case \"NegativeLookahead\":\n                this.visitNegativeLookahead(node);\n                break;\n            case \"Character\":\n                this.visitCharacter(node);\n                break;\n            case \"Set\":\n                this.visitSet(node);\n                break;\n            case \"Group\":\n                this.visitGroup(node);\n                break;\n            case \"GroupBackReference\":\n                this.visitGroupBackReference(node);\n                break;\n            case \"Quantifier\":\n                this.visitQuantifier(node);\n                break;\n        }\n        this.visitChildren(node);\n    }\n    visitPattern(node) { }\n    visitFlags(node) { }\n    visitDisjunction(node) { }\n    visitAlternative(node) { }\n    // Assertion\n    visitStartAnchor(node) { }\n    visitEndAnchor(node) { }\n    visitWordBoundary(node) { }\n    visitNonWordBoundary(node) { }\n    visitLookahead(node) { }\n    visitNegativeLookahead(node) { }\n    // atoms\n    visitCharacter(node) { }\n    visitSet(node) { }\n    visitGroup(node) { }\n    visitGroupBackReference(node) { }\n    visitQuantifier(node) { }\n}\n//# sourceMappingURL=base-regexp-visitor.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BjaGV2cm90YWluK3JlZ2V4cC10by1hc3RAMTEuMC4zL25vZGVfbW9kdWxlcy9AY2hldnJvdGFpbi9yZWdleHAtdG8tYXN0L2xpYi9zcmMvYmFzZS1yZWdleHAtdmlzaXRvci5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvZXRoYW5raW0vTmVzdG9yL21lZGZldGNoLmpzL25vZGVfbW9kdWxlcy8ucG5wbS9AY2hldnJvdGFpbityZWdleHAtdG8tYXN0QDExLjAuMy9ub2RlX21vZHVsZXMvQGNoZXZyb3RhaW4vcmVnZXhwLXRvLWFzdC9saWIvc3JjL2Jhc2UtcmVnZXhwLXZpc2l0b3IuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNsYXNzIEJhc2VSZWdFeHBWaXNpdG9yIHtcbiAgICB2aXNpdENoaWxkcmVuKG5vZGUpIHtcbiAgICAgICAgZm9yIChjb25zdCBrZXkgaW4gbm9kZSkge1xuICAgICAgICAgICAgY29uc3QgY2hpbGQgPSBub2RlW2tleV07XG4gICAgICAgICAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL1xuICAgICAgICAgICAgaWYgKG5vZGUuaGFzT3duUHJvcGVydHkoa2V5KSkge1xuICAgICAgICAgICAgICAgIGlmIChjaGlsZC50eXBlICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy52aXNpdChjaGlsZCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKEFycmF5LmlzQXJyYXkoY2hpbGQpKSB7XG4gICAgICAgICAgICAgICAgICAgIGNoaWxkLmZvckVhY2goKHN1YkNoaWxkKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnZpc2l0KHN1YkNoaWxkKTtcbiAgICAgICAgICAgICAgICAgICAgfSwgdGhpcyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHZpc2l0KG5vZGUpIHtcbiAgICAgICAgc3dpdGNoIChub2RlLnR5cGUpIHtcbiAgICAgICAgICAgIGNhc2UgXCJQYXR0ZXJuXCI6XG4gICAgICAgICAgICAgICAgdGhpcy52aXNpdFBhdHRlcm4obm9kZSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwiRmxhZ3NcIjpcbiAgICAgICAgICAgICAgICB0aGlzLnZpc2l0RmxhZ3Mobm9kZSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwiRGlzanVuY3Rpb25cIjpcbiAgICAgICAgICAgICAgICB0aGlzLnZpc2l0RGlzanVuY3Rpb24obm9kZSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwiQWx0ZXJuYXRpdmVcIjpcbiAgICAgICAgICAgICAgICB0aGlzLnZpc2l0QWx0ZXJuYXRpdmUobm9kZSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwiU3RhcnRBbmNob3JcIjpcbiAgICAgICAgICAgICAgICB0aGlzLnZpc2l0U3RhcnRBbmNob3Iobm9kZSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwiRW5kQW5jaG9yXCI6XG4gICAgICAgICAgICAgICAgdGhpcy52aXNpdEVuZEFuY2hvcihub2RlKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgXCJXb3JkQm91bmRhcnlcIjpcbiAgICAgICAgICAgICAgICB0aGlzLnZpc2l0V29yZEJvdW5kYXJ5KG5vZGUpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBcIk5vbldvcmRCb3VuZGFyeVwiOlxuICAgICAgICAgICAgICAgIHRoaXMudmlzaXROb25Xb3JkQm91bmRhcnkobm9kZSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwiTG9va2FoZWFkXCI6XG4gICAgICAgICAgICAgICAgdGhpcy52aXNpdExvb2thaGVhZChub2RlKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgXCJOZWdhdGl2ZUxvb2thaGVhZFwiOlxuICAgICAgICAgICAgICAgIHRoaXMudmlzaXROZWdhdGl2ZUxvb2thaGVhZChub2RlKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgXCJDaGFyYWN0ZXJcIjpcbiAgICAgICAgICAgICAgICB0aGlzLnZpc2l0Q2hhcmFjdGVyKG5vZGUpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBcIlNldFwiOlxuICAgICAgICAgICAgICAgIHRoaXMudmlzaXRTZXQobm9kZSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwiR3JvdXBcIjpcbiAgICAgICAgICAgICAgICB0aGlzLnZpc2l0R3JvdXAobm9kZSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIFwiR3JvdXBCYWNrUmVmZXJlbmNlXCI6XG4gICAgICAgICAgICAgICAgdGhpcy52aXNpdEdyb3VwQmFja1JlZmVyZW5jZShub2RlKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgXCJRdWFudGlmaWVyXCI6XG4gICAgICAgICAgICAgICAgdGhpcy52aXNpdFF1YW50aWZpZXIobm9kZSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy52aXNpdENoaWxkcmVuKG5vZGUpO1xuICAgIH1cbiAgICB2aXNpdFBhdHRlcm4obm9kZSkgeyB9XG4gICAgdmlzaXRGbGFncyhub2RlKSB7IH1cbiAgICB2aXNpdERpc2p1bmN0aW9uKG5vZGUpIHsgfVxuICAgIHZpc2l0QWx0ZXJuYXRpdmUobm9kZSkgeyB9XG4gICAgLy8gQXNzZXJ0aW9uXG4gICAgdmlzaXRTdGFydEFuY2hvcihub2RlKSB7IH1cbiAgICB2aXNpdEVuZEFuY2hvcihub2RlKSB7IH1cbiAgICB2aXNpdFdvcmRCb3VuZGFyeShub2RlKSB7IH1cbiAgICB2aXNpdE5vbldvcmRCb3VuZGFyeShub2RlKSB7IH1cbiAgICB2aXNpdExvb2thaGVhZChub2RlKSB7IH1cbiAgICB2aXNpdE5lZ2F0aXZlTG9va2FoZWFkKG5vZGUpIHsgfVxuICAgIC8vIGF0b21zXG4gICAgdmlzaXRDaGFyYWN0ZXIobm9kZSkgeyB9XG4gICAgdmlzaXRTZXQobm9kZSkgeyB9XG4gICAgdmlzaXRHcm91cChub2RlKSB7IH1cbiAgICB2aXNpdEdyb3VwQmFja1JlZmVyZW5jZShub2RlKSB7IH1cbiAgICB2aXNpdFF1YW50aWZpZXIobm9kZSkgeyB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1iYXNlLXJlZ2V4cC12aXNpdG9yLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/.pnpm/@chevrotain+regexp-to-ast@11.0.3/node_modules/@chevrotain/regexp-to-ast/lib/src/base-regexp-visitor.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/.pnpm/@chevrotain+regexp-to-ast@11.0.3/node_modules/@chevrotain/regexp-to-ast/lib/src/character-classes.js":
/*!**********************************************************************************************************************************!*\
  !*** ../node_modules/.pnpm/@chevrotain+regexp-to-ast@11.0.3/node_modules/@chevrotain/regexp-to-ast/lib/src/character-classes.js ***!
  \**********************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   digitsCharCodes: () => (/* binding */ digitsCharCodes),\n/* harmony export */   whitespaceCodes: () => (/* binding */ whitespaceCodes),\n/* harmony export */   wordCharCodes: () => (/* binding */ wordCharCodes)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/../node_modules/.pnpm/@chevrotain+regexp-to-ast@11.0.3/node_modules/@chevrotain/regexp-to-ast/lib/src/utils.js\");\n\nconst digitsCharCodes = [];\nfor (let i = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.cc)(\"0\"); i <= (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.cc)(\"9\"); i++) {\n    digitsCharCodes.push(i);\n}\nconst wordCharCodes = [(0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.cc)(\"_\")].concat(digitsCharCodes);\nfor (let i = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.cc)(\"a\"); i <= (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.cc)(\"z\"); i++) {\n    wordCharCodes.push(i);\n}\nfor (let i = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.cc)(\"A\"); i <= (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.cc)(\"Z\"); i++) {\n    wordCharCodes.push(i);\n}\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#character-classes\nconst whitespaceCodes = [\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.cc)(\" \"),\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.cc)(\"\\f\"),\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.cc)(\"\\n\"),\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.cc)(\"\\r\"),\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.cc)(\"\\t\"),\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.cc)(\"\\v\"),\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.cc)(\"\\t\"),\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.cc)(\"\\u00a0\"),\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.cc)(\"\\u1680\"),\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.cc)(\"\\u2000\"),\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.cc)(\"\\u2001\"),\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.cc)(\"\\u2002\"),\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.cc)(\"\\u2003\"),\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.cc)(\"\\u2004\"),\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.cc)(\"\\u2005\"),\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.cc)(\"\\u2006\"),\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.cc)(\"\\u2007\"),\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.cc)(\"\\u2008\"),\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.cc)(\"\\u2009\"),\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.cc)(\"\\u200a\"),\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.cc)(\"\\u2028\"),\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.cc)(\"\\u2029\"),\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.cc)(\"\\u202f\"),\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.cc)(\"\\u205f\"),\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.cc)(\"\\u3000\"),\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.cc)(\"\\ufeff\"),\n];\n//# sourceMappingURL=character-classes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BjaGV2cm90YWluK3JlZ2V4cC10by1hc3RAMTEuMC4zL25vZGVfbW9kdWxlcy9AY2hldnJvdGFpbi9yZWdleHAtdG8tYXN0L2xpYi9zcmMvY2hhcmFjdGVyLWNsYXNzZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFnQztBQUN6QjtBQUNQLGFBQWEsNkNBQUUsT0FBTyxLQUFLLDZDQUFFLE9BQU87QUFDcEM7QUFDQTtBQUNPLHVCQUF1Qiw2Q0FBRTtBQUNoQyxhQUFhLDZDQUFFLE9BQU8sS0FBSyw2Q0FBRSxPQUFPO0FBQ3BDO0FBQ0E7QUFDQSxhQUFhLDZDQUFFLE9BQU8sS0FBSyw2Q0FBRSxPQUFPO0FBQ3BDO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsSUFBSSw2Q0FBRTtBQUNOLElBQUksNkNBQUU7QUFDTixJQUFJLDZDQUFFO0FBQ04sSUFBSSw2Q0FBRTtBQUNOLElBQUksNkNBQUU7QUFDTixJQUFJLDZDQUFFO0FBQ04sSUFBSSw2Q0FBRTtBQUNOLElBQUksNkNBQUU7QUFDTixJQUFJLDZDQUFFO0FBQ04sSUFBSSw2Q0FBRTtBQUNOLElBQUksNkNBQUU7QUFDTixJQUFJLDZDQUFFO0FBQ04sSUFBSSw2Q0FBRTtBQUNOLElBQUksNkNBQUU7QUFDTixJQUFJLDZDQUFFO0FBQ04sSUFBSSw2Q0FBRTtBQUNOLElBQUksNkNBQUU7QUFDTixJQUFJLDZDQUFFO0FBQ04sSUFBSSw2Q0FBRTtBQUNOLElBQUksNkNBQUU7QUFDTixJQUFJLDZDQUFFO0FBQ04sSUFBSSw2Q0FBRTtBQUNOLElBQUksNkNBQUU7QUFDTixJQUFJLDZDQUFFO0FBQ04sSUFBSSw2Q0FBRTtBQUNOLElBQUksNkNBQUU7QUFDTjtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvZXRoYW5raW0vTmVzdG9yL21lZGZldGNoLmpzL25vZGVfbW9kdWxlcy8ucG5wbS9AY2hldnJvdGFpbityZWdleHAtdG8tYXN0QDExLjAuMy9ub2RlX21vZHVsZXMvQGNoZXZyb3RhaW4vcmVnZXhwLXRvLWFzdC9saWIvc3JjL2NoYXJhY3Rlci1jbGFzc2VzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNjIH0gZnJvbSBcIi4vdXRpbHMuanNcIjtcbmV4cG9ydCBjb25zdCBkaWdpdHNDaGFyQ29kZXMgPSBbXTtcbmZvciAobGV0IGkgPSBjYyhcIjBcIik7IGkgPD0gY2MoXCI5XCIpOyBpKyspIHtcbiAgICBkaWdpdHNDaGFyQ29kZXMucHVzaChpKTtcbn1cbmV4cG9ydCBjb25zdCB3b3JkQ2hhckNvZGVzID0gW2NjKFwiX1wiKV0uY29uY2F0KGRpZ2l0c0NoYXJDb2Rlcyk7XG5mb3IgKGxldCBpID0gY2MoXCJhXCIpOyBpIDw9IGNjKFwielwiKTsgaSsrKSB7XG4gICAgd29yZENoYXJDb2Rlcy5wdXNoKGkpO1xufVxuZm9yIChsZXQgaSA9IGNjKFwiQVwiKTsgaSA8PSBjYyhcIlpcIik7IGkrKykge1xuICAgIHdvcmRDaGFyQ29kZXMucHVzaChpKTtcbn1cbi8vIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0phdmFTY3JpcHQvUmVmZXJlbmNlL0dsb2JhbF9PYmplY3RzL1JlZ0V4cCNjaGFyYWN0ZXItY2xhc3Nlc1xuZXhwb3J0IGNvbnN0IHdoaXRlc3BhY2VDb2RlcyA9IFtcbiAgICBjYyhcIiBcIiksXG4gICAgY2MoXCJcXGZcIiksXG4gICAgY2MoXCJcXG5cIiksXG4gICAgY2MoXCJcXHJcIiksXG4gICAgY2MoXCJcXHRcIiksXG4gICAgY2MoXCJcXHZcIiksXG4gICAgY2MoXCJcXHRcIiksXG4gICAgY2MoXCJcXHUwMGEwXCIpLFxuICAgIGNjKFwiXFx1MTY4MFwiKSxcbiAgICBjYyhcIlxcdTIwMDBcIiksXG4gICAgY2MoXCJcXHUyMDAxXCIpLFxuICAgIGNjKFwiXFx1MjAwMlwiKSxcbiAgICBjYyhcIlxcdTIwMDNcIiksXG4gICAgY2MoXCJcXHUyMDA0XCIpLFxuICAgIGNjKFwiXFx1MjAwNVwiKSxcbiAgICBjYyhcIlxcdTIwMDZcIiksXG4gICAgY2MoXCJcXHUyMDA3XCIpLFxuICAgIGNjKFwiXFx1MjAwOFwiKSxcbiAgICBjYyhcIlxcdTIwMDlcIiksXG4gICAgY2MoXCJcXHUyMDBhXCIpLFxuICAgIGNjKFwiXFx1MjAyOFwiKSxcbiAgICBjYyhcIlxcdTIwMjlcIiksXG4gICAgY2MoXCJcXHUyMDJmXCIpLFxuICAgIGNjKFwiXFx1MjA1ZlwiKSxcbiAgICBjYyhcIlxcdTMwMDBcIiksXG4gICAgY2MoXCJcXHVmZWZmXCIpLFxuXTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNoYXJhY3Rlci1jbGFzc2VzLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/.pnpm/@chevrotain+regexp-to-ast@11.0.3/node_modules/@chevrotain/regexp-to-ast/lib/src/character-classes.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/.pnpm/@chevrotain+regexp-to-ast@11.0.3/node_modules/@chevrotain/regexp-to-ast/lib/src/regexp-parser.js":
/*!******************************************************************************************************************************!*\
  !*** ../node_modules/.pnpm/@chevrotain+regexp-to-ast@11.0.3/node_modules/@chevrotain/regexp-to-ast/lib/src/regexp-parser.js ***!
  \******************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RegExpParser: () => (/* binding */ RegExpParser)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/../node_modules/.pnpm/@chevrotain+regexp-to-ast@11.0.3/node_modules/@chevrotain/regexp-to-ast/lib/src/utils.js\");\n/* harmony import */ var _character_classes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./character-classes.js */ \"(ssr)/../node_modules/.pnpm/@chevrotain+regexp-to-ast@11.0.3/node_modules/@chevrotain/regexp-to-ast/lib/src/character-classes.js\");\n\n\n// consts and utilities\nconst hexDigitPattern = /[0-9a-fA-F]/;\nconst decimalPattern = /[0-9]/;\nconst decimalPatternNoZero = /[1-9]/;\n// https://hackernoon.com/the-madness-of-parsing-real-world-javascript-regexps-d9ee336df983\n// https://www.ecma-international.org/ecma-262/8.0/index.html#prod-Pattern\nclass RegExpParser {\n    constructor() {\n        this.idx = 0;\n        this.input = \"\";\n        this.groupIdx = 0;\n    }\n    saveState() {\n        return {\n            idx: this.idx,\n            input: this.input,\n            groupIdx: this.groupIdx,\n        };\n    }\n    restoreState(newState) {\n        this.idx = newState.idx;\n        this.input = newState.input;\n        this.groupIdx = newState.groupIdx;\n    }\n    pattern(input) {\n        // parser state\n        this.idx = 0;\n        this.input = input;\n        this.groupIdx = 0;\n        this.consumeChar(\"/\");\n        const value = this.disjunction();\n        this.consumeChar(\"/\");\n        const flags = {\n            type: \"Flags\",\n            loc: { begin: this.idx, end: input.length },\n            global: false,\n            ignoreCase: false,\n            multiLine: false,\n            unicode: false,\n            sticky: false,\n        };\n        while (this.isRegExpFlag()) {\n            switch (this.popChar()) {\n                case \"g\":\n                    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.addFlag)(flags, \"global\");\n                    break;\n                case \"i\":\n                    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.addFlag)(flags, \"ignoreCase\");\n                    break;\n                case \"m\":\n                    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.addFlag)(flags, \"multiLine\");\n                    break;\n                case \"u\":\n                    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.addFlag)(flags, \"unicode\");\n                    break;\n                case \"y\":\n                    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.addFlag)(flags, \"sticky\");\n                    break;\n            }\n        }\n        if (this.idx !== this.input.length) {\n            throw Error(\"Redundant input: \" + this.input.substring(this.idx));\n        }\n        return {\n            type: \"Pattern\",\n            flags: flags,\n            value: value,\n            loc: this.loc(0),\n        };\n    }\n    disjunction() {\n        const alts = [];\n        const begin = this.idx;\n        alts.push(this.alternative());\n        while (this.peekChar() === \"|\") {\n            this.consumeChar(\"|\");\n            alts.push(this.alternative());\n        }\n        return { type: \"Disjunction\", value: alts, loc: this.loc(begin) };\n    }\n    alternative() {\n        const terms = [];\n        const begin = this.idx;\n        while (this.isTerm()) {\n            terms.push(this.term());\n        }\n        return { type: \"Alternative\", value: terms, loc: this.loc(begin) };\n    }\n    term() {\n        if (this.isAssertion()) {\n            return this.assertion();\n        }\n        else {\n            return this.atom();\n        }\n    }\n    assertion() {\n        const begin = this.idx;\n        switch (this.popChar()) {\n            case \"^\":\n                return {\n                    type: \"StartAnchor\",\n                    loc: this.loc(begin),\n                };\n            case \"$\":\n                return { type: \"EndAnchor\", loc: this.loc(begin) };\n            // '\\b' or '\\B'\n            case \"\\\\\":\n                switch (this.popChar()) {\n                    case \"b\":\n                        return {\n                            type: \"WordBoundary\",\n                            loc: this.loc(begin),\n                        };\n                    case \"B\":\n                        return {\n                            type: \"NonWordBoundary\",\n                            loc: this.loc(begin),\n                        };\n                }\n                // istanbul ignore next\n                throw Error(\"Invalid Assertion Escape\");\n            // '(?=' or '(?!'\n            case \"(\":\n                this.consumeChar(\"?\");\n                let type;\n                switch (this.popChar()) {\n                    case \"=\":\n                        type = \"Lookahead\";\n                        break;\n                    case \"!\":\n                        type = \"NegativeLookahead\";\n                        break;\n                }\n                (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.ASSERT_EXISTS)(type);\n                const disjunction = this.disjunction();\n                this.consumeChar(\")\");\n                return {\n                    type: type,\n                    value: disjunction,\n                    loc: this.loc(begin),\n                };\n        }\n        // istanbul ignore next\n        return (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.ASSERT_NEVER_REACH_HERE)();\n    }\n    quantifier(isBacktracking = false) {\n        let range = undefined;\n        const begin = this.idx;\n        switch (this.popChar()) {\n            case \"*\":\n                range = {\n                    atLeast: 0,\n                    atMost: Infinity,\n                };\n                break;\n            case \"+\":\n                range = {\n                    atLeast: 1,\n                    atMost: Infinity,\n                };\n                break;\n            case \"?\":\n                range = {\n                    atLeast: 0,\n                    atMost: 1,\n                };\n                break;\n            case \"{\":\n                const atLeast = this.integerIncludingZero();\n                switch (this.popChar()) {\n                    case \"}\":\n                        range = {\n                            atLeast: atLeast,\n                            atMost: atLeast,\n                        };\n                        break;\n                    case \",\":\n                        let atMost;\n                        if (this.isDigit()) {\n                            atMost = this.integerIncludingZero();\n                            range = {\n                                atLeast: atLeast,\n                                atMost: atMost,\n                            };\n                        }\n                        else {\n                            range = {\n                                atLeast: atLeast,\n                                atMost: Infinity,\n                            };\n                        }\n                        this.consumeChar(\"}\");\n                        break;\n                }\n                // throwing exceptions from \"ASSERT_EXISTS\" during backtracking\n                // causes severe performance degradations\n                if (isBacktracking === true && range === undefined) {\n                    return undefined;\n                }\n                (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.ASSERT_EXISTS)(range);\n                break;\n        }\n        // throwing exceptions from \"ASSERT_EXISTS\" during backtracking\n        // causes severe performance degradations\n        if (isBacktracking === true && range === undefined) {\n            return undefined;\n        }\n        // istanbul ignore else\n        if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.ASSERT_EXISTS)(range)) {\n            if (this.peekChar(0) === \"?\") {\n                this.consumeChar(\"?\");\n                range.greedy = false;\n            }\n            else {\n                range.greedy = true;\n            }\n            range.type = \"Quantifier\";\n            range.loc = this.loc(begin);\n            return range;\n        }\n    }\n    atom() {\n        let atom;\n        const begin = this.idx;\n        switch (this.peekChar()) {\n            case \".\":\n                atom = this.dotAll();\n                break;\n            case \"\\\\\":\n                atom = this.atomEscape();\n                break;\n            case \"[\":\n                atom = this.characterClass();\n                break;\n            case \"(\":\n                atom = this.group();\n                break;\n        }\n        if (atom === undefined && this.isPatternCharacter()) {\n            atom = this.patternCharacter();\n        }\n        // istanbul ignore else\n        if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.ASSERT_EXISTS)(atom)) {\n            atom.loc = this.loc(begin);\n            if (this.isQuantifier()) {\n                atom.quantifier = this.quantifier();\n            }\n            return atom;\n        }\n        // istanbul ignore next\n        return (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.ASSERT_NEVER_REACH_HERE)();\n    }\n    dotAll() {\n        this.consumeChar(\".\");\n        return {\n            type: \"Set\",\n            complement: true,\n            value: [(0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.cc)(\"\\n\"), (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.cc)(\"\\r\"), (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.cc)(\"\\u2028\"), (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.cc)(\"\\u2029\")],\n        };\n    }\n    atomEscape() {\n        this.consumeChar(\"\\\\\");\n        switch (this.peekChar()) {\n            case \"1\":\n            case \"2\":\n            case \"3\":\n            case \"4\":\n            case \"5\":\n            case \"6\":\n            case \"7\":\n            case \"8\":\n            case \"9\":\n                return this.decimalEscapeAtom();\n            case \"d\":\n            case \"D\":\n            case \"s\":\n            case \"S\":\n            case \"w\":\n            case \"W\":\n                return this.characterClassEscape();\n            case \"f\":\n            case \"n\":\n            case \"r\":\n            case \"t\":\n            case \"v\":\n                return this.controlEscapeAtom();\n            case \"c\":\n                return this.controlLetterEscapeAtom();\n            case \"0\":\n                return this.nulCharacterAtom();\n            case \"x\":\n                return this.hexEscapeSequenceAtom();\n            case \"u\":\n                return this.regExpUnicodeEscapeSequenceAtom();\n            default:\n                return this.identityEscapeAtom();\n        }\n    }\n    decimalEscapeAtom() {\n        const value = this.positiveInteger();\n        return { type: \"GroupBackReference\", value: value };\n    }\n    characterClassEscape() {\n        let set;\n        let complement = false;\n        switch (this.popChar()) {\n            case \"d\":\n                set = _character_classes_js__WEBPACK_IMPORTED_MODULE_1__.digitsCharCodes;\n                break;\n            case \"D\":\n                set = _character_classes_js__WEBPACK_IMPORTED_MODULE_1__.digitsCharCodes;\n                complement = true;\n                break;\n            case \"s\":\n                set = _character_classes_js__WEBPACK_IMPORTED_MODULE_1__.whitespaceCodes;\n                break;\n            case \"S\":\n                set = _character_classes_js__WEBPACK_IMPORTED_MODULE_1__.whitespaceCodes;\n                complement = true;\n                break;\n            case \"w\":\n                set = _character_classes_js__WEBPACK_IMPORTED_MODULE_1__.wordCharCodes;\n                break;\n            case \"W\":\n                set = _character_classes_js__WEBPACK_IMPORTED_MODULE_1__.wordCharCodes;\n                complement = true;\n                break;\n        }\n        // istanbul ignore else\n        if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.ASSERT_EXISTS)(set)) {\n            return { type: \"Set\", value: set, complement: complement };\n        }\n        // istanbul ignore next\n        return (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.ASSERT_NEVER_REACH_HERE)();\n    }\n    controlEscapeAtom() {\n        let escapeCode;\n        switch (this.popChar()) {\n            case \"f\":\n                escapeCode = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.cc)(\"\\f\");\n                break;\n            case \"n\":\n                escapeCode = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.cc)(\"\\n\");\n                break;\n            case \"r\":\n                escapeCode = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.cc)(\"\\r\");\n                break;\n            case \"t\":\n                escapeCode = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.cc)(\"\\t\");\n                break;\n            case \"v\":\n                escapeCode = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.cc)(\"\\v\");\n                break;\n        }\n        // istanbul ignore else\n        if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.ASSERT_EXISTS)(escapeCode)) {\n            return { type: \"Character\", value: escapeCode };\n        }\n        // istanbul ignore next\n        return (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.ASSERT_NEVER_REACH_HERE)();\n    }\n    controlLetterEscapeAtom() {\n        this.consumeChar(\"c\");\n        const letter = this.popChar();\n        if (/[a-zA-Z]/.test(letter) === false) {\n            throw Error(\"Invalid \");\n        }\n        const letterCode = letter.toUpperCase().charCodeAt(0) - 64;\n        return { type: \"Character\", value: letterCode };\n    }\n    nulCharacterAtom() {\n        // TODO implement '[lookahead ∉ DecimalDigit]'\n        // TODO: for the deprecated octal escape sequence\n        this.consumeChar(\"0\");\n        return { type: \"Character\", value: (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.cc)(\"\\0\") };\n    }\n    hexEscapeSequenceAtom() {\n        this.consumeChar(\"x\");\n        return this.parseHexDigits(2);\n    }\n    regExpUnicodeEscapeSequenceAtom() {\n        this.consumeChar(\"u\");\n        return this.parseHexDigits(4);\n    }\n    identityEscapeAtom() {\n        // TODO: implement \"SourceCharacter but not UnicodeIDContinue\"\n        // // http://unicode.org/reports/tr31/#Specific_Character_Adjustments\n        const escapedChar = this.popChar();\n        return { type: \"Character\", value: (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.cc)(escapedChar) };\n    }\n    classPatternCharacterAtom() {\n        switch (this.peekChar()) {\n            // istanbul ignore next\n            case \"\\n\":\n            // istanbul ignore next\n            case \"\\r\":\n            // istanbul ignore next\n            case \"\\u2028\":\n            // istanbul ignore next\n            case \"\\u2029\":\n            // istanbul ignore next\n            case \"\\\\\":\n            // istanbul ignore next\n            case \"]\":\n                throw Error(\"TBD\");\n            default:\n                const nextChar = this.popChar();\n                return { type: \"Character\", value: (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.cc)(nextChar) };\n        }\n    }\n    characterClass() {\n        const set = [];\n        let complement = false;\n        this.consumeChar(\"[\");\n        if (this.peekChar(0) === \"^\") {\n            this.consumeChar(\"^\");\n            complement = true;\n        }\n        while (this.isClassAtom()) {\n            const from = this.classAtom();\n            const isFromSingleChar = from.type === \"Character\";\n            if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.isCharacter)(from) && this.isRangeDash()) {\n                this.consumeChar(\"-\");\n                const to = this.classAtom();\n                const isToSingleChar = to.type === \"Character\";\n                // a range can only be used when both sides are single characters\n                if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.isCharacter)(to)) {\n                    if (to.value < from.value) {\n                        throw Error(\"Range out of order in character class\");\n                    }\n                    set.push({ from: from.value, to: to.value });\n                }\n                else {\n                    // literal dash\n                    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.insertToSet)(from.value, set);\n                    set.push((0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.cc)(\"-\"));\n                    (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.insertToSet)(to.value, set);\n                }\n            }\n            else {\n                (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.insertToSet)(from.value, set);\n            }\n        }\n        this.consumeChar(\"]\");\n        return { type: \"Set\", complement: complement, value: set };\n    }\n    classAtom() {\n        switch (this.peekChar()) {\n            // istanbul ignore next\n            case \"]\":\n            // istanbul ignore next\n            case \"\\n\":\n            // istanbul ignore next\n            case \"\\r\":\n            // istanbul ignore next\n            case \"\\u2028\":\n            // istanbul ignore next\n            case \"\\u2029\":\n                throw Error(\"TBD\");\n            case \"\\\\\":\n                return this.classEscape();\n            default:\n                return this.classPatternCharacterAtom();\n        }\n    }\n    classEscape() {\n        this.consumeChar(\"\\\\\");\n        switch (this.peekChar()) {\n            // Matches a backspace.\n            // (Not to be confused with \\b word boundary outside characterClass)\n            case \"b\":\n                this.consumeChar(\"b\");\n                return { type: \"Character\", value: (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.cc)(\"\\u0008\") };\n            case \"d\":\n            case \"D\":\n            case \"s\":\n            case \"S\":\n            case \"w\":\n            case \"W\":\n                return this.characterClassEscape();\n            case \"f\":\n            case \"n\":\n            case \"r\":\n            case \"t\":\n            case \"v\":\n                return this.controlEscapeAtom();\n            case \"c\":\n                return this.controlLetterEscapeAtom();\n            case \"0\":\n                return this.nulCharacterAtom();\n            case \"x\":\n                return this.hexEscapeSequenceAtom();\n            case \"u\":\n                return this.regExpUnicodeEscapeSequenceAtom();\n            default:\n                return this.identityEscapeAtom();\n        }\n    }\n    group() {\n        let capturing = true;\n        this.consumeChar(\"(\");\n        switch (this.peekChar(0)) {\n            case \"?\":\n                this.consumeChar(\"?\");\n                this.consumeChar(\":\");\n                capturing = false;\n                break;\n            default:\n                this.groupIdx++;\n                break;\n        }\n        const value = this.disjunction();\n        this.consumeChar(\")\");\n        const groupAst = {\n            type: \"Group\",\n            capturing: capturing,\n            value: value,\n        };\n        if (capturing) {\n            groupAst[\"idx\"] = this.groupIdx;\n        }\n        return groupAst;\n    }\n    positiveInteger() {\n        let number = this.popChar();\n        // istanbul ignore next - can't ever get here due to previous lookahead checks\n        // still implementing this error checking in case this ever changes.\n        if (decimalPatternNoZero.test(number) === false) {\n            throw Error(\"Expecting a positive integer\");\n        }\n        while (decimalPattern.test(this.peekChar(0))) {\n            number += this.popChar();\n        }\n        return parseInt(number, 10);\n    }\n    integerIncludingZero() {\n        let number = this.popChar();\n        if (decimalPattern.test(number) === false) {\n            throw Error(\"Expecting an integer\");\n        }\n        while (decimalPattern.test(this.peekChar(0))) {\n            number += this.popChar();\n        }\n        return parseInt(number, 10);\n    }\n    patternCharacter() {\n        const nextChar = this.popChar();\n        switch (nextChar) {\n            // istanbul ignore next\n            case \"\\n\":\n            // istanbul ignore next\n            case \"\\r\":\n            // istanbul ignore next\n            case \"\\u2028\":\n            // istanbul ignore next\n            case \"\\u2029\":\n            // istanbul ignore next\n            case \"^\":\n            // istanbul ignore next\n            case \"$\":\n            // istanbul ignore next\n            case \"\\\\\":\n            // istanbul ignore next\n            case \".\":\n            // istanbul ignore next\n            case \"*\":\n            // istanbul ignore next\n            case \"+\":\n            // istanbul ignore next\n            case \"?\":\n            // istanbul ignore next\n            case \"(\":\n            // istanbul ignore next\n            case \")\":\n            // istanbul ignore next\n            case \"[\":\n            // istanbul ignore next\n            case \"|\":\n                // istanbul ignore next\n                throw Error(\"TBD\");\n            default:\n                return { type: \"Character\", value: (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.cc)(nextChar) };\n        }\n    }\n    isRegExpFlag() {\n        switch (this.peekChar(0)) {\n            case \"g\":\n            case \"i\":\n            case \"m\":\n            case \"u\":\n            case \"y\":\n                return true;\n            default:\n                return false;\n        }\n    }\n    isRangeDash() {\n        return this.peekChar() === \"-\" && this.isClassAtom(1);\n    }\n    isDigit() {\n        return decimalPattern.test(this.peekChar(0));\n    }\n    isClassAtom(howMuch = 0) {\n        switch (this.peekChar(howMuch)) {\n            case \"]\":\n            case \"\\n\":\n            case \"\\r\":\n            case \"\\u2028\":\n            case \"\\u2029\":\n                return false;\n            default:\n                return true;\n        }\n    }\n    isTerm() {\n        return this.isAtom() || this.isAssertion();\n    }\n    isAtom() {\n        if (this.isPatternCharacter()) {\n            return true;\n        }\n        switch (this.peekChar(0)) {\n            case \".\":\n            case \"\\\\\": // atomEscape\n            case \"[\": // characterClass\n            // TODO: isAtom must be called before isAssertion - disambiguate\n            case \"(\": // group\n                return true;\n            default:\n                return false;\n        }\n    }\n    isAssertion() {\n        switch (this.peekChar(0)) {\n            case \"^\":\n            case \"$\":\n                return true;\n            // '\\b' or '\\B'\n            case \"\\\\\":\n                switch (this.peekChar(1)) {\n                    case \"b\":\n                    case \"B\":\n                        return true;\n                    default:\n                        return false;\n                }\n            // '(?=' or '(?!'\n            case \"(\":\n                return (this.peekChar(1) === \"?\" &&\n                    (this.peekChar(2) === \"=\" || this.peekChar(2) === \"!\"));\n            default:\n                return false;\n        }\n    }\n    isQuantifier() {\n        const prevState = this.saveState();\n        try {\n            return this.quantifier(true) !== undefined;\n        }\n        catch (e) {\n            return false;\n        }\n        finally {\n            this.restoreState(prevState);\n        }\n    }\n    isPatternCharacter() {\n        switch (this.peekChar()) {\n            case \"^\":\n            case \"$\":\n            case \"\\\\\":\n            case \".\":\n            case \"*\":\n            case \"+\":\n            case \"?\":\n            case \"(\":\n            case \")\":\n            case \"[\":\n            case \"|\":\n            case \"/\":\n            case \"\\n\":\n            case \"\\r\":\n            case \"\\u2028\":\n            case \"\\u2029\":\n                return false;\n            default:\n                return true;\n        }\n    }\n    parseHexDigits(howMany) {\n        let hexString = \"\";\n        for (let i = 0; i < howMany; i++) {\n            const hexChar = this.popChar();\n            if (hexDigitPattern.test(hexChar) === false) {\n                throw Error(\"Expecting a HexDecimal digits\");\n            }\n            hexString += hexChar;\n        }\n        const charCode = parseInt(hexString, 16);\n        return { type: \"Character\", value: charCode };\n    }\n    peekChar(howMuch = 0) {\n        return this.input[this.idx + howMuch];\n    }\n    popChar() {\n        const nextChar = this.peekChar(0);\n        this.consumeChar(undefined);\n        return nextChar;\n    }\n    consumeChar(char) {\n        if (char !== undefined && this.input[this.idx] !== char) {\n            throw Error(\"Expected: '\" +\n                char +\n                \"' but found: '\" +\n                this.input[this.idx] +\n                \"' at offset: \" +\n                this.idx);\n        }\n        if (this.idx >= this.input.length) {\n            throw Error(\"Unexpected end of input\");\n        }\n        this.idx++;\n    }\n    loc(begin) {\n        return { begin: begin, end: this.idx };\n    }\n}\n//# sourceMappingURL=regexp-parser.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/.pnpm/@chevrotain+regexp-to-ast@11.0.3/node_modules/@chevrotain/regexp-to-ast/lib/src/regexp-parser.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/.pnpm/@chevrotain+regexp-to-ast@11.0.3/node_modules/@chevrotain/regexp-to-ast/lib/src/utils.js":
/*!**********************************************************************************************************************!*\
  !*** ../node_modules/.pnpm/@chevrotain+regexp-to-ast@11.0.3/node_modules/@chevrotain/regexp-to-ast/lib/src/utils.js ***!
  \**********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ASSERT_EXISTS: () => (/* binding */ ASSERT_EXISTS),\n/* harmony export */   ASSERT_NEVER_REACH_HERE: () => (/* binding */ ASSERT_NEVER_REACH_HERE),\n/* harmony export */   addFlag: () => (/* binding */ addFlag),\n/* harmony export */   cc: () => (/* binding */ cc),\n/* harmony export */   insertToSet: () => (/* binding */ insertToSet),\n/* harmony export */   isCharacter: () => (/* binding */ isCharacter)\n/* harmony export */ });\nfunction cc(char) {\n    return char.charCodeAt(0);\n}\nfunction insertToSet(item, set) {\n    if (Array.isArray(item)) {\n        item.forEach(function (subItem) {\n            set.push(subItem);\n        });\n    }\n    else {\n        set.push(item);\n    }\n}\nfunction addFlag(flagObj, flagKey) {\n    if (flagObj[flagKey] === true) {\n        throw \"duplicate flag \" + flagKey;\n    }\n    const x = flagObj[flagKey];\n    flagObj[flagKey] = true;\n}\nfunction ASSERT_EXISTS(obj) {\n    // istanbul ignore next\n    if (obj === undefined) {\n        throw Error(\"Internal Error - Should never get here!\");\n    }\n    return true;\n}\n// istanbul ignore next\nfunction ASSERT_NEVER_REACH_HERE() {\n    throw Error(\"Internal Error - Should never get here!\");\n}\nfunction isCharacter(obj) {\n    return obj[\"type\"] === \"Character\";\n}\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BjaGV2cm90YWluK3JlZ2V4cC10by1hc3RAMTEuMC4zL25vZGVfbW9kdWxlcy9AY2hldnJvdGFpbi9yZWdleHAtdG8tYXN0L2xpYi9zcmMvdXRpbHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQU87QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvZXRoYW5raW0vTmVzdG9yL21lZGZldGNoLmpzL25vZGVfbW9kdWxlcy8ucG5wbS9AY2hldnJvdGFpbityZWdleHAtdG8tYXN0QDExLjAuMy9ub2RlX21vZHVsZXMvQGNoZXZyb3RhaW4vcmVnZXhwLXRvLWFzdC9saWIvc3JjL3V0aWxzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBjYyhjaGFyKSB7XG4gICAgcmV0dXJuIGNoYXIuY2hhckNvZGVBdCgwKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpbnNlcnRUb1NldChpdGVtLCBzZXQpIHtcbiAgICBpZiAoQXJyYXkuaXNBcnJheShpdGVtKSkge1xuICAgICAgICBpdGVtLmZvckVhY2goZnVuY3Rpb24gKHN1Ykl0ZW0pIHtcbiAgICAgICAgICAgIHNldC5wdXNoKHN1Ykl0ZW0pO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHNldC5wdXNoKGl0ZW0pO1xuICAgIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiBhZGRGbGFnKGZsYWdPYmosIGZsYWdLZXkpIHtcbiAgICBpZiAoZmxhZ09ialtmbGFnS2V5XSA9PT0gdHJ1ZSkge1xuICAgICAgICB0aHJvdyBcImR1cGxpY2F0ZSBmbGFnIFwiICsgZmxhZ0tleTtcbiAgICB9XG4gICAgY29uc3QgeCA9IGZsYWdPYmpbZmxhZ0tleV07XG4gICAgZmxhZ09ialtmbGFnS2V5XSA9IHRydWU7XG59XG5leHBvcnQgZnVuY3Rpb24gQVNTRVJUX0VYSVNUUyhvYmopIHtcbiAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgIGlmIChvYmogPT09IHVuZGVmaW5lZCkge1xuICAgICAgICB0aHJvdyBFcnJvcihcIkludGVybmFsIEVycm9yIC0gU2hvdWxkIG5ldmVyIGdldCBoZXJlIVwiKTtcbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG59XG4vLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuZXhwb3J0IGZ1bmN0aW9uIEFTU0VSVF9ORVZFUl9SRUFDSF9IRVJFKCkge1xuICAgIHRocm93IEVycm9yKFwiSW50ZXJuYWwgRXJyb3IgLSBTaG91bGQgbmV2ZXIgZ2V0IGhlcmUhXCIpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzQ2hhcmFjdGVyKG9iaikge1xuICAgIHJldHVybiBvYmpbXCJ0eXBlXCJdID09PSBcIkNoYXJhY3RlclwiO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXRpbHMuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/.pnpm/@chevrotain+regexp-to-ast@11.0.3/node_modules/@chevrotain/regexp-to-ast/lib/src/utils.js\n");

/***/ })

};
;