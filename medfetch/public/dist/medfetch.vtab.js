/*! For license information please see medfetch.vtab.js.LICENSE.txt */
var e={38:(e,t,n)=>{const i={},a=n(1231),{ResourceNode:r}=a;function o(e){return[].concat(...e)}i.raiseError=function(e,t){throw(t=t?t+": ":"")+e},i.assertOnlyOne=function(e,t){1!==e.length&&i.raiseError("Was expecting only one element but got "+JSON.stringify(e),t)},i.assertType=function(e,t,n){let a=this.valData(e);if(t.indexOf(typeof a)<0){let a=t.length>1?"one of "+t.join(", "):t[0];i.raiseError("Found type '"+typeof e+"' but was expecting "+a,n)}return a},i.isEmpty=function(e){return Array.isArray(e)&&0===e.length},i.isSome=function(e){return null!=e&&!i.isEmpty(e)},i.isTrue=function(e){return null!=e&&(!0===e||1===e.length&&!0===i.valData(e[0]))},i.isCapitalized=function(e){return e&&e[0]===e[0].toUpperCase()},i.flatten=function(e){return e.some((e=>e instanceof Promise))?Promise.all(e).then((e=>o(e))):o(e)},i.arraify=function(e){return Array.isArray(e)?e:i.isSome(e)?[e]:[]},i.resolveAndArraify=function(e){return e instanceof Promise?e.then((e=>i.arraify(e))):i.arraify(e)},i.valData=function(e){return e instanceof r?e.data:e},i.valDataConverted=function(e){return e instanceof r&&(e=e.convertData()),e},i.escapeStringForRegExp=function(e){return e.replace(/[-[\]{}()*+?.,\\/^$|#\s]/g,"\\$&")},i.pushFn=Function.prototype.apply.bind(Array.prototype.push),i.makeChildResNodes=function(e,t,n){let a,o,s=e.path+"."+t;if(n){let e=n.pathsDefinedElsewhere[s];e&&(s=e)}let l=n&&n.choiceTypePaths[s];if(l)for(let n of l){let i=t+n;if(a=e.data?.[i],o=e.data?.["_"+i],void 0!==a||void 0!==o){s+=n;break}}else a=e.data?.[t],o=e.data?.["_"+t],void 0===a&&void 0===o&&(a=e._data[t]),"extension"===t&&(s="Extension");let c,u=null;if(n&&(u=n.path2Type[s],s=n.path2TypeWithoutElements[s]||s),i.isSome(a)||i.isSome(o))if(Array.isArray(a)){c=a.map(((t,n)=>r.makeResNode(t,e,s,o&&o[n],u)));const t=o?.length||0;for(let n=a.length;n<t;++n)c.push(r.makeResNode(null,e,s,o[n],u))}else c=null==a&&Array.isArray(o)?o.map((t=>r.makeResNode(null,e,s,t,u))):[r.makeResNode(a,e,s,o,u)];else c=[];return c},e.exports=i},101:e=>{let t={weight:function(e){if(!1!==e&&!e)return[];const t=this.vars.scoreExt||this.processedVars.scoreExt,n=t?e=>e.url===t:e=>this.defaultScoreExts.includes(e.url),i=[],a=this.vars.questionnaire||this.processedVars.questionnaire?.data;return e.forEach((e=>{if(e?.data){const t=e.data.valueCoding;let r=t;if(!r){const t=Object.keys(e.data).find((e=>e.length>5&&e.startsWith("value")));r=t?e.data[t]:e._data?.extension?e._data:e.data}const o=r?.extension?.find(n)?.valueDecimal;if(void 0!==o)i.push(o);else if(t){const r=function(e){const t=[];for(;e.data?.linkId;)t.push(e.data.linkId),e=e.parentResNode;return t}(e.parentResNode);if(r.length){if(!a)throw new Error("%questionnaire is needed but not specified.");{const o=function(e,t){let n=e;for(let e=t.length-1;e>=0;--e)if(n=n.item?.find((n=>n.linkId===t[e])),!n)return null;return n}(a,r),s=o?.answerOption?.find((e=>e.valueCoding.code===t.code&&e.valueCoding.system===t.system));if(!s)throw new Error("Questionnaire answerOption with this linkId was not found: "+e.parentResNode.data.linkId+".");{const e=s.extension?.find(n)?.valueDecimal;void 0!==e&&i.push(e)}}}}}})),i}};e.exports=t},188:(e,t,n)=>{const{PredicateTransition:i}=n(7377),{Interval:a}=n(5897).Interval;class r extends Error{constructor(e){super(e.message),Error.captureStackTrace?Error.captureStackTrace(this,r):(new Error).stack,this.message=e.message,this.recognizer=e.recognizer,this.input=e.input,this.ctx=e.ctx,this.offendingToken=null,this.offendingState=-1,null!==this.recognizer&&(this.offendingState=this.recognizer.state)}getExpectedTokens(){return null!==this.recognizer?this.recognizer.atn.getExpectedTokens(this.offendingState,this.ctx):null}toString(){return this.message}}function o(e,t){return null!==t?t:"failed predicate: {"+e+"}?"}class s extends Error{constructor(){super(),Error.captureStackTrace(this,s)}}e.exports={RecognitionException:r,NoViableAltException:class extends r{constructor(e,t,n,i,a,r){r=r||e._ctx,i=i||e.getCurrentToken(),n=n||e.getCurrentToken(),t=t||e.getInputStream(),super({message:"",recognizer:e,input:t,ctx:r}),this.deadEndConfigs=a,this.startToken=n,this.offendingToken=i}},LexerNoViableAltException:class extends r{constructor(e,t,n,i){super({message:"",recognizer:e,input:t,ctx:null}),this.startIndex=n,this.deadEndConfigs=i}toString(){let e="";return this.startIndex>=0&&this.startIndex<this.input.size&&(e=this.input.getText(new a(this.startIndex,this.startIndex))),"LexerNoViableAltException"+e}},InputMismatchException:class extends r{constructor(e){super({message:"",recognizer:e,input:e.getInputStream(),ctx:e._ctx}),this.offendingToken=e.getCurrentToken()}},FailedPredicateException:class extends r{constructor(e,t,n){super({message:o(t,n||null),recognizer:e,input:e.getInputStream(),ctx:e._ctx});const a=e._interp.atn.states[e.state].transitions[0];a instanceof i?(this.ruleIndex=a.ruleIndex,this.predicateIndex=a.predIndex):(this.ruleIndex=0,this.predicateIndex=0),this.predicate=t,this.offendingToken=e.getCurrentToken()}},ParseCancellationException:s}},269:e=>{class t{constructor(e){this.terminologyUrl=e,this.invocationTable=t.invocationTable}static invocationTable={validateVS:{fn:t.validateVS,arity:{2:["String","AnySingletonAtRoot"],3:["String","AnySingletonAtRoot","String"]}}};static validateVS(e,t,i,a=""){!function(e){if(e?.split("&").find((e=>{const t=e.split("=");return t.length<=2&&t.find((e=>encodeURIComponent(decodeURIComponent(e))!==e))})))throw new Error(`"${e}" should be a valid URL-encoded string`)}(a);const r={Accept:"application/fhir+json; charset=utf-8","Content-Type":"application/fhir+json; charset=utf-8"};let o=new Headers({Accept:"application/fhir+json; charset=utf-8"});const s=`${e[0].terminologyUrl}/ValueSet/$validate-code`;let l;if(i.coding){const e={resourceType:"Parameters",parameter:[{name:"url",valueUri:t},{name:"codeableConcept",valueCodeableConcept:i}]};o=new Headers(r),l=fetch(s+(a?"?"+a:""),{method:"POST",headers:o,body:JSON.stringify(e)})}else if("string"==typeof i){const r=new URLSearchParams({url:t});l=fetch(`${e[0].terminologyUrl}/ValueSet?${r.toString()+(a?"&"+a:"")}`,{headers:o}).then((e=>e.json())).then((e=>{const r=1===e?.entry?.length&&(n(e.entry[0].resource.expansion?.contains)||n(e.entry[0].resource.compose?.include));if(r){const e=new URLSearchParams({url:t,code:i,system:r});return fetch(`${s}?${e.toString()+(a?"&"+a:"")}`,{headers:o})}throw new Error("The valueset does not have a single code system.")}))}else if(i.code){const e=new URLSearchParams({url:t??"",system:i.system??"",code:i.code});l=fetch(`${s}?${e.toString()+(a?"&"+a:"")}`,{headers:o})}return Promise.resolve(l).then((e=>e.json())).then((e=>{if(e?.parameter)return e;throw new Error(e)})).catch((()=>{const e=function(e,t){return"string"==typeof e?e+" - "+t:e.code?e.system+"|"+e.code+" - "+t:e.coding?e.coding.map((e=>e.system+"|"+e.code)).join(",")+" - "+t:void 0}(i,t);throw new Error("Failed to check membership: "+e)}))}}function n(e,t=void 0){if(e)for(let n=0;n<e.length;++n)if(t){if(t!==e[n].system){t=void 0;break}}else t=e[n].system;return t}e.exports=t},309:(e,t,n)=>{const i=n(4623);class a{constructor(e,t,n){this.dfa=e,this.literalNames=t||[],this.symbolicNames=n||[]}toString(){if(null===this.dfa.s0)return null;let e="";const t=this.dfa.sortedStates();for(let n=0;n<t.length;n++){const i=t[n];if(null!==i.edges){const t=i.edges.length;for(let n=0;n<t;n++){const t=i.edges[n]||null;null!==t&&2147483647!==t.stateNumber&&(e=e.concat(this.getStateString(i)),e=e.concat("-"),e=e.concat(this.getEdgeLabel(n)),e=e.concat("->"),e=e.concat(this.getStateString(t)),e=e.concat("\n"))}}}return 0===e.length?null:e}getEdgeLabel(e){return 0===e?"EOF":null!==this.literalNames||null!==this.symbolicNames?this.literalNames[e-1]||this.symbolicNames[e-1]:String.fromCharCode(e-1)}getStateString(e){const t=(e.isAcceptState?":":"")+"s"+e.stateNumber+(e.requiresFullContext?"^":"");return e.isAcceptState?null!==e.predicates?t+"=>"+i.arrayToString(e.predicates):t+"=>"+e.prediction.toString():t}}e.exports={DFASerializer:a,LexerDFASerializer:class extends a{constructor(e){super(e,null)}getEdgeLabel(e){return"'"+String.fromCharCode(e)+"'"}}}},403:(e,t,n)=>{const i=Function.prototype.call.bind(Array.prototype.slice);Number.isInteger=Number.isInteger||function(e){return"number"==typeof e&&isFinite(e)&&Math.floor(e)===e},String.prototype.startsWith||Object.defineProperty(String.prototype,"startsWith",{value:function(e,t){return t=t||0,this.indexOf(e,t)===t}}),String.prototype.endsWith||Object.defineProperty(String.prototype,"endsWith",{value:function(e,t){var n=this.toString();(void 0===t||t>n.length)&&(t=n.length),t-=e.length;var i=n.indexOf(e,t);return-1!==i&&i===t}}),String.prototype.includes||Object.defineProperty(String.prototype,"includes",{value:function(){return-1!==this.indexOf.apply(this,arguments)}}),Object.assign||Object.defineProperty(Object,"assign",{value:function(e){if(null==e)throw new TypeError("Cannot convert undefined or null to object");return i(arguments,1).reduce((function(e,t){return Object.keys(Object(t)).forEach((function(n){e[n]=t[n]})),e}),Object(e))}}),"undefined"==typeof btoa&&(n.g.btoa=function(e){return new Buffer.from(e,"binary").toString("base64")}),"undefined"==typeof atob&&(n.g.atob=function(e){return new Buffer.from(e,"base64").toString("binary")})},566:(e,t,n)=>{const{FP_Quantity:i,FP_Type:a}=n(1231),r=n(38),o={};function s(e,t){let n;if(l(e))n=[];else{if(1!==e.length)throw new Error("Unexpected collection"+JSON.stringify(e)+"; expected singleton of type number");{const i=r.valData(e[0]);if(null==i)n=[];else{if("number"!=typeof i)throw new Error("Expected number, but got "+JSON.stringify(i));n=t(i)}}}return n}function l(e){return"number"!=typeof e&&0===e.length}o.amp=function(e,t){return(e||"")+(t||"")},o.plus=function(e,t){let n;if(1===e.length&&1===t.length){const o=r.valDataConverted(e[0]),s=r.valDataConverted(t[0]);null==o||null==s?n=[]:"string"==typeof o&&"string"==typeof s?n=o+s:"number"==typeof o?"number"==typeof s?n=o+s:s instanceof i&&(n=new i(o,"'1'").plus(s)):o instanceof a&&(s instanceof i?n=o.plus(s):s instanceof a?n=s.plus(o):"number"==typeof s&&(n=o.plus(new i(s,"'1'"))))}if(void 0===n)throw new Error("Cannot "+JSON.stringify(e)+" + "+JSON.stringify(t));return n},o.minus=function(e,t){if(1===e.length&&1===t.length){const n=r.valDataConverted(e[0]),o=r.valDataConverted(t[0]);if(null==n||null==o)return[];if("number"==typeof n){if("number"==typeof o)return n-o;if(o instanceof i)return new i(n,"'1'").plus(new i(-o.value,o.unit))}if(n instanceof a){if(o instanceof i)return n.plus(new i(-o.value,o.unit));if("number"==typeof o)return n.plus(new i(-o,"'1'"))}}throw new Error("Cannot "+JSON.stringify(e)+" - "+JSON.stringify(t))},o.mul=function(e,t){if(1===e.length&&1===t.length){const n=r.valDataConverted(e[0]),o=r.valDataConverted(t[0]);if(null==n||null==o)return[];if("number"==typeof n){if("number"==typeof o)return n*o;if(o instanceof i)return new i(n,"'1'").mul(o)}if(n instanceof a){if(o instanceof i)return n.mul(o);if("number"==typeof o)return n.mul(new i(o,"'1'"))}}throw new Error("Cannot "+JSON.stringify(e)+" * "+JSON.stringify(t))},o.div=function(e,t){if(1===e.length&&1===t.length){const n=r.valDataConverted(e[0]),o=r.valDataConverted(t[0]);if(null==n||null==o)return[];if("number"==typeof n){if("number"==typeof o)return 0===o?[]:n/o;if(o instanceof i)return new i(n,"'1'").div(o)}if(n instanceof a){if(o instanceof i)return n.div(o);if("number"==typeof o)return n.div(new i(o,"'1'"))}}throw new Error("Cannot "+JSON.stringify(e)+" / "+JSON.stringify(t))},o.intdiv=function(e,t){return 0===t?[]:Math.floor(e/t)},o.mod=function(e,t){return 0===t?[]:e%t},o.abs=function(e){let t;if(l(e))t=[];else{if(1!==e.length)throw new Error("Unexpected collection"+JSON.stringify(e)+"; expected singleton of type number or Quantity");var n=r.valData(e[0]);if(null==n)t=[];else if("number"==typeof n)t=Math.abs(n);else{if(!(n instanceof i))throw new Error("Expected number or Quantity, but got "+JSON.stringify(n||e));t=new i(Math.abs(n.value),n.unit)}}return t},o.ceiling=function(e){return s(e,Math.ceil)},o.exp=function(e){return s(e,Math.exp)},o.floor=function(e){return s(e,Math.floor)},o.ln=function(e){return s(e,Math.log)},o.log=function(e,t){return s(e,(e=>Math.log(e)/Math.log(t)))},o.power=function(e,t){return s(e,(e=>{const n=Math.pow(e,t);return isNaN(n)?[]:n}))},o.round=function(e,t){return s(e,(e=>{if(void 0===t)return Math.round(e);{let n=Math.pow(10,t);return Math.round(e*n)/n}}))},o.sqrt=function(e){return s(e,(e=>e<0?[]:Math.sqrt(e)))},o.truncate=function(e){return s(e,Math.trunc)},e.exports=o},741:(e,t,n)=>{const{hashStuff:i}=n(4623),{LexerIndexedCustomAction:a}=n(3972);class r{constructor(e){return this.lexerActions=null===e?[]:e,this.cachedHashCode=i(e),this}fixOffsetBeforeMatch(e){let t=null;for(let n=0;n<this.lexerActions.length;n++)!this.lexerActions[n].isPositionDependent||this.lexerActions[n]instanceof a||(null===t&&(t=this.lexerActions.concat([])),t[n]=new a(e,this.lexerActions[n]));return null===t?this:new r(t)}execute(e,t,n){let i=!1;const r=t.index;try{for(let o=0;o<this.lexerActions.length;o++){let s=this.lexerActions[o];if(s instanceof a){const e=s.offset;t.seek(n+e),s=s.action,i=n+e!==r}else s.isPositionDependent&&(t.seek(r),i=!1);s.execute(e)}}finally{i&&t.seek(r)}}hashCode(){return this.cachedHashCode}updateHashCode(e){e.update(this.cachedHashCode)}equals(e){if(this===e)return!0;if(e instanceof r){if(this.cachedHashCode!=e.cachedHashCode)return!1;if(this.lexerActions.length!=e.lexerActions.length)return!1;{const t=this.lexerActions.length;for(let n=0;n<t;++n)if(!this.lexerActions[n].equals(e.lexerActions[n]))return!1;return!0}}return!1}static append(e,t){if(null===e)return new r([t]);const n=e.lexerActions.concat([t]);return new r(n)}}e.exports=r},787:e=>{e.exports={reset:function(){this.nowDate=new Date,this.today=null,this.now=null,this.timeOfDay=null,this.localTimezoneOffset=null},today:null,now:null,timeOfDay:null}},908:(e,t,n)=>{var i=n(4825);e.exports=function(e,t){var n=Number(t);return i(e,1e3*n)}},976:e=>{class t{constructor(){this.atn=null,this.stateNumber=t.INVALID_STATE_NUMBER,this.stateType=null,this.ruleIndex=0,this.epsilonOnlyTransitions=!1,this.transitions=[],this.nextTokenWithinRule=null}toString(){return this.stateNumber}equals(e){return e instanceof t&&this.stateNumber===e.stateNumber}isNonGreedyExitState(){return!1}addTransition(e,t){void 0===t&&(t=-1),0===this.transitions.length?this.epsilonOnlyTransitions=e.isEpsilon:this.epsilonOnlyTransitions!==e.isEpsilon&&(this.epsilonOnlyTransitions=!1),-1===t?this.transitions.push(e):this.transitions.splice(t,1,e)}}t.INVALID_TYPE=0,t.BASIC=1,t.RULE_START=2,t.BLOCK_START=3,t.PLUS_BLOCK_START=4,t.STAR_BLOCK_START=5,t.TOKEN_START=6,t.RULE_STOP=7,t.BLOCK_END=8,t.STAR_LOOP_BACK=9,t.STAR_LOOP_ENTRY=10,t.PLUS_LOOP_BACK=11,t.LOOP_END=12,t.serializationNames=["INVALID","BASIC","RULE_START","BLOCK_START","PLUS_BLOCK_START","STAR_BLOCK_START","TOKEN_START","RULE_STOP","BLOCK_END","STAR_LOOP_BACK","STAR_LOOP_ENTRY","PLUS_LOOP_BACK","LOOP_END"],t.INVALID_STATE_NUMBER=-1;class n extends t{constructor(){return super(),this.decision=-1,this.nonGreedy=!1,this}}class i extends n{constructor(){return super(),this.endState=null,this}}e.exports={ATNState:t,BasicState:class extends t{constructor(){super(),this.stateType=t.BASIC}},DecisionState:n,BlockStartState:i,BlockEndState:class extends t{constructor(){return super(),this.stateType=t.BLOCK_END,this.startState=null,this}},LoopEndState:class extends t{constructor(){return super(),this.stateType=t.LOOP_END,this.loopBackState=null,this}},RuleStartState:class extends t{constructor(){return super(),this.stateType=t.RULE_START,this.stopState=null,this.isPrecedenceRule=!1,this}},RuleStopState:class extends t{constructor(){return super(),this.stateType=t.RULE_STOP,this}},TokensStartState:class extends n{constructor(){return super(),this.stateType=t.TOKEN_START,this}},PlusLoopbackState:class extends n{constructor(){return super(),this.stateType=t.PLUS_LOOP_BACK,this}},StarLoopbackState:class extends t{constructor(){return super(),this.stateType=t.STAR_LOOP_BACK,this}},StarLoopEntryState:class extends n{constructor(){return super(),this.stateType=t.STAR_LOOP_ENTRY,this.loopBackState=null,this.isPrecedenceDecision=null,this}},PlusBlockStartState:class extends i{constructor(){return super(),this.stateType=t.PLUS_BLOCK_START,this.loopBackState=null,this}},StarBlockStartState:class extends i{constructor(){return super(),this.stateType=t.STAR_BLOCK_START,this}},BasicBlockStartState:class extends i{constructor(){return super(),this.stateType=t.BLOCK_START,this}}}},984:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.PrefixTables=t.PrefixTablesFactory=void 0;class n{constructor(){this.byCode_={},this.byValue_={}}prefixCount(){return Object.keys(this.byCode_).length}allPrefixesByValue(){let e="",t=Object.keys(this.byValue_),n=t.length;for(let i=0;i<n;i++){let n=this.getPrefixByValue(t[i]);e+=n.code_+","+n.name_+",,"+n.value_+"\r\n"}return e}allPrefixesByCode(){let e=[],t=Object.keys(this.byCode_);t.sort();let n=t.length;for(let i=0;i<n;i++)e.push(this.getPrefixByCode(t[i]));return e}add(e){this.byCode_[e.getCode()]=e,this.byValue_[e.getValue()]=e}isDefined(e){return null!==this.byCode_[e]&&void 0!==this.byCode_[e]}getPrefixByCode(e){return this.byCode_[e]}getPrefixByValue(e){return this.byValue_[e]}}t.PrefixTablesFactory=n;var i=new n;const a={getInstance:function(){return i}};t.PrefixTables=a},1152:e=>{e.exports=function(e){return e instanceof Date}},1184:(e,t,n)=>{const{Token:i}=n(7931),a=n(3322),r=n(4116),{RecognitionException:o}=n(188),{LexerNoViableAltException:s}=n(188);class l extends a{constructor(e){super(),this._input=e,this._factory=r.DEFAULT,this._tokenFactorySourcePair=[this,e],this._interp=null,this._token=null,this._tokenStartCharIndex=-1,this._tokenStartLine=-1,this._tokenStartColumn=-1,this._hitEOF=!1,this._channel=i.DEFAULT_CHANNEL,this._type=i.INVALID_TYPE,this._modeStack=[],this._mode=l.DEFAULT_MODE,this._text=null}reset(){null!==this._input&&this._input.seek(0),this._token=null,this._type=i.INVALID_TYPE,this._channel=i.DEFAULT_CHANNEL,this._tokenStartCharIndex=-1,this._tokenStartColumn=-1,this._tokenStartLine=-1,this._text=null,this._hitEOF=!1,this._mode=l.DEFAULT_MODE,this._modeStack=[],this._interp.reset()}nextToken(){if(null===this._input)throw"nextToken requires a non-null input stream.";const e=this._input.mark();try{for(;;){if(this._hitEOF)return this.emitEOF(),this._token;this._token=null,this._channel=i.DEFAULT_CHANNEL,this._tokenStartCharIndex=this._input.index,this._tokenStartColumn=this._interp.column,this._tokenStartLine=this._interp.line,this._text=null;let e=!1;for(;;){this._type=i.INVALID_TYPE;let t=l.SKIP;try{t=this._interp.match(this._input,this._mode)}catch(e){if(!(e instanceof o))throw console.log(e.stack),e;this.notifyListeners(e),this.recover(e)}if(this._input.LA(1)===i.EOF&&(this._hitEOF=!0),this._type===i.INVALID_TYPE&&(this._type=t),this._type===l.SKIP){e=!0;break}if(this._type!==l.MORE)break}if(!e)return null===this._token&&this.emit(),this._token}}finally{this._input.release(e)}}skip(){this._type=l.SKIP}more(){this._type=l.MORE}mode(e){this._mode=e}pushMode(e){this._interp.debug&&console.log("pushMode "+e),this._modeStack.push(this._mode),this.mode(e)}popMode(){if(0===this._modeStack.length)throw"Empty Stack";return this._interp.debug&&console.log("popMode back to "+this._modeStack.slice(0,-1)),this.mode(this._modeStack.pop()),this._mode}emitToken(e){this._token=e}emit(){const e=this._factory.create(this._tokenFactorySourcePair,this._type,this._text,this._channel,this._tokenStartCharIndex,this.getCharIndex()-1,this._tokenStartLine,this._tokenStartColumn);return this.emitToken(e),e}emitEOF(){const e=this.column,t=this.line,n=this._factory.create(this._tokenFactorySourcePair,i.EOF,null,i.DEFAULT_CHANNEL,this._input.index,this._input.index-1,t,e);return this.emitToken(n),n}getCharIndex(){return this._input.index}getAllTokens(){const e=[];let t=this.nextToken();for(;t.type!==i.EOF;)e.push(t),t=this.nextToken();return e}notifyListeners(e){const t=this._tokenStartCharIndex,n=this._input.index,i=this._input.getText(t,n),a="token recognition error at: '"+this.getErrorDisplay(i)+"'";this.getErrorListenerDispatch().syntaxError(this,null,this._tokenStartLine,this._tokenStartColumn,a,e)}getErrorDisplay(e){const t=[];for(let n=0;n<e.length;n++)t.push(e[n]);return t.join("")}getErrorDisplayForChar(e){return e.charCodeAt(0)===i.EOF?"<EOF>":"\n"===e?"\\n":"\t"===e?"\\t":"\r"===e?"\\r":e}getCharErrorDisplay(e){return"'"+this.getErrorDisplayForChar(e)+"'"}recover(e){this._input.LA(1)!==i.EOF&&(e instanceof s?this._interp.consume(this._input):this._input.consume())}get inputStream(){return this._input}set inputStream(e){this._input=null,this._tokenFactorySourcePair=[this,this._input],this.reset(),this._input=e,this._tokenFactorySourcePair=[this,this._input]}get sourceName(){return this._input.sourceName}get type(){return this._type}set type(e){this._type=e}get line(){return this._interp.line}set line(e){this._interp.line=e}get column(){return this._interp.column}set column(e){this._interp.column=e}get text(){return null!==this._text?this._text:this._interp.getText(this._input)}set text(e){this._text=e}}l.DEFAULT_MODE=0,l.MORE=-2,l.SKIP=-3,l.DEFAULT_TOKEN_CHANNEL=i.DEFAULT_CHANNEL,l.HIDDEN=i.HIDDEN_CHANNEL,l.MIN_CHAR_VALUE=0,l.MAX_CHAR_VALUE=1114111,e.exports=l},1185:(e,t,n)=>{const i=n(3394),a=n(3358),r=["悋Ꜫ脳맭䅼㯧瞆","奤A\t\t","\t\t\t\t","\b\t\b\t\t\t\n\t\n\v\t\v\f\t\f","\r\t\r\t\t\t","","(\n","","","","","","","P\n\fS\v","\\","\n","f\n","k\n","r\n\b","\b\b\bw\n\b\b\b\t\t\t","\t~\n\t\f\t\t\v\t\n\n\n\n\n","\v\v\v\v\n\v","\f\f\r\r","\n\f","\v","\b\n\f","\b\v","\f\f","",'"#)018',";<­ '","[\be","\ng\fqs","z","","","",' !!"','"#$\b$(',"%&\t&(\r'#","'%(Q",")*\f\f*+\t+P\r,-\f\v","-.\t.P\f/0\f\n","01\r1P\v23\f\t","34\t4P\n56\f6","7\t7P\b89\f9:","\t:P;<\f","<==P>?\f","?@\t\b@PAB\f","BCCPDE\f","EFFP\fGH\f","HIIJJK","KPLM\f\bMN\t\t","NPO)O,","O/O2O5","O8O;","O>OAOD","OGOLPS","QOQRR","SQT\\\f","U\\\bV\\\nWX","XYYZZ\\","[T[U","[V[W\\","]^ ^f!_f\t\n","`f=af>bf9cf",":df\ne]e_","e`ea","ebeced","f\tgj$hk","ik=jhji","k\vlr","mr\bnr%or&","pr'qlqm","qnqoqp","r\rsttv","uw\tvu","vwwxxy","yz","{|(|~}{","~}","",">","\v","","\f\r","=","","\t\v","\t\f","","","","","","","\t\r'OQ[ejqv",""].join(""),o=(new i.atn.ATNDeserializer).deserialize(r),s=o.decisionToState.map(((e,t)=>new i.dfa.DFA(e,t))),l=new i.PredictionContextCache;class c extends i.Parser{static grammarFileName="FHIRPath.g4";static literalNames=[null,"'.'","'['","']'","'+'","'-'","'*'","'/'","'div'","'mod'","'&'","'|'","'<='","'<'","'>'","'>='","'is'","'as'","'='","'~'","'!='","'!~'","'in'","'contains'","'and'","'or'","'xor'","'implies'","'('","')'","'{'","'}'","'true'","'false'","'%'","'$this'","'$index'","'$total'","','","'year'","'month'","'week'","'day'","'hour'","'minute'","'second'","'millisecond'","'years'","'months'","'weeks'","'days'","'hours'","'minutes'","'seconds'","'milliseconds'"];static symbolicNames=[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"DATETIME","TIME","IDENTIFIER","DELIMITEDIDENTIFIER","STRING","NUMBER","WS","COMMENT","LINE_COMMENT"];static ruleNames=["entireExpression","expression","term","literal","externalConstant","invocation","functn","paramList","quantity","unit","dateTimePrecision","pluralDateTimePrecision","typeSpecifier","qualifiedIdentifier","identifier"];constructor(e){super(e),this._interp=new i.atn.ParserATNSimulator(this,o,s,l),this.ruleNames=c.ruleNames,this.literalNames=c.literalNames,this.symbolicNames=c.symbolicNames}get atn(){return o}sempred(e,t,n){if(1===t)return this.expression_sempred(e,n);throw"No predicate with index:"+t}expression_sempred(e,t){switch(t){case 0:return this.precpred(this._ctx,10);case 1:return this.precpred(this._ctx,9);case 2:return this.precpred(this._ctx,8);case 3:return this.precpred(this._ctx,7);case 4:return this.precpred(this._ctx,5);case 5:return this.precpred(this._ctx,4);case 6:return this.precpred(this._ctx,3);case 7:return this.precpred(this._ctx,2);case 8:return this.precpred(this._ctx,1);case 9:return this.precpred(this._ctx,13);case 10:return this.precpred(this._ctx,12);case 11:return this.precpred(this._ctx,6);default:throw"No predicate with index:"+t}}entireExpression(){let e=new u(this,this._ctx,this.state);this.enterRule(e,0,c.RULE_entireExpression);try{this.enterOuterAlt(e,1),this.state=30,this.expression(0),this.state=31,this.match(c.EOF)}catch(t){if(!(t instanceof i.error.RecognitionException))throw t;e.exception=t,this._errHandler.reportError(this,t),this._errHandler.recover(this,t)}finally{this.exitRule()}return e}expression(e){void 0===e&&(e=0);const t=this._ctx,n=this.state;let a=new m(this,this._ctx,n),r=a;this.enterRecursionRule(a,2,c.RULE_expression,e);var o=0;try{switch(this.enterOuterAlt(a,1),this.state=37,this._errHandler.sync(this),this._input.LA(1)){case c.T__15:case c.T__16:case c.T__21:case c.T__22:case c.T__27:case c.T__29:case c.T__31:case c.T__32:case c.T__33:case c.T__34:case c.T__35:case c.T__36:case c.DATETIME:case c.TIME:case c.IDENTIFIER:case c.DELIMITEDIDENTIFIER:case c.STRING:case c.NUMBER:a=new R(this,a),this._ctx=a,r=a,this.state=34,this.term();break;case c.T__3:case c.T__4:a=new f(this,a),this._ctx=a,r=a,this.state=35,(o=this._input.LA(1))!==c.T__3&&o!==c.T__4?this._errHandler.recoverInline(this):(this._errHandler.reportMatch(this),this.consume()),this.state=36,this.expression(11);break;default:throw new i.error.NoViableAltException(this)}this._ctx.stop=this._input.LT(-1),this.state=79,this._errHandler.sync(this);for(var s=this._interp.adaptivePredict(this._input,2,this._ctx);2!=s&&s!=i.atn.ATN.INVALID_ALT_NUMBER;){if(1===s)switch(null!==this._parseListeners&&this.triggerExitRuleEvent(),r=a,this.state=77,this._errHandler.sync(this),this._interp.adaptivePredict(this._input,1,this._ctx)){case 1:if(a=new g(this,new m(this,t,n)),this.pushNewRecursionContext(a,2,c.RULE_expression),this.state=39,!this.precpred(this._ctx,10))throw new i.error.FailedPredicateException(this,"this.precpred(this._ctx, 10)");this.state=40,-32&(o=this._input.LA(1))||!(1<<o&(1<<c.T__5|1<<c.T__6|1<<c.T__7|1<<c.T__8))?this._errHandler.recoverInline(this):(this._errHandler.reportMatch(this),this.consume()),this.state=41,this.expression(11);break;case 2:if(a=new p(this,new m(this,t,n)),this.pushNewRecursionContext(a,2,c.RULE_expression),this.state=42,!this.precpred(this._ctx,9))throw new i.error.FailedPredicateException(this,"this.precpred(this._ctx, 9)");this.state=43,-32&(o=this._input.LA(1))||!(1<<o&(1<<c.T__3|1<<c.T__4|1<<c.T__9))?this._errHandler.recoverInline(this):(this._errHandler.reportMatch(this),this.consume()),this.state=44,this.expression(10);break;case 3:if(a=new h(this,new m(this,t,n)),this.pushNewRecursionContext(a,2,c.RULE_expression),this.state=45,!this.precpred(this._ctx,8))throw new i.error.FailedPredicateException(this,"this.precpred(this._ctx, 8)");this.state=46,this.match(c.T__10),this.state=47,this.expression(9);break;case 4:if(a=new b(this,new m(this,t,n)),this.pushNewRecursionContext(a,2,c.RULE_expression),this.state=48,!this.precpred(this._ctx,7))throw new i.error.FailedPredicateException(this,"this.precpred(this._ctx, 7)");this.state=49,-32&(o=this._input.LA(1))||!(1<<o&(1<<c.T__11|1<<c.T__12|1<<c.T__13|1<<c.T__14))?this._errHandler.recoverInline(this):(this._errHandler.reportMatch(this),this.consume()),this.state=50,this.expression(8);break;case 5:if(a=new x(this,new m(this,t,n)),this.pushNewRecursionContext(a,2,c.RULE_expression),this.state=51,!this.precpred(this._ctx,5))throw new i.error.FailedPredicateException(this,"this.precpred(this._ctx, 5)");this.state=52,-32&(o=this._input.LA(1))||!(1<<o&(1<<c.T__17|1<<c.T__18|1<<c.T__19|1<<c.T__20))?this._errHandler.recoverInline(this):(this._errHandler.reportMatch(this),this.consume()),this.state=53,this.expression(6);break;case 6:if(a=new S(this,new m(this,t,n)),this.pushNewRecursionContext(a,2,c.RULE_expression),this.state=54,!this.precpred(this._ctx,4))throw new i.error.FailedPredicateException(this,"this.precpred(this._ctx, 4)");this.state=55,(o=this._input.LA(1))!==c.T__21&&o!==c.T__22?this._errHandler.recoverInline(this):(this._errHandler.reportMatch(this),this.consume()),this.state=56,this.expression(5);break;case 7:if(a=new C(this,new m(this,t,n)),this.pushNewRecursionContext(a,2,c.RULE_expression),this.state=57,!this.precpred(this._ctx,3))throw new i.error.FailedPredicateException(this,"this.precpred(this._ctx, 3)");this.state=58,this.match(c.T__23),this.state=59,this.expression(4);break;case 8:if(a=new y(this,new m(this,t,n)),this.pushNewRecursionContext(a,2,c.RULE_expression),this.state=60,!this.precpred(this._ctx,2))throw new i.error.FailedPredicateException(this,"this.precpred(this._ctx, 2)");this.state=61,(o=this._input.LA(1))!==c.T__24&&o!==c.T__25?this._errHandler.recoverInline(this):(this._errHandler.reportMatch(this),this.consume()),this.state=62,this.expression(3);break;case 9:if(a=new v(this,new m(this,t,n)),this.pushNewRecursionContext(a,2,c.RULE_expression),this.state=63,!this.precpred(this._ctx,1))throw new i.error.FailedPredicateException(this,"this.precpred(this._ctx, 1)");this.state=64,this.match(c.T__26),this.state=65,this.expression(2);break;case 10:if(a=new E(this,new m(this,t,n)),this.pushNewRecursionContext(a,2,c.RULE_expression),this.state=66,!this.precpred(this._ctx,13))throw new i.error.FailedPredicateException(this,"this.precpred(this._ctx, 13)");this.state=67,this.match(c.T__0),this.state=68,this.invocation();break;case 11:if(a=new d(this,new m(this,t,n)),this.pushNewRecursionContext(a,2,c.RULE_expression),this.state=69,!this.precpred(this._ctx,12))throw new i.error.FailedPredicateException(this,"this.precpred(this._ctx, 12)");this.state=70,this.match(c.T__1),this.state=71,this.expression(0),this.state=72,this.match(c.T__2);break;case 12:if(a=new _(this,new m(this,t,n)),this.pushNewRecursionContext(a,2,c.RULE_expression),this.state=74,!this.precpred(this._ctx,6))throw new i.error.FailedPredicateException(this,"this.precpred(this._ctx, 6)");this.state=75,(o=this._input.LA(1))!==c.T__15&&o!==c.T__16?this._errHandler.recoverInline(this):(this._errHandler.reportMatch(this),this.consume()),this.state=76,this.typeSpecifier()}this.state=81,this._errHandler.sync(this),s=this._interp.adaptivePredict(this._input,2,this._ctx)}}catch(e){if(!(e instanceof i.error.RecognitionException))throw e;a.exception=e,this._errHandler.reportError(this,e),this._errHandler.recover(this,e)}finally{this.unrollRecursionContexts(t)}return a}term(){let e=new M(this,this._ctx,this.state);this.enterRule(e,4,c.RULE_term);try{switch(this.state=89,this._errHandler.sync(this),this._input.LA(1)){case c.T__15:case c.T__16:case c.T__21:case c.T__22:case c.T__34:case c.T__35:case c.T__36:case c.IDENTIFIER:case c.DELIMITEDIDENTIFIER:e=new k(this,e),this.enterOuterAlt(e,1),this.state=82,this.invocation();break;case c.T__29:case c.T__31:case c.T__32:case c.DATETIME:case c.TIME:case c.STRING:case c.NUMBER:e=new D(this,e),this.enterOuterAlt(e,2),this.state=83,this.literal();break;case c.T__33:e=new I(this,e),this.enterOuterAlt(e,3),this.state=84,this.externalConstant();break;case c.T__27:e=new T(this,e),this.enterOuterAlt(e,4),this.state=85,this.match(c.T__27),this.state=86,this.expression(0),this.state=87,this.match(c.T__28);break;default:throw new i.error.NoViableAltException(this)}}catch(t){if(!(t instanceof i.error.RecognitionException))throw t;e.exception=t,this._errHandler.reportError(this,t),this._errHandler.recover(this,t)}finally{this.exitRule()}return e}literal(){let e=new P(this,this._ctx,this.state);this.enterRule(e,6,c.RULE_literal);var t=0;try{switch(this.state=99,this._errHandler.sync(this),this._interp.adaptivePredict(this._input,4,this._ctx)){case 1:e=new L(this,e),this.enterOuterAlt(e,1),this.state=91,this.match(c.T__29),this.state=92,this.match(c.T__30);break;case 2:e=new w(this,e),this.enterOuterAlt(e,2),this.state=93,(t=this._input.LA(1))!==c.T__31&&t!==c.T__32?this._errHandler.recoverInline(this):(this._errHandler.reportMatch(this),this.consume());break;case 3:e=new N(this,e),this.enterOuterAlt(e,3),this.state=94,this.match(c.STRING);break;case 4:e=new U(this,e),this.enterOuterAlt(e,4),this.state=95,this.match(c.NUMBER);break;case 5:e=new A(this,e),this.enterOuterAlt(e,5),this.state=96,this.match(c.DATETIME);break;case 6:e=new O(this,e),this.enterOuterAlt(e,6),this.state=97,this.match(c.TIME);break;case 7:e=new B(this,e),this.enterOuterAlt(e,7),this.state=98,this.quantity()}}catch(t){if(!(t instanceof i.error.RecognitionException))throw t;e.exception=t,this._errHandler.reportError(this,t),this._errHandler.recover(this,t)}finally{this.exitRule()}return e}externalConstant(){let e=new q(this,this._ctx,this.state);this.enterRule(e,8,c.RULE_externalConstant);try{switch(this.enterOuterAlt(e,1),this.state=101,this.match(c.T__33),this.state=104,this._errHandler.sync(this),this._input.LA(1)){case c.T__15:case c.T__16:case c.T__21:case c.T__22:case c.IDENTIFIER:case c.DELIMITEDIDENTIFIER:this.state=102,this.identifier();break;case c.STRING:this.state=103,this.match(c.STRING);break;default:throw new i.error.NoViableAltException(this)}}catch(t){if(!(t instanceof i.error.RecognitionException))throw t;e.exception=t,this._errHandler.reportError(this,t),this._errHandler.recover(this,t)}finally{this.exitRule()}return e}invocation(){let e=new F(this,this._ctx,this.state);this.enterRule(e,10,c.RULE_invocation);try{switch(this.state=111,this._errHandler.sync(this),this._interp.adaptivePredict(this._input,6,this._ctx)){case 1:e=new j(this,e),this.enterOuterAlt(e,1),this.state=106,this.identifier();break;case 2:e=new H(this,e),this.enterOuterAlt(e,2),this.state=107,this.functn();break;case 3:e=new G(this,e),this.enterOuterAlt(e,3),this.state=108,this.match(c.T__34);break;case 4:e=new z(this,e),this.enterOuterAlt(e,4),this.state=109,this.match(c.T__35);break;case 5:e=new V(this,e),this.enterOuterAlt(e,5),this.state=110,this.match(c.T__36)}}catch(t){if(!(t instanceof i.error.RecognitionException))throw t;e.exception=t,this._errHandler.reportError(this,t),this._errHandler.recover(this,t)}finally{this.exitRule()}return e}functn(){let e=new Q(this,this._ctx,this.state);this.enterRule(e,12,c.RULE_functn);var t=0;try{this.enterOuterAlt(e,1),this.state=113,this.identifier(),this.state=114,this.match(c.T__27),this.state=116,this._errHandler.sync(this),(!(-32&(t=this._input.LA(1)))&&1<<t&(1<<c.T__3|1<<c.T__4|1<<c.T__15|1<<c.T__16|1<<c.T__21|1<<c.T__22|1<<c.T__27|1<<c.T__29)||!(t-32&-32)&&1<<t-32&(1<<c.T__31-32|1<<c.T__32-32|1<<c.T__33-32|1<<c.T__34-32|1<<c.T__35-32|1<<c.T__36-32|1<<c.DATETIME-32|1<<c.TIME-32|1<<c.IDENTIFIER-32|1<<c.DELIMITEDIDENTIFIER-32|1<<c.STRING-32|1<<c.NUMBER-32))&&(this.state=115,this.paramList()),this.state=118,this.match(c.T__28)}catch(t){if(!(t instanceof i.error.RecognitionException))throw t;e.exception=t,this._errHandler.reportError(this,t),this._errHandler.recover(this,t)}finally{this.exitRule()}return e}paramList(){let e=new K(this,this._ctx,this.state);this.enterRule(e,14,c.RULE_paramList);var t=0;try{for(this.enterOuterAlt(e,1),this.state=120,this.expression(0),this.state=125,this._errHandler.sync(this),t=this._input.LA(1);t===c.T__37;)this.state=121,this.match(c.T__37),this.state=122,this.expression(0),this.state=127,this._errHandler.sync(this),t=this._input.LA(1)}catch(t){if(!(t instanceof i.error.RecognitionException))throw t;e.exception=t,this._errHandler.reportError(this,t),this._errHandler.recover(this,t)}finally{this.exitRule()}return e}quantity(){let e=new $(this,this._ctx,this.state);this.enterRule(e,16,c.RULE_quantity);try{this.enterOuterAlt(e,1),this.state=128,this.match(c.NUMBER),this.state=130,this._errHandler.sync(this),1===this._interp.adaptivePredict(this._input,9,this._ctx)&&(this.state=129,this.unit())}catch(t){if(!(t instanceof i.error.RecognitionException))throw t;e.exception=t,this._errHandler.reportError(this,t),this._errHandler.recover(this,t)}finally{this.exitRule()}return e}unit(){let e=new J(this,this._ctx,this.state);this.enterRule(e,18,c.RULE_unit);try{switch(this.state=135,this._errHandler.sync(this),this._input.LA(1)){case c.T__38:case c.T__39:case c.T__40:case c.T__41:case c.T__42:case c.T__43:case c.T__44:case c.T__45:this.enterOuterAlt(e,1),this.state=132,this.dateTimePrecision();break;case c.T__46:case c.T__47:case c.T__48:case c.T__49:case c.T__50:case c.T__51:case c.T__52:case c.T__53:this.enterOuterAlt(e,2),this.state=133,this.pluralDateTimePrecision();break;case c.STRING:this.enterOuterAlt(e,3),this.state=134,this.match(c.STRING);break;default:throw new i.error.NoViableAltException(this)}}catch(t){if(!(t instanceof i.error.RecognitionException))throw t;e.exception=t,this._errHandler.reportError(this,t),this._errHandler.recover(this,t)}finally{this.exitRule()}return e}dateTimePrecision(){let e=new W(this,this._ctx,this.state);this.enterRule(e,20,c.RULE_dateTimePrecision);var t=0;try{this.enterOuterAlt(e,1),this.state=137,(t=this._input.LA(1))-39&-32||!(1<<t-39&(1<<c.T__38-39|1<<c.T__39-39|1<<c.T__40-39|1<<c.T__41-39|1<<c.T__42-39|1<<c.T__43-39|1<<c.T__44-39|1<<c.T__45-39))?this._errHandler.recoverInline(this):(this._errHandler.reportMatch(this),this.consume())}catch(t){if(!(t instanceof i.error.RecognitionException))throw t;e.exception=t,this._errHandler.reportError(this,t),this._errHandler.recover(this,t)}finally{this.exitRule()}return e}pluralDateTimePrecision(){let e=new Y(this,this._ctx,this.state);this.enterRule(e,22,c.RULE_pluralDateTimePrecision);var t=0;try{this.enterOuterAlt(e,1),this.state=139,(t=this._input.LA(1))-47&-32||!(1<<t-47&(1<<c.T__46-47|1<<c.T__47-47|1<<c.T__48-47|1<<c.T__49-47|1<<c.T__50-47|1<<c.T__51-47|1<<c.T__52-47|1<<c.T__53-47))?this._errHandler.recoverInline(this):(this._errHandler.reportMatch(this),this.consume())}catch(t){if(!(t instanceof i.error.RecognitionException))throw t;e.exception=t,this._errHandler.reportError(this,t),this._errHandler.recover(this,t)}finally{this.exitRule()}return e}typeSpecifier(){let e=new X(this,this._ctx,this.state);this.enterRule(e,24,c.RULE_typeSpecifier);try{this.enterOuterAlt(e,1),this.state=141,this.qualifiedIdentifier()}catch(t){if(!(t instanceof i.error.RecognitionException))throw t;e.exception=t,this._errHandler.reportError(this,t),this._errHandler.recover(this,t)}finally{this.exitRule()}return e}qualifiedIdentifier(){let e=new Z(this,this._ctx,this.state);this.enterRule(e,26,c.RULE_qualifiedIdentifier);try{this.enterOuterAlt(e,1),this.state=143,this.identifier(),this.state=148,this._errHandler.sync(this);for(var t=this._interp.adaptivePredict(this._input,11,this._ctx);2!=t&&t!=i.atn.ATN.INVALID_ALT_NUMBER;)1===t&&(this.state=144,this.match(c.T__0),this.state=145,this.identifier()),this.state=150,this._errHandler.sync(this),t=this._interp.adaptivePredict(this._input,11,this._ctx)}catch(t){if(!(t instanceof i.error.RecognitionException))throw t;e.exception=t,this._errHandler.reportError(this,t),this._errHandler.recover(this,t)}finally{this.exitRule()}return e}identifier(){let e=new ee(this,this._ctx,this.state);this.enterRule(e,28,c.RULE_identifier);var t=0;try{this.enterOuterAlt(e,1),this.state=151,!(-32&(t=this._input.LA(1)))&&1<<t&(1<<c.T__15|1<<c.T__16|1<<c.T__21|1<<c.T__22)||t===c.IDENTIFIER||t===c.DELIMITEDIDENTIFIER?(this._errHandler.reportMatch(this),this.consume()):this._errHandler.recoverInline(this)}catch(t){if(!(t instanceof i.error.RecognitionException))throw t;e.exception=t,this._errHandler.reportError(this,t),this._errHandler.recover(this,t)}finally{this.exitRule()}return e}}c.EOF=i.Token.EOF,c.T__0=1,c.T__1=2,c.T__2=3,c.T__3=4,c.T__4=5,c.T__5=6,c.T__6=7,c.T__7=8,c.T__8=9,c.T__9=10,c.T__10=11,c.T__11=12,c.T__12=13,c.T__13=14,c.T__14=15,c.T__15=16,c.T__16=17,c.T__17=18,c.T__18=19,c.T__19=20,c.T__20=21,c.T__21=22,c.T__22=23,c.T__23=24,c.T__24=25,c.T__25=26,c.T__26=27,c.T__27=28,c.T__28=29,c.T__29=30,c.T__30=31,c.T__31=32,c.T__32=33,c.T__33=34,c.T__34=35,c.T__35=36,c.T__36=37,c.T__37=38,c.T__38=39,c.T__39=40,c.T__40=41,c.T__41=42,c.T__42=43,c.T__43=44,c.T__44=45,c.T__45=46,c.T__46=47,c.T__47=48,c.T__48=49,c.T__49=50,c.T__50=51,c.T__51=52,c.T__52=53,c.T__53=54,c.DATETIME=55,c.TIME=56,c.IDENTIFIER=57,c.DELIMITEDIDENTIFIER=58,c.STRING=59,c.NUMBER=60,c.WS=61,c.COMMENT=62,c.LINE_COMMENT=63,c.RULE_entireExpression=0,c.RULE_expression=1,c.RULE_term=2,c.RULE_literal=3,c.RULE_externalConstant=4,c.RULE_invocation=5,c.RULE_functn=6,c.RULE_paramList=7,c.RULE_quantity=8,c.RULE_unit=9,c.RULE_dateTimePrecision=10,c.RULE_pluralDateTimePrecision=11,c.RULE_typeSpecifier=12,c.RULE_qualifiedIdentifier=13,c.RULE_identifier=14;class u extends i.ParserRuleContext{constructor(e,t,n){void 0===t&&(t=null),null==n&&(n=-1),super(t,n),this.parser=e,this.ruleIndex=c.RULE_entireExpression}expression(){return this.getTypedRuleContext(m,0)}EOF(){return this.getToken(c.EOF,0)}enterRule(e){e instanceof a&&e.enterEntireExpression(this)}exitRule(e){e instanceof a&&e.exitEntireExpression(this)}}class m extends i.ParserRuleContext{constructor(e,t,n){void 0===t&&(t=null),null==n&&(n=-1),super(t,n),this.parser=e,this.ruleIndex=c.RULE_expression}copyFrom(e){super.copyFrom(e)}}class d extends m{constructor(e,t){super(e),super.copyFrom(t)}expression=function(e){return void 0===e&&(e=null),null===e?this.getTypedRuleContexts(m):this.getTypedRuleContext(m,e)};enterRule(e){e instanceof a&&e.enterIndexerExpression(this)}exitRule(e){e instanceof a&&e.exitIndexerExpression(this)}}c.IndexerExpressionContext=d;class f extends m{constructor(e,t){super(e),super.copyFrom(t)}expression(){return this.getTypedRuleContext(m,0)}enterRule(e){e instanceof a&&e.enterPolarityExpression(this)}exitRule(e){e instanceof a&&e.exitPolarityExpression(this)}}c.PolarityExpressionContext=f;class p extends m{constructor(e,t){super(e),super.copyFrom(t)}expression=function(e){return void 0===e&&(e=null),null===e?this.getTypedRuleContexts(m):this.getTypedRuleContext(m,e)};enterRule(e){e instanceof a&&e.enterAdditiveExpression(this)}exitRule(e){e instanceof a&&e.exitAdditiveExpression(this)}}c.AdditiveExpressionContext=p;class g extends m{constructor(e,t){super(e),super.copyFrom(t)}expression=function(e){return void 0===e&&(e=null),null===e?this.getTypedRuleContexts(m):this.getTypedRuleContext(m,e)};enterRule(e){e instanceof a&&e.enterMultiplicativeExpression(this)}exitRule(e){e instanceof a&&e.exitMultiplicativeExpression(this)}}c.MultiplicativeExpressionContext=g;class h extends m{constructor(e,t){super(e),super.copyFrom(t)}expression=function(e){return void 0===e&&(e=null),null===e?this.getTypedRuleContexts(m):this.getTypedRuleContext(m,e)};enterRule(e){e instanceof a&&e.enterUnionExpression(this)}exitRule(e){e instanceof a&&e.exitUnionExpression(this)}}c.UnionExpressionContext=h;class y extends m{constructor(e,t){super(e),super.copyFrom(t)}expression=function(e){return void 0===e&&(e=null),null===e?this.getTypedRuleContexts(m):this.getTypedRuleContext(m,e)};enterRule(e){e instanceof a&&e.enterOrExpression(this)}exitRule(e){e instanceof a&&e.exitOrExpression(this)}}c.OrExpressionContext=y;class C extends m{constructor(e,t){super(e),super.copyFrom(t)}expression=function(e){return void 0===e&&(e=null),null===e?this.getTypedRuleContexts(m):this.getTypedRuleContext(m,e)};enterRule(e){e instanceof a&&e.enterAndExpression(this)}exitRule(e){e instanceof a&&e.exitAndExpression(this)}}c.AndExpressionContext=C;class S extends m{constructor(e,t){super(e),super.copyFrom(t)}expression=function(e){return void 0===e&&(e=null),null===e?this.getTypedRuleContexts(m):this.getTypedRuleContext(m,e)};enterRule(e){e instanceof a&&e.enterMembershipExpression(this)}exitRule(e){e instanceof a&&e.exitMembershipExpression(this)}}c.MembershipExpressionContext=S;class b extends m{constructor(e,t){super(e),super.copyFrom(t)}expression=function(e){return void 0===e&&(e=null),null===e?this.getTypedRuleContexts(m):this.getTypedRuleContext(m,e)};enterRule(e){e instanceof a&&e.enterInequalityExpression(this)}exitRule(e){e instanceof a&&e.exitInequalityExpression(this)}}c.InequalityExpressionContext=b;class E extends m{constructor(e,t){super(e),super.copyFrom(t)}expression(){return this.getTypedRuleContext(m,0)}invocation(){return this.getTypedRuleContext(F,0)}enterRule(e){e instanceof a&&e.enterInvocationExpression(this)}exitRule(e){e instanceof a&&e.exitInvocationExpression(this)}}c.InvocationExpressionContext=E;class x extends m{constructor(e,t){super(e),super.copyFrom(t)}expression=function(e){return void 0===e&&(e=null),null===e?this.getTypedRuleContexts(m):this.getTypedRuleContext(m,e)};enterRule(e){e instanceof a&&e.enterEqualityExpression(this)}exitRule(e){e instanceof a&&e.exitEqualityExpression(this)}}c.EqualityExpressionContext=x;class v extends m{constructor(e,t){super(e),super.copyFrom(t)}expression=function(e){return void 0===e&&(e=null),null===e?this.getTypedRuleContexts(m):this.getTypedRuleContext(m,e)};enterRule(e){e instanceof a&&e.enterImpliesExpression(this)}exitRule(e){e instanceof a&&e.exitImpliesExpression(this)}}c.ImpliesExpressionContext=v;class R extends m{constructor(e,t){super(e),super.copyFrom(t)}term(){return this.getTypedRuleContext(M,0)}enterRule(e){e instanceof a&&e.enterTermExpression(this)}exitRule(e){e instanceof a&&e.exitTermExpression(this)}}c.TermExpressionContext=R;class _ extends m{constructor(e,t){super(e),super.copyFrom(t)}expression(){return this.getTypedRuleContext(m,0)}typeSpecifier(){return this.getTypedRuleContext(X,0)}enterRule(e){e instanceof a&&e.enterTypeExpression(this)}exitRule(e){e instanceof a&&e.exitTypeExpression(this)}}c.TypeExpressionContext=_;class M extends i.ParserRuleContext{constructor(e,t,n){void 0===t&&(t=null),null==n&&(n=-1),super(t,n),this.parser=e,this.ruleIndex=c.RULE_term}copyFrom(e){super.copyFrom(e)}}class I extends M{constructor(e,t){super(e),super.copyFrom(t)}externalConstant(){return this.getTypedRuleContext(q,0)}enterRule(e){e instanceof a&&e.enterExternalConstantTerm(this)}exitRule(e){e instanceof a&&e.exitExternalConstantTerm(this)}}c.ExternalConstantTermContext=I;class D extends M{constructor(e,t){super(e),super.copyFrom(t)}literal(){return this.getTypedRuleContext(P,0)}enterRule(e){e instanceof a&&e.enterLiteralTerm(this)}exitRule(e){e instanceof a&&e.exitLiteralTerm(this)}}c.LiteralTermContext=D;class T extends M{constructor(e,t){super(e),super.copyFrom(t)}expression(){return this.getTypedRuleContext(m,0)}enterRule(e){e instanceof a&&e.enterParenthesizedTerm(this)}exitRule(e){e instanceof a&&e.exitParenthesizedTerm(this)}}c.ParenthesizedTermContext=T;class k extends M{constructor(e,t){super(e),super.copyFrom(t)}invocation(){return this.getTypedRuleContext(F,0)}enterRule(e){e instanceof a&&e.enterInvocationTerm(this)}exitRule(e){e instanceof a&&e.exitInvocationTerm(this)}}c.InvocationTermContext=k;class P extends i.ParserRuleContext{constructor(e,t,n){void 0===t&&(t=null),null==n&&(n=-1),super(t,n),this.parser=e,this.ruleIndex=c.RULE_literal}copyFrom(e){super.copyFrom(e)}}class O extends P{constructor(e,t){super(e),super.copyFrom(t)}TIME(){return this.getToken(c.TIME,0)}enterRule(e){e instanceof a&&e.enterTimeLiteral(this)}exitRule(e){e instanceof a&&e.exitTimeLiteral(this)}}c.TimeLiteralContext=O;class L extends P{constructor(e,t){super(e),super.copyFrom(t)}enterRule(e){e instanceof a&&e.enterNullLiteral(this)}exitRule(e){e instanceof a&&e.exitNullLiteral(this)}}c.NullLiteralContext=L;class A extends P{constructor(e,t){super(e),super.copyFrom(t)}DATETIME(){return this.getToken(c.DATETIME,0)}enterRule(e){e instanceof a&&e.enterDateTimeLiteral(this)}exitRule(e){e instanceof a&&e.exitDateTimeLiteral(this)}}c.DateTimeLiteralContext=A;class N extends P{constructor(e,t){super(e),super.copyFrom(t)}STRING(){return this.getToken(c.STRING,0)}enterRule(e){e instanceof a&&e.enterStringLiteral(this)}exitRule(e){e instanceof a&&e.exitStringLiteral(this)}}c.StringLiteralContext=N;class w extends P{constructor(e,t){super(e),super.copyFrom(t)}enterRule(e){e instanceof a&&e.enterBooleanLiteral(this)}exitRule(e){e instanceof a&&e.exitBooleanLiteral(this)}}c.BooleanLiteralContext=w;class U extends P{constructor(e,t){super(e),super.copyFrom(t)}NUMBER(){return this.getToken(c.NUMBER,0)}enterRule(e){e instanceof a&&e.enterNumberLiteral(this)}exitRule(e){e instanceof a&&e.exitNumberLiteral(this)}}c.NumberLiteralContext=U;class B extends P{constructor(e,t){super(e),super.copyFrom(t)}quantity(){return this.getTypedRuleContext($,0)}enterRule(e){e instanceof a&&e.enterQuantityLiteral(this)}exitRule(e){e instanceof a&&e.exitQuantityLiteral(this)}}c.QuantityLiteralContext=B;class q extends i.ParserRuleContext{constructor(e,t,n){void 0===t&&(t=null),null==n&&(n=-1),super(t,n),this.parser=e,this.ruleIndex=c.RULE_externalConstant}identifier(){return this.getTypedRuleContext(ee,0)}STRING(){return this.getToken(c.STRING,0)}enterRule(e){e instanceof a&&e.enterExternalConstant(this)}exitRule(e){e instanceof a&&e.exitExternalConstant(this)}}class F extends i.ParserRuleContext{constructor(e,t,n){void 0===t&&(t=null),null==n&&(n=-1),super(t,n),this.parser=e,this.ruleIndex=c.RULE_invocation}copyFrom(e){super.copyFrom(e)}}class V extends F{constructor(e,t){super(e),super.copyFrom(t)}enterRule(e){e instanceof a&&e.enterTotalInvocation(this)}exitRule(e){e instanceof a&&e.exitTotalInvocation(this)}}c.TotalInvocationContext=V;class G extends F{constructor(e,t){super(e),super.copyFrom(t)}enterRule(e){e instanceof a&&e.enterThisInvocation(this)}exitRule(e){e instanceof a&&e.exitThisInvocation(this)}}c.ThisInvocationContext=G;class z extends F{constructor(e,t){super(e),super.copyFrom(t)}enterRule(e){e instanceof a&&e.enterIndexInvocation(this)}exitRule(e){e instanceof a&&e.exitIndexInvocation(this)}}c.IndexInvocationContext=z;class H extends F{constructor(e,t){super(e),super.copyFrom(t)}functn(){return this.getTypedRuleContext(Q,0)}enterRule(e){e instanceof a&&e.enterFunctionInvocation(this)}exitRule(e){e instanceof a&&e.exitFunctionInvocation(this)}}c.FunctionInvocationContext=H;class j extends F{constructor(e,t){super(e),super.copyFrom(t)}identifier(){return this.getTypedRuleContext(ee,0)}enterRule(e){e instanceof a&&e.enterMemberInvocation(this)}exitRule(e){e instanceof a&&e.exitMemberInvocation(this)}}c.MemberInvocationContext=j;class Q extends i.ParserRuleContext{constructor(e,t,n){void 0===t&&(t=null),null==n&&(n=-1),super(t,n),this.parser=e,this.ruleIndex=c.RULE_functn}identifier(){return this.getTypedRuleContext(ee,0)}paramList(){return this.getTypedRuleContext(K,0)}enterRule(e){e instanceof a&&e.enterFunctn(this)}exitRule(e){e instanceof a&&e.exitFunctn(this)}}class K extends i.ParserRuleContext{constructor(e,t,n){void 0===t&&(t=null),null==n&&(n=-1),super(t,n),this.parser=e,this.ruleIndex=c.RULE_paramList}expression=function(e){return void 0===e&&(e=null),null===e?this.getTypedRuleContexts(m):this.getTypedRuleContext(m,e)};enterRule(e){e instanceof a&&e.enterParamList(this)}exitRule(e){e instanceof a&&e.exitParamList(this)}}class $ extends i.ParserRuleContext{constructor(e,t,n){void 0===t&&(t=null),null==n&&(n=-1),super(t,n),this.parser=e,this.ruleIndex=c.RULE_quantity}NUMBER(){return this.getToken(c.NUMBER,0)}unit(){return this.getTypedRuleContext(J,0)}enterRule(e){e instanceof a&&e.enterQuantity(this)}exitRule(e){e instanceof a&&e.exitQuantity(this)}}class J extends i.ParserRuleContext{constructor(e,t,n){void 0===t&&(t=null),null==n&&(n=-1),super(t,n),this.parser=e,this.ruleIndex=c.RULE_unit}dateTimePrecision(){return this.getTypedRuleContext(W,0)}pluralDateTimePrecision(){return this.getTypedRuleContext(Y,0)}STRING(){return this.getToken(c.STRING,0)}enterRule(e){e instanceof a&&e.enterUnit(this)}exitRule(e){e instanceof a&&e.exitUnit(this)}}class W extends i.ParserRuleContext{constructor(e,t,n){void 0===t&&(t=null),null==n&&(n=-1),super(t,n),this.parser=e,this.ruleIndex=c.RULE_dateTimePrecision}enterRule(e){e instanceof a&&e.enterDateTimePrecision(this)}exitRule(e){e instanceof a&&e.exitDateTimePrecision(this)}}class Y extends i.ParserRuleContext{constructor(e,t,n){void 0===t&&(t=null),null==n&&(n=-1),super(t,n),this.parser=e,this.ruleIndex=c.RULE_pluralDateTimePrecision}enterRule(e){e instanceof a&&e.enterPluralDateTimePrecision(this)}exitRule(e){e instanceof a&&e.exitPluralDateTimePrecision(this)}}class X extends i.ParserRuleContext{constructor(e,t,n){void 0===t&&(t=null),null==n&&(n=-1),super(t,n),this.parser=e,this.ruleIndex=c.RULE_typeSpecifier}qualifiedIdentifier(){return this.getTypedRuleContext(Z,0)}enterRule(e){e instanceof a&&e.enterTypeSpecifier(this)}exitRule(e){e instanceof a&&e.exitTypeSpecifier(this)}}class Z extends i.ParserRuleContext{constructor(e,t,n){void 0===t&&(t=null),null==n&&(n=-1),super(t,n),this.parser=e,this.ruleIndex=c.RULE_qualifiedIdentifier}identifier=function(e){return void 0===e&&(e=null),null===e?this.getTypedRuleContexts(ee):this.getTypedRuleContext(ee,e)};enterRule(e){e instanceof a&&e.enterQualifiedIdentifier(this)}exitRule(e){e instanceof a&&e.exitQualifiedIdentifier(this)}}class ee extends i.ParserRuleContext{constructor(e,t,n){void 0===t&&(t=null),null==n&&(n=-1),super(t,n),this.parser=e,this.ruleIndex=c.RULE_identifier}IDENTIFIER(){return this.getToken(c.IDENTIFIER,0)}DELIMITEDIDENTIFIER(){return this.getToken(c.DELIMITEDIDENTIFIER,0)}enterRule(e){e instanceof a&&e.enterIdentifier(this)}exitRule(e){e instanceof a&&e.exitIdentifier(this)}}c.EntireExpressionContext=u,c.ExpressionContext=m,c.TermContext=M,c.LiteralContext=P,c.ExternalConstantContext=q,c.InvocationContext=F,c.FunctnContext=Q,c.ParamListContext=K,c.QuantityContext=$,c.UnitContext=J,c.DateTimePrecisionContext=W,c.PluralDateTimePrecisionContext=Y,c.TypeSpecifierContext=X,c.QualifiedIdentifierContext=Z,c.IdentifierContext=ee,e.exports=c},1231:(e,t,n)=>{const i=n(4732),a=n(8629).lG.getInstance(),r=n(2864);let o="[0-9][0-9](\\:[0-9][0-9](\\:[0-9][0-9](\\.[0-9]+)?)?)?(Z|(\\+|-)[0-9][0-9]\\:[0-9][0-9])?",s=new RegExp("^T?"+o+"$"),l=new RegExp("^[0-9][0-9][0-9][0-9](-[0-9][0-9](-[0-9][0-9](T"+o+")?)?)?Z?$"),c=new RegExp("^[0-9][0-9][0-9][0-9](-[0-9][0-9](-[0-9][0-9])?)?$"),u=new RegExp("^[0-9][0-9][0-9][0-9](-[0-9][0-9](-[0-9][0-9](T[0-9][0-9](\\:[0-9][0-9](\\:[0-9][0-9](\\.[0-9]+)?))(Z|(\\+|-)[0-9][0-9]\\:[0-9][0-9]))))$");class m{equals(){return!1}equivalentTo(){return!1}toString(){return this.asStr?this.asStr:super.toString()}toJSON(){return this.toString()}compare(){throw"Comparison not implemented for "+this.constructor.name}plus(){throw"Addition not implemented for "+this.constructor.name}mul(){throw"Multiplication not implemented for "+this.constructor.name}div(){throw"Division not implemented for "+this.constructor.name}}class d extends m{constructor(e,t){super(),this.asStr=e+" "+t,this.value=e,this.unit=t}equals(e){if(!(e instanceof this.constructor))return!1;const t=d._calendarDuration2Seconds[this.unit],n=d._calendarDuration2Seconds[e.unit];if(!t!=!n&&(t>1||n>1))return null;if(this.unit===e.unit)return r.isEqual(this.value,e.value);const i=this._compareYearsAndMonths(e);if(i)return i.isEqual;const o=d.toUcumQuantity(this.value,this.unit),s=d.toUcumQuantity(e.value,e.unit),l=a.convertUnitTo(s.unit,s.value,o.unit);return"succeeded"===l.status&&r.isEqual(o.value,l.toVal)}equivalentTo(e){if(!(e instanceof this.constructor))return!1;if(this.unit===e.unit)return r.isEquivalent(this.value,e.value);const t=d.getEquivalentUcumUnitCode(this.unit),n=d.getEquivalentUcumUnitCode(e.unit),i=a.convertUnitTo(n,e.value,t);return"succeeded"===i.status&&r.isEquivalent(this.value,i.toVal)}compare(e){if(this.unit===e.unit)return this.value-e.value;const t=d._calendarDuration2Seconds[this.unit],n=d._calendarDuration2Seconds[e.unit];if(!t!=!n&&(t>1||n>1))return null;const i=d.getEquivalentUcumUnitCode(this.unit),r=d.getEquivalentUcumUnitCode(e.unit),o=a.convertUnitTo(r,e.value,i);return"succeeded"!==o.status?null:this.value-o.toVal}plus(e){const t=d._yearMonthConversionFactor[this.unit],n=d._yearMonthConversionFactor[e.unit];if(t&&n)return new d(this.value+e.value*n/t,this.unit);const i=d._calendarDuration2Seconds[this.unit],r=d._calendarDuration2Seconds[e.unit];if(!i!=!r&&(i>1||r>1))return null;const o=i?"s":this.unit.replace(f,""),s=(i||1)*this.value,l=r?"s":e.unit.replace(f,""),c=(r||1)*e.value,u=a.convertUnitTo(l,c,o);return"succeeded"!==u.status||u.fromUnit.isSpecial_||u.toUnit.isSpecial_?null:new d(s+u.toVal,o)}mul(e){const t=d._calendarDuration2Seconds[this.unit],n=d._calendarDuration2Seconds[e.unit];if(t>1&&"'1'"!==e.unit||n>1&&"'1'"!==this.unit)return null;const i=this.convToUcumUnits(this,t);if(!i)return null;const a=this.convToUcumUnits(e,n);return a?"'1'"===this.unit?new d(this.value*e.value,e.unit):"'1'"===e.unit?new d(this.value*e.value,this.unit):new d(i.value*a.value,`'(${i.unit}).(${a.unit})'`):null}div(e){if(0===e.value)return null;const t=d._calendarDuration2Seconds[this.unit],n=d._calendarDuration2Seconds[e.unit];if(t)if(n){const t=d._yearMonthConversionFactor[this.unit],n=d._yearMonthConversionFactor[e.unit];if(t&&n)return new d(this.value*t/(e.value*n),"'1'")}else{if("'1'"===e.unit)return new d(this.value/e.value,this.unit);if(t>1)return null}else if(n>1)return null;const i=this.convToUcumUnits(this,t);if(!i)return null;const r=this.convToUcumUnits(e,n);if(!r)return null;const o="1"===r.unit?i.unit:`(${i.unit})/(${r.unit})`,s=a.convertToBaseUnits(o,i.value/r.value);return"succeeded"!==s.status?null:new d(s.magnitude,`'${Object.keys(s.unitToExp).map((e=>e+s.unitToExp[e])).join(".")||"1"}'`)}convToUcumUnits(e,t){if(t)return{value:t*e.value,unit:"s"};{const t=e.unit.replace(f,""),n=a.convertToBaseUnits(t,e.value);return"succeeded"!==n.status||n.fromUnitIsSpecial?null:{value:n.magnitude,unit:Object.keys(n.unitToExp).map((e=>e+n.unitToExp[e])).join(".")||"1"}}}_compareYearsAndMonths(e){const t=d._yearMonthConversionFactor[this.unit],n=d._yearMonthConversionFactor[e.unit];return t&&n?{isEqual:r.isEqual(this.value*t,e.value*n)}:null}}const f=/^'|'$/g;d.getEquivalentUcumUnitCode=function(e){return d.mapTimeUnitsToUCUMCode[e]||e.replace(f,"")},d.toUcumQuantity=function(e,t){const n=d._calendarDuration2Seconds[t];return n?{value:n*e,unit:"s"}:{value:e,unit:t.replace(f,"")}},d.convUnitTo=function(e,t,n){const i=d._yearMonthConversionFactor[e],r=d._yearMonthConversionFactor[n];if(i&&r)return new d(i*t/r,n);const o=d._calendarDuration2Seconds[e],s=d._calendarDuration2Seconds[n];if(s){if(o)return new d(o*t/s,n);{const i=a.convertUnitTo(e.replace(/^'|'$/g,""),t,"s");if("succeeded"===i.status)return new d(i.toVal/s,n)}}else{const i=o?a.convertUnitTo("s",o*t,n.replace(/^'|'$/g,"")):a.convertUnitTo(e.replace(/^'|'$/g,""),t,n.replace(/^'|'$/g,""));if("succeeded"===i.status)return new d(i.toVal,n)}return null},d._calendarDuration2Seconds={years:31536e3,months:2592e3,weeks:604800,days:86400,hours:3600,minutes:60,seconds:1,milliseconds:.001,year:31536e3,month:2592e3,week:604800,day:86400,hour:3600,minute:60,second:1,millisecond:.001},d._yearMonthConversionFactor={years:12,months:1,year:12,month:1},d.dateTimeArithmeticDurationUnits={years:"year",months:"month",weeks:"week",days:"day",hours:"hour",minutes:"minute",seconds:"second",milliseconds:"millisecond",year:"year",month:"month",week:"week",day:"day",hour:"hour",minute:"minute",second:"second",millisecond:"millisecond","'s'":"second","'ms'":"millisecond"},d.mapUCUMCodeToTimeUnits={a:"year",mo:"month",wk:"week",d:"day",h:"hour",min:"minute",s:"second",ms:"millisecond"},d.mapTimeUnitsToUCUMCode=Object.keys(d.mapUCUMCodeToTimeUnits).reduce((function(e,t){return e[d.mapUCUMCodeToTimeUnits[t]]=t,e[d.mapUCUMCodeToTimeUnits[t]+"s"]=t,e}),{});class p extends m{constructor(e){super(),this.asStr=e}plus(e){const t=e.unit;let n=d.dateTimeArithmeticDurationUnits[t];if(!n)throw new Error("For date/time arithmetic, the unit of the quantity must be one of the following time-based units: "+Object.keys(d.dateTimeArithmeticDurationUnits));const i=this.constructor,a=i._timeUnitToDatePrecision[n];if(void 0===a)throw new Error("Unsupported unit for +.  The unit should be one of "+Object.keys(i._timeUnitToDatePrecision).join(", ")+".");let r=e.value;const o=i===h;if((o?a<2:a<5)&&(r=Math.trunc(r)),this._getPrecision()<a){const e=i._datePrecisionToTimeUnit[this._getPrecision()];if("second"!==e){const t=d.convUnitTo(n,r,e);n=t.unit,r=Math.trunc(t.value)}}const s=p.timeUnitToAddFn[n](this._getDateObj(),r);let l=this._getPrecision();o&&(l+=3);let c=g.isoDateTime(s,l);return o&&(c=c.slice(c.indexOf("T")+1)),new i(c)}equals(e){var t;if(e instanceof this.constructor||this instanceof e.constructor){var n=this._getPrecision(),i=e._getPrecision();if(n==i)t=this._getDateObj().getTime()==e._getDateObj().getTime();else{var a=n<=i?n:i,r=this._getDateObj().toISOString(),o=e._getDateObj().toISOString();this.constructor===h&&(a+=3,n+=3,i+=3);for(var s=n>2?new g(r)._getTimeParts():this._getTimeParts(),l=i>2?new g(o)._getTimeParts():e._getTimeParts(),c=0;c<=a&&!1!==t;++c)t=s[c]==l[c];t&&(t=void 0)}}else t=!1;return t}equivalentTo(e){var t=e instanceof this.constructor;return t&&(t=this._getPrecision()==e._getPrecision())&&(t=this._getDateObj().getTime()==e._getDateObj().getTime()),t}compare(e){var t=this._getPrecision(),n=e._getPrecision(),i=t<=n?this._getDateObj().getTime():this._dateAtPrecision(n).getTime(),a=n<=t?e._getDateObj().getTime():e._dateAtPrecision(t).getTime();return t!==n&&i===a?null:i-a}_getPrecision(){return void 0===this.precision&&this._getMatchData(),this.precision}_getMatchData(e,t){if(void 0===this.timeMatchData&&(this.timeMatchData=this.asStr.match(e),this.timeMatchData))for(let e=t;e>=0&&void 0===this.precision;--e)this.timeMatchData[e]&&(this.precision=e);return this.timeMatchData}_getTimeParts(e){var t=[];t=[e[0]];var n=e[4];if(n){let e=t[0];t[0]=e.slice(0,e.length-n.length)}var i=e[1];if(i){let n=t[0];t[0]=n.slice(0,n.length-i.length),t[1]=i;var a=e[2];if(a){t[1]=i.slice(0,i.length-a.length),t[2]=a;var r=e[3];r&&(t[2]=a.slice(0,a.length-r.length),t[3]=r)}}return t}_getDateObj(){if(!this.dateObj){var e=this._getPrecision();this.dateObj=this._dateAtPrecision(e)}return this.dateObj}_createDate(e,t,n,a,r,o,s,l){var c=new Date(e,t,n,a,r,o,s);if(l){var u=c.getTimezoneOffset(),m=0;if("Z"!=l){var d=l.split(":"),f=parseInt(d[0]);m=parseInt(d[1]),f<0&&(m=-m),m+=60*f}c=i(c,-u-m)}return c}}p.timeUnitToAddFn={year:n(4911),month:n(2136),week:n(9300),day:n(9856),hour:n(9474),minute:n(4732),second:n(908),millisecond:n(4825)};class g extends p{constructor(e){super(e)}compare(e){if(!(e instanceof g))throw"Invalid comparison of a DateTime with something else";return super.compare(e)}_getMatchData(){return super._getMatchData(l,5)}_getTimeParts(){if(!this.timeParts){let t=this._getMatchData(),n=t[0];this.timeParts=[n];var e=t[1];if(e){this.timeParts[0]=n.slice(0,n.length-e.length),this.timeParts[1]=e;let i=t[2];if(i){this.timeParts[1]=e.slice(0,e.length-i.length),this.timeParts[2]=i;let n=t[3];n&&(this.timeParts[2]=i.slice(0,i.length-n.length),"T"===n[0]&&(t[3]=n.slice(1)),this.timeParts=this.timeParts.concat(super._getTimeParts(t.slice(3))))}}}return this.timeParts}_dateAtPrecision(e){var t=this._getTimeParts(),n=this._getMatchData()[7],i=this._getPrecision(),a=parseInt(t[0]),r=i>0?parseInt(t[1].slice(1))-1:0,o=i>1?parseInt(t[2].slice(1)):1,s=i>2?parseInt(t[3]):0,l=i>3?parseInt(t[4].slice(1)):0,c=i>4?parseInt(t[5].slice(1)):0,u=t.length>6?parseInt(t[6].slice(1)):0,m=this._createDate(a,r,o,s,l,c,u,n);return e<i&&(a=m.getFullYear(),r=e>0?m.getMonth():0,o=e>1?m.getDate():1,s=e>2?m.getHours():0,l=e>3?m.getMinutes():0,m=new Date(a,r,o,s,l)),m}}g.checkString=function(e){let t=new g(e);return t._getMatchData()||(t=null),t},g._timeUnitToDatePrecision={year:0,month:1,week:2,day:2,hour:3,minute:4,second:5,millisecond:6},g._datePrecisionToTimeUnit=["year","month","day","hour","minute","second","millisecond"];class h extends p{constructor(e){"T"==e[0]&&(e=e.slice(1)),super(e)}compare(e){if(!(e instanceof h))throw"Invalid comparison of a time with something else";return super.compare(e)}_dateAtPrecision(e){var t=this._getTimeParts(),n=this._getMatchData()[4],i=this._getPrecision(),a=2010,r=parseInt(t[0]),o=i>0?parseInt(t[1].slice(1)):0,s=i>1?parseInt(t[2].slice(1)):0,l=t.length>3?parseInt(t[3].slice(1)):0,c=this._createDate(a,0,1,r,o,s,l,n);return n&&(c.setYear(a),c.setMonth(0),c.setDate(1)),e<i&&(r=c.getHours(),o=e>0?c.getMinutes():0,c=new Date(a,0,1,r,o)),c}_getMatchData(){return super._getMatchData(s,2)}_getTimeParts(){return this.timeParts||(this.timeParts=super._getTimeParts(this._getMatchData())),this.timeParts}}function y(e,t){var n=e;return 3===t&&e<100&&(n="0"+e),e<10&&(n="0"+n),n}h.checkString=function(e){let t=new h(e);return t._getMatchData()||(t=null),t},h._timeUnitToDatePrecision={hour:0,minute:1,second:2,millisecond:3},h._datePrecisionToTimeUnit=["hour","minute","second","millisecond"],g.isoDateTime=function(e,t){void 0===t&&(t=5);var n=""+e.getFullYear();if(t>0&&(n+="-"+y(e.getMonth()+1),t>1&&(n+="-"+y(e.getDate()),t>2&&(n+="T"+g.isoTime(e,t-3)))),t>2){var i=e.getTimezoneOffset(),a=i<0?"+":"-",r=(i=Math.abs(i))%60;n+=a+y((i-r)/60)+":"+y(r)}return n},g.isoTime=function(e,t){void 0===t&&(t=2);let n=""+y(e.getHours());return t>0&&(n+=":"+y(e.getMinutes()),t>1&&(n+=":"+y(e.getSeconds()),e.getMilliseconds()&&(n+="."+y(e.getMilliseconds(),3)))),n};class C extends g{constructor(e){super(e)}_getMatchData(){return p.prototype._getMatchData.apply(this,[c,2])}}C.checkString=function(e){let t=new C(e);return t._getMatchData()||(t=null),t},C.isoDate=function(e,t){return(void 0===t||t>2)&&(t=2),g.isoDateTime(e,t)};class S extends g{constructor(e){super(e)}_getMatchData(){return p.prototype._getMatchData.apply(this,[u,5])}}S.checkString=function(e){let t=new S(e);return t._getMatchData()||(t=null),t};class b{constructor(e,t,n,i,a){e?.resourceType&&(n=e.resourceType,a=e.resourceType),this.parentResNode=t||null,this.path=n||null,this.data=e,this._data=i||{},this.fhirNodeDataType=a||null}getTypeInfo(){if(!this.typeInfo){let e;x.model&&(/^System\.(.*)$/.test(this.fhirNodeDataType)?e=new x({namespace:x.System,name:RegExp.$1}):this.fhirNodeDataType&&(e=new x({namespace:x.FHIR,name:this.fhirNodeDataType}))),this.typeInfo=e||x.createByValueInSystemNamespace(this.data)}return this.typeInfo}toJSON(){return JSON.stringify(this.data)}convertData(){if(!this.convertedData){var e=this.data;if(null!=e){const t=x.typeToClassWithCheckString[this.path];if(t)e=t.checkString(e)||e;else if(x.isType(this.path,"Quantity")&&"http://unitsofmeasure.org"===e?.system&&"number"==typeof e.value&&"string"==typeof e.code){if(void 0!==e.comparator)throw new Error("Cannot convert a FHIR.Quantity that has a comparator");e=new d(e.value,d.mapUCUMCodeToTimeUnits[e.code]||"'"+e.code+"'")}}this.convertedData=e}return this.convertedData}}b.makeResNode=function(e,t,n,i,a=null){return e instanceof b?e:new b(e,t,n,i,a)};const E=new Set;["Boolean","String","Integer","Decimal","Date","DateTime","Time","Quantity"].forEach((e=>E.add(e)));class x{constructor({name:e,namespace:t}){this.name=e,this.namespace=t}static model=null;is(e){return e instanceof x&&(!this.namespace||!e.namespace||this.namespace===e.namespace)&&(!x.model||this.namespace&&this.namespace!==x.FHIR?this.name===e.name:x.isType(this.name,e.name))}toString(){return(this.namespace?this.namespace+".":"")+this.name}isValid(){let e=!1;return"System"===this.namespace?e=E.has(this.name):"FHIR"===this.namespace?e=x.model?.availableTypes.has(this.name):this.namespace||(e=E.has(this.name)||x.model?.availableTypes.has(this.name)),e}}x.typeToClassWithCheckString={date:C,dateTime:g,instant:S,time:h},x.isType=function(e,t){do{if(e===t)return!0}while(e=x.model?.type2Parent[e]);return!1},x.System="System",x.FHIR="FHIR",x.createByValueInSystemNamespace=function(e){let t=typeof e;return Number.isInteger(e)?t="integer":"number"===t?t="decimal":e instanceof C?t="date":e instanceof g?t="dateTime":e instanceof h?t="time":e instanceof d&&(t="Quantity"),t=t.replace(/^\w/,(e=>e.toUpperCase())),new x({namespace:x.System,name:t})},x.fromValue=function(e){return e instanceof b?e.getTypeInfo():x.createByValueInSystemNamespace(e)};const v=new Set;["instant","time","date","dateTime","base64Binary","decimal","integer64","boolean","string","code","markdown","id","integer","unsignedInt","positiveInt","uri","oid","uuid","canonical","url","Integer","Decimal","String","Date","DateTime","Time"].forEach((e=>v.add(e))),x.isPrimitive=function(e){return v.has(e.name)},e.exports={FP_Type:m,FP_TimeBase:p,FP_Date:C,FP_DateTime:g,FP_Instant:S,FP_Time:h,FP_Quantity:d,timeRE:s,dateTimeRE:l,dateRE:c,instantRE:u,ResourceNode:b,TypeInfo:x,typeFn:function(e){return e.map((e=>x.fromValue(e)))},isFn:function(e,t){if(0===e.length)return[];if(e.length>1)throw new Error("Expected singleton on left side of 'is', got "+JSON.stringify(e));return x.fromValue(e[0]).is(t)},asFn:function(e,t){if(0===e.length)return[];if(e.length>1)throw new Error("Expected singleton on left side of 'as', got "+JSON.stringify(e));return x.fromValue(e[0]).is(t)?e:[]}}},1535:(e,t,n)=>{const{DFAState:i}=n(1576),{ATNConfigSet:a}=n(9191),{getCachedPredictionContext:r}=n(2482),{Map:o}=n(4623);class s{constructor(e,t){return this.atn=e,this.sharedContextCache=t,this}getCachedContext(e){if(null===this.sharedContextCache)return e;const t=new o;return r(e,this.sharedContextCache,t)}}s.ERROR=new i(2147483647,new a),e.exports=s},1563:(e,t,n)=>{var i=n(4597);e.exports=Number.isInteger||function(e){return"number"==typeof e&&i(e)&&Math.floor(e)===e}},1576:(e,t,n)=>{const{ATNConfigSet:i}=n(9191),{Hash:a,Set:r}=n(4623);class o{constructor(e,t){return null===e&&(e=-1),null===t&&(t=new i),this.stateNumber=e,this.configs=t,this.edges=null,this.isAcceptState=!1,this.prediction=0,this.lexerActionExecutor=null,this.requiresFullContext=!1,this.predicates=null,this}getAltSet(){const e=new r;if(null!==this.configs)for(let t=0;t<this.configs.length;t++){const n=this.configs[t];e.add(n.alt)}return 0===e.length?null:e}equals(e){return this===e||e instanceof o&&this.configs.equals(e.configs)}toString(){let e=this.stateNumber+":"+this.configs;return this.isAcceptState&&(e+="=>",null!==this.predicates?e+=this.predicates:e+=this.prediction),e}hashCode(){const e=new a;return e.update(this.configs),e.finish()}}e.exports={DFAState:o,PredPrediction:class{constructor(e,t){this.alt=t,this.pred=e}toString(){return"("+this.pred+", "+this.alt+")"}}}},1593:(e,t,n)=>{t.l=void 0;var i=n(5313),a=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=r();if(t&&t.has(e))return t.get(e);var n={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in e)if(Object.prototype.hasOwnProperty.call(e,a)){var o=i?Object.getOwnPropertyDescriptor(e,a):null;o&&(o.get||o.set)?Object.defineProperty(n,a,o):n[a]=e[a]}return n.default=e,t&&t.set(e,n),n}(n(5413));function r(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return r=function(){return e},e}var o=n(4435).Ucum,s=n(8314).UnitTables,l=n(7750).o;class c{constructor(){0===s.getInstance().unitsCount()&&i.ucumJsonDefs.loadJsonDefs(),this.uStrParser_=l.getInstance()}useHTMLInMessages(e){void 0===e&&(e=!0),this.uStrParser_.useHTMLInMessages(e)}useBraceMsgForEachString(e){void 0===e&&(e=!0),this.uStrParser_.useBraceMsgForEachString(e)}validateUnitString(e,t,n){void 0===t&&(t=!1),void 0===n&&(n="validate");let i=this.getSpecifiedUnit(e,n,t),a=i.unit,r=a?{ucumCode:i.origString,unit:{code:a.csCode_,name:a.name_,guidance:a.guidance_}}:{ucumCode:null};return r.status=i.status,i.suggestions&&(r.suggestions=i.suggestions),r.msg=i.retMsg,r}convertUnitTo(e,t,n,i,a){void 0===i&&(i=!1),void 0===a&&(a=null);let r={status:"failed",toVal:null,msg:[]};if(e&&(e=e.trim()),e&&""!=e||(r.status="error",r.msg.push('No "from" unit expression specified.')),this._checkFromVal(t,r),n&&(n=n.trim()),n&&""!=n||(r.status="error",r.msg.push('No "to" unit expression specified.')),"error"!==r.status)try{let o=null,s=this.getSpecifiedUnit(e,"convert",i);o=s.unit,s.retMsg&&(r.msg=r.msg.concat(s.retMsg)),s.suggestions&&(r.suggestions={},r.suggestions.from=s.suggestions),o||r.msg.push(`Unable to find a unit for ${e}, so no conversion could be performed.`);let l=null;if(s=this.getSpecifiedUnit(n,"convert",i),l=s.unit,s.retMsg&&(r.msg=r.msg.concat(s.retMsg)),s.suggestions&&(r.suggestions||(r.suggestions={}),r.suggestions.to=s.suggestions),l||r.msg.push(`Unable to find a unit for ${n}, so no conversion could be performed.`),o&&l)try{if(a){if(0!==o.moleExp_&&0!==l.moleExp_)throw new Error("A molecular weight was specified but a mass <-> mole conversion cannot be executed for two mole-based units.  No conversion was attempted.");if(0===o.moleExp_&&0===l.moleExp_)throw new Error("A molecular weight was specified but a mass <-> mole conversion cannot be executed when neither unit is mole-based.  No conversion was attempted.");if(!o.isMoleMassCommensurable(l))throw new Error(`Sorry.  ${e} cannot be converted to ${n}.`);0!==o.moleExp_?r.toVal=o.convertMolToMass(t,l,a):r.toVal=o.convertMassToMol(t,l,a)}else r.toVal=l.convertFrom(t,o);r.status="succeeded",r.fromUnit=o,r.toUnit=l}catch(e){r.status="failed",r.msg.push(e.message)}}catch(e){e.message==o.needMoleWeightMsg_?r.status="failed":r.status="error",r.msg.push(e.message)}return r}convertToBaseUnits(e,t){let n={};if(this._checkFromVal(t,n),!n.status){let i=this.getSpecifiedUnit(e,"validate");n={status:"valid"==i.status?"succeeded":i.status};let a=i.unit;if(n.msg=i.retMsg||[],a){if(a.isArbitrary_)n.msg.push("Arbitrary units cannot be converted to base units or other units."),n.status="failed";else if("succeeded"==n.status){let e={},i=a.dim_?.dimVec_,r="1";if(i){let t=s.getInstance().dimVecIndexToBaseUnit_;for(let n=0,a=i.length;n<a;++n){let a=i[n];a&&(e[t[n]]=a,r+="."+t[n]+a)}}let o=this.getSpecifiedUnit(r,"validate"),l=o.unit;if("valid"!==o.status)n.msg.push("Unable construct base unit string; tried "+r),n.status="error";else{try{n.magnitude=l.convertFrom(t,a)}catch(e){n.msg.push(e.toString()),n.status="error"}"succeeded"==n.status&&(n.unitToExp=e,n.fromUnitIsSpecial=a.isSpecial_)}}}else 0==i.retMsg?.length&&n.msg.push("Could not find unit information for "+e)}return n}_checkFromVal(e,t){(null===e||isNaN(e)||"number"!=typeof e&&!a.isNumericString(e))&&(t.status="error",t.msg||(t.msg=[]),t.msg.push('No "from" value, or an invalid "from" value, was specified.'))}checkSynonyms(e){let t={};return null==e?(t.status="error",t.msg="No term specified for synonym search."):t=a.getSynonyms(e),t}getSpecifiedUnit(e,t,n){void 0===n&&(n=!1);let i={retMsg:[]};if(e){let a=s.getInstance();e=e.trim();let r=a.getUnitByCode(e);if(r)i.unit=r,i.origString=e;else try{let a=this.uStrParser_.parseString(e,t,n);i.unit=a[0],i.origString=a[1],a[2]&&(i.retMsg=a[2]),i.suggestions=a[3]}catch(t){console.log(`Unit requested for unit string ${e}.request unsuccessful; error thrown = `+t.message),i.retMsg.unshift(`${e} is not a valid unit.  ${t.message}`)}}else i.retMsg.push("No unit string specified.");return i.unit?i.status=i.origString===e?"valid":"invalid":i.status=i.origString?"invalid":"error",i}commensurablesList(e){let t=[],n=null,i=this.getSpecifiedUnit(e,"validate",!1),a=i.unit;if(i.retMsg.length>0&&(t=i.retMsg),a){let i=null,r=a.getProperty("dim_");if(r){try{i=r.getProperty("dimVec_")}catch(e){t.push(e.message),"Dimension does not have requested property(dimVec_)"===e.message&&(i=null)}i&&(n=s.getInstance().getUnitsByDimension(i))}else t.push("No commensurable units were found for "+e)}else t.push(`Could not find unit ${e}.`);return[n,t]}}t.l=c,c.getInstance=function(){return new c}},1743:(e,t,n)=>{const{Set:i,BitSet:a}=n(4623),{Token:r}=n(7931),{ATNConfig:o}=n(2431),{IntervalSet:s}=n(5897),{RuleStopState:l}=n(976),{RuleTransition:c,NotSetTransition:u,WildcardTransition:m,AbstractPredicateTransition:d}=n(7377),{predictionContextFromRuleContext:f,PredictionContext:p,SingletonPredictionContext:g}=n(2482);class h{constructor(e){this.atn=e}getDecisionLookahead(e){if(null===e)return null;const t=e.transitions.length,n=[];for(let r=0;r<t;r++){n[r]=new s;const t=new i,o=!1;this._LOOK(e.transition(r).target,null,p.EMPTY,n[r],t,new a,o,!1),(0===n[r].length||n[r].contains(h.HIT_PRED))&&(n[r]=null)}return n}LOOK(e,t,n){const r=new s,o=null!==(n=n||null)?f(e.atn,n):null;return this._LOOK(e,t,o,r,new i,new a,!0,!0),r}_LOOK(e,t,n,i,a,s,f,y){const C=new o({state:e,alt:0,context:n},null);if(!a.contains(C)){if(a.add(C),e===t){if(null===n)return void i.addOne(r.EPSILON);if(n.isEmpty()&&y)return void i.addOne(r.EOF)}if(e instanceof l){if(null===n)return void i.addOne(r.EPSILON);if(n.isEmpty()&&y)return void i.addOne(r.EOF);if(n!==p.EMPTY){const r=s.contains(e.ruleIndex);try{s.remove(e.ruleIndex);for(let e=0;e<n.length;e++){const r=this.atn.states[n.getReturnState(e)];this._LOOK(r,t,n.getParent(e),i,a,s,f,y)}}finally{r&&s.add(e.ruleIndex)}return}}for(let o=0;o<e.transitions.length;o++){const l=e.transitions[o];if(l.constructor===c){if(s.contains(l.target.ruleIndex))continue;const e=g.create(n,l.followState.stateNumber);try{s.add(l.target.ruleIndex),this._LOOK(l.target,t,e,i,a,s,f,y)}finally{s.remove(l.target.ruleIndex)}}else if(l instanceof d)f?this._LOOK(l.target,t,n,i,a,s,f,y):i.addOne(h.HIT_PRED);else if(l.isEpsilon)this._LOOK(l.target,t,n,i,a,s,f,y);else if(l.constructor===m)i.addRange(r.MIN_USER_TOKEN_TYPE,this.atn.maxTokenType);else{let e=l.label;null!==e&&(l instanceof u&&(e=e.complement(r.MIN_USER_TOKEN_TYPE,this.atn.maxTokenType)),i.addSet(e))}}}}}h.HIT_PRED=r.INVALID_TYPE,e.exports=h},1805:e=>{e.exports=function(e){var t=new Date(e.getTime()),n=t.getTimezoneOffset();return t.setSeconds(0,0),6e4*n+t.getTime()%6e4}},1950:(e,t,n)=>{const{Token:i}=n(7931),a=n(7601),r=n(6177),{ATNState:o,BasicState:s,DecisionState:l,BlockStartState:c,BlockEndState:u,LoopEndState:m,RuleStartState:d,RuleStopState:f,TokensStartState:p,PlusLoopbackState:g,StarLoopbackState:h,StarLoopEntryState:y,PlusBlockStartState:C,StarBlockStartState:S,BasicBlockStartState:b}=n(976),{Transition:E,AtomTransition:x,SetTransition:v,NotSetTransition:R,RuleTransition:_,RangeTransition:M,ActionTransition:I,EpsilonTransition:D,WildcardTransition:T,PredicateTransition:k,PrecedencePredicateTransition:P}=n(7377),{IntervalSet:O}=n(5897),L=n(3084),{LexerActionType:A,LexerSkipAction:N,LexerChannelAction:w,LexerCustomAction:U,LexerMoreAction:B,LexerTypeAction:q,LexerPushModeAction:F,LexerPopModeAction:V,LexerModeAction:G}=n(3972),z="59627784-3BE5-417A-B9EB-8131A7286089",H=["AADB8D7E-AEEF-4415-AD2B-8204D6CF042E",z],j=z;function Q(e,t){const n=[];return n[e-1]=t,n.map((function(e){return t}))}const K=function(){const e=[];for(let t=0;t<256;t++)e[t]=(t+256).toString(16).substr(1).toUpperCase();return e}();e.exports=class{constructor(e){null==e&&(e=L.defaultOptions),this.deserializationOptions=e,this.stateFactories=null,this.actionFactories=null}isFeatureSupported(e,t){const n=H.indexOf(e);return!(n<0)&&H.indexOf(t)>=n}deserialize(e){this.reset(e),this.checkVersion(),this.checkUUID();const t=this.readATN();this.readStates(t),this.readRules(t),this.readModes(t);const n=[];return this.readSets(t,n,this.readInt.bind(this)),this.isFeatureSupported(z,this.uuid)&&this.readSets(t,n,this.readInt32.bind(this)),this.readEdges(t,n),this.readDecisions(t),this.readLexerActions(t),this.markPrecedenceDecisions(t),this.verifyATN(t),this.deserializationOptions.generateRuleBypassTransitions&&t.grammarType===r.PARSER&&(this.generateRuleBypassTransitions(t),this.verifyATN(t)),t}reset(e){const t=e.split("").map((function(e){const t=e.charCodeAt(0);return t>1?t-2:t+65534}));t[0]=e.charCodeAt(0),this.data=t,this.pos=0}checkVersion(){const e=this.readInt();if(3!==e)throw"Could not deserialize ATN with version "+e+" (expected 3)."}checkUUID(){const e=this.readUUID();if(H.indexOf(e)<0)throw j;this.uuid=e}readATN(){const e=this.readInt(),t=this.readInt();return new a(e,t)}readStates(e){let t,n,i;const a=[],r=[],s=this.readInt();for(let t=0;t<s;t++){const t=this.readInt();if(t===o.INVALID_TYPE){e.addState(null);continue}let n=this.readInt();65535===n&&(n=-1);const i=this.stateFactory(t,n);if(t===o.LOOP_END){const e=this.readInt();a.push([i,e])}else if(i instanceof c){const e=this.readInt();r.push([i,e])}e.addState(i)}for(t=0;t<a.length;t++)n=a[t],n[0].loopBackState=e.states[n[1]];for(t=0;t<r.length;t++)n=r[t],n[0].endState=e.states[n[1]];let l=this.readInt();for(t=0;t<l;t++)i=this.readInt(),e.states[i].nonGreedy=!0;let u=this.readInt();for(t=0;t<u;t++)i=this.readInt(),e.states[i].isPrecedenceRule=!0}readRules(e){let t;const n=this.readInt();for(e.grammarType===r.LEXER&&(e.ruleToTokenType=Q(n,0)),e.ruleToStartState=Q(n,0),t=0;t<n;t++){const n=this.readInt();if(e.ruleToStartState[t]=e.states[n],e.grammarType===r.LEXER){let n=this.readInt();65535===n&&(n=i.EOF),e.ruleToTokenType[t]=n}}for(e.ruleToStopState=Q(n,0),t=0;t<e.states.length;t++){const n=e.states[t];n instanceof f&&(e.ruleToStopState[n.ruleIndex]=n,e.ruleToStartState[n.ruleIndex].stopState=n)}}readModes(e){const t=this.readInt();for(let n=0;n<t;n++){let t=this.readInt();e.modeToStartState.push(e.states[t])}}readSets(e,t,n){const i=this.readInt();for(let e=0;e<i;e++){const e=new O;t.push(e);const i=this.readInt();0!==this.readInt()&&e.addOne(-1);for(let t=0;t<i;t++){const t=n(),i=n();e.addRange(t,i)}}}readEdges(e,t){let n,i,a,r,o;const s=this.readInt();for(n=0;n<s;n++){const n=this.readInt(),i=this.readInt(),a=this.readInt(),o=this.readInt(),s=this.readInt(),l=this.readInt();r=this.edgeFactory(e,a,n,i,o,s,l,t),e.states[n].addTransition(r)}for(n=0;n<e.states.length;n++)for(a=e.states[n],i=0;i<a.transitions.length;i++){const t=a.transitions[i];if(!(t instanceof _))continue;let n=-1;e.ruleToStartState[t.target.ruleIndex].isPrecedenceRule&&0===t.precedence&&(n=t.target.ruleIndex),r=new D(t.followState,n),e.ruleToStopState[t.target.ruleIndex].addTransition(r)}for(n=0;n<e.states.length;n++){if(a=e.states[n],a instanceof c){if(null===a.endState)throw"IllegalState";if(null!==a.endState.startState)throw"IllegalState";a.endState.startState=a}if(a instanceof g)for(i=0;i<a.transitions.length;i++)o=a.transitions[i].target,o instanceof C&&(o.loopBackState=a);else if(a instanceof h)for(i=0;i<a.transitions.length;i++)o=a.transitions[i].target,o instanceof y&&(o.loopBackState=a)}}readDecisions(e){const t=this.readInt();for(let n=0;n<t;n++){const t=this.readInt(),i=e.states[t];e.decisionToState.push(i),i.decision=n}}readLexerActions(e){if(e.grammarType===r.LEXER){const t=this.readInt();e.lexerActions=Q(t,null);for(let n=0;n<t;n++){const t=this.readInt();let i=this.readInt();65535===i&&(i=-1);let a=this.readInt();65535===a&&(a=-1),e.lexerActions[n]=this.lexerActionFactory(t,i,a)}}}generateRuleBypassTransitions(e){let t;const n=e.ruleToStartState.length;for(t=0;t<n;t++)e.ruleToTokenType[t]=e.maxTokenType+t+1;for(t=0;t<n;t++)this.generateRuleBypassTransition(e,t)}generateRuleBypassTransition(e,t){let n,i;const a=new b;a.ruleIndex=t,e.addState(a);const r=new u;r.ruleIndex=t,e.addState(r),a.endState=r,e.defineDecisionState(a),r.startState=a;let o=null,l=null;if(e.ruleToStartState[t].isPrecedenceRule){for(l=null,n=0;n<e.states.length;n++)if(i=e.states[n],this.stateIsEndStateFor(i,t)){l=i,o=i.loopBackState.transitions[0];break}if(null===o)throw"Couldn't identify final state of the precedence rule prefix section."}else l=e.ruleToStopState[t];for(n=0;n<e.states.length;n++){i=e.states[n];for(let e=0;e<i.transitions.length;e++){const t=i.transitions[e];t!==o&&t.target===l&&(t.target=r)}}const c=e.ruleToStartState[t],m=c.transitions.length;for(;m>0;)a.addTransition(c.transitions[m-1]),c.transitions=c.transitions.slice(-1);e.ruleToStartState[t].addTransition(new D(a)),r.addTransition(new D(l));const d=new s;e.addState(d),d.addTransition(new x(r,e.ruleToTokenType[t])),a.addTransition(new D(d))}stateIsEndStateFor(e,t){if(e.ruleIndex!==t)return null;if(!(e instanceof y))return null;const n=e.transitions[e.transitions.length-1].target;return n instanceof m&&n.epsilonOnlyTransitions&&n.transitions[0].target instanceof f?e:null}markPrecedenceDecisions(e){for(let t=0;t<e.states.length;t++){const n=e.states[t];if(n instanceof y&&e.ruleToStartState[n.ruleIndex].isPrecedenceRule){const e=n.transitions[n.transitions.length-1].target;e instanceof m&&e.epsilonOnlyTransitions&&e.transitions[0].target instanceof f&&(n.isPrecedenceDecision=!0)}}}verifyATN(e){if(this.deserializationOptions.verifyATN)for(let t=0;t<e.states.length;t++){const n=e.states[t];if(null!==n)if(this.checkCondition(n.epsilonOnlyTransitions||n.transitions.length<=1),n instanceof C)this.checkCondition(null!==n.loopBackState);else if(n instanceof y)if(this.checkCondition(null!==n.loopBackState),this.checkCondition(2===n.transitions.length),n.transitions[0].target instanceof S)this.checkCondition(n.transitions[1].target instanceof m),this.checkCondition(!n.nonGreedy);else{if(!(n.transitions[0].target instanceof m))throw"IllegalState";this.checkCondition(n.transitions[1].target instanceof S),this.checkCondition(n.nonGreedy)}else n instanceof h?(this.checkCondition(1===n.transitions.length),this.checkCondition(n.transitions[0].target instanceof y)):n instanceof m?this.checkCondition(null!==n.loopBackState):n instanceof d?this.checkCondition(null!==n.stopState):n instanceof c?this.checkCondition(null!==n.endState):n instanceof u?this.checkCondition(null!==n.startState):n instanceof l?this.checkCondition(n.transitions.length<=1||n.decision>=0):this.checkCondition(n.transitions.length<=1||n instanceof f)}}checkCondition(e,t){if(!e)throw null==t&&(t="IllegalState"),t}readInt(){return this.data[this.pos++]}readInt32(){return this.readInt()|this.readInt()<<16}readLong(){return 4294967295&this.readInt32()|this.readInt32()<<32}readUUID(){const e=[];for(let t=7;t>=0;t--){const n=this.readInt();e[2*t+1]=255&n,e[2*t]=n>>8&255}return K[e[0]]+K[e[1]]+K[e[2]]+K[e[3]]+"-"+K[e[4]]+K[e[5]]+"-"+K[e[6]]+K[e[7]]+"-"+K[e[8]]+K[e[9]]+"-"+K[e[10]]+K[e[11]]+K[e[12]]+K[e[13]]+K[e[14]]+K[e[15]]}edgeFactory(e,t,n,a,r,o,s,l){const c=e.states[a];switch(t){case E.EPSILON:return new D(c);case E.RANGE:return new M(c,0!==s?i.EOF:r,o);case E.RULE:return new _(e.states[r],o,s,c);case E.PREDICATE:return new k(c,r,o,0!==s);case E.PRECEDENCE:return new P(c,r);case E.ATOM:return new x(c,0!==s?i.EOF:r);case E.ACTION:return new I(c,r,o,0!==s);case E.SET:return new v(c,l[r]);case E.NOT_SET:return new R(c,l[r]);case E.WILDCARD:return new T(c);default:throw"The specified transition type: "+t+" is not valid."}}stateFactory(e,t){if(null===this.stateFactories){const e=[];e[o.INVALID_TYPE]=null,e[o.BASIC]=()=>new s,e[o.RULE_START]=()=>new d,e[o.BLOCK_START]=()=>new b,e[o.PLUS_BLOCK_START]=()=>new C,e[o.STAR_BLOCK_START]=()=>new S,e[o.TOKEN_START]=()=>new p,e[o.RULE_STOP]=()=>new f,e[o.BLOCK_END]=()=>new u,e[o.STAR_LOOP_BACK]=()=>new h,e[o.STAR_LOOP_ENTRY]=()=>new y,e[o.PLUS_LOOP_BACK]=()=>new g,e[o.LOOP_END]=()=>new m,this.stateFactories=e}if(e>this.stateFactories.length||null===this.stateFactories[e])throw"The specified state type "+e+" is not valid.";{const n=this.stateFactories[e]();if(null!==n)return n.ruleIndex=t,n}}lexerActionFactory(e,t,n){if(null===this.actionFactories){const e=[];e[A.CHANNEL]=(e,t)=>new w(e),e[A.CUSTOM]=(e,t)=>new U(e,t),e[A.MODE]=(e,t)=>new G(e),e[A.MORE]=(e,t)=>B.INSTANCE,e[A.POP_MODE]=(e,t)=>V.INSTANCE,e[A.PUSH_MODE]=(e,t)=>new F(e),e[A.SKIP]=(e,t)=>N.INSTANCE,e[A.TYPE]=(e,t)=>new q(e),this.actionFactories=e}if(e>this.actionFactories.length||null===this.actionFactories[e])throw"The specified lexer action type "+e+" is not valid.";return this.actionFactories[e](t,n)}}},1972:(e,t,n)=>{const i=n(4623),{Set:a,BitSet:r,DoubleDict:o}=i,s=n(7601),{ATNState:l,RuleStopState:c}=n(976),{ATNConfig:u}=n(2431),{ATNConfigSet:m}=n(9191),{Token:d}=n(7931),{DFAState:f,PredPrediction:p}=n(1576),g=n(1535),h=n(9520),y=n(3687),{SemanticContext:C}=(n(7210),n(4339)),{PredictionContext:S}=n(2482),{Interval:b}=n(5897),{Transition:E,SetTransition:x,NotSetTransition:v,RuleTransition:R,ActionTransition:_}=n(7377),{NoViableAltException:M}=n(188),{SingletonPredictionContext:I,predictionContextFromRuleContext:D}=n(2482);e.exports=class extends g{constructor(e,t,n,i){super(t,i),this.parser=e,this.decisionToDFA=n,this.predictionMode=h.LL,this._input=null,this._startIndex=0,this._outerContext=null,this._dfa=null,this.mergeCache=null,this.debug=!1,this.debug_closure=!1,this.debug_add=!1,this.debug_list_atn_decisions=!1,this.dfa_debug=!1,this.retry_debug=!1}reset(){}adaptivePredict(e,t,n){(this.debug||this.debug_list_atn_decisions)&&console.log("adaptivePredict decision "+t+" exec LA(1)=="+this.getLookaheadName(e)+" line "+e.LT(1).line+":"+e.LT(1).column),this._input=e,this._startIndex=e.index,this._outerContext=n;const i=this.decisionToDFA[t];this._dfa=i;const a=e.mark(),r=e.index;try{let t;if(t=i.precedenceDfa?i.getPrecedenceStartState(this.parser.getPrecedence()):i.s0,null===t){null===n&&(n=y.EMPTY),(this.debug||this.debug_list_atn_decisions)&&console.log("predictATN decision "+i.decision+" exec LA(1)=="+this.getLookaheadName(e)+", outerContext="+n.toString(this.parser.ruleNames));const a=!1;let r=this.computeStartState(i.atnStartState,y.EMPTY,a);i.precedenceDfa?(i.s0.configs=r,r=this.applyPrecedenceFilter(r),t=this.addDFAState(i,new f(null,r)),i.setPrecedenceStartState(this.parser.getPrecedence(),t)):(t=this.addDFAState(i,new f(null,r)),i.s0=t)}const a=this.execATN(i,t,e,r,n);return this.debug&&console.log("DFA after predictATN: "+i.toString(this.parser.literalNames,this.parser.symbolicNames)),a}finally{this._dfa=null,this.mergeCache=null,e.seek(r),e.release(a)}}execATN(e,t,n,i,a){let r;(this.debug||this.debug_list_atn_decisions)&&console.log("execATN decision "+e.decision+" exec LA(1)=="+this.getLookaheadName(n)+" line "+n.LT(1).line+":"+n.LT(1).column);let o=t;this.debug&&console.log("s0 = "+t);let l=n.LA(1);for(;;){let t=this.getExistingTargetState(o,l);if(null===t&&(t=this.computeTargetState(e,o,l)),t===g.ERROR){const e=this.noViableAlt(n,a,o.configs,i);if(n.seek(i),r=this.getSynValidOrSemInvalidAltThatFinishedDecisionEntryRule(o.configs,a),r!==s.INVALID_ALT_NUMBER)return r;throw e}if(t.requiresFullContext&&this.predictionMode!==h.SLL){let o=null;if(null!==t.predicates){this.debug&&console.log("DFA state has preds in DFA sim LL failover");const e=n.index;if(e!==i&&n.seek(i),o=this.evalSemanticContext(t.predicates,a,!0),1===o.length)return this.debug&&console.log("Full LL avoided"),o.minValue();e!==i&&n.seek(e)}this.dfa_debug&&console.log("ctx sensitive state "+a+" in "+t);const s=!0,l=this.computeStartState(e.atnStartState,a,s);return this.reportAttemptingFullContext(e,o,t.configs,i,n.index),r=this.execATNWithFullContext(e,t,l,n,i,a),r}if(t.isAcceptState){if(null===t.predicates)return t.prediction;const r=n.index;n.seek(i);const o=this.evalSemanticContext(t.predicates,a,!0);if(0===o.length)throw this.noViableAlt(n,a,t.configs,i);return 1===o.length||this.reportAmbiguity(e,t,i,r,!1,o,t.configs),o.minValue()}o=t,l!==d.EOF&&(n.consume(),l=n.LA(1))}}getExistingTargetState(e,t){const n=e.edges;return null===n?null:n[t+1]||null}computeTargetState(e,t,n){const a=this.computeReachSet(t.configs,n,!1);if(null===a)return this.addDFAEdge(e,t,n,g.ERROR),g.ERROR;let r=new f(null,a);const o=this.getUniqueAlt(a);if(this.debug){const e=h.getConflictingAltSubsets(a);console.log("SLL altSubSets="+i.arrayToString(e)+", configs="+a+", predict="+o+", allSubsetsConflict="+h.allSubsetsConflict(e)+", conflictingAlts="+this.getConflictingAlts(a))}return o!==s.INVALID_ALT_NUMBER?(r.isAcceptState=!0,r.configs.uniqueAlt=o,r.prediction=o):h.hasSLLConflictTerminatingPrediction(this.predictionMode,a)&&(r.configs.conflictingAlts=this.getConflictingAlts(a),r.requiresFullContext=!0,r.isAcceptState=!0,r.prediction=r.configs.conflictingAlts.minValue()),r.isAcceptState&&r.configs.hasSemanticContext&&(this.predicateDFAState(r,this.atn.getDecisionState(e.decision)),null!==r.predicates&&(r.prediction=s.INVALID_ALT_NUMBER)),r=this.addDFAEdge(e,t,n,r),r}predicateDFAState(e,t){const n=t.transitions.length,i=this.getConflictingAltsOrUniqueAlt(e.configs),a=this.getPredsForAmbigAlts(i,e.configs,n);null!==a?(e.predicates=this.getPredicatePredictions(i,a),e.prediction=s.INVALID_ALT_NUMBER):e.prediction=i.minValue()}execATNWithFullContext(e,t,n,i,a,r){(this.debug||this.debug_list_atn_decisions)&&console.log("execATNWithFullContext "+n);let o,l=!1,c=n;i.seek(a);let u=i.LA(1),m=-1;for(;;){if(o=this.computeReachSet(c,u,!0),null===o){const e=this.noViableAlt(i,r,c,a);i.seek(a);const t=this.getSynValidOrSemInvalidAltThatFinishedDecisionEntryRule(c,r);if(t!==s.INVALID_ALT_NUMBER)return t;throw e}const e=h.getConflictingAltSubsets(o);if(this.debug&&console.log("LL altSubSets="+e+", predict="+h.getUniqueAlt(e)+", resolvesToJustOneViableAlt="+h.resolvesToJustOneViableAlt(e)),o.uniqueAlt=this.getUniqueAlt(o),o.uniqueAlt!==s.INVALID_ALT_NUMBER){m=o.uniqueAlt;break}if(this.predictionMode!==h.LL_EXACT_AMBIG_DETECTION){if(m=h.resolvesToJustOneViableAlt(e),m!==s.INVALID_ALT_NUMBER)break}else if(h.allSubsetsConflict(e)&&h.allSubsetsEqual(e)){l=!0,m=h.getSingleViableAlt(e);break}c=o,u!==d.EOF&&(i.consume(),u=i.LA(1))}return o.uniqueAlt!==s.INVALID_ALT_NUMBER?(this.reportContextSensitivity(e,m,o,a,i.index),m):(this.reportAmbiguity(e,t,a,i.index,l,null,o),m)}computeReachSet(e,t,n){this.debug&&console.log("in computeReachSet, starting closure: "+e),null===this.mergeCache&&(this.mergeCache=new o);const i=new m(n);let r=null;for(let a=0;a<e.items.length;a++){const o=e.items[a];if(this.debug&&console.log("testing "+this.getTokenName(t)+" at "+o),o.state instanceof c)(n||t===d.EOF)&&(null===r&&(r=[]),r.push(o),this.debug_add&&console.log("added "+o+" to skippedStopStates"));else for(let e=0;e<o.state.transitions.length;e++){const n=o.state.transitions[e],a=this.getReachableTarget(n,t);if(null!==a){const e=new u({state:a},o);i.add(e,this.mergeCache),this.debug_add&&console.log("added "+e+" to intermediate")}}}let l=null;if(null===r&&t!==d.EOF&&(1===i.items.length||this.getUniqueAlt(i)!==s.INVALID_ALT_NUMBER)&&(l=i),null===l){l=new m(n);const e=new a,r=t===d.EOF;for(let t=0;t<i.items.length;t++)this.closure(i.items[t],l,e,!1,n,r)}if(t===d.EOF&&(l=this.removeAllConfigsNotInRuleStopState(l,l===i)),!(null===r||n&&h.hasConfigInRuleStopState(l)))for(let e=0;e<r.length;e++)l.add(r[e],this.mergeCache);return 0===l.items.length?null:l}removeAllConfigsNotInRuleStopState(e,t){if(h.allConfigsInRuleStopStates(e))return e;const n=new m(e.fullCtx);for(let i=0;i<e.items.length;i++){const a=e.items[i];if(a.state instanceof c)n.add(a,this.mergeCache);else if(t&&a.state.epsilonOnlyTransitions&&this.atn.nextTokens(a.state).contains(d.EPSILON)){const e=this.atn.ruleToStopState[a.state.ruleIndex];n.add(new u({state:e},a),this.mergeCache)}}return n}computeStartState(e,t,n){const i=D(this.atn,t),r=new m(n);for(let t=0;t<e.transitions.length;t++){const o=e.transitions[t].target,s=new u({state:o,alt:t+1,context:i},null),l=new a;this.closure(s,r,l,!0,n,!1)}return r}applyPrecedenceFilter(e){let t;const n=[],i=new m(e.fullCtx);for(let a=0;a<e.items.length;a++){if(t=e.items[a],1!==t.alt)continue;const r=t.semanticContext.evalPrecedence(this.parser,this._outerContext);null!==r&&(n[t.state.stateNumber]=t.context,r!==t.semanticContext?i.add(new u({semanticContext:r},t),this.mergeCache):i.add(t,this.mergeCache))}for(let a=0;a<e.items.length;a++)if(t=e.items[a],1!==t.alt){if(!t.precedenceFilterSuppressed){const e=n[t.state.stateNumber]||null;if(null!==e&&e.equals(t.context))continue}i.add(t,this.mergeCache)}return i}getReachableTarget(e,t){return e.matches(t,0,this.atn.maxTokenType)?e.target:null}getPredsForAmbigAlts(e,t,n){let a=[];for(let n=0;n<t.items.length;n++){const i=t.items[n];e.contains(i.alt)&&(a[i.alt]=C.orContext(a[i.alt]||null,i.semanticContext))}let r=0;for(let e=1;e<n+1;e++){const t=a[e]||null;null===t?a[e]=C.NONE:t!==C.NONE&&(r+=1)}return 0===r&&(a=null),this.debug&&console.log("getPredsForAmbigAlts result "+i.arrayToString(a)),a}getPredicatePredictions(e,t){const n=[];let i=!1;for(let a=1;a<t.length;a++){const r=t[a];null!==e&&e.contains(a)&&n.push(new p(r,a)),r!==C.NONE&&(i=!0)}return i?n:null}getSynValidOrSemInvalidAltThatFinishedDecisionEntryRule(e,t){const n=this.splitAccordingToSemanticValidity(e,t),i=n[0],a=n[1];let r=this.getAltThatFinishedDecisionEntryRule(i);return r!==s.INVALID_ALT_NUMBER||a.items.length>0&&(r=this.getAltThatFinishedDecisionEntryRule(a),r!==s.INVALID_ALT_NUMBER)?r:s.INVALID_ALT_NUMBER}getAltThatFinishedDecisionEntryRule(e){const t=[];for(let n=0;n<e.items.length;n++){const i=e.items[n];(i.reachesIntoOuterContext>0||i.state instanceof c&&i.context.hasEmptyPath())&&t.indexOf(i.alt)<0&&t.push(i.alt)}return 0===t.length?s.INVALID_ALT_NUMBER:Math.min.apply(null,t)}splitAccordingToSemanticValidity(e,t){const n=new m(e.fullCtx),i=new m(e.fullCtx);for(let a=0;a<e.items.length;a++){const r=e.items[a];r.semanticContext!==C.NONE?r.semanticContext.evaluate(this.parser,t)?n.add(r):i.add(r):n.add(r)}return[n,i]}evalSemanticContext(e,t,n){const i=new r;for(let a=0;a<e.length;a++){const r=e[a];if(r.pred===C.NONE){if(i.add(r.alt),!n)break;continue}const o=r.pred.evaluate(this.parser,t);if((this.debug||this.dfa_debug)&&console.log("eval pred "+r+"="+o),o&&((this.debug||this.dfa_debug)&&console.log("PREDICT "+r.alt),i.add(r.alt),!n))break}return i}closure(e,t,n,i,a,r){this.closureCheckingStopState(e,t,n,i,a,0,r)}closureCheckingStopState(e,t,n,i,a,r,o){if((this.debug||this.debug_closure)&&(console.log("closure("+e.toString(this.parser,!0)+")"),e.reachesIntoOuterContext>50))throw"problem";if(e.state instanceof c){if(!e.context.isEmpty()){for(let s=0;s<e.context.length;s++){if(e.context.getReturnState(s)===S.EMPTY_RETURN_STATE){if(a){t.add(new u({state:e.state,context:S.EMPTY},e),this.mergeCache);continue}this.debug&&console.log("FALLING off rule "+this.getRuleName(e.state.ruleIndex)),this.closure_(e,t,n,i,a,r,o);continue}const l=this.atn.states[e.context.getReturnState(s)],c=e.context.getParent(s),m={state:l,alt:e.alt,context:c,semanticContext:e.semanticContext},d=new u(m,null);d.reachesIntoOuterContext=e.reachesIntoOuterContext,this.closureCheckingStopState(d,t,n,i,a,r-1,o)}return}if(a)return void t.add(e,this.mergeCache);this.debug&&console.log("FALLING off rule "+this.getRuleName(e.state.ruleIndex))}this.closure_(e,t,n,i,a,r,o)}closure_(e,t,n,i,a,r,o){const s=e.state;s.epsilonOnlyTransitions||t.add(e,this.mergeCache);for(let l=0;l<s.transitions.length;l++){if(0===l&&this.canDropLoopEntryEdgeInLeftRecursiveRule(e))continue;const u=s.transitions[l],m=i&&!(u instanceof _),d=this.getEpsilonTarget(e,u,m,0===r,a,o);if(null!==d){let i=r;if(e.state instanceof c){if(null!==this._dfa&&this._dfa.precedenceDfa&&u.outermostPrecedenceReturn===this._dfa.atnStartState.ruleIndex&&(d.precedenceFilterSuppressed=!0),d.reachesIntoOuterContext+=1,n.add(d)!==d)continue;t.dipsIntoOuterContext=!0,i-=1,this.debug&&console.log("dips into outer ctx: "+d)}else{if(!u.isEpsilon&&n.add(d)!==d)continue;u instanceof R&&i>=0&&(i+=1)}this.closureCheckingStopState(d,t,n,m,a,i,o)}}}canDropLoopEntryEdgeInLeftRecursiveRule(e){const t=e.state;if(t.stateType!==l.STAR_LOOP_ENTRY)return!1;if(t.stateType!==l.STAR_LOOP_ENTRY||!t.isPrecedenceDecision||e.context.isEmpty()||e.context.hasEmptyPath())return!1;const n=e.context.length;for(let i=0;i<n;i++)if(this.atn.states[e.context.getReturnState(i)].ruleIndex!==t.ruleIndex)return!1;const i=t.transitions[0].target.endState.stateNumber,a=this.atn.states[i];for(let i=0;i<n;i++){const n=e.context.getReturnState(i),r=this.atn.states[n];if(1!==r.transitions.length||!r.transitions[0].isEpsilon)return!1;const o=r.transitions[0].target;if(!(r.stateType===l.BLOCK_END&&o===t||r===a||o===a||o.stateType===l.BLOCK_END&&1===o.transitions.length&&o.transitions[0].isEpsilon&&o.transitions[0].target===t))return!1}return!0}getRuleName(e){return null!==this.parser&&e>=0?this.parser.ruleNames[e]:"<rule "+e+">"}getEpsilonTarget(e,t,n,i,a,r){switch(t.serializationType){case E.RULE:return this.ruleTransition(e,t);case E.PRECEDENCE:return this.precedenceTransition(e,t,n,i,a);case E.PREDICATE:return this.predTransition(e,t,n,i,a);case E.ACTION:return this.actionTransition(e,t);case E.EPSILON:return new u({state:t.target},e);case E.ATOM:case E.RANGE:case E.SET:return r&&t.matches(d.EOF,0,1)?new u({state:t.target},e):null;default:return null}}actionTransition(e,t){if(this.debug){const e=-1===t.actionIndex?65535:t.actionIndex;console.log("ACTION edge "+t.ruleIndex+":"+e)}return new u({state:t.target},e)}precedenceTransition(e,t,n,a,r){this.debug&&(console.log("PRED (collectPredicates="+n+") "+t.precedence+">=_p, ctx dependent=true"),null!==this.parser&&console.log("context surrounding pred is "+i.arrayToString(this.parser.getRuleInvocationStack())));let o=null;if(n&&a)if(r){const n=this._input.index;this._input.seek(this._startIndex);const i=t.getPredicate().evaluate(this.parser,this._outerContext);this._input.seek(n),i&&(o=new u({state:t.target},e))}else{const n=C.andContext(e.semanticContext,t.getPredicate());o=new u({state:t.target,semanticContext:n},e)}else o=new u({state:t.target},e);return this.debug&&console.log("config from pred transition="+o),o}predTransition(e,t,n,a,r){this.debug&&(console.log("PRED (collectPredicates="+n+") "+t.ruleIndex+":"+t.predIndex+", ctx dependent="+t.isCtxDependent),null!==this.parser&&console.log("context surrounding pred is "+i.arrayToString(this.parser.getRuleInvocationStack())));let o=null;if(n&&(t.isCtxDependent&&a||!t.isCtxDependent))if(r){const n=this._input.index;this._input.seek(this._startIndex);const i=t.getPredicate().evaluate(this.parser,this._outerContext);this._input.seek(n),i&&(o=new u({state:t.target},e))}else{const n=C.andContext(e.semanticContext,t.getPredicate());o=new u({state:t.target,semanticContext:n},e)}else o=new u({state:t.target},e);return this.debug&&console.log("config from pred transition="+o),o}ruleTransition(e,t){this.debug&&console.log("CALL rule "+this.getRuleName(t.target.ruleIndex)+", ctx="+e.context);const n=t.followState,i=I.create(e.context,n.stateNumber);return new u({state:t.target,context:i},e)}getConflictingAlts(e){const t=h.getConflictingAltSubsets(e);return h.getAlts(t)}getConflictingAltsOrUniqueAlt(e){let t=null;return e.uniqueAlt!==s.INVALID_ALT_NUMBER?(t=new r,t.add(e.uniqueAlt)):t=e.conflictingAlts,t}getTokenName(e){if(e===d.EOF)return"EOF";if(null!==this.parser&&null!==this.parser.literalNames){if(!(e>=this.parser.literalNames.length&&e>=this.parser.symbolicNames.length))return(this.parser.literalNames[e]||this.parser.symbolicNames[e])+"<"+e+">";console.log(e+" ttype out of range: "+this.parser.literalNames),console.log(""+this.parser.getInputStream().getTokens())}return""+e}getLookaheadName(e){return this.getTokenName(e.LA(1))}dumpDeadEndConfigs(e){console.log("dead end configs: ");const t=e.getDeadEndConfigs();for(let e=0;e<t.length;e++){const n=t[e];let i="no edges";if(n.state.transitions.length>0){const e=n.state.transitions[0];e instanceof AtomTransition?i="Atom "+this.getTokenName(e.label):e instanceof x&&(i=(e instanceof v?"~":"")+"Set "+e.set)}console.error(n.toString(this.parser,!0)+":"+i)}}noViableAlt(e,t,n,i){return new M(this.parser,e,e.get(i),e.LT(1),n,t)}getUniqueAlt(e){let t=s.INVALID_ALT_NUMBER;for(let n=0;n<e.items.length;n++){const i=e.items[n];if(t===s.INVALID_ALT_NUMBER)t=i.alt;else if(i.alt!==t)return s.INVALID_ALT_NUMBER}return t}addDFAEdge(e,t,n,i){if(this.debug&&console.log("EDGE "+t+" -> "+i+" upon "+this.getTokenName(n)),null===i)return null;if(i=this.addDFAState(e,i),null===t||n<-1||n>this.atn.maxTokenType)return i;if(null===t.edges&&(t.edges=[]),t.edges[n+1]=i,this.debug){const t=null===this.parser?null:this.parser.literalNames,n=null===this.parser?null:this.parser.symbolicNames;console.log("DFA=\n"+e.toString(t,n))}return i}addDFAState(e,t){if(t===g.ERROR)return t;const n=e.states.get(t);return null!==n?n:(t.stateNumber=e.states.length,t.configs.readOnly||(t.configs.optimizeConfigs(this),t.configs.setReadonly(!0)),e.states.add(t),this.debug&&console.log("adding new DFA state: "+t),t)}reportAttemptingFullContext(e,t,n,i,a){if(this.debug||this.retry_debug){const t=new b(i,a+1);console.log("reportAttemptingFullContext decision="+e.decision+":"+n+", input="+this.parser.getTokenStream().getText(t))}null!==this.parser&&this.parser.getErrorListenerDispatch().reportAttemptingFullContext(this.parser,e,i,a,t,n)}reportContextSensitivity(e,t,n,i,a){if(this.debug||this.retry_debug){const t=new b(i,a+1);console.log("reportContextSensitivity decision="+e.decision+":"+n+", input="+this.parser.getTokenStream().getText(t))}null!==this.parser&&this.parser.getErrorListenerDispatch().reportContextSensitivity(this.parser,e,i,a,t,n)}reportAmbiguity(e,t,n,i,a,r,o){if(this.debug||this.retry_debug){const e=new b(n,i+1);console.log("reportAmbiguity "+r+":"+o+", input="+this.parser.getTokenStream().getText(e))}null!==this.parser&&this.parser.getErrorListenerDispatch().reportAmbiguity(this.parser,e,n,i,a,r,o)}}},2022:(e,t,n)=>{const i=n(4623),{Token:a}=n(7931),{ErrorNode:r,TerminalNode:o,RuleNode:s}=n(6307),l={toStringTree:function(e,t,n){t=t||null,null!==(n=n||null)&&(t=n.ruleNames);let a=l.getNodeText(e,t);a=i.escapeWhitespace(a,!1);const r=e.getChildCount();if(0===r)return a;let o="("+a+" ";r>0&&(a=l.toStringTree(e.getChild(0),t),o=o.concat(a));for(let n=1;n<r;n++)a=l.toStringTree(e.getChild(n),t),o=o.concat(" "+a);return o=o.concat(")"),o},getNodeText:function(e,t,n){if(t=t||null,null!==(n=n||null)&&(t=n.ruleNames),null!==t){if(e instanceof s){const n=e.getRuleContext().getAltNumber();return 0!=n?t[e.ruleIndex]+":"+n:t[e.ruleIndex]}if(e instanceof r)return e.toString();if(e instanceof o&&null!==e.symbol)return e.symbol.text}const i=e.getPayload();return i instanceof a?i.text:e.getPayload().toString()},getChildren:function(e){const t=[];for(let n=0;n<e.getChildCount();n++)t.push(e.getChild(n));return t},getAncestors:function(e){let t=[];for(e=e.getParent();null!==e;)t=[e].concat(t),e=e.getParent();return t},findAllTokenNodes:function(e,t){return l.findAllNodes(e,t,!0)},findAllRuleNodes:function(e,t){return l.findAllNodes(e,t,!1)},findAllNodes:function(e,t,n){const i=[];return l._findAllNodes(e,t,n,i),i},_findAllNodes:function(e,t,n,i){n&&e instanceof o?e.symbol.type===t&&i.push(e):!n&&e instanceof s&&e.ruleIndex===t&&i.push(e);for(let a=0;a<e.getChildCount();a++)l._findAllNodes(e.getChild(a),t,n,i)},descendants:function(e){let t=[e];for(let n=0;n<e.getChildCount();n++)t=t.concat(l.descendants(e.getChild(n)));return t}};e.exports=l},2136:(e,t,n)=>{var i=n(2926),a=n(4992);e.exports=function(e,t){var n=i(e),r=Number(t),o=n.getMonth()+r,s=new Date(0);s.setFullYear(n.getFullYear(),o,1),s.setHours(0,0,0,0);var l=a(s);return n.setMonth(o,Math.min(l,n.getDate())),n}},2226:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var n=new class{constructor(){this.funcs={},this.funcs.cel={cnvTo:function(e){return e-273.15},cnvFrom:function(e){return e+273.15}},this.funcs.degf={cnvTo:function(e){return e-459.67},cnvFrom:function(e){return e+459.67}},this.funcs.degre={cnvTo:function(e){return e-273.15},cnvFrom:function(e){return e+273.15}},this.funcs.ph={cnvTo:function(e){return-Math.log(e)/Math.LN10},cnvFrom:function(e){return Math.pow(10,-e)}},this.funcs.ln={cnvTo:function(e){return Math.log(e)},cnvFrom:function(e){return Math.exp(e)}},this.funcs["2ln"]={cnvTo:function(e){return 2*Math.log(e)},cnvFrom:function(e){return Math.exp(e/2)}},this.funcs.lg={cnvTo:function(e){return Math.log(e)/Math.LN10},cnvFrom:function(e){return Math.pow(10,e)}},this.funcs["10lg"]={cnvTo:function(e){return 10*Math.log(e)/Math.LN10},cnvFrom:function(e){return Math.pow(10,e/10)}},this.funcs["20lg"]={cnvTo:function(e){return 20*Math.log(e)/Math.LN10},cnvFrom:function(e){return Math.pow(10,e/20)}},this.funcs["2lg"]={cnvTo:function(e){return 2*Math.log(e)/Math.LN10},cnvFrom:function(e){return Math.pow(10,e/2)}},this.funcs.lgtimes2=this.funcs["2lg"],this.funcs.ld={cnvTo:function(e){return Math.log(e)/Math.LN2},cnvFrom:function(e){return Math.pow(2,e)}},this.funcs["100tan"]={cnvTo:function(e){return 100*Math.tan(e)},cnvFrom:function(e){return Math.atan(e/100)}},this.funcs.tanTimes100=this.funcs["100tan"],this.funcs.sqrt={cnvTo:function(e){return Math.sqrt(e)},cnvFrom:function(e){return e*e}},this.funcs.inv={cnvTo:function(e){return 1/e},cnvFrom:function(e){return 1/e}},this.funcs.hpX={cnvTo:function(e){return-this.funcs.lg(e)},cnvFrom:function(e){return Math.pow(10,-e)}},this.funcs.hpC={cnvTo:function(e){return-this.func.ln(e)/this.funcs.ln(100)},cnvFrom:function(e){return Math.pow(100,-e)}},this.funcs.hpM={cnvTo:function(e){return-this.funcs.ln(e)/this.funcs.ln(1e3)},cnvFrom:function(e){return Math.pow(1e3,-e)}},this.funcs.hpQ={cnvTo:function(e){return-this.funcs.ln(e)/this.funcs.ln(5e4)},cnvFrom:function(e){return Math.pow(5e4,-e)}}}forName(e){e=e.toLowerCase();let t=this.funcs[e];if(null===t)throw new Error(`Requested function ${e} is not defined`);return t}isDefined(e){return e=e.toLowerCase(),null!==this.funcs[e]}};t.default=n},2431:(e,t,n)=>{const{DecisionState:i}=n(976),{SemanticContext:a}=n(4339),{Hash:r}=n(4623);function o(e,t){if(null===e){const e={state:null,alt:null,context:null,semanticContext:null};return t&&(e.reachesIntoOuterContext=0),e}{const n={};return n.state=e.state||null,n.alt=void 0===e.alt?null:e.alt,n.context=e.context||null,n.semanticContext=e.semanticContext||null,t&&(n.reachesIntoOuterContext=e.reachesIntoOuterContext||0,n.precedenceFilterSuppressed=e.precedenceFilterSuppressed||!1),n}}class s{constructor(e,t){this.checkContext(e,t),e=o(e),t=o(t,!0),this.state=null!==e.state?e.state:t.state,this.alt=null!==e.alt?e.alt:t.alt,this.context=null!==e.context?e.context:t.context,this.semanticContext=null!==e.semanticContext?e.semanticContext:null!==t.semanticContext?t.semanticContext:a.NONE,this.reachesIntoOuterContext=t.reachesIntoOuterContext,this.precedenceFilterSuppressed=t.precedenceFilterSuppressed}checkContext(e,t){null!==e.context&&void 0!==e.context||null!==t&&null!==t.context&&void 0!==t.context||(this.context=null)}hashCode(){const e=new r;return this.updateHashCode(e),e.finish()}updateHashCode(e){e.update(this.state.stateNumber,this.alt,this.context,this.semanticContext)}equals(e){return this===e||e instanceof s&&this.state.stateNumber===e.state.stateNumber&&this.alt===e.alt&&(null===this.context?null===e.context:this.context.equals(e.context))&&this.semanticContext.equals(e.semanticContext)&&this.precedenceFilterSuppressed===e.precedenceFilterSuppressed}hashCodeForConfigSet(){const e=new r;return e.update(this.state.stateNumber,this.alt,this.semanticContext),e.finish()}equalsForConfigSet(e){return this===e||e instanceof s&&this.state.stateNumber===e.state.stateNumber&&this.alt===e.alt&&this.semanticContext.equals(e.semanticContext)}toString(){return"("+this.state+","+this.alt+(null!==this.context?",["+this.context.toString()+"]":"")+(this.semanticContext!==a.NONE?","+this.semanticContext.toString():"")+(this.reachesIntoOuterContext>0?",up="+this.reachesIntoOuterContext:"")+")"}}class l extends s{constructor(e,t){super(e,t);const n=e.lexerActionExecutor||null;return this.lexerActionExecutor=n||(null!==t?t.lexerActionExecutor:null),this.passedThroughNonGreedyDecision=null!==t&&this.checkNonGreedyDecision(t,this.state),this.hashCodeForConfigSet=l.prototype.hashCode,this.equalsForConfigSet=l.prototype.equals,this}updateHashCode(e){e.update(this.state.stateNumber,this.alt,this.context,this.semanticContext,this.passedThroughNonGreedyDecision,this.lexerActionExecutor)}equals(e){return this===e||e instanceof l&&this.passedThroughNonGreedyDecision===e.passedThroughNonGreedyDecision&&(this.lexerActionExecutor?this.lexerActionExecutor.equals(e.lexerActionExecutor):!e.lexerActionExecutor)&&super.equals(e)}checkNonGreedyDecision(e,t){return e.passedThroughNonGreedyDecision||t instanceof i&&t.nonGreedy}}e.exports.ATNConfig=s,e.exports.LexerATNConfig=l},2437:()=>{String.prototype.codePointAt||function(){var e=function(){let e;try{const t={},n=Object.defineProperty;e=n(t,t,t)&&n}catch(e){}return e}();const t=function(e){if(null==this)throw TypeError();const t=String(this),n=t.length;let i=e?Number(e):0;if(i!=i&&(i=0),i<0||i>=n)return;const a=t.charCodeAt(i);let r;return a>=55296&&a<=56319&&n>i+1&&(r=t.charCodeAt(i+1),r>=56320&&r<=57343)?1024*(a-55296)+r-56320+65536:a};e?e(String.prototype,"codePointAt",{value:t,configurable:!0,writable:!0}):String.prototype.codePointAt=t}()},2460:(e,t,n)=>{const i=n(38),a=n(3580),r={},o={};r.indexOf=function(e,t){const n=a.singleton(e,"String");return i.isEmpty(t)||i.isEmpty(n)?[]:n.indexOf(t)},r.substring=function(e,t,n){const r=a.singleton(e,"String");return i.isEmpty(r)||i.isEmpty(t)||t<0||t>=r.length?[]:void 0===n||i.isEmpty(n)?r.substring(t):r.substring(t,t+n)},r.startsWith=function(e,t){const n=a.singleton(e,"String");return i.isEmpty(t)||i.isEmpty(n)?[]:n.startsWith(t)},r.endsWith=function(e,t){const n=a.singleton(e,"String");return i.isEmpty(t)||i.isEmpty(n)?[]:n.endsWith(t)},r.containsFn=function(e,t){const n=a.singleton(e,"String");return i.isEmpty(t)||i.isEmpty(n)?[]:n.includes(t)},r.upper=function(e){const t=a.singleton(e,"String");return i.isEmpty(t)?[]:t.toUpperCase()},r.lower=function(e){const t=a.singleton(e,"String");return i.isEmpty(t)?[]:t.toLowerCase()},r.joinFn=function(e,t){const n=[];return e.forEach((e=>{const t=i.valData(e);if("string"==typeof t)n.push(t);else if(null!=t)throw new Error("Join requires a collection of strings.")})),i.isEmpty(n)?[]:(void 0===t&&(t=""),n.join(t))},r.splitFn=function(e,t){const n=a.singleton(e,"String");return i.isEmpty(n)?[]:n.split(t)},r.trimFn=function(e){const t=a.singleton(e,"String");return i.isEmpty(t)?[]:t.trim()},r.encodeFn=function(e,t){const n=a.singleton(e,"String");return i.isEmpty(n)?[]:"urlbase64"===t||"base64url"===t?btoa(n).replace(/\+/g,"-").replace(/\//g,"_"):"base64"===t?btoa(n):"hex"===t?Array.from(n).map((e=>e.charCodeAt(0)<128?e.charCodeAt(0).toString(16):encodeURIComponent(e).replace(/%/g,""))).join(""):[]},r.decodeFn=function(e,t){const n=a.singleton(e,"String");if(i.isEmpty(n))return[];if("urlbase64"===t||"base64url"===t)return atob(n.replace(/-/g,"+").replace(/_/g,"/"));if("base64"===t)return atob(n);if("hex"===t){if(n.length%2!=0)throw new Error("Decode 'hex' requires an even number of characters.");return decodeURIComponent("%"+n.match(/.{2}/g).join("%"))}return[]};const s=!1===new RegExp("").dotAll;r.matches=s?function(e,t){const n=a.singleton(e,"String");return i.isEmpty(t)||i.isEmpty(n)?[]:new RegExp(t,"su").test(n)}:function(e,t){const n=a.singleton(e,"String");if(i.isEmpty(t)||i.isEmpty(n))return[];var r;return new RegExp((o[r=t]||(o[r]=r.replace(/\./g,((e,t,n)=>{const i=n.substr(0,t).replace(/\\\\/g,"").replace(/\\[\][]/g,""),a="\\"===i[i.length-1],r=i.lastIndexOf("["),o=i.lastIndexOf("]");return a||r>o?".":"[^]"}))),o[r]),"u").test(n)},r.replace=function(e,t,n){const r=a.singleton(e,"String");if(i.isEmpty(t)||i.isEmpty(n)||i.isEmpty(r))return[];const o=new RegExp(i.escapeStringForRegExp(t),"g");return r.replace(o,n)},r.replaceMatches=function(e,t,n){const r=a.singleton(e,"String");if(i.isEmpty(t)||i.isEmpty(n)||i.isEmpty(r))return[];const o=new RegExp(t,"gu");return r.replace(o,n)},r.length=function(e){const t=a.singleton(e,"String");return i.isEmpty(t)?[]:t.length},r.toChars=function(e){const t=a.singleton(e,"String");return i.isEmpty(t)?[]:t.split("")},e.exports=r},2482:(e,t,n)=>{const i=n(3687),{Hash:a,Map:r,equalArrays:o}=n(4623);class s{constructor(e){this.cachedHashCode=e}isEmpty(){return this===s.EMPTY}hasEmptyPath(){return this.getReturnState(this.length-1)===s.EMPTY_RETURN_STATE}hashCode(){return this.cachedHashCode}updateHashCode(e){e.update(this.cachedHashCode)}}s.EMPTY=null,s.EMPTY_RETURN_STATE=2147483647,s.globalNodeCount=1,s.id=s.globalNodeCount;class l extends s{constructor(e,t){let n=0;const i=new a;null!==e?i.update(e,t):i.update(1),n=i.finish(),super(n),this.parentCtx=e,this.returnState=t}getParent(e){return this.parentCtx}getReturnState(e){return this.returnState}equals(e){return this===e||e instanceof l&&this.hashCode()===e.hashCode()&&this.returnState===e.returnState&&(null==this.parentCtx?null==e.parentCtx:this.parentCtx.equals(e.parentCtx))}toString(){const e=null===this.parentCtx?"":this.parentCtx.toString();return 0===e.length?this.returnState===s.EMPTY_RETURN_STATE?"$":""+this.returnState:this.returnState+" "+e}get length(){return 1}static create(e,t){return t===s.EMPTY_RETURN_STATE&&null===e?s.EMPTY:new l(e,t)}}class c extends l{constructor(){super(null,s.EMPTY_RETURN_STATE)}isEmpty(){return!0}getParent(e){return null}getReturnState(e){return this.returnState}equals(e){return this===e}toString(){return"$"}}s.EMPTY=new c;class u extends s{constructor(e,t){const n=new a;return n.update(e,t),super(n.finish()),this.parents=e,this.returnStates=t,this}isEmpty(){return this.returnStates[0]===s.EMPTY_RETURN_STATE}getParent(e){return this.parents[e]}getReturnState(e){return this.returnStates[e]}equals(e){return this===e||e instanceof u&&this.hashCode()===e.hashCode()&&o(this.returnStates,e.returnStates)&&o(this.parents,e.parents)}toString(){if(this.isEmpty())return"[]";{let e="[";for(let t=0;t<this.returnStates.length;t++)t>0&&(e+=", "),this.returnStates[t]!==s.EMPTY_RETURN_STATE?(e+=this.returnStates[t],null!==this.parents[t]?e=e+" "+this.parents[t]:e+="null"):e+="$";return e+"]"}}get length(){return this.returnStates.length}}e.exports={merge:function e(t,n,i,a){if(t===n)return t;if(t instanceof l&&n instanceof l)return function(t,n,i,a){if(null!==a){let e=a.get(t,n);if(null!==e)return e;if(e=a.get(n,t),null!==e)return e}const r=function(e,t,n){if(n){if(e===s.EMPTY)return s.EMPTY;if(t===s.EMPTY)return s.EMPTY}else{if(e===s.EMPTY&&t===s.EMPTY)return s.EMPTY;if(e===s.EMPTY){const e=[t.returnState,s.EMPTY_RETURN_STATE],n=[t.parentCtx,null];return new u(n,e)}if(t===s.EMPTY){const t=[e.returnState,s.EMPTY_RETURN_STATE],n=[e.parentCtx,null];return new u(n,t)}}return null}(t,n,i);if(null!==r)return null!==a&&a.set(t,n,r),r;if(t.returnState===n.returnState){const r=e(t.parentCtx,n.parentCtx,i,a);if(r===t.parentCtx)return t;if(r===n.parentCtx)return n;const o=l.create(r,t.returnState);return null!==a&&a.set(t,n,o),o}{let e=null;if((t===n||null!==t.parentCtx&&t.parentCtx===n.parentCtx)&&(e=t.parentCtx),null!==e){const i=[t.returnState,n.returnState];t.returnState>n.returnState&&(i[0]=n.returnState,i[1]=t.returnState);const r=new u([e,e],i);return null!==a&&a.set(t,n,r),r}const i=[t.returnState,n.returnState];let r=[t.parentCtx,n.parentCtx];t.returnState>n.returnState&&(i[0]=n.returnState,i[1]=t.returnState,r=[n.parentCtx,t.parentCtx]);const o=new u(r,i);return null!==a&&a.set(t,n,o),o}}(t,n,i,a);if(i){if(t instanceof c)return t;if(n instanceof c)return n}return t instanceof l&&(t=new u([t.getParent()],[t.returnState])),n instanceof l&&(n=new u([n.getParent()],[n.returnState])),function(t,n,i,a){if(null!==a){let e=a.get(t,n);if(null!==e)return e;if(e=a.get(n,t),null!==e)return e}let o=0,c=0,m=0,d=[],f=[];for(;o<t.returnStates.length&&c<n.returnStates.length;){const r=t.parents[o],l=n.parents[c];if(t.returnStates[o]===n.returnStates[c]){const n=t.returnStates[o];n===s.EMPTY_RETURN_STATE&&null===r&&null===l||null!==r&&null!==l&&r===l?(f[m]=r,d[m]=n):(f[m]=e(r,l,i,a),d[m]=n),o+=1,c+=1}else t.returnStates[o]<n.returnStates[c]?(f[m]=r,d[m]=t.returnStates[o],o+=1):(f[m]=l,d[m]=n.returnStates[c],c+=1);m+=1}if(o<t.returnStates.length)for(let e=o;e<t.returnStates.length;e++)f[m]=t.parents[e],d[m]=t.returnStates[e],m+=1;else for(let e=c;e<n.returnStates.length;e++)f[m]=n.parents[e],d[m]=n.returnStates[e],m+=1;if(m<f.length){if(1===m){const e=l.create(f[0],d[0]);return null!==a&&a.set(t,n,e),e}f=f.slice(0,m),d=d.slice(0,m)}const p=new u(f,d);return p===t?(null!==a&&a.set(t,n,t),t):p===n?(null!==a&&a.set(t,n,n),n):(function(e){const t=new r;for(let n=0;n<e.length;n++){const i=e[n];t.containsKey(i)||t.put(i,i)}for(let n=0;n<e.length;n++)e[n]=t.get(e[n])}(f),null!==a&&a.set(t,n,p),p)}(t,n,i,a)},PredictionContext:s,PredictionContextCache:class{constructor(){this.cache=new r}add(e){if(e===s.EMPTY)return s.EMPTY;const t=this.cache.get(e)||null;return null!==t?t:(this.cache.put(e,e),e)}get(e){return this.cache.get(e)||null}get length(){return this.cache.length}},SingletonPredictionContext:l,predictionContextFromRuleContext:function e(t,n){if(null==n&&(n=i.EMPTY),null===n.parentCtx||n===i.EMPTY)return s.EMPTY;const a=e(t,n.parentCtx),r=t.states[n.invokingState].transitions[0];return l.create(a,r.followState.stateNumber)},getCachedPredictionContext:function e(t,n,i){if(t.isEmpty())return t;let a=i.get(t)||null;if(null!==a)return a;if(a=n.get(t),null!==a)return i.put(t,a),a;let r=!1,o=[];for(let a=0;a<o.length;a++){const s=e(t.getParent(a),n,i);if(r||s!==t.getParent(a)){if(!r){o=[];for(let e=0;e<t.length;e++)o[e]=t.getParent(e);r=!0}o[a]=s}}if(!r)return n.add(t),i.put(t,t),t;let c=null;return c=0===o.length?s.EMPTY:1===o.length?l.create(o[0],t.getReturnState(0)):new u(o,t.returnStates),n.add(c),i.put(c,c),i.put(t,c),c}}},2530:e=>{e.exports=JSON.parse('{"Account.contained":"Resource","Account.coverage":"BackboneElement","Account.coverage.coverage":"Reference","Account.coverage.extension":"Extension","Account.coverage.id":"System.String","Account.coverage.modifierExtension":"Extension","Account.coverage.priority":"positiveInt","Account.description":"string","Account.extension":"Extension","Account.guarantor":"BackboneElement","Account.guarantor.extension":"Extension","Account.guarantor.id":"System.String","Account.guarantor.modifierExtension":"Extension","Account.guarantor.onHold":"boolean","Account.guarantor.party":"Reference","Account.guarantor.period":"Period","Account.id":"System.String","Account.identifier":"Identifier","Account.implicitRules":"uri","Account.language":"code","Account.meta":"Meta","Account.modifierExtension":"Extension","Account.name":"string","Account.owner":"Reference","Account.partOf":"Reference","Account.servicePeriod":"Period","Account.status":"code","Account.subject":"Reference","Account.text":"Narrative","Account.type":"CodeableConcept","ActivityDefinition.approvalDate":"date","ActivityDefinition.author":"ContactDetail","ActivityDefinition.bodySite":"CodeableConcept","ActivityDefinition.code":"CodeableConcept","ActivityDefinition.contact":"ContactDetail","ActivityDefinition.contained":"Resource","ActivityDefinition.copyright":"markdown","ActivityDefinition.date":"dateTime","ActivityDefinition.description":"markdown","ActivityDefinition.doNotPerform":"boolean","ActivityDefinition.dosage":"Dosage","ActivityDefinition.dynamicValue":"BackboneElement","ActivityDefinition.dynamicValue.expression":"Expression","ActivityDefinition.dynamicValue.extension":"Extension","ActivityDefinition.dynamicValue.id":"System.String","ActivityDefinition.dynamicValue.modifierExtension":"Extension","ActivityDefinition.dynamicValue.path":"string","ActivityDefinition.editor":"ContactDetail","ActivityDefinition.effectivePeriod":"Period","ActivityDefinition.endorser":"ContactDetail","ActivityDefinition.experimental":"boolean","ActivityDefinition.extension":"Extension","ActivityDefinition.id":"System.String","ActivityDefinition.identifier":"Identifier","ActivityDefinition.implicitRules":"uri","ActivityDefinition.intent":"code","ActivityDefinition.jurisdiction":"CodeableConcept","ActivityDefinition.kind":"code","ActivityDefinition.language":"code","ActivityDefinition.lastReviewDate":"date","ActivityDefinition.library":"canonical","ActivityDefinition.location":"Reference","ActivityDefinition.meta":"Meta","ActivityDefinition.modifierExtension":"Extension","ActivityDefinition.name":"string","ActivityDefinition.observationRequirement":"Reference","ActivityDefinition.observationResultRequirement":"Reference","ActivityDefinition.participant":"BackboneElement","ActivityDefinition.participant.extension":"Extension","ActivityDefinition.participant.id":"System.String","ActivityDefinition.participant.modifierExtension":"Extension","ActivityDefinition.participant.role":"CodeableConcept","ActivityDefinition.participant.type":"code","ActivityDefinition.priority":"code","ActivityDefinition.productCodeableConcept":"CodeableConcept","ActivityDefinition.productReference":"Reference","ActivityDefinition.profile":"canonical","ActivityDefinition.publisher":"string","ActivityDefinition.purpose":"markdown","ActivityDefinition.quantity":"Quantity","ActivityDefinition.relatedArtifact":"RelatedArtifact","ActivityDefinition.reviewer":"ContactDetail","ActivityDefinition.specimenRequirement":"Reference","ActivityDefinition.status":"code","ActivityDefinition.subjectCodeableConcept":"CodeableConcept","ActivityDefinition.subjectReference":"Reference","ActivityDefinition.subtitle":"string","ActivityDefinition.text":"Narrative","ActivityDefinition.timingAge":"Age","ActivityDefinition.timingDateTime":"dateTime","ActivityDefinition.timingDuration":"Duration","ActivityDefinition.timingPeriod":"Period","ActivityDefinition.timingRange":"Range","ActivityDefinition.timingTiming":"Timing","ActivityDefinition.title":"string","ActivityDefinition.topic":"CodeableConcept","ActivityDefinition.transform":"canonical","ActivityDefinition.url":"uri","ActivityDefinition.usage":"string","ActivityDefinition.useContext":"UsageContext","ActivityDefinition.version":"string","Address.city":"string","Address.country":"string","Address.district":"string","Address.extension":"Extension","Address.id":"System.String","Address.line":"string","Address.period":"Period","Address.postalCode":"string","Address.state":"string","Address.text":"string","Address.type":"code","Address.use":"code","AdverseEvent.actuality":"code","AdverseEvent.category":"CodeableConcept","AdverseEvent.contained":"Resource","AdverseEvent.contributor":"Reference","AdverseEvent.date":"dateTime","AdverseEvent.detected":"dateTime","AdverseEvent.encounter":"Reference","AdverseEvent.event":"CodeableConcept","AdverseEvent.extension":"Extension","AdverseEvent.id":"System.String","AdverseEvent.identifier":"Identifier","AdverseEvent.implicitRules":"uri","AdverseEvent.language":"code","AdverseEvent.location":"Reference","AdverseEvent.meta":"Meta","AdverseEvent.modifierExtension":"Extension","AdverseEvent.outcome":"CodeableConcept","AdverseEvent.recordedDate":"dateTime","AdverseEvent.recorder":"Reference","AdverseEvent.referenceDocument":"Reference","AdverseEvent.resultingCondition":"Reference","AdverseEvent.seriousness":"CodeableConcept","AdverseEvent.severity":"CodeableConcept","AdverseEvent.study":"Reference","AdverseEvent.subject":"Reference","AdverseEvent.subjectMedicalHistory":"Reference","AdverseEvent.suspectEntity":"BackboneElement","AdverseEvent.suspectEntity.causality":"BackboneElement","AdverseEvent.suspectEntity.causality.assessment":"CodeableConcept","AdverseEvent.suspectEntity.causality.author":"Reference","AdverseEvent.suspectEntity.causality.extension":"Extension","AdverseEvent.suspectEntity.causality.id":"System.String","AdverseEvent.suspectEntity.causality.method":"CodeableConcept","AdverseEvent.suspectEntity.causality.modifierExtension":"Extension","AdverseEvent.suspectEntity.causality.productRelatedness":"string","AdverseEvent.suspectEntity.extension":"Extension","AdverseEvent.suspectEntity.id":"System.String","AdverseEvent.suspectEntity.instance":"Reference","AdverseEvent.suspectEntity.modifierExtension":"Extension","AdverseEvent.text":"Narrative","Age.code":"code","Age.comparator":"code","Age.extension":"Extension","Age.id":"System.String","Age.system":"uri","Age.unit":"string","Age.value":"decimal","AllergyIntolerance.asserter":"Reference","AllergyIntolerance.category":"code","AllergyIntolerance.clinicalStatus":"CodeableConcept","AllergyIntolerance.code":"CodeableConcept","AllergyIntolerance.contained":"Resource","AllergyIntolerance.criticality":"code","AllergyIntolerance.encounter":"Reference","AllergyIntolerance.extension":"Extension","AllergyIntolerance.id":"System.String","AllergyIntolerance.identifier":"Identifier","AllergyIntolerance.implicitRules":"uri","AllergyIntolerance.language":"code","AllergyIntolerance.lastOccurrence":"dateTime","AllergyIntolerance.meta":"Meta","AllergyIntolerance.modifierExtension":"Extension","AllergyIntolerance.note":"Annotation","AllergyIntolerance.onsetAge":"Age","AllergyIntolerance.onsetDateTime":"dateTime","AllergyIntolerance.onsetPeriod":"Period","AllergyIntolerance.onsetRange":"Range","AllergyIntolerance.onsetString":"string","AllergyIntolerance.patient":"Reference","AllergyIntolerance.reaction":"BackboneElement","AllergyIntolerance.reaction.description":"string","AllergyIntolerance.reaction.exposureRoute":"CodeableConcept","AllergyIntolerance.reaction.extension":"Extension","AllergyIntolerance.reaction.id":"System.String","AllergyIntolerance.reaction.manifestation":"CodeableConcept","AllergyIntolerance.reaction.modifierExtension":"Extension","AllergyIntolerance.reaction.note":"Annotation","AllergyIntolerance.reaction.onset":"dateTime","AllergyIntolerance.reaction.severity":"code","AllergyIntolerance.reaction.substance":"CodeableConcept","AllergyIntolerance.recordedDate":"dateTime","AllergyIntolerance.recorder":"Reference","AllergyIntolerance.text":"Narrative","AllergyIntolerance.type":"code","AllergyIntolerance.verificationStatus":"CodeableConcept","Annotation.authorReference":"Reference","Annotation.authorString":"string","Annotation.extension":"Extension","Annotation.id":"System.String","Annotation.text":"markdown","Annotation.time":"dateTime","Appointment.appointmentType":"CodeableConcept","Appointment.basedOn":"Reference","Appointment.cancelationReason":"CodeableConcept","Appointment.comment":"string","Appointment.contained":"Resource","Appointment.created":"dateTime","Appointment.description":"string","Appointment.end":"instant","Appointment.extension":"Extension","Appointment.id":"System.String","Appointment.identifier":"Identifier","Appointment.implicitRules":"uri","Appointment.language":"code","Appointment.meta":"Meta","Appointment.minutesDuration":"positiveInt","Appointment.modifierExtension":"Extension","Appointment.participant":"BackboneElement","Appointment.participant.actor":"Reference","Appointment.participant.extension":"Extension","Appointment.participant.id":"System.String","Appointment.participant.modifierExtension":"Extension","Appointment.participant.period":"Period","Appointment.participant.required":"code","Appointment.participant.status":"code","Appointment.participant.type":"CodeableConcept","Appointment.patientInstruction":"string","Appointment.priority":"unsignedInt","Appointment.reasonCode":"CodeableConcept","Appointment.reasonReference":"Reference","Appointment.requestedPeriod":"Period","Appointment.serviceCategory":"CodeableConcept","Appointment.serviceType":"CodeableConcept","Appointment.slot":"Reference","Appointment.specialty":"CodeableConcept","Appointment.start":"instant","Appointment.status":"code","Appointment.supportingInformation":"Reference","Appointment.text":"Narrative","AppointmentResponse.actor":"Reference","AppointmentResponse.appointment":"Reference","AppointmentResponse.comment":"string","AppointmentResponse.contained":"Resource","AppointmentResponse.end":"instant","AppointmentResponse.extension":"Extension","AppointmentResponse.id":"System.String","AppointmentResponse.identifier":"Identifier","AppointmentResponse.implicitRules":"uri","AppointmentResponse.language":"code","AppointmentResponse.meta":"Meta","AppointmentResponse.modifierExtension":"Extension","AppointmentResponse.participantStatus":"code","AppointmentResponse.participantType":"CodeableConcept","AppointmentResponse.start":"instant","AppointmentResponse.text":"Narrative","Attachment.contentType":"code","Attachment.creation":"dateTime","Attachment.data":"base64Binary","Attachment.extension":"Extension","Attachment.hash":"base64Binary","Attachment.id":"System.String","Attachment.language":"code","Attachment.size":"unsignedInt","Attachment.title":"string","Attachment.url":"url","AuditEvent.action":"code","AuditEvent.agent":"BackboneElement","AuditEvent.agent.altId":"string","AuditEvent.agent.extension":"Extension","AuditEvent.agent.id":"System.String","AuditEvent.agent.location":"Reference","AuditEvent.agent.media":"Coding","AuditEvent.agent.modifierExtension":"Extension","AuditEvent.agent.name":"string","AuditEvent.agent.network":"BackboneElement","AuditEvent.agent.network.address":"string","AuditEvent.agent.network.extension":"Extension","AuditEvent.agent.network.id":"System.String","AuditEvent.agent.network.modifierExtension":"Extension","AuditEvent.agent.network.type":"code","AuditEvent.agent.policy":"uri","AuditEvent.agent.purposeOfUse":"CodeableConcept","AuditEvent.agent.requestor":"boolean","AuditEvent.agent.role":"CodeableConcept","AuditEvent.agent.type":"CodeableConcept","AuditEvent.agent.who":"Reference","AuditEvent.contained":"Resource","AuditEvent.entity":"BackboneElement","AuditEvent.entity.description":"string","AuditEvent.entity.detail":"BackboneElement","AuditEvent.entity.detail.extension":"Extension","AuditEvent.entity.detail.id":"System.String","AuditEvent.entity.detail.modifierExtension":"Extension","AuditEvent.entity.detail.type":"string","AuditEvent.entity.detail.valueBase64Binary":"base64Binary","AuditEvent.entity.detail.valueString":"string","AuditEvent.entity.extension":"Extension","AuditEvent.entity.id":"System.String","AuditEvent.entity.lifecycle":"Coding","AuditEvent.entity.modifierExtension":"Extension","AuditEvent.entity.name":"string","AuditEvent.entity.query":"base64Binary","AuditEvent.entity.role":"Coding","AuditEvent.entity.securityLabel":"Coding","AuditEvent.entity.type":"Coding","AuditEvent.entity.what":"Reference","AuditEvent.extension":"Extension","AuditEvent.id":"System.String","AuditEvent.implicitRules":"uri","AuditEvent.language":"code","AuditEvent.meta":"Meta","AuditEvent.modifierExtension":"Extension","AuditEvent.outcome":"code","AuditEvent.outcomeDesc":"string","AuditEvent.period":"Period","AuditEvent.purposeOfEvent":"CodeableConcept","AuditEvent.recorded":"instant","AuditEvent.source":"BackboneElement","AuditEvent.source.extension":"Extension","AuditEvent.source.id":"System.String","AuditEvent.source.modifierExtension":"Extension","AuditEvent.source.observer":"Reference","AuditEvent.source.site":"string","AuditEvent.source.type":"Coding","AuditEvent.subtype":"Coding","AuditEvent.text":"Narrative","AuditEvent.type":"Coding","BackboneElement.extension":"Extension","BackboneElement.id":"System.String","BackboneElement.modifierExtension":"Extension","Basic.author":"Reference","Basic.code":"CodeableConcept","Basic.contained":"Resource","Basic.created":"date","Basic.extension":"Extension","Basic.id":"System.String","Basic.identifier":"Identifier","Basic.implicitRules":"uri","Basic.language":"code","Basic.meta":"Meta","Basic.modifierExtension":"Extension","Basic.subject":"Reference","Basic.text":"Narrative","Binary.contentType":"code","Binary.data":"base64Binary","Binary.id":"System.String","Binary.implicitRules":"uri","Binary.language":"code","Binary.meta":"Meta","Binary.securityContext":"Reference","BiologicallyDerivedProduct.collection":"BackboneElement","BiologicallyDerivedProduct.collection.collectedDateTime":"dateTime","BiologicallyDerivedProduct.collection.collectedPeriod":"Period","BiologicallyDerivedProduct.collection.collector":"Reference","BiologicallyDerivedProduct.collection.extension":"Extension","BiologicallyDerivedProduct.collection.id":"System.String","BiologicallyDerivedProduct.collection.modifierExtension":"Extension","BiologicallyDerivedProduct.collection.source":"Reference","BiologicallyDerivedProduct.contained":"Resource","BiologicallyDerivedProduct.extension":"Extension","BiologicallyDerivedProduct.id":"System.String","BiologicallyDerivedProduct.identifier":"Identifier","BiologicallyDerivedProduct.implicitRules":"uri","BiologicallyDerivedProduct.language":"code","BiologicallyDerivedProduct.manipulation":"BackboneElement","BiologicallyDerivedProduct.manipulation.description":"string","BiologicallyDerivedProduct.manipulation.extension":"Extension","BiologicallyDerivedProduct.manipulation.id":"System.String","BiologicallyDerivedProduct.manipulation.modifierExtension":"Extension","BiologicallyDerivedProduct.manipulation.timeDateTime":"dateTime","BiologicallyDerivedProduct.manipulation.timePeriod":"Period","BiologicallyDerivedProduct.meta":"Meta","BiologicallyDerivedProduct.modifierExtension":"Extension","BiologicallyDerivedProduct.parent":"Reference","BiologicallyDerivedProduct.processing":"BackboneElement","BiologicallyDerivedProduct.processing.additive":"Reference","BiologicallyDerivedProduct.processing.description":"string","BiologicallyDerivedProduct.processing.extension":"Extension","BiologicallyDerivedProduct.processing.id":"System.String","BiologicallyDerivedProduct.processing.modifierExtension":"Extension","BiologicallyDerivedProduct.processing.procedure":"CodeableConcept","BiologicallyDerivedProduct.processing.timeDateTime":"dateTime","BiologicallyDerivedProduct.processing.timePeriod":"Period","BiologicallyDerivedProduct.productCategory":"code","BiologicallyDerivedProduct.productCode":"CodeableConcept","BiologicallyDerivedProduct.quantity":"integer","BiologicallyDerivedProduct.request":"Reference","BiologicallyDerivedProduct.status":"code","BiologicallyDerivedProduct.storage":"BackboneElement","BiologicallyDerivedProduct.storage.description":"string","BiologicallyDerivedProduct.storage.duration":"Period","BiologicallyDerivedProduct.storage.extension":"Extension","BiologicallyDerivedProduct.storage.id":"System.String","BiologicallyDerivedProduct.storage.modifierExtension":"Extension","BiologicallyDerivedProduct.storage.scale":"code","BiologicallyDerivedProduct.storage.temperature":"decimal","BiologicallyDerivedProduct.text":"Narrative","BodyStructure.active":"boolean","BodyStructure.contained":"Resource","BodyStructure.description":"string","BodyStructure.extension":"Extension","BodyStructure.id":"System.String","BodyStructure.identifier":"Identifier","BodyStructure.image":"Attachment","BodyStructure.implicitRules":"uri","BodyStructure.language":"code","BodyStructure.location":"CodeableConcept","BodyStructure.locationQualifier":"CodeableConcept","BodyStructure.meta":"Meta","BodyStructure.modifierExtension":"Extension","BodyStructure.morphology":"CodeableConcept","BodyStructure.patient":"Reference","BodyStructure.text":"Narrative","Bundle.entry":"BackboneElement","Bundle.entry.extension":"Extension","Bundle.entry.fullUrl":"uri","Bundle.entry.id":"System.String","Bundle.entry.modifierExtension":"Extension","Bundle.entry.request":"BackboneElement","Bundle.entry.request.extension":"Extension","Bundle.entry.request.id":"System.String","Bundle.entry.request.ifMatch":"string","Bundle.entry.request.ifModifiedSince":"instant","Bundle.entry.request.ifNoneExist":"string","Bundle.entry.request.ifNoneMatch":"string","Bundle.entry.request.method":"code","Bundle.entry.request.modifierExtension":"Extension","Bundle.entry.request.url":"uri","Bundle.entry.resource":"Resource","Bundle.entry.response":"BackboneElement","Bundle.entry.response.etag":"string","Bundle.entry.response.extension":"Extension","Bundle.entry.response.id":"System.String","Bundle.entry.response.lastModified":"instant","Bundle.entry.response.location":"uri","Bundle.entry.response.modifierExtension":"Extension","Bundle.entry.response.outcome":"Resource","Bundle.entry.response.status":"string","Bundle.entry.search":"BackboneElement","Bundle.entry.search.extension":"Extension","Bundle.entry.search.id":"System.String","Bundle.entry.search.mode":"code","Bundle.entry.search.modifierExtension":"Extension","Bundle.entry.search.score":"decimal","Bundle.id":"System.String","Bundle.identifier":"Identifier","Bundle.implicitRules":"uri","Bundle.language":"code","Bundle.link":"BackboneElement","Bundle.link.extension":"Extension","Bundle.link.id":"System.String","Bundle.link.modifierExtension":"Extension","Bundle.link.relation":"string","Bundle.link.url":"uri","Bundle.meta":"Meta","Bundle.signature":"Signature","Bundle.timestamp":"instant","Bundle.total":"unsignedInt","Bundle.type":"code","CapabilityStatement.contact":"ContactDetail","CapabilityStatement.contained":"Resource","CapabilityStatement.copyright":"markdown","CapabilityStatement.date":"dateTime","CapabilityStatement.description":"markdown","CapabilityStatement.document":"BackboneElement","CapabilityStatement.document.documentation":"markdown","CapabilityStatement.document.extension":"Extension","CapabilityStatement.document.id":"System.String","CapabilityStatement.document.mode":"code","CapabilityStatement.document.modifierExtension":"Extension","CapabilityStatement.document.profile":"canonical","CapabilityStatement.experimental":"boolean","CapabilityStatement.extension":"Extension","CapabilityStatement.fhirVersion":"code","CapabilityStatement.format":"code","CapabilityStatement.id":"System.String","CapabilityStatement.implementation":"BackboneElement","CapabilityStatement.implementation.custodian":"Reference","CapabilityStatement.implementation.description":"string","CapabilityStatement.implementation.extension":"Extension","CapabilityStatement.implementation.id":"System.String","CapabilityStatement.implementation.modifierExtension":"Extension","CapabilityStatement.implementation.url":"url","CapabilityStatement.implementationGuide":"canonical","CapabilityStatement.implicitRules":"uri","CapabilityStatement.imports":"canonical","CapabilityStatement.instantiates":"canonical","CapabilityStatement.jurisdiction":"CodeableConcept","CapabilityStatement.kind":"code","CapabilityStatement.language":"code","CapabilityStatement.messaging":"BackboneElement","CapabilityStatement.messaging.documentation":"markdown","CapabilityStatement.messaging.endpoint":"BackboneElement","CapabilityStatement.messaging.endpoint.address":"url","CapabilityStatement.messaging.endpoint.extension":"Extension","CapabilityStatement.messaging.endpoint.id":"System.String","CapabilityStatement.messaging.endpoint.modifierExtension":"Extension","CapabilityStatement.messaging.endpoint.protocol":"Coding","CapabilityStatement.messaging.extension":"Extension","CapabilityStatement.messaging.id":"System.String","CapabilityStatement.messaging.modifierExtension":"Extension","CapabilityStatement.messaging.reliableCache":"unsignedInt","CapabilityStatement.messaging.supportedMessage":"BackboneElement","CapabilityStatement.messaging.supportedMessage.definition":"canonical","CapabilityStatement.messaging.supportedMessage.extension":"Extension","CapabilityStatement.messaging.supportedMessage.id":"System.String","CapabilityStatement.messaging.supportedMessage.mode":"code","CapabilityStatement.messaging.supportedMessage.modifierExtension":"Extension","CapabilityStatement.meta":"Meta","CapabilityStatement.modifierExtension":"Extension","CapabilityStatement.name":"string","CapabilityStatement.patchFormat":"code","CapabilityStatement.publisher":"string","CapabilityStatement.purpose":"markdown","CapabilityStatement.rest":"BackboneElement","CapabilityStatement.rest.compartment":"canonical","CapabilityStatement.rest.documentation":"markdown","CapabilityStatement.rest.extension":"Extension","CapabilityStatement.rest.id":"System.String","CapabilityStatement.rest.interaction":"BackboneElement","CapabilityStatement.rest.interaction.code":"code","CapabilityStatement.rest.interaction.documentation":"markdown","CapabilityStatement.rest.interaction.extension":"Extension","CapabilityStatement.rest.interaction.id":"System.String","CapabilityStatement.rest.interaction.modifierExtension":"Extension","CapabilityStatement.rest.mode":"code","CapabilityStatement.rest.modifierExtension":"Extension","CapabilityStatement.rest.resource":"BackboneElement","CapabilityStatement.rest.resource.conditionalCreate":"boolean","CapabilityStatement.rest.resource.conditionalDelete":"code","CapabilityStatement.rest.resource.conditionalRead":"code","CapabilityStatement.rest.resource.conditionalUpdate":"boolean","CapabilityStatement.rest.resource.documentation":"markdown","CapabilityStatement.rest.resource.extension":"Extension","CapabilityStatement.rest.resource.id":"System.String","CapabilityStatement.rest.resource.interaction":"BackboneElement","CapabilityStatement.rest.resource.interaction.code":"code","CapabilityStatement.rest.resource.interaction.documentation":"markdown","CapabilityStatement.rest.resource.interaction.extension":"Extension","CapabilityStatement.rest.resource.interaction.id":"System.String","CapabilityStatement.rest.resource.interaction.modifierExtension":"Extension","CapabilityStatement.rest.resource.modifierExtension":"Extension","CapabilityStatement.rest.resource.operation":"BackboneElement","CapabilityStatement.rest.resource.operation.definition":"canonical","CapabilityStatement.rest.resource.operation.documentation":"markdown","CapabilityStatement.rest.resource.operation.extension":"Extension","CapabilityStatement.rest.resource.operation.id":"System.String","CapabilityStatement.rest.resource.operation.modifierExtension":"Extension","CapabilityStatement.rest.resource.operation.name":"string","CapabilityStatement.rest.resource.profile":"canonical","CapabilityStatement.rest.resource.readHistory":"boolean","CapabilityStatement.rest.resource.referencePolicy":"code","CapabilityStatement.rest.resource.searchInclude":"string","CapabilityStatement.rest.resource.searchParam":"BackboneElement","CapabilityStatement.rest.resource.searchParam.definition":"canonical","CapabilityStatement.rest.resource.searchParam.documentation":"markdown","CapabilityStatement.rest.resource.searchParam.extension":"Extension","CapabilityStatement.rest.resource.searchParam.id":"System.String","CapabilityStatement.rest.resource.searchParam.modifierExtension":"Extension","CapabilityStatement.rest.resource.searchParam.name":"string","CapabilityStatement.rest.resource.searchParam.type":"code","CapabilityStatement.rest.resource.searchRevInclude":"string","CapabilityStatement.rest.resource.supportedProfile":"canonical","CapabilityStatement.rest.resource.type":"code","CapabilityStatement.rest.resource.updateCreate":"boolean","CapabilityStatement.rest.resource.versioning":"code","CapabilityStatement.rest.security":"BackboneElement","CapabilityStatement.rest.security.cors":"boolean","CapabilityStatement.rest.security.description":"markdown","CapabilityStatement.rest.security.extension":"Extension","CapabilityStatement.rest.security.id":"System.String","CapabilityStatement.rest.security.modifierExtension":"Extension","CapabilityStatement.rest.security.service":"CodeableConcept","CapabilityStatement.software":"BackboneElement","CapabilityStatement.software.extension":"Extension","CapabilityStatement.software.id":"System.String","CapabilityStatement.software.modifierExtension":"Extension","CapabilityStatement.software.name":"string","CapabilityStatement.software.releaseDate":"dateTime","CapabilityStatement.software.version":"string","CapabilityStatement.status":"code","CapabilityStatement.text":"Narrative","CapabilityStatement.title":"string","CapabilityStatement.url":"uri","CapabilityStatement.useContext":"UsageContext","CapabilityStatement.version":"string","CarePlan.activity":"BackboneElement","CarePlan.activity.detail":"BackboneElement","CarePlan.activity.detail.code":"CodeableConcept","CarePlan.activity.detail.dailyAmount":"Quantity","CarePlan.activity.detail.description":"string","CarePlan.activity.detail.doNotPerform":"boolean","CarePlan.activity.detail.extension":"Extension","CarePlan.activity.detail.goal":"Reference","CarePlan.activity.detail.id":"System.String","CarePlan.activity.detail.instantiatesCanonical":"canonical","CarePlan.activity.detail.instantiatesUri":"uri","CarePlan.activity.detail.kind":"code","CarePlan.activity.detail.location":"Reference","CarePlan.activity.detail.modifierExtension":"Extension","CarePlan.activity.detail.performer":"Reference","CarePlan.activity.detail.productCodeableConcept":"CodeableConcept","CarePlan.activity.detail.productReference":"Reference","CarePlan.activity.detail.quantity":"Quantity","CarePlan.activity.detail.reasonCode":"CodeableConcept","CarePlan.activity.detail.reasonReference":"Reference","CarePlan.activity.detail.scheduledPeriod":"Period","CarePlan.activity.detail.scheduledString":"string","CarePlan.activity.detail.scheduledTiming":"Timing","CarePlan.activity.detail.status":"code","CarePlan.activity.detail.statusReason":"CodeableConcept","CarePlan.activity.extension":"Extension","CarePlan.activity.id":"System.String","CarePlan.activity.modifierExtension":"Extension","CarePlan.activity.outcomeCodeableConcept":"CodeableConcept","CarePlan.activity.outcomeReference":"Reference","CarePlan.activity.progress":"Annotation","CarePlan.activity.reference":"Reference","CarePlan.addresses":"Reference","CarePlan.author":"Reference","CarePlan.basedOn":"Reference","CarePlan.careTeam":"Reference","CarePlan.category":"CodeableConcept","CarePlan.contained":"Resource","CarePlan.contributor":"Reference","CarePlan.created":"dateTime","CarePlan.description":"string","CarePlan.encounter":"Reference","CarePlan.extension":"Extension","CarePlan.goal":"Reference","CarePlan.id":"System.String","CarePlan.identifier":"Identifier","CarePlan.implicitRules":"uri","CarePlan.instantiatesCanonical":"canonical","CarePlan.instantiatesUri":"uri","CarePlan.intent":"code","CarePlan.language":"code","CarePlan.meta":"Meta","CarePlan.modifierExtension":"Extension","CarePlan.note":"Annotation","CarePlan.partOf":"Reference","CarePlan.period":"Period","CarePlan.replaces":"Reference","CarePlan.status":"code","CarePlan.subject":"Reference","CarePlan.supportingInfo":"Reference","CarePlan.text":"Narrative","CarePlan.title":"string","CareTeam.category":"CodeableConcept","CareTeam.contained":"Resource","CareTeam.encounter":"Reference","CareTeam.extension":"Extension","CareTeam.id":"System.String","CareTeam.identifier":"Identifier","CareTeam.implicitRules":"uri","CareTeam.language":"code","CareTeam.managingOrganization":"Reference","CareTeam.meta":"Meta","CareTeam.modifierExtension":"Extension","CareTeam.name":"string","CareTeam.note":"Annotation","CareTeam.participant":"BackboneElement","CareTeam.participant.extension":"Extension","CareTeam.participant.id":"System.String","CareTeam.participant.member":"Reference","CareTeam.participant.modifierExtension":"Extension","CareTeam.participant.onBehalfOf":"Reference","CareTeam.participant.period":"Period","CareTeam.participant.role":"CodeableConcept","CareTeam.period":"Period","CareTeam.reasonCode":"CodeableConcept","CareTeam.reasonReference":"Reference","CareTeam.status":"code","CareTeam.subject":"Reference","CareTeam.telecom":"ContactPoint","CareTeam.text":"Narrative","CatalogEntry.additionalCharacteristic":"CodeableConcept","CatalogEntry.additionalClassification":"CodeableConcept","CatalogEntry.additionalIdentifier":"Identifier","CatalogEntry.classification":"CodeableConcept","CatalogEntry.contained":"Resource","CatalogEntry.extension":"Extension","CatalogEntry.id":"System.String","CatalogEntry.identifier":"Identifier","CatalogEntry.implicitRules":"uri","CatalogEntry.language":"code","CatalogEntry.lastUpdated":"dateTime","CatalogEntry.meta":"Meta","CatalogEntry.modifierExtension":"Extension","CatalogEntry.orderable":"boolean","CatalogEntry.referencedItem":"Reference","CatalogEntry.relatedEntry":"BackboneElement","CatalogEntry.relatedEntry.extension":"Extension","CatalogEntry.relatedEntry.id":"System.String","CatalogEntry.relatedEntry.item":"Reference","CatalogEntry.relatedEntry.modifierExtension":"Extension","CatalogEntry.relatedEntry.relationtype":"code","CatalogEntry.status":"code","CatalogEntry.text":"Narrative","CatalogEntry.type":"CodeableConcept","CatalogEntry.validTo":"dateTime","CatalogEntry.validityPeriod":"Period","ChargeItem.account":"Reference","ChargeItem.bodysite":"CodeableConcept","ChargeItem.code":"CodeableConcept","ChargeItem.contained":"Resource","ChargeItem.context":"Reference","ChargeItem.costCenter":"Reference","ChargeItem.definitionCanonical":"canonical","ChargeItem.definitionUri":"uri","ChargeItem.enteredDate":"dateTime","ChargeItem.enterer":"Reference","ChargeItem.extension":"Extension","ChargeItem.factorOverride":"decimal","ChargeItem.id":"System.String","ChargeItem.identifier":"Identifier","ChargeItem.implicitRules":"uri","ChargeItem.language":"code","ChargeItem.meta":"Meta","ChargeItem.modifierExtension":"Extension","ChargeItem.note":"Annotation","ChargeItem.occurrenceDateTime":"dateTime","ChargeItem.occurrencePeriod":"Period","ChargeItem.occurrenceTiming":"Timing","ChargeItem.overrideReason":"string","ChargeItem.partOf":"Reference","ChargeItem.performer":"BackboneElement","ChargeItem.performer.actor":"Reference","ChargeItem.performer.extension":"Extension","ChargeItem.performer.function":"CodeableConcept","ChargeItem.performer.id":"System.String","ChargeItem.performer.modifierExtension":"Extension","ChargeItem.performingOrganization":"Reference","ChargeItem.priceOverride":"Money","ChargeItem.productCodeableConcept":"CodeableConcept","ChargeItem.productReference":"Reference","ChargeItem.quantity":"Quantity","ChargeItem.reason":"CodeableConcept","ChargeItem.requestingOrganization":"Reference","ChargeItem.service":"Reference","ChargeItem.status":"code","ChargeItem.subject":"Reference","ChargeItem.supportingInformation":"Reference","ChargeItem.text":"Narrative","ChargeItemDefinition.applicability":"BackboneElement","ChargeItemDefinition.applicability.description":"string","ChargeItemDefinition.applicability.expression":"string","ChargeItemDefinition.applicability.extension":"Extension","ChargeItemDefinition.applicability.id":"System.String","ChargeItemDefinition.applicability.language":"string","ChargeItemDefinition.applicability.modifierExtension":"Extension","ChargeItemDefinition.approvalDate":"date","ChargeItemDefinition.code":"CodeableConcept","ChargeItemDefinition.contact":"ContactDetail","ChargeItemDefinition.contained":"Resource","ChargeItemDefinition.copyright":"markdown","ChargeItemDefinition.date":"dateTime","ChargeItemDefinition.derivedFromUri":"uri","ChargeItemDefinition.description":"markdown","ChargeItemDefinition.effectivePeriod":"Period","ChargeItemDefinition.experimental":"boolean","ChargeItemDefinition.extension":"Extension","ChargeItemDefinition.id":"System.String","ChargeItemDefinition.identifier":"Identifier","ChargeItemDefinition.implicitRules":"uri","ChargeItemDefinition.instance":"Reference","ChargeItemDefinition.jurisdiction":"CodeableConcept","ChargeItemDefinition.language":"code","ChargeItemDefinition.lastReviewDate":"date","ChargeItemDefinition.meta":"Meta","ChargeItemDefinition.modifierExtension":"Extension","ChargeItemDefinition.partOf":"canonical","ChargeItemDefinition.propertyGroup":"BackboneElement","ChargeItemDefinition.propertyGroup.extension":"Extension","ChargeItemDefinition.propertyGroup.id":"System.String","ChargeItemDefinition.propertyGroup.modifierExtension":"Extension","ChargeItemDefinition.propertyGroup.priceComponent":"BackboneElement","ChargeItemDefinition.propertyGroup.priceComponent.amount":"Money","ChargeItemDefinition.propertyGroup.priceComponent.code":"CodeableConcept","ChargeItemDefinition.propertyGroup.priceComponent.extension":"Extension","ChargeItemDefinition.propertyGroup.priceComponent.factor":"decimal","ChargeItemDefinition.propertyGroup.priceComponent.id":"System.String","ChargeItemDefinition.propertyGroup.priceComponent.modifierExtension":"Extension","ChargeItemDefinition.propertyGroup.priceComponent.type":"code","ChargeItemDefinition.publisher":"string","ChargeItemDefinition.replaces":"canonical","ChargeItemDefinition.status":"code","ChargeItemDefinition.text":"Narrative","ChargeItemDefinition.title":"string","ChargeItemDefinition.url":"uri","ChargeItemDefinition.useContext":"UsageContext","ChargeItemDefinition.version":"string","Claim.accident":"BackboneElement","Claim.accident.date":"date","Claim.accident.extension":"Extension","Claim.accident.id":"System.String","Claim.accident.locationAddress":"Address","Claim.accident.locationReference":"Reference","Claim.accident.modifierExtension":"Extension","Claim.accident.type":"CodeableConcept","Claim.billablePeriod":"Period","Claim.careTeam":"BackboneElement","Claim.careTeam.extension":"Extension","Claim.careTeam.id":"System.String","Claim.careTeam.modifierExtension":"Extension","Claim.careTeam.provider":"Reference","Claim.careTeam.qualification":"CodeableConcept","Claim.careTeam.responsible":"boolean","Claim.careTeam.role":"CodeableConcept","Claim.careTeam.sequence":"positiveInt","Claim.contained":"Resource","Claim.created":"dateTime","Claim.diagnosis":"BackboneElement","Claim.diagnosis.diagnosisCodeableConcept":"CodeableConcept","Claim.diagnosis.diagnosisReference":"Reference","Claim.diagnosis.extension":"Extension","Claim.diagnosis.id":"System.String","Claim.diagnosis.modifierExtension":"Extension","Claim.diagnosis.onAdmission":"CodeableConcept","Claim.diagnosis.packageCode":"CodeableConcept","Claim.diagnosis.sequence":"positiveInt","Claim.diagnosis.type":"CodeableConcept","Claim.enterer":"Reference","Claim.extension":"Extension","Claim.facility":"Reference","Claim.fundsReserve":"CodeableConcept","Claim.id":"System.String","Claim.identifier":"Identifier","Claim.implicitRules":"uri","Claim.insurance":"BackboneElement","Claim.insurance.businessArrangement":"string","Claim.insurance.claimResponse":"Reference","Claim.insurance.coverage":"Reference","Claim.insurance.extension":"Extension","Claim.insurance.focal":"boolean","Claim.insurance.id":"System.String","Claim.insurance.identifier":"Identifier","Claim.insurance.modifierExtension":"Extension","Claim.insurance.preAuthRef":"string","Claim.insurance.sequence":"positiveInt","Claim.insurer":"Reference","Claim.item":"BackboneElement","Claim.item.bodySite":"CodeableConcept","Claim.item.careTeamSequence":"positiveInt","Claim.item.category":"CodeableConcept","Claim.item.detail":"BackboneElement","Claim.item.detail.category":"CodeableConcept","Claim.item.detail.extension":"Extension","Claim.item.detail.factor":"decimal","Claim.item.detail.id":"System.String","Claim.item.detail.modifier":"CodeableConcept","Claim.item.detail.modifierExtension":"Extension","Claim.item.detail.net":"Money","Claim.item.detail.productOrService":"CodeableConcept","Claim.item.detail.programCode":"CodeableConcept","Claim.item.detail.quantity":"Quantity","Claim.item.detail.revenue":"CodeableConcept","Claim.item.detail.sequence":"positiveInt","Claim.item.detail.subDetail":"BackboneElement","Claim.item.detail.subDetail.category":"CodeableConcept","Claim.item.detail.subDetail.extension":"Extension","Claim.item.detail.subDetail.factor":"decimal","Claim.item.detail.subDetail.id":"System.String","Claim.item.detail.subDetail.modifier":"CodeableConcept","Claim.item.detail.subDetail.modifierExtension":"Extension","Claim.item.detail.subDetail.net":"Money","Claim.item.detail.subDetail.productOrService":"CodeableConcept","Claim.item.detail.subDetail.programCode":"CodeableConcept","Claim.item.detail.subDetail.quantity":"Quantity","Claim.item.detail.subDetail.revenue":"CodeableConcept","Claim.item.detail.subDetail.sequence":"positiveInt","Claim.item.detail.subDetail.udi":"Reference","Claim.item.detail.subDetail.unitPrice":"Money","Claim.item.detail.udi":"Reference","Claim.item.detail.unitPrice":"Money","Claim.item.diagnosisSequence":"positiveInt","Claim.item.encounter":"Reference","Claim.item.extension":"Extension","Claim.item.factor":"decimal","Claim.item.id":"System.String","Claim.item.informationSequence":"positiveInt","Claim.item.locationAddress":"Address","Claim.item.locationCodeableConcept":"CodeableConcept","Claim.item.locationReference":"Reference","Claim.item.modifier":"CodeableConcept","Claim.item.modifierExtension":"Extension","Claim.item.net":"Money","Claim.item.procedureSequence":"positiveInt","Claim.item.productOrService":"CodeableConcept","Claim.item.programCode":"CodeableConcept","Claim.item.quantity":"Quantity","Claim.item.revenue":"CodeableConcept","Claim.item.sequence":"positiveInt","Claim.item.servicedDate":"date","Claim.item.servicedPeriod":"Period","Claim.item.subSite":"CodeableConcept","Claim.item.udi":"Reference","Claim.item.unitPrice":"Money","Claim.language":"code","Claim.meta":"Meta","Claim.modifierExtension":"Extension","Claim.originalPrescription":"Reference","Claim.patient":"Reference","Claim.payee":"BackboneElement","Claim.payee.extension":"Extension","Claim.payee.id":"System.String","Claim.payee.modifierExtension":"Extension","Claim.payee.party":"Reference","Claim.payee.type":"CodeableConcept","Claim.prescription":"Reference","Claim.priority":"CodeableConcept","Claim.procedure":"BackboneElement","Claim.procedure.date":"dateTime","Claim.procedure.extension":"Extension","Claim.procedure.id":"System.String","Claim.procedure.modifierExtension":"Extension","Claim.procedure.procedureCodeableConcept":"CodeableConcept","Claim.procedure.procedureReference":"Reference","Claim.procedure.sequence":"positiveInt","Claim.procedure.type":"CodeableConcept","Claim.procedure.udi":"Reference","Claim.provider":"Reference","Claim.referral":"Reference","Claim.related":"BackboneElement","Claim.related.claim":"Reference","Claim.related.extension":"Extension","Claim.related.id":"System.String","Claim.related.modifierExtension":"Extension","Claim.related.reference":"Identifier","Claim.related.relationship":"CodeableConcept","Claim.status":"code","Claim.subType":"CodeableConcept","Claim.supportingInfo":"BackboneElement","Claim.supportingInfo.category":"CodeableConcept","Claim.supportingInfo.code":"CodeableConcept","Claim.supportingInfo.extension":"Extension","Claim.supportingInfo.id":"System.String","Claim.supportingInfo.modifierExtension":"Extension","Claim.supportingInfo.reason":"CodeableConcept","Claim.supportingInfo.sequence":"positiveInt","Claim.supportingInfo.timingDate":"date","Claim.supportingInfo.timingPeriod":"Period","Claim.supportingInfo.valueAttachment":"Attachment","Claim.supportingInfo.valueBoolean":"boolean","Claim.supportingInfo.valueQuantity":"Quantity","Claim.supportingInfo.valueReference":"Reference","Claim.supportingInfo.valueString":"string","Claim.text":"Narrative","Claim.total":"Money","Claim.type":"CodeableConcept","Claim.use":"code","ClaimResponse.addItem":"BackboneElement","ClaimResponse.addItem.bodySite":"CodeableConcept","ClaimResponse.addItem.detail":"BackboneElement","ClaimResponse.addItem.detail.extension":"Extension","ClaimResponse.addItem.detail.factor":"decimal","ClaimResponse.addItem.detail.id":"System.String","ClaimResponse.addItem.detail.modifier":"CodeableConcept","ClaimResponse.addItem.detail.modifierExtension":"Extension","ClaimResponse.addItem.detail.net":"Money","ClaimResponse.addItem.detail.noteNumber":"positiveInt","ClaimResponse.addItem.detail.productOrService":"CodeableConcept","ClaimResponse.addItem.detail.quantity":"Quantity","ClaimResponse.addItem.detail.subDetail":"BackboneElement","ClaimResponse.addItem.detail.subDetail.extension":"Extension","ClaimResponse.addItem.detail.subDetail.factor":"decimal","ClaimResponse.addItem.detail.subDetail.id":"System.String","ClaimResponse.addItem.detail.subDetail.modifier":"CodeableConcept","ClaimResponse.addItem.detail.subDetail.modifierExtension":"Extension","ClaimResponse.addItem.detail.subDetail.net":"Money","ClaimResponse.addItem.detail.subDetail.noteNumber":"positiveInt","ClaimResponse.addItem.detail.subDetail.productOrService":"CodeableConcept","ClaimResponse.addItem.detail.subDetail.quantity":"Quantity","ClaimResponse.addItem.detail.subDetail.unitPrice":"Money","ClaimResponse.addItem.detail.unitPrice":"Money","ClaimResponse.addItem.detailSequence":"positiveInt","ClaimResponse.addItem.extension":"Extension","ClaimResponse.addItem.factor":"decimal","ClaimResponse.addItem.id":"System.String","ClaimResponse.addItem.itemSequence":"positiveInt","ClaimResponse.addItem.locationAddress":"Address","ClaimResponse.addItem.locationCodeableConcept":"CodeableConcept","ClaimResponse.addItem.locationReference":"Reference","ClaimResponse.addItem.modifier":"CodeableConcept","ClaimResponse.addItem.modifierExtension":"Extension","ClaimResponse.addItem.net":"Money","ClaimResponse.addItem.noteNumber":"positiveInt","ClaimResponse.addItem.productOrService":"CodeableConcept","ClaimResponse.addItem.programCode":"CodeableConcept","ClaimResponse.addItem.provider":"Reference","ClaimResponse.addItem.quantity":"Quantity","ClaimResponse.addItem.servicedDate":"date","ClaimResponse.addItem.servicedPeriod":"Period","ClaimResponse.addItem.subSite":"CodeableConcept","ClaimResponse.addItem.subdetailSequence":"positiveInt","ClaimResponse.addItem.unitPrice":"Money","ClaimResponse.communicationRequest":"Reference","ClaimResponse.contained":"Resource","ClaimResponse.created":"dateTime","ClaimResponse.disposition":"string","ClaimResponse.error":"BackboneElement","ClaimResponse.error.code":"CodeableConcept","ClaimResponse.error.detailSequence":"positiveInt","ClaimResponse.error.extension":"Extension","ClaimResponse.error.id":"System.String","ClaimResponse.error.itemSequence":"positiveInt","ClaimResponse.error.modifierExtension":"Extension","ClaimResponse.error.subDetailSequence":"positiveInt","ClaimResponse.extension":"Extension","ClaimResponse.form":"Attachment","ClaimResponse.formCode":"CodeableConcept","ClaimResponse.fundsReserve":"CodeableConcept","ClaimResponse.id":"System.String","ClaimResponse.identifier":"Identifier","ClaimResponse.implicitRules":"uri","ClaimResponse.insurance":"BackboneElement","ClaimResponse.insurance.businessArrangement":"string","ClaimResponse.insurance.claimResponse":"Reference","ClaimResponse.insurance.coverage":"Reference","ClaimResponse.insurance.extension":"Extension","ClaimResponse.insurance.focal":"boolean","ClaimResponse.insurance.id":"System.String","ClaimResponse.insurance.modifierExtension":"Extension","ClaimResponse.insurance.sequence":"positiveInt","ClaimResponse.insurer":"Reference","ClaimResponse.item":"BackboneElement","ClaimResponse.item.adjudication":"BackboneElement","ClaimResponse.item.adjudication.amount":"Money","ClaimResponse.item.adjudication.category":"CodeableConcept","ClaimResponse.item.adjudication.extension":"Extension","ClaimResponse.item.adjudication.id":"System.String","ClaimResponse.item.adjudication.modifierExtension":"Extension","ClaimResponse.item.adjudication.reason":"CodeableConcept","ClaimResponse.item.adjudication.value":"decimal","ClaimResponse.item.detail":"BackboneElement","ClaimResponse.item.detail.detailSequence":"positiveInt","ClaimResponse.item.detail.extension":"Extension","ClaimResponse.item.detail.id":"System.String","ClaimResponse.item.detail.modifierExtension":"Extension","ClaimResponse.item.detail.noteNumber":"positiveInt","ClaimResponse.item.detail.subDetail":"BackboneElement","ClaimResponse.item.detail.subDetail.extension":"Extension","ClaimResponse.item.detail.subDetail.id":"System.String","ClaimResponse.item.detail.subDetail.modifierExtension":"Extension","ClaimResponse.item.detail.subDetail.noteNumber":"positiveInt","ClaimResponse.item.detail.subDetail.subDetailSequence":"positiveInt","ClaimResponse.item.extension":"Extension","ClaimResponse.item.id":"System.String","ClaimResponse.item.itemSequence":"positiveInt","ClaimResponse.item.modifierExtension":"Extension","ClaimResponse.item.noteNumber":"positiveInt","ClaimResponse.language":"code","ClaimResponse.meta":"Meta","ClaimResponse.modifierExtension":"Extension","ClaimResponse.outcome":"code","ClaimResponse.patient":"Reference","ClaimResponse.payeeType":"CodeableConcept","ClaimResponse.payment":"BackboneElement","ClaimResponse.payment.adjustment":"Money","ClaimResponse.payment.adjustmentReason":"CodeableConcept","ClaimResponse.payment.amount":"Money","ClaimResponse.payment.date":"date","ClaimResponse.payment.extension":"Extension","ClaimResponse.payment.id":"System.String","ClaimResponse.payment.identifier":"Identifier","ClaimResponse.payment.modifierExtension":"Extension","ClaimResponse.payment.type":"CodeableConcept","ClaimResponse.preAuthPeriod":"Period","ClaimResponse.preAuthRef":"string","ClaimResponse.processNote":"BackboneElement","ClaimResponse.processNote.extension":"Extension","ClaimResponse.processNote.id":"System.String","ClaimResponse.processNote.language":"CodeableConcept","ClaimResponse.processNote.modifierExtension":"Extension","ClaimResponse.processNote.number":"positiveInt","ClaimResponse.processNote.text":"string","ClaimResponse.processNote.type":"code","ClaimResponse.request":"Reference","ClaimResponse.requestor":"Reference","ClaimResponse.status":"code","ClaimResponse.subType":"CodeableConcept","ClaimResponse.text":"Narrative","ClaimResponse.total":"BackboneElement","ClaimResponse.total.amount":"Money","ClaimResponse.total.category":"CodeableConcept","ClaimResponse.total.extension":"Extension","ClaimResponse.total.id":"System.String","ClaimResponse.total.modifierExtension":"Extension","ClaimResponse.type":"CodeableConcept","ClaimResponse.use":"code","ClinicalImpression.assessor":"Reference","ClinicalImpression.code":"CodeableConcept","ClinicalImpression.contained":"Resource","ClinicalImpression.date":"dateTime","ClinicalImpression.description":"string","ClinicalImpression.effectiveDateTime":"dateTime","ClinicalImpression.effectivePeriod":"Period","ClinicalImpression.encounter":"Reference","ClinicalImpression.extension":"Extension","ClinicalImpression.finding":"BackboneElement","ClinicalImpression.finding.basis":"string","ClinicalImpression.finding.extension":"Extension","ClinicalImpression.finding.id":"System.String","ClinicalImpression.finding.itemCodeableConcept":"CodeableConcept","ClinicalImpression.finding.itemReference":"Reference","ClinicalImpression.finding.modifierExtension":"Extension","ClinicalImpression.id":"System.String","ClinicalImpression.identifier":"Identifier","ClinicalImpression.implicitRules":"uri","ClinicalImpression.investigation":"BackboneElement","ClinicalImpression.investigation.code":"CodeableConcept","ClinicalImpression.investigation.extension":"Extension","ClinicalImpression.investigation.id":"System.String","ClinicalImpression.investigation.item":"Reference","ClinicalImpression.investigation.modifierExtension":"Extension","ClinicalImpression.language":"code","ClinicalImpression.meta":"Meta","ClinicalImpression.modifierExtension":"Extension","ClinicalImpression.note":"Annotation","ClinicalImpression.previous":"Reference","ClinicalImpression.problem":"Reference","ClinicalImpression.prognosisCodeableConcept":"CodeableConcept","ClinicalImpression.prognosisReference":"Reference","ClinicalImpression.protocol":"uri","ClinicalImpression.status":"code","ClinicalImpression.statusReason":"CodeableConcept","ClinicalImpression.subject":"Reference","ClinicalImpression.summary":"string","ClinicalImpression.supportingInfo":"Reference","ClinicalImpression.text":"Narrative","CodeSystem.caseSensitive":"boolean","CodeSystem.compositional":"boolean","CodeSystem.concept":"BackboneElement","CodeSystem.concept.code":"code","CodeSystem.concept.definition":"string","CodeSystem.concept.designation":"BackboneElement","CodeSystem.concept.designation.extension":"Extension","CodeSystem.concept.designation.id":"System.String","CodeSystem.concept.designation.language":"code","CodeSystem.concept.designation.modifierExtension":"Extension","CodeSystem.concept.designation.use":"Coding","CodeSystem.concept.designation.value":"string","CodeSystem.concept.display":"string","CodeSystem.concept.extension":"Extension","CodeSystem.concept.id":"System.String","CodeSystem.concept.modifierExtension":"Extension","CodeSystem.concept.property":"BackboneElement","CodeSystem.concept.property.code":"code","CodeSystem.concept.property.extension":"Extension","CodeSystem.concept.property.id":"System.String","CodeSystem.concept.property.modifierExtension":"Extension","CodeSystem.concept.property.valueBoolean":"boolean","CodeSystem.concept.property.valueCode":"code","CodeSystem.concept.property.valueCoding":"Coding","CodeSystem.concept.property.valueDateTime":"dateTime","CodeSystem.concept.property.valueDecimal":"decimal","CodeSystem.concept.property.valueInteger":"integer","CodeSystem.concept.property.valueString":"string","CodeSystem.contact":"ContactDetail","CodeSystem.contained":"Resource","CodeSystem.content":"code","CodeSystem.copyright":"markdown","CodeSystem.count":"unsignedInt","CodeSystem.date":"dateTime","CodeSystem.description":"markdown","CodeSystem.experimental":"boolean","CodeSystem.extension":"Extension","CodeSystem.filter":"BackboneElement","CodeSystem.filter.code":"code","CodeSystem.filter.description":"string","CodeSystem.filter.extension":"Extension","CodeSystem.filter.id":"System.String","CodeSystem.filter.modifierExtension":"Extension","CodeSystem.filter.operator":"code","CodeSystem.filter.value":"string","CodeSystem.hierarchyMeaning":"code","CodeSystem.id":"System.String","CodeSystem.identifier":"Identifier","CodeSystem.implicitRules":"uri","CodeSystem.jurisdiction":"CodeableConcept","CodeSystem.language":"code","CodeSystem.meta":"Meta","CodeSystem.modifierExtension":"Extension","CodeSystem.name":"string","CodeSystem.property":"BackboneElement","CodeSystem.property.code":"code","CodeSystem.property.description":"string","CodeSystem.property.extension":"Extension","CodeSystem.property.id":"System.String","CodeSystem.property.modifierExtension":"Extension","CodeSystem.property.type":"code","CodeSystem.property.uri":"uri","CodeSystem.publisher":"string","CodeSystem.purpose":"markdown","CodeSystem.status":"code","CodeSystem.supplements":"canonical","CodeSystem.text":"Narrative","CodeSystem.title":"string","CodeSystem.url":"uri","CodeSystem.useContext":"UsageContext","CodeSystem.valueSet":"canonical","CodeSystem.version":"string","CodeSystem.versionNeeded":"boolean","CodeableConcept.coding":"Coding","CodeableConcept.extension":"Extension","CodeableConcept.id":"System.String","CodeableConcept.text":"string","Coding.code":"code","Coding.display":"string","Coding.extension":"Extension","Coding.id":"System.String","Coding.system":"uri","Coding.userSelected":"boolean","Coding.version":"string","Communication.about":"Reference","Communication.basedOn":"Reference","Communication.category":"CodeableConcept","Communication.contained":"Resource","Communication.encounter":"Reference","Communication.extension":"Extension","Communication.id":"System.String","Communication.identifier":"Identifier","Communication.implicitRules":"uri","Communication.inResponseTo":"Reference","Communication.instantiatesCanonical":"canonical","Communication.instantiatesUri":"uri","Communication.language":"code","Communication.medium":"CodeableConcept","Communication.meta":"Meta","Communication.modifierExtension":"Extension","Communication.note":"Annotation","Communication.partOf":"Reference","Communication.payload":"BackboneElement","Communication.payload.contentAttachment":"Attachment","Communication.payload.contentReference":"Reference","Communication.payload.contentString":"string","Communication.payload.extension":"Extension","Communication.payload.id":"System.String","Communication.payload.modifierExtension":"Extension","Communication.priority":"code","Communication.reasonCode":"CodeableConcept","Communication.reasonReference":"Reference","Communication.received":"dateTime","Communication.recipient":"Reference","Communication.sender":"Reference","Communication.sent":"dateTime","Communication.status":"code","Communication.statusReason":"CodeableConcept","Communication.subject":"Reference","Communication.text":"Narrative","Communication.topic":"CodeableConcept","CommunicationRequest.about":"Reference","CommunicationRequest.authoredOn":"dateTime","CommunicationRequest.basedOn":"Reference","CommunicationRequest.category":"CodeableConcept","CommunicationRequest.contained":"Resource","CommunicationRequest.doNotPerform":"boolean","CommunicationRequest.encounter":"Reference","CommunicationRequest.extension":"Extension","CommunicationRequest.groupIdentifier":"Identifier","CommunicationRequest.id":"System.String","CommunicationRequest.identifier":"Identifier","CommunicationRequest.implicitRules":"uri","CommunicationRequest.language":"code","CommunicationRequest.medium":"CodeableConcept","CommunicationRequest.meta":"Meta","CommunicationRequest.modifierExtension":"Extension","CommunicationRequest.note":"Annotation","CommunicationRequest.occurrenceDateTime":"dateTime","CommunicationRequest.occurrencePeriod":"Period","CommunicationRequest.payload":"BackboneElement","CommunicationRequest.payload.contentAttachment":"Attachment","CommunicationRequest.payload.contentReference":"Reference","CommunicationRequest.payload.contentString":"string","CommunicationRequest.payload.extension":"Extension","CommunicationRequest.payload.id":"System.String","CommunicationRequest.payload.modifierExtension":"Extension","CommunicationRequest.priority":"code","CommunicationRequest.reasonCode":"CodeableConcept","CommunicationRequest.reasonReference":"Reference","CommunicationRequest.recipient":"Reference","CommunicationRequest.replaces":"Reference","CommunicationRequest.requester":"Reference","CommunicationRequest.sender":"Reference","CommunicationRequest.status":"code","CommunicationRequest.statusReason":"CodeableConcept","CommunicationRequest.subject":"Reference","CommunicationRequest.text":"Narrative","CompartmentDefinition.code":"code","CompartmentDefinition.contact":"ContactDetail","CompartmentDefinition.contained":"Resource","CompartmentDefinition.date":"dateTime","CompartmentDefinition.description":"markdown","CompartmentDefinition.experimental":"boolean","CompartmentDefinition.extension":"Extension","CompartmentDefinition.id":"System.String","CompartmentDefinition.implicitRules":"uri","CompartmentDefinition.language":"code","CompartmentDefinition.meta":"Meta","CompartmentDefinition.modifierExtension":"Extension","CompartmentDefinition.name":"string","CompartmentDefinition.publisher":"string","CompartmentDefinition.purpose":"markdown","CompartmentDefinition.resource":"BackboneElement","CompartmentDefinition.resource.code":"code","CompartmentDefinition.resource.documentation":"string","CompartmentDefinition.resource.extension":"Extension","CompartmentDefinition.resource.id":"System.String","CompartmentDefinition.resource.modifierExtension":"Extension","CompartmentDefinition.resource.param":"string","CompartmentDefinition.search":"boolean","CompartmentDefinition.status":"code","CompartmentDefinition.text":"Narrative","CompartmentDefinition.url":"uri","CompartmentDefinition.useContext":"UsageContext","CompartmentDefinition.version":"string","Composition.attester":"BackboneElement","Composition.attester.extension":"Extension","Composition.attester.id":"System.String","Composition.attester.mode":"code","Composition.attester.modifierExtension":"Extension","Composition.attester.party":"Reference","Composition.attester.time":"dateTime","Composition.author":"Reference","Composition.category":"CodeableConcept","Composition.confidentiality":"code","Composition.contained":"Resource","Composition.custodian":"Reference","Composition.date":"dateTime","Composition.encounter":"Reference","Composition.event":"BackboneElement","Composition.event.code":"CodeableConcept","Composition.event.detail":"Reference","Composition.event.extension":"Extension","Composition.event.id":"System.String","Composition.event.modifierExtension":"Extension","Composition.event.period":"Period","Composition.extension":"Extension","Composition.id":"System.String","Composition.identifier":"Identifier","Composition.implicitRules":"uri","Composition.language":"code","Composition.meta":"Meta","Composition.modifierExtension":"Extension","Composition.relatesTo":"BackboneElement","Composition.relatesTo.code":"code","Composition.relatesTo.extension":"Extension","Composition.relatesTo.id":"System.String","Composition.relatesTo.modifierExtension":"Extension","Composition.relatesTo.targetIdentifier":"Identifier","Composition.relatesTo.targetReference":"Reference","Composition.section":"BackboneElement","Composition.section.author":"Reference","Composition.section.code":"CodeableConcept","Composition.section.emptyReason":"CodeableConcept","Composition.section.entry":"Reference","Composition.section.extension":"Extension","Composition.section.focus":"Reference","Composition.section.id":"System.String","Composition.section.mode":"code","Composition.section.modifierExtension":"Extension","Composition.section.orderedBy":"CodeableConcept","Composition.section.text":"Narrative","Composition.section.title":"string","Composition.status":"code","Composition.subject":"Reference","Composition.text":"Narrative","Composition.title":"string","Composition.type":"CodeableConcept","ConceptMap.contact":"ContactDetail","ConceptMap.contained":"Resource","ConceptMap.copyright":"markdown","ConceptMap.date":"dateTime","ConceptMap.description":"markdown","ConceptMap.experimental":"boolean","ConceptMap.extension":"Extension","ConceptMap.group":"BackboneElement","ConceptMap.group.element":"BackboneElement","ConceptMap.group.element.code":"code","ConceptMap.group.element.display":"string","ConceptMap.group.element.extension":"Extension","ConceptMap.group.element.id":"System.String","ConceptMap.group.element.modifierExtension":"Extension","ConceptMap.group.element.target":"BackboneElement","ConceptMap.group.element.target.code":"code","ConceptMap.group.element.target.comment":"string","ConceptMap.group.element.target.dependsOn":"BackboneElement","ConceptMap.group.element.target.dependsOn.display":"string","ConceptMap.group.element.target.dependsOn.extension":"Extension","ConceptMap.group.element.target.dependsOn.id":"System.String","ConceptMap.group.element.target.dependsOn.modifierExtension":"Extension","ConceptMap.group.element.target.dependsOn.property":"uri","ConceptMap.group.element.target.dependsOn.system":"canonical","ConceptMap.group.element.target.dependsOn.value":"string","ConceptMap.group.element.target.display":"string","ConceptMap.group.element.target.equivalence":"code","ConceptMap.group.element.target.extension":"Extension","ConceptMap.group.element.target.id":"System.String","ConceptMap.group.element.target.modifierExtension":"Extension","ConceptMap.group.extension":"Extension","ConceptMap.group.id":"System.String","ConceptMap.group.modifierExtension":"Extension","ConceptMap.group.source":"uri","ConceptMap.group.sourceVersion":"string","ConceptMap.group.target":"uri","ConceptMap.group.targetVersion":"string","ConceptMap.group.unmapped":"BackboneElement","ConceptMap.group.unmapped.code":"code","ConceptMap.group.unmapped.display":"string","ConceptMap.group.unmapped.extension":"Extension","ConceptMap.group.unmapped.id":"System.String","ConceptMap.group.unmapped.mode":"code","ConceptMap.group.unmapped.modifierExtension":"Extension","ConceptMap.group.unmapped.url":"canonical","ConceptMap.id":"System.String","ConceptMap.identifier":"Identifier","ConceptMap.implicitRules":"uri","ConceptMap.jurisdiction":"CodeableConcept","ConceptMap.language":"code","ConceptMap.meta":"Meta","ConceptMap.modifierExtension":"Extension","ConceptMap.name":"string","ConceptMap.publisher":"string","ConceptMap.purpose":"markdown","ConceptMap.sourceCanonical":"canonical","ConceptMap.sourceUri":"uri","ConceptMap.status":"code","ConceptMap.targetCanonical":"canonical","ConceptMap.targetUri":"uri","ConceptMap.text":"Narrative","ConceptMap.title":"string","ConceptMap.url":"uri","ConceptMap.useContext":"UsageContext","ConceptMap.version":"string","Condition.abatementAge":"Age","Condition.abatementDateTime":"dateTime","Condition.abatementPeriod":"Period","Condition.abatementRange":"Range","Condition.abatementString":"string","Condition.asserter":"Reference","Condition.bodySite":"CodeableConcept","Condition.category":"CodeableConcept","Condition.clinicalStatus":"CodeableConcept","Condition.code":"CodeableConcept","Condition.contained":"Resource","Condition.encounter":"Reference","Condition.evidence":"BackboneElement","Condition.evidence.code":"CodeableConcept","Condition.evidence.detail":"Reference","Condition.evidence.extension":"Extension","Condition.evidence.id":"System.String","Condition.evidence.modifierExtension":"Extension","Condition.extension":"Extension","Condition.id":"System.String","Condition.identifier":"Identifier","Condition.implicitRules":"uri","Condition.language":"code","Condition.meta":"Meta","Condition.modifierExtension":"Extension","Condition.note":"Annotation","Condition.onsetAge":"Age","Condition.onsetDateTime":"dateTime","Condition.onsetPeriod":"Period","Condition.onsetRange":"Range","Condition.onsetString":"string","Condition.recordedDate":"dateTime","Condition.recorder":"Reference","Condition.severity":"CodeableConcept","Condition.stage":"BackboneElement","Condition.stage.assessment":"Reference","Condition.stage.extension":"Extension","Condition.stage.id":"System.String","Condition.stage.modifierExtension":"Extension","Condition.stage.summary":"CodeableConcept","Condition.stage.type":"CodeableConcept","Condition.subject":"Reference","Condition.text":"Narrative","Condition.verificationStatus":"CodeableConcept","Consent.category":"CodeableConcept","Consent.contained":"Resource","Consent.dateTime":"dateTime","Consent.extension":"Extension","Consent.id":"System.String","Consent.identifier":"Identifier","Consent.implicitRules":"uri","Consent.language":"code","Consent.meta":"Meta","Consent.modifierExtension":"Extension","Consent.organization":"Reference","Consent.patient":"Reference","Consent.performer":"Reference","Consent.policy":"BackboneElement","Consent.policy.authority":"uri","Consent.policy.extension":"Extension","Consent.policy.id":"System.String","Consent.policy.modifierExtension":"Extension","Consent.policy.uri":"uri","Consent.policyRule":"CodeableConcept","Consent.provision":"BackboneElement","Consent.provision.action":"CodeableConcept","Consent.provision.actor":"BackboneElement","Consent.provision.actor.extension":"Extension","Consent.provision.actor.id":"System.String","Consent.provision.actor.modifierExtension":"Extension","Consent.provision.actor.reference":"Reference","Consent.provision.actor.role":"CodeableConcept","Consent.provision.class":"Coding","Consent.provision.code":"CodeableConcept","Consent.provision.data":"BackboneElement","Consent.provision.data.extension":"Extension","Consent.provision.data.id":"System.String","Consent.provision.data.meaning":"code","Consent.provision.data.modifierExtension":"Extension","Consent.provision.data.reference":"Reference","Consent.provision.dataPeriod":"Period","Consent.provision.extension":"Extension","Consent.provision.id":"System.String","Consent.provision.modifierExtension":"Extension","Consent.provision.period":"Period","Consent.provision.purpose":"Coding","Consent.provision.securityLabel":"Coding","Consent.provision.type":"code","Consent.scope":"CodeableConcept","Consent.sourceAttachment":"Attachment","Consent.sourceReference":"Reference","Consent.status":"code","Consent.text":"Narrative","Consent.verification":"BackboneElement","Consent.verification.extension":"Extension","Consent.verification.id":"System.String","Consent.verification.modifierExtension":"Extension","Consent.verification.verificationDate":"dateTime","Consent.verification.verified":"boolean","Consent.verification.verifiedWith":"Reference","ContactDetail.extension":"Extension","ContactDetail.id":"System.String","ContactDetail.name":"string","ContactDetail.telecom":"ContactPoint","ContactPoint.extension":"Extension","ContactPoint.id":"System.String","ContactPoint.period":"Period","ContactPoint.rank":"positiveInt","ContactPoint.system":"code","ContactPoint.use":"code","ContactPoint.value":"string","Contract.alias":"string","Contract.applies":"Period","Contract.author":"Reference","Contract.authority":"Reference","Contract.contained":"Resource","Contract.contentDefinition":"BackboneElement","Contract.contentDefinition.copyright":"markdown","Contract.contentDefinition.extension":"Extension","Contract.contentDefinition.id":"System.String","Contract.contentDefinition.modifierExtension":"Extension","Contract.contentDefinition.publicationDate":"dateTime","Contract.contentDefinition.publicationStatus":"code","Contract.contentDefinition.publisher":"Reference","Contract.contentDefinition.subType":"CodeableConcept","Contract.contentDefinition.type":"CodeableConcept","Contract.contentDerivative":"CodeableConcept","Contract.domain":"Reference","Contract.expirationType":"CodeableConcept","Contract.extension":"Extension","Contract.friendly":"BackboneElement","Contract.friendly.contentAttachment":"Attachment","Contract.friendly.contentReference":"Reference","Contract.friendly.extension":"Extension","Contract.friendly.id":"System.String","Contract.friendly.modifierExtension":"Extension","Contract.id":"System.String","Contract.identifier":"Identifier","Contract.implicitRules":"uri","Contract.instantiatesCanonical":"Reference","Contract.instantiatesUri":"uri","Contract.issued":"dateTime","Contract.language":"code","Contract.legal":"BackboneElement","Contract.legal.contentAttachment":"Attachment","Contract.legal.contentReference":"Reference","Contract.legal.extension":"Extension","Contract.legal.id":"System.String","Contract.legal.modifierExtension":"Extension","Contract.legalState":"CodeableConcept","Contract.legallyBindingAttachment":"Attachment","Contract.legallyBindingReference":"Reference","Contract.meta":"Meta","Contract.modifierExtension":"Extension","Contract.name":"string","Contract.relevantHistory":"Reference","Contract.rule":"BackboneElement","Contract.rule.contentAttachment":"Attachment","Contract.rule.contentReference":"Reference","Contract.rule.extension":"Extension","Contract.rule.id":"System.String","Contract.rule.modifierExtension":"Extension","Contract.scope":"CodeableConcept","Contract.signer":"BackboneElement","Contract.signer.extension":"Extension","Contract.signer.id":"System.String","Contract.signer.modifierExtension":"Extension","Contract.signer.party":"Reference","Contract.signer.signature":"Signature","Contract.signer.type":"Coding","Contract.site":"Reference","Contract.status":"code","Contract.subType":"CodeableConcept","Contract.subject":"Reference","Contract.subtitle":"string","Contract.supportingInfo":"Reference","Contract.term":"BackboneElement","Contract.term.action":"BackboneElement","Contract.term.action.context":"Reference","Contract.term.action.contextLinkId":"string","Contract.term.action.doNotPerform":"boolean","Contract.term.action.extension":"Extension","Contract.term.action.id":"System.String","Contract.term.action.intent":"CodeableConcept","Contract.term.action.linkId":"string","Contract.term.action.modifierExtension":"Extension","Contract.term.action.note":"Annotation","Contract.term.action.occurrenceDateTime":"dateTime","Contract.term.action.occurrencePeriod":"Period","Contract.term.action.occurrenceTiming":"Timing","Contract.term.action.performer":"Reference","Contract.term.action.performerLinkId":"string","Contract.term.action.performerRole":"CodeableConcept","Contract.term.action.performerType":"CodeableConcept","Contract.term.action.reason":"string","Contract.term.action.reasonCode":"CodeableConcept","Contract.term.action.reasonLinkId":"string","Contract.term.action.reasonReference":"Reference","Contract.term.action.requester":"Reference","Contract.term.action.requesterLinkId":"string","Contract.term.action.securityLabelNumber":"unsignedInt","Contract.term.action.status":"CodeableConcept","Contract.term.action.subject":"BackboneElement","Contract.term.action.subject.extension":"Extension","Contract.term.action.subject.id":"System.String","Contract.term.action.subject.modifierExtension":"Extension","Contract.term.action.subject.reference":"Reference","Contract.term.action.subject.role":"CodeableConcept","Contract.term.action.type":"CodeableConcept","Contract.term.applies":"Period","Contract.term.asset":"BackboneElement","Contract.term.asset.condition":"string","Contract.term.asset.context":"BackboneElement","Contract.term.asset.context.code":"CodeableConcept","Contract.term.asset.context.extension":"Extension","Contract.term.asset.context.id":"System.String","Contract.term.asset.context.modifierExtension":"Extension","Contract.term.asset.context.reference":"Reference","Contract.term.asset.context.text":"string","Contract.term.asset.extension":"Extension","Contract.term.asset.id":"System.String","Contract.term.asset.linkId":"string","Contract.term.asset.modifierExtension":"Extension","Contract.term.asset.period":"Period","Contract.term.asset.periodType":"CodeableConcept","Contract.term.asset.relationship":"Coding","Contract.term.asset.scope":"CodeableConcept","Contract.term.asset.securityLabelNumber":"unsignedInt","Contract.term.asset.subtype":"CodeableConcept","Contract.term.asset.text":"string","Contract.term.asset.type":"CodeableConcept","Contract.term.asset.typeReference":"Reference","Contract.term.asset.usePeriod":"Period","Contract.term.asset.valuedItem":"BackboneElement","Contract.term.asset.valuedItem.effectiveTime":"dateTime","Contract.term.asset.valuedItem.entityCodeableConcept":"CodeableConcept","Contract.term.asset.valuedItem.entityReference":"Reference","Contract.term.asset.valuedItem.extension":"Extension","Contract.term.asset.valuedItem.factor":"decimal","Contract.term.asset.valuedItem.id":"System.String","Contract.term.asset.valuedItem.identifier":"Identifier","Contract.term.asset.valuedItem.linkId":"string","Contract.term.asset.valuedItem.modifierExtension":"Extension","Contract.term.asset.valuedItem.net":"Money","Contract.term.asset.valuedItem.payment":"string","Contract.term.asset.valuedItem.paymentDate":"dateTime","Contract.term.asset.valuedItem.points":"decimal","Contract.term.asset.valuedItem.quantity":"Quantity","Contract.term.asset.valuedItem.recipient":"Reference","Contract.term.asset.valuedItem.responsible":"Reference","Contract.term.asset.valuedItem.securityLabelNumber":"unsignedInt","Contract.term.asset.valuedItem.unitPrice":"Money","Contract.term.extension":"Extension","Contract.term.id":"System.String","Contract.term.identifier":"Identifier","Contract.term.issued":"dateTime","Contract.term.modifierExtension":"Extension","Contract.term.offer":"BackboneElement","Contract.term.offer.answer":"BackboneElement","Contract.term.offer.answer.extension":"Extension","Contract.term.offer.answer.id":"System.String","Contract.term.offer.answer.modifierExtension":"Extension","Contract.term.offer.answer.valueAttachment":"Attachment","Contract.term.offer.answer.valueBoolean":"boolean","Contract.term.offer.answer.valueCoding":"Coding","Contract.term.offer.answer.valueDate":"date","Contract.term.offer.answer.valueDateTime":"dateTime","Contract.term.offer.answer.valueDecimal":"decimal","Contract.term.offer.answer.valueInteger":"integer","Contract.term.offer.answer.valueQuantity":"Quantity","Contract.term.offer.answer.valueReference":"Reference","Contract.term.offer.answer.valueString":"string","Contract.term.offer.answer.valueTime":"time","Contract.term.offer.answer.valueUri":"uri","Contract.term.offer.decision":"CodeableConcept","Contract.term.offer.decisionMode":"CodeableConcept","Contract.term.offer.extension":"Extension","Contract.term.offer.id":"System.String","Contract.term.offer.identifier":"Identifier","Contract.term.offer.linkId":"string","Contract.term.offer.modifierExtension":"Extension","Contract.term.offer.party":"BackboneElement","Contract.term.offer.party.extension":"Extension","Contract.term.offer.party.id":"System.String","Contract.term.offer.party.modifierExtension":"Extension","Contract.term.offer.party.reference":"Reference","Contract.term.offer.party.role":"CodeableConcept","Contract.term.offer.securityLabelNumber":"unsignedInt","Contract.term.offer.text":"string","Contract.term.offer.topic":"Reference","Contract.term.offer.type":"CodeableConcept","Contract.term.securityLabel":"BackboneElement","Contract.term.securityLabel.category":"Coding","Contract.term.securityLabel.classification":"Coding","Contract.term.securityLabel.control":"Coding","Contract.term.securityLabel.extension":"Extension","Contract.term.securityLabel.id":"System.String","Contract.term.securityLabel.modifierExtension":"Extension","Contract.term.securityLabel.number":"unsignedInt","Contract.term.subType":"CodeableConcept","Contract.term.text":"string","Contract.term.topicCodeableConcept":"CodeableConcept","Contract.term.topicReference":"Reference","Contract.term.type":"CodeableConcept","Contract.text":"Narrative","Contract.title":"string","Contract.topicCodeableConcept":"CodeableConcept","Contract.topicReference":"Reference","Contract.type":"CodeableConcept","Contract.url":"uri","Contract.version":"string","Contributor.contact":"ContactDetail","Contributor.extension":"Extension","Contributor.id":"System.String","Contributor.name":"string","Contributor.type":"code","Count.code":"code","Count.comparator":"code","Count.extension":"Extension","Count.id":"System.String","Count.system":"uri","Count.unit":"string","Count.value":"decimal","Coverage.beneficiary":"Reference","Coverage.class":"BackboneElement","Coverage.class.extension":"Extension","Coverage.class.id":"System.String","Coverage.class.modifierExtension":"Extension","Coverage.class.name":"string","Coverage.class.type":"CodeableConcept","Coverage.class.value":"string","Coverage.contained":"Resource","Coverage.contract":"Reference","Coverage.costToBeneficiary":"BackboneElement","Coverage.costToBeneficiary.exception":"BackboneElement","Coverage.costToBeneficiary.exception.extension":"Extension","Coverage.costToBeneficiary.exception.id":"System.String","Coverage.costToBeneficiary.exception.modifierExtension":"Extension","Coverage.costToBeneficiary.exception.period":"Period","Coverage.costToBeneficiary.exception.type":"CodeableConcept","Coverage.costToBeneficiary.extension":"Extension","Coverage.costToBeneficiary.id":"System.String","Coverage.costToBeneficiary.modifierExtension":"Extension","Coverage.costToBeneficiary.type":"CodeableConcept","Coverage.costToBeneficiary.valueMoney":"Money","Coverage.costToBeneficiary.valueQuantity":"Quantity","Coverage.dependent":"string","Coverage.extension":"Extension","Coverage.id":"System.String","Coverage.identifier":"Identifier","Coverage.implicitRules":"uri","Coverage.language":"code","Coverage.meta":"Meta","Coverage.modifierExtension":"Extension","Coverage.network":"string","Coverage.order":"positiveInt","Coverage.payor":"Reference","Coverage.period":"Period","Coverage.policyHolder":"Reference","Coverage.relationship":"CodeableConcept","Coverage.status":"code","Coverage.subrogation":"boolean","Coverage.subscriber":"Reference","Coverage.subscriberId":"string","Coverage.text":"Narrative","Coverage.type":"CodeableConcept","CoverageEligibilityRequest.contained":"Resource","CoverageEligibilityRequest.created":"dateTime","CoverageEligibilityRequest.enterer":"Reference","CoverageEligibilityRequest.extension":"Extension","CoverageEligibilityRequest.facility":"Reference","CoverageEligibilityRequest.id":"System.String","CoverageEligibilityRequest.identifier":"Identifier","CoverageEligibilityRequest.implicitRules":"uri","CoverageEligibilityRequest.insurance":"BackboneElement","CoverageEligibilityRequest.insurance.businessArrangement":"string","CoverageEligibilityRequest.insurance.coverage":"Reference","CoverageEligibilityRequest.insurance.extension":"Extension","CoverageEligibilityRequest.insurance.focal":"boolean","CoverageEligibilityRequest.insurance.id":"System.String","CoverageEligibilityRequest.insurance.modifierExtension":"Extension","CoverageEligibilityRequest.insurer":"Reference","CoverageEligibilityRequest.item":"BackboneElement","CoverageEligibilityRequest.item.category":"CodeableConcept","CoverageEligibilityRequest.item.detail":"Reference","CoverageEligibilityRequest.item.diagnosis":"BackboneElement","CoverageEligibilityRequest.item.diagnosis.diagnosisCodeableConcept":"CodeableConcept","CoverageEligibilityRequest.item.diagnosis.diagnosisReference":"Reference","CoverageEligibilityRequest.item.diagnosis.extension":"Extension","CoverageEligibilityRequest.item.diagnosis.id":"System.String","CoverageEligibilityRequest.item.diagnosis.modifierExtension":"Extension","CoverageEligibilityRequest.item.extension":"Extension","CoverageEligibilityRequest.item.facility":"Reference","CoverageEligibilityRequest.item.id":"System.String","CoverageEligibilityRequest.item.modifier":"CodeableConcept","CoverageEligibilityRequest.item.modifierExtension":"Extension","CoverageEligibilityRequest.item.productOrService":"CodeableConcept","CoverageEligibilityRequest.item.provider":"Reference","CoverageEligibilityRequest.item.quantity":"Quantity","CoverageEligibilityRequest.item.supportingInfoSequence":"positiveInt","CoverageEligibilityRequest.item.unitPrice":"Money","CoverageEligibilityRequest.language":"code","CoverageEligibilityRequest.meta":"Meta","CoverageEligibilityRequest.modifierExtension":"Extension","CoverageEligibilityRequest.patient":"Reference","CoverageEligibilityRequest.priority":"CodeableConcept","CoverageEligibilityRequest.provider":"Reference","CoverageEligibilityRequest.purpose":"code","CoverageEligibilityRequest.servicedDate":"date","CoverageEligibilityRequest.servicedPeriod":"Period","CoverageEligibilityRequest.status":"code","CoverageEligibilityRequest.supportingInfo":"BackboneElement","CoverageEligibilityRequest.supportingInfo.appliesToAll":"boolean","CoverageEligibilityRequest.supportingInfo.extension":"Extension","CoverageEligibilityRequest.supportingInfo.id":"System.String","CoverageEligibilityRequest.supportingInfo.information":"Reference","CoverageEligibilityRequest.supportingInfo.modifierExtension":"Extension","CoverageEligibilityRequest.supportingInfo.sequence":"positiveInt","CoverageEligibilityRequest.text":"Narrative","CoverageEligibilityResponse.contained":"Resource","CoverageEligibilityResponse.created":"dateTime","CoverageEligibilityResponse.disposition":"string","CoverageEligibilityResponse.error":"BackboneElement","CoverageEligibilityResponse.error.code":"CodeableConcept","CoverageEligibilityResponse.error.extension":"Extension","CoverageEligibilityResponse.error.id":"System.String","CoverageEligibilityResponse.error.modifierExtension":"Extension","CoverageEligibilityResponse.extension":"Extension","CoverageEligibilityResponse.form":"CodeableConcept","CoverageEligibilityResponse.id":"System.String","CoverageEligibilityResponse.identifier":"Identifier","CoverageEligibilityResponse.implicitRules":"uri","CoverageEligibilityResponse.insurance":"BackboneElement","CoverageEligibilityResponse.insurance.benefitPeriod":"Period","CoverageEligibilityResponse.insurance.coverage":"Reference","CoverageEligibilityResponse.insurance.extension":"Extension","CoverageEligibilityResponse.insurance.id":"System.String","CoverageEligibilityResponse.insurance.inforce":"boolean","CoverageEligibilityResponse.insurance.item":"BackboneElement","CoverageEligibilityResponse.insurance.item.authorizationRequired":"boolean","CoverageEligibilityResponse.insurance.item.authorizationSupporting":"CodeableConcept","CoverageEligibilityResponse.insurance.item.authorizationUrl":"uri","CoverageEligibilityResponse.insurance.item.benefit":"BackboneElement","CoverageEligibilityResponse.insurance.item.benefit.allowedMoney":"Money","CoverageEligibilityResponse.insurance.item.benefit.allowedString":"string","CoverageEligibilityResponse.insurance.item.benefit.allowedUnsignedInt":"unsignedInt","CoverageEligibilityResponse.insurance.item.benefit.extension":"Extension","CoverageEligibilityResponse.insurance.item.benefit.id":"System.String","CoverageEligibilityResponse.insurance.item.benefit.modifierExtension":"Extension","CoverageEligibilityResponse.insurance.item.benefit.type":"CodeableConcept","CoverageEligibilityResponse.insurance.item.benefit.usedMoney":"Money","CoverageEligibilityResponse.insurance.item.benefit.usedString":"string","CoverageEligibilityResponse.insurance.item.benefit.usedUnsignedInt":"unsignedInt","CoverageEligibilityResponse.insurance.item.category":"CodeableConcept","CoverageEligibilityResponse.insurance.item.description":"string","CoverageEligibilityResponse.insurance.item.excluded":"boolean","CoverageEligibilityResponse.insurance.item.extension":"Extension","CoverageEligibilityResponse.insurance.item.id":"System.String","CoverageEligibilityResponse.insurance.item.modifier":"CodeableConcept","CoverageEligibilityResponse.insurance.item.modifierExtension":"Extension","CoverageEligibilityResponse.insurance.item.name":"string","CoverageEligibilityResponse.insurance.item.network":"CodeableConcept","CoverageEligibilityResponse.insurance.item.productOrService":"CodeableConcept","CoverageEligibilityResponse.insurance.item.provider":"Reference","CoverageEligibilityResponse.insurance.item.term":"CodeableConcept","CoverageEligibilityResponse.insurance.item.unit":"CodeableConcept","CoverageEligibilityResponse.insurance.modifierExtension":"Extension","CoverageEligibilityResponse.insurer":"Reference","CoverageEligibilityResponse.language":"code","CoverageEligibilityResponse.meta":"Meta","CoverageEligibilityResponse.modifierExtension":"Extension","CoverageEligibilityResponse.outcome":"code","CoverageEligibilityResponse.patient":"Reference","CoverageEligibilityResponse.preAuthRef":"string","CoverageEligibilityResponse.purpose":"code","CoverageEligibilityResponse.request":"Reference","CoverageEligibilityResponse.requestor":"Reference","CoverageEligibilityResponse.servicedDate":"date","CoverageEligibilityResponse.servicedPeriod":"Period","CoverageEligibilityResponse.status":"code","CoverageEligibilityResponse.text":"Narrative","DataRequirement.codeFilter":"Element","DataRequirement.codeFilter.code":"Coding","DataRequirement.codeFilter.extension":"Extension","DataRequirement.codeFilter.id":"System.String","DataRequirement.codeFilter.path":"string","DataRequirement.codeFilter.searchParam":"string","DataRequirement.codeFilter.valueSet":"canonical","DataRequirement.dateFilter":"Element","DataRequirement.dateFilter.extension":"Extension","DataRequirement.dateFilter.id":"System.String","DataRequirement.dateFilter.path":"string","DataRequirement.dateFilter.searchParam":"string","DataRequirement.dateFilter.valueDateTime":"dateTime","DataRequirement.dateFilter.valueDuration":"Duration","DataRequirement.dateFilter.valuePeriod":"Period","DataRequirement.extension":"Extension","DataRequirement.id":"System.String","DataRequirement.limit":"positiveInt","DataRequirement.mustSupport":"string","DataRequirement.profile":"canonical","DataRequirement.sort":"Element","DataRequirement.sort.direction":"code","DataRequirement.sort.extension":"Extension","DataRequirement.sort.id":"System.String","DataRequirement.sort.path":"string","DataRequirement.subjectCodeableConcept":"CodeableConcept","DataRequirement.subjectReference":"Reference","DataRequirement.type":"code","DetectedIssue.author":"Reference","DetectedIssue.code":"CodeableConcept","DetectedIssue.contained":"Resource","DetectedIssue.detail":"string","DetectedIssue.evidence":"BackboneElement","DetectedIssue.evidence.code":"CodeableConcept","DetectedIssue.evidence.detail":"Reference","DetectedIssue.evidence.extension":"Extension","DetectedIssue.evidence.id":"System.String","DetectedIssue.evidence.modifierExtension":"Extension","DetectedIssue.extension":"Extension","DetectedIssue.id":"System.String","DetectedIssue.identifiedDateTime":"dateTime","DetectedIssue.identifiedPeriod":"Period","DetectedIssue.identifier":"Identifier","DetectedIssue.implicated":"Reference","DetectedIssue.implicitRules":"uri","DetectedIssue.language":"code","DetectedIssue.meta":"Meta","DetectedIssue.mitigation":"BackboneElement","DetectedIssue.mitigation.action":"CodeableConcept","DetectedIssue.mitigation.author":"Reference","DetectedIssue.mitigation.date":"dateTime","DetectedIssue.mitigation.extension":"Extension","DetectedIssue.mitigation.id":"System.String","DetectedIssue.mitigation.modifierExtension":"Extension","DetectedIssue.modifierExtension":"Extension","DetectedIssue.patient":"Reference","DetectedIssue.reference":"uri","DetectedIssue.severity":"code","DetectedIssue.status":"code","DetectedIssue.text":"Narrative","Device.contact":"ContactPoint","Device.contained":"Resource","Device.definition":"Reference","Device.deviceName":"BackboneElement","Device.deviceName.extension":"Extension","Device.deviceName.id":"System.String","Device.deviceName.modifierExtension":"Extension","Device.deviceName.name":"string","Device.deviceName.type":"code","Device.distinctIdentifier":"string","Device.expirationDate":"dateTime","Device.extension":"Extension","Device.id":"System.String","Device.identifier":"Identifier","Device.implicitRules":"uri","Device.language":"code","Device.location":"Reference","Device.lotNumber":"string","Device.manufactureDate":"dateTime","Device.manufacturer":"string","Device.meta":"Meta","Device.modelNumber":"string","Device.modifierExtension":"Extension","Device.note":"Annotation","Device.owner":"Reference","Device.parent":"Reference","Device.partNumber":"string","Device.patient":"Reference","Device.property":"BackboneElement","Device.property.extension":"Extension","Device.property.id":"System.String","Device.property.modifierExtension":"Extension","Device.property.type":"CodeableConcept","Device.property.valueCode":"CodeableConcept","Device.property.valueQuantity":"Quantity","Device.safety":"CodeableConcept","Device.serialNumber":"string","Device.specialization":"BackboneElement","Device.specialization.extension":"Extension","Device.specialization.id":"System.String","Device.specialization.modifierExtension":"Extension","Device.specialization.systemType":"CodeableConcept","Device.specialization.version":"string","Device.status":"code","Device.statusReason":"CodeableConcept","Device.text":"Narrative","Device.type":"CodeableConcept","Device.udiCarrier":"BackboneElement","Device.udiCarrier.carrierAIDC":"base64Binary","Device.udiCarrier.carrierHRF":"string","Device.udiCarrier.deviceIdentifier":"string","Device.udiCarrier.entryType":"code","Device.udiCarrier.extension":"Extension","Device.udiCarrier.id":"System.String","Device.udiCarrier.issuer":"uri","Device.udiCarrier.jurisdiction":"uri","Device.udiCarrier.modifierExtension":"Extension","Device.url":"uri","Device.version":"BackboneElement","Device.version.component":"Identifier","Device.version.extension":"Extension","Device.version.id":"System.String","Device.version.modifierExtension":"Extension","Device.version.type":"CodeableConcept","Device.version.value":"string","DeviceDefinition.capability":"BackboneElement","DeviceDefinition.capability.description":"CodeableConcept","DeviceDefinition.capability.extension":"Extension","DeviceDefinition.capability.id":"System.String","DeviceDefinition.capability.modifierExtension":"Extension","DeviceDefinition.capability.type":"CodeableConcept","DeviceDefinition.contact":"ContactPoint","DeviceDefinition.contained":"Resource","DeviceDefinition.deviceName":"BackboneElement","DeviceDefinition.deviceName.extension":"Extension","DeviceDefinition.deviceName.id":"System.String","DeviceDefinition.deviceName.modifierExtension":"Extension","DeviceDefinition.deviceName.name":"string","DeviceDefinition.deviceName.type":"code","DeviceDefinition.extension":"Extension","DeviceDefinition.id":"System.String","DeviceDefinition.identifier":"Identifier","DeviceDefinition.implicitRules":"uri","DeviceDefinition.language":"code","DeviceDefinition.languageCode":"CodeableConcept","DeviceDefinition.manufacturerReference":"Reference","DeviceDefinition.manufacturerString":"string","DeviceDefinition.material":"BackboneElement","DeviceDefinition.material.allergenicIndicator":"boolean","DeviceDefinition.material.alternate":"boolean","DeviceDefinition.material.extension":"Extension","DeviceDefinition.material.id":"System.String","DeviceDefinition.material.modifierExtension":"Extension","DeviceDefinition.material.substance":"CodeableConcept","DeviceDefinition.meta":"Meta","DeviceDefinition.modelNumber":"string","DeviceDefinition.modifierExtension":"Extension","DeviceDefinition.note":"Annotation","DeviceDefinition.onlineInformation":"uri","DeviceDefinition.owner":"Reference","DeviceDefinition.parentDevice":"Reference","DeviceDefinition.physicalCharacteristics":"ProdCharacteristic","DeviceDefinition.property":"BackboneElement","DeviceDefinition.property.extension":"Extension","DeviceDefinition.property.id":"System.String","DeviceDefinition.property.modifierExtension":"Extension","DeviceDefinition.property.type":"CodeableConcept","DeviceDefinition.property.valueCode":"CodeableConcept","DeviceDefinition.property.valueQuantity":"Quantity","DeviceDefinition.quantity":"Quantity","DeviceDefinition.safety":"CodeableConcept","DeviceDefinition.shelfLifeStorage":"ProductShelfLife","DeviceDefinition.specialization":"BackboneElement","DeviceDefinition.specialization.extension":"Extension","DeviceDefinition.specialization.id":"System.String","DeviceDefinition.specialization.modifierExtension":"Extension","DeviceDefinition.specialization.systemType":"string","DeviceDefinition.specialization.version":"string","DeviceDefinition.text":"Narrative","DeviceDefinition.type":"CodeableConcept","DeviceDefinition.udiDeviceIdentifier":"BackboneElement","DeviceDefinition.udiDeviceIdentifier.deviceIdentifier":"string","DeviceDefinition.udiDeviceIdentifier.extension":"Extension","DeviceDefinition.udiDeviceIdentifier.id":"System.String","DeviceDefinition.udiDeviceIdentifier.issuer":"uri","DeviceDefinition.udiDeviceIdentifier.jurisdiction":"uri","DeviceDefinition.udiDeviceIdentifier.modifierExtension":"Extension","DeviceDefinition.url":"uri","DeviceDefinition.version":"string","DeviceMetric.calibration":"BackboneElement","DeviceMetric.calibration.extension":"Extension","DeviceMetric.calibration.id":"System.String","DeviceMetric.calibration.modifierExtension":"Extension","DeviceMetric.calibration.state":"code","DeviceMetric.calibration.time":"instant","DeviceMetric.calibration.type":"code","DeviceMetric.category":"code","DeviceMetric.color":"code","DeviceMetric.contained":"Resource","DeviceMetric.extension":"Extension","DeviceMetric.id":"System.String","DeviceMetric.identifier":"Identifier","DeviceMetric.implicitRules":"uri","DeviceMetric.language":"code","DeviceMetric.measurementPeriod":"Timing","DeviceMetric.meta":"Meta","DeviceMetric.modifierExtension":"Extension","DeviceMetric.operationalStatus":"code","DeviceMetric.parent":"Reference","DeviceMetric.source":"Reference","DeviceMetric.text":"Narrative","DeviceMetric.type":"CodeableConcept","DeviceMetric.unit":"CodeableConcept","DeviceRequest.authoredOn":"dateTime","DeviceRequest.basedOn":"Reference","DeviceRequest.codeCodeableConcept":"CodeableConcept","DeviceRequest.codeReference":"Reference","DeviceRequest.contained":"Resource","DeviceRequest.encounter":"Reference","DeviceRequest.extension":"Extension","DeviceRequest.groupIdentifier":"Identifier","DeviceRequest.id":"System.String","DeviceRequest.identifier":"Identifier","DeviceRequest.implicitRules":"uri","DeviceRequest.instantiatesCanonical":"canonical","DeviceRequest.instantiatesUri":"uri","DeviceRequest.insurance":"Reference","DeviceRequest.intent":"code","DeviceRequest.language":"code","DeviceRequest.meta":"Meta","DeviceRequest.modifierExtension":"Extension","DeviceRequest.note":"Annotation","DeviceRequest.occurrenceDateTime":"dateTime","DeviceRequest.occurrencePeriod":"Period","DeviceRequest.occurrenceTiming":"Timing","DeviceRequest.parameter":"BackboneElement","DeviceRequest.parameter.code":"CodeableConcept","DeviceRequest.parameter.extension":"Extension","DeviceRequest.parameter.id":"System.String","DeviceRequest.parameter.modifierExtension":"Extension","DeviceRequest.parameter.valueBoolean":"boolean","DeviceRequest.parameter.valueCodeableConcept":"CodeableConcept","DeviceRequest.parameter.valueQuantity":"Quantity","DeviceRequest.parameter.valueRange":"Range","DeviceRequest.performer":"Reference","DeviceRequest.performerType":"CodeableConcept","DeviceRequest.priorRequest":"Reference","DeviceRequest.priority":"code","DeviceRequest.reasonCode":"CodeableConcept","DeviceRequest.reasonReference":"Reference","DeviceRequest.relevantHistory":"Reference","DeviceRequest.requester":"Reference","DeviceRequest.status":"code","DeviceRequest.subject":"Reference","DeviceRequest.supportingInfo":"Reference","DeviceRequest.text":"Narrative","DeviceUseStatement.basedOn":"Reference","DeviceUseStatement.bodySite":"CodeableConcept","DeviceUseStatement.contained":"Resource","DeviceUseStatement.derivedFrom":"Reference","DeviceUseStatement.device":"Reference","DeviceUseStatement.extension":"Extension","DeviceUseStatement.id":"System.String","DeviceUseStatement.identifier":"Identifier","DeviceUseStatement.implicitRules":"uri","DeviceUseStatement.language":"code","DeviceUseStatement.meta":"Meta","DeviceUseStatement.modifierExtension":"Extension","DeviceUseStatement.note":"Annotation","DeviceUseStatement.reasonCode":"CodeableConcept","DeviceUseStatement.reasonReference":"Reference","DeviceUseStatement.recordedOn":"dateTime","DeviceUseStatement.source":"Reference","DeviceUseStatement.status":"code","DeviceUseStatement.subject":"Reference","DeviceUseStatement.text":"Narrative","DeviceUseStatement.timingDateTime":"dateTime","DeviceUseStatement.timingPeriod":"Period","DeviceUseStatement.timingTiming":"Timing","DiagnosticReport.basedOn":"Reference","DiagnosticReport.category":"CodeableConcept","DiagnosticReport.code":"CodeableConcept","DiagnosticReport.conclusion":"string","DiagnosticReport.conclusionCode":"CodeableConcept","DiagnosticReport.contained":"Resource","DiagnosticReport.effectiveDateTime":"dateTime","DiagnosticReport.effectivePeriod":"Period","DiagnosticReport.encounter":"Reference","DiagnosticReport.extension":"Extension","DiagnosticReport.id":"System.String","DiagnosticReport.identifier":"Identifier","DiagnosticReport.imagingStudy":"Reference","DiagnosticReport.implicitRules":"uri","DiagnosticReport.issued":"instant","DiagnosticReport.language":"code","DiagnosticReport.media":"BackboneElement","DiagnosticReport.media.comment":"string","DiagnosticReport.media.extension":"Extension","DiagnosticReport.media.id":"System.String","DiagnosticReport.media.link":"Reference","DiagnosticReport.media.modifierExtension":"Extension","DiagnosticReport.meta":"Meta","DiagnosticReport.modifierExtension":"Extension","DiagnosticReport.performer":"Reference","DiagnosticReport.presentedForm":"Attachment","DiagnosticReport.result":"Reference","DiagnosticReport.resultsInterpreter":"Reference","DiagnosticReport.specimen":"Reference","DiagnosticReport.status":"code","DiagnosticReport.subject":"Reference","DiagnosticReport.text":"Narrative","Distance.code":"code","Distance.comparator":"code","Distance.extension":"Extension","Distance.id":"System.String","Distance.system":"uri","Distance.unit":"string","Distance.value":"decimal","DocumentManifest.author":"Reference","DocumentManifest.contained":"Resource","DocumentManifest.content":"Reference","DocumentManifest.created":"dateTime","DocumentManifest.description":"string","DocumentManifest.extension":"Extension","DocumentManifest.id":"System.String","DocumentManifest.identifier":"Identifier","DocumentManifest.implicitRules":"uri","DocumentManifest.language":"code","DocumentManifest.masterIdentifier":"Identifier","DocumentManifest.meta":"Meta","DocumentManifest.modifierExtension":"Extension","DocumentManifest.recipient":"Reference","DocumentManifest.related":"BackboneElement","DocumentManifest.related.extension":"Extension","DocumentManifest.related.id":"System.String","DocumentManifest.related.identifier":"Identifier","DocumentManifest.related.modifierExtension":"Extension","DocumentManifest.related.ref":"Reference","DocumentManifest.source":"uri","DocumentManifest.status":"code","DocumentManifest.subject":"Reference","DocumentManifest.text":"Narrative","DocumentManifest.type":"CodeableConcept","DocumentReference.authenticator":"Reference","DocumentReference.author":"Reference","DocumentReference.category":"CodeableConcept","DocumentReference.contained":"Resource","DocumentReference.content":"BackboneElement","DocumentReference.content.attachment":"Attachment","DocumentReference.content.extension":"Extension","DocumentReference.content.format":"Coding","DocumentReference.content.id":"System.String","DocumentReference.content.modifierExtension":"Extension","DocumentReference.context":"BackboneElement","DocumentReference.context.encounter":"Reference","DocumentReference.context.event":"CodeableConcept","DocumentReference.context.extension":"Extension","DocumentReference.context.facilityType":"CodeableConcept","DocumentReference.context.id":"System.String","DocumentReference.context.modifierExtension":"Extension","DocumentReference.context.period":"Period","DocumentReference.context.practiceSetting":"CodeableConcept","DocumentReference.context.related":"Reference","DocumentReference.context.sourcePatientInfo":"Reference","DocumentReference.custodian":"Reference","DocumentReference.date":"instant","DocumentReference.description":"string","DocumentReference.docStatus":"code","DocumentReference.extension":"Extension","DocumentReference.id":"System.String","DocumentReference.identifier":"Identifier","DocumentReference.implicitRules":"uri","DocumentReference.language":"code","DocumentReference.masterIdentifier":"Identifier","DocumentReference.meta":"Meta","DocumentReference.modifierExtension":"Extension","DocumentReference.relatesTo":"BackboneElement","DocumentReference.relatesTo.code":"code","DocumentReference.relatesTo.extension":"Extension","DocumentReference.relatesTo.id":"System.String","DocumentReference.relatesTo.modifierExtension":"Extension","DocumentReference.relatesTo.target":"Reference","DocumentReference.securityLabel":"CodeableConcept","DocumentReference.status":"code","DocumentReference.subject":"Reference","DocumentReference.text":"Narrative","DocumentReference.type":"CodeableConcept","DomainResource.contained":"Resource","DomainResource.extension":"Extension","DomainResource.id":"System.String","DomainResource.implicitRules":"uri","DomainResource.language":"code","DomainResource.meta":"Meta","DomainResource.modifierExtension":"Extension","DomainResource.text":"Narrative","Dosage.additionalInstruction":"CodeableConcept","Dosage.asNeededBoolean":"boolean","Dosage.asNeededCodeableConcept":"CodeableConcept","Dosage.doseAndRate":"Element","Dosage.doseAndRate.doseQuantity":"Quantity","Dosage.doseAndRate.doseRange":"Range","Dosage.doseAndRate.extension":"Extension","Dosage.doseAndRate.id":"System.String","Dosage.doseAndRate.rateQuantity":"Quantity","Dosage.doseAndRate.rateRange":"Range","Dosage.doseAndRate.rateRatio":"Ratio","Dosage.doseAndRate.type":"CodeableConcept","Dosage.extension":"Extension","Dosage.id":"System.String","Dosage.maxDosePerAdministration":"Quantity","Dosage.maxDosePerLifetime":"Quantity","Dosage.maxDosePerPeriod":"Ratio","Dosage.method":"CodeableConcept","Dosage.modifierExtension":"Extension","Dosage.patientInstruction":"string","Dosage.route":"CodeableConcept","Dosage.sequence":"integer","Dosage.site":"CodeableConcept","Dosage.text":"string","Dosage.timing":"Timing","Duration.code":"code","Duration.comparator":"code","Duration.extension":"Extension","Duration.id":"System.String","Duration.system":"uri","Duration.unit":"string","Duration.value":"decimal","EffectEvidenceSynthesis.approvalDate":"date","EffectEvidenceSynthesis.author":"ContactDetail","EffectEvidenceSynthesis.certainty":"BackboneElement","EffectEvidenceSynthesis.certainty.certaintySubcomponent":"BackboneElement","EffectEvidenceSynthesis.certainty.certaintySubcomponent.extension":"Extension","EffectEvidenceSynthesis.certainty.certaintySubcomponent.id":"System.String","EffectEvidenceSynthesis.certainty.certaintySubcomponent.modifierExtension":"Extension","EffectEvidenceSynthesis.certainty.certaintySubcomponent.note":"Annotation","EffectEvidenceSynthesis.certainty.certaintySubcomponent.rating":"CodeableConcept","EffectEvidenceSynthesis.certainty.certaintySubcomponent.type":"CodeableConcept","EffectEvidenceSynthesis.certainty.extension":"Extension","EffectEvidenceSynthesis.certainty.id":"System.String","EffectEvidenceSynthesis.certainty.modifierExtension":"Extension","EffectEvidenceSynthesis.certainty.note":"Annotation","EffectEvidenceSynthesis.certainty.rating":"CodeableConcept","EffectEvidenceSynthesis.contact":"ContactDetail","EffectEvidenceSynthesis.contained":"Resource","EffectEvidenceSynthesis.copyright":"markdown","EffectEvidenceSynthesis.date":"dateTime","EffectEvidenceSynthesis.description":"markdown","EffectEvidenceSynthesis.editor":"ContactDetail","EffectEvidenceSynthesis.effectEstimate":"BackboneElement","EffectEvidenceSynthesis.effectEstimate.description":"string","EffectEvidenceSynthesis.effectEstimate.extension":"Extension","EffectEvidenceSynthesis.effectEstimate.id":"System.String","EffectEvidenceSynthesis.effectEstimate.modifierExtension":"Extension","EffectEvidenceSynthesis.effectEstimate.precisionEstimate":"BackboneElement","EffectEvidenceSynthesis.effectEstimate.precisionEstimate.extension":"Extension","EffectEvidenceSynthesis.effectEstimate.precisionEstimate.from":"decimal","EffectEvidenceSynthesis.effectEstimate.precisionEstimate.id":"System.String","EffectEvidenceSynthesis.effectEstimate.precisionEstimate.level":"decimal","EffectEvidenceSynthesis.effectEstimate.precisionEstimate.modifierExtension":"Extension","EffectEvidenceSynthesis.effectEstimate.precisionEstimate.to":"decimal","EffectEvidenceSynthesis.effectEstimate.precisionEstimate.type":"CodeableConcept","EffectEvidenceSynthesis.effectEstimate.type":"CodeableConcept","EffectEvidenceSynthesis.effectEstimate.unitOfMeasure":"CodeableConcept","EffectEvidenceSynthesis.effectEstimate.value":"decimal","EffectEvidenceSynthesis.effectEstimate.variantState":"CodeableConcept","EffectEvidenceSynthesis.effectivePeriod":"Period","EffectEvidenceSynthesis.endorser":"ContactDetail","EffectEvidenceSynthesis.exposure":"Reference","EffectEvidenceSynthesis.exposureAlternative":"Reference","EffectEvidenceSynthesis.extension":"Extension","EffectEvidenceSynthesis.id":"System.String","EffectEvidenceSynthesis.identifier":"Identifier","EffectEvidenceSynthesis.implicitRules":"uri","EffectEvidenceSynthesis.jurisdiction":"CodeableConcept","EffectEvidenceSynthesis.language":"code","EffectEvidenceSynthesis.lastReviewDate":"date","EffectEvidenceSynthesis.meta":"Meta","EffectEvidenceSynthesis.modifierExtension":"Extension","EffectEvidenceSynthesis.name":"string","EffectEvidenceSynthesis.note":"Annotation","EffectEvidenceSynthesis.outcome":"Reference","EffectEvidenceSynthesis.population":"Reference","EffectEvidenceSynthesis.publisher":"string","EffectEvidenceSynthesis.relatedArtifact":"RelatedArtifact","EffectEvidenceSynthesis.resultsByExposure":"BackboneElement","EffectEvidenceSynthesis.resultsByExposure.description":"string","EffectEvidenceSynthesis.resultsByExposure.exposureState":"code","EffectEvidenceSynthesis.resultsByExposure.extension":"Extension","EffectEvidenceSynthesis.resultsByExposure.id":"System.String","EffectEvidenceSynthesis.resultsByExposure.modifierExtension":"Extension","EffectEvidenceSynthesis.resultsByExposure.riskEvidenceSynthesis":"Reference","EffectEvidenceSynthesis.resultsByExposure.variantState":"CodeableConcept","EffectEvidenceSynthesis.reviewer":"ContactDetail","EffectEvidenceSynthesis.sampleSize":"BackboneElement","EffectEvidenceSynthesis.sampleSize.description":"string","EffectEvidenceSynthesis.sampleSize.extension":"Extension","EffectEvidenceSynthesis.sampleSize.id":"System.String","EffectEvidenceSynthesis.sampleSize.modifierExtension":"Extension","EffectEvidenceSynthesis.sampleSize.numberOfParticipants":"integer","EffectEvidenceSynthesis.sampleSize.numberOfStudies":"integer","EffectEvidenceSynthesis.status":"code","EffectEvidenceSynthesis.studyType":"CodeableConcept","EffectEvidenceSynthesis.synthesisType":"CodeableConcept","EffectEvidenceSynthesis.text":"Narrative","EffectEvidenceSynthesis.title":"string","EffectEvidenceSynthesis.topic":"CodeableConcept","EffectEvidenceSynthesis.url":"uri","EffectEvidenceSynthesis.useContext":"UsageContext","EffectEvidenceSynthesis.version":"string","Element.extension":"Extension","Element.id":"System.String","ElementDefinition.alias":"string","ElementDefinition.base":"Element","ElementDefinition.base.extension":"Extension","ElementDefinition.base.id":"System.String","ElementDefinition.base.max":"string","ElementDefinition.base.min":"unsignedInt","ElementDefinition.base.path":"string","ElementDefinition.binding":"Element","ElementDefinition.binding.description":"string","ElementDefinition.binding.extension":"Extension","ElementDefinition.binding.id":"System.String","ElementDefinition.binding.strength":"code","ElementDefinition.binding.valueSet":"canonical","ElementDefinition.code":"Coding","ElementDefinition.comment":"markdown","ElementDefinition.condition":"id","ElementDefinition.constraint":"Element","ElementDefinition.constraint.expression":"string","ElementDefinition.constraint.extension":"Extension","ElementDefinition.constraint.human":"string","ElementDefinition.constraint.id":"System.String","ElementDefinition.constraint.key":"id","ElementDefinition.constraint.requirements":"string","ElementDefinition.constraint.severity":"code","ElementDefinition.constraint.source":"canonical","ElementDefinition.constraint.xpath":"string","ElementDefinition.contentReference":"uri","ElementDefinition.defaultValueAddress":"Address","ElementDefinition.defaultValueAge":"Age","ElementDefinition.defaultValueAnnotation":"Annotation","ElementDefinition.defaultValueAttachment":"Attachment","ElementDefinition.defaultValueBase64Binary":"base64Binary","ElementDefinition.defaultValueBoolean":"boolean","ElementDefinition.defaultValueCanonical":"canonical","ElementDefinition.defaultValueCode":"code","ElementDefinition.defaultValueCodeableConcept":"CodeableConcept","ElementDefinition.defaultValueCoding":"Coding","ElementDefinition.defaultValueContactDetail":"ContactDetail","ElementDefinition.defaultValueContactPoint":"ContactPoint","ElementDefinition.defaultValueContributor":"Contributor","ElementDefinition.defaultValueCount":"Count","ElementDefinition.defaultValueDataRequirement":"DataRequirement","ElementDefinition.defaultValueDate":"date","ElementDefinition.defaultValueDateTime":"dateTime","ElementDefinition.defaultValueDecimal":"decimal","ElementDefinition.defaultValueDistance":"Distance","ElementDefinition.defaultValueDosage":"Dosage","ElementDefinition.defaultValueDuration":"Duration","ElementDefinition.defaultValueExpression":"Expression","ElementDefinition.defaultValueHumanName":"HumanName","ElementDefinition.defaultValueId":"id","ElementDefinition.defaultValueIdentifier":"Identifier","ElementDefinition.defaultValueInstant":"instant","ElementDefinition.defaultValueInteger":"integer","ElementDefinition.defaultValueMarkdown":"markdown","ElementDefinition.defaultValueMeta":"Meta","ElementDefinition.defaultValueMoney":"Money","ElementDefinition.defaultValueOid":"oid","ElementDefinition.defaultValueParameterDefinition":"ParameterDefinition","ElementDefinition.defaultValuePeriod":"Period","ElementDefinition.defaultValuePositiveInt":"positiveInt","ElementDefinition.defaultValueQuantity":"Quantity","ElementDefinition.defaultValueRange":"Range","ElementDefinition.defaultValueRatio":"Ratio","ElementDefinition.defaultValueReference":"Reference","ElementDefinition.defaultValueRelatedArtifact":"RelatedArtifact","ElementDefinition.defaultValueSampledData":"SampledData","ElementDefinition.defaultValueSignature":"Signature","ElementDefinition.defaultValueString":"string","ElementDefinition.defaultValueTime":"time","ElementDefinition.defaultValueTiming":"Timing","ElementDefinition.defaultValueTriggerDefinition":"TriggerDefinition","ElementDefinition.defaultValueUnsignedInt":"unsignedInt","ElementDefinition.defaultValueUri":"uri","ElementDefinition.defaultValueUrl":"url","ElementDefinition.defaultValueUsageContext":"UsageContext","ElementDefinition.defaultValueUuid":"uuid","ElementDefinition.definition":"markdown","ElementDefinition.example":"Element","ElementDefinition.example.extension":"Extension","ElementDefinition.example.id":"System.String","ElementDefinition.example.label":"string","ElementDefinition.example.valueAddress":"Address","ElementDefinition.example.valueAge":"Age","ElementDefinition.example.valueAnnotation":"Annotation","ElementDefinition.example.valueAttachment":"Attachment","ElementDefinition.example.valueBase64Binary":"base64Binary","ElementDefinition.example.valueBoolean":"boolean","ElementDefinition.example.valueCanonical":"canonical","ElementDefinition.example.valueCode":"code","ElementDefinition.example.valueCodeableConcept":"CodeableConcept","ElementDefinition.example.valueCoding":"Coding","ElementDefinition.example.valueContactDetail":"ContactDetail","ElementDefinition.example.valueContactPoint":"ContactPoint","ElementDefinition.example.valueContributor":"Contributor","ElementDefinition.example.valueCount":"Count","ElementDefinition.example.valueDataRequirement":"DataRequirement","ElementDefinition.example.valueDate":"date","ElementDefinition.example.valueDateTime":"dateTime","ElementDefinition.example.valueDecimal":"decimal","ElementDefinition.example.valueDistance":"Distance","ElementDefinition.example.valueDosage":"Dosage","ElementDefinition.example.valueDuration":"Duration","ElementDefinition.example.valueExpression":"Expression","ElementDefinition.example.valueHumanName":"HumanName","ElementDefinition.example.valueId":"id","ElementDefinition.example.valueIdentifier":"Identifier","ElementDefinition.example.valueInstant":"instant","ElementDefinition.example.valueInteger":"integer","ElementDefinition.example.valueMarkdown":"markdown","ElementDefinition.example.valueMeta":"Meta","ElementDefinition.example.valueMoney":"Money","ElementDefinition.example.valueOid":"oid","ElementDefinition.example.valueParameterDefinition":"ParameterDefinition","ElementDefinition.example.valuePeriod":"Period","ElementDefinition.example.valuePositiveInt":"positiveInt","ElementDefinition.example.valueQuantity":"Quantity","ElementDefinition.example.valueRange":"Range","ElementDefinition.example.valueRatio":"Ratio","ElementDefinition.example.valueReference":"Reference","ElementDefinition.example.valueRelatedArtifact":"RelatedArtifact","ElementDefinition.example.valueSampledData":"SampledData","ElementDefinition.example.valueSignature":"Signature","ElementDefinition.example.valueString":"string","ElementDefinition.example.valueTime":"time","ElementDefinition.example.valueTiming":"Timing","ElementDefinition.example.valueTriggerDefinition":"TriggerDefinition","ElementDefinition.example.valueUnsignedInt":"unsignedInt","ElementDefinition.example.valueUri":"uri","ElementDefinition.example.valueUrl":"url","ElementDefinition.example.valueUsageContext":"UsageContext","ElementDefinition.example.valueUuid":"uuid","ElementDefinition.extension":"Extension","ElementDefinition.extension.extension":"Extension","ElementDefinition.extension.id":"System.String","ElementDefinition.extension.url":"System.String","ElementDefinition.extension.valueCanonical":"canonical","ElementDefinition.extension.valueCodeableConcept":"CodeableConcept","ElementDefinition.extension.valueString":"string","ElementDefinition.fixedAddress":"Address","ElementDefinition.fixedAge":"Age","ElementDefinition.fixedAnnotation":"Annotation","ElementDefinition.fixedAttachment":"Attachment","ElementDefinition.fixedBase64Binary":"base64Binary","ElementDefinition.fixedBoolean":"boolean","ElementDefinition.fixedCanonical":"canonical","ElementDefinition.fixedCode":"code","ElementDefinition.fixedCodeableConcept":"CodeableConcept","ElementDefinition.fixedCoding":"Coding","ElementDefinition.fixedContactDetail":"ContactDetail","ElementDefinition.fixedContactPoint":"ContactPoint","ElementDefinition.fixedContributor":"Contributor","ElementDefinition.fixedCount":"Count","ElementDefinition.fixedDataRequirement":"DataRequirement","ElementDefinition.fixedDate":"date","ElementDefinition.fixedDateTime":"dateTime","ElementDefinition.fixedDecimal":"decimal","ElementDefinition.fixedDistance":"Distance","ElementDefinition.fixedDosage":"Dosage","ElementDefinition.fixedDuration":"Duration","ElementDefinition.fixedExpression":"Expression","ElementDefinition.fixedHumanName":"HumanName","ElementDefinition.fixedId":"id","ElementDefinition.fixedIdentifier":"Identifier","ElementDefinition.fixedInstant":"instant","ElementDefinition.fixedInteger":"integer","ElementDefinition.fixedMarkdown":"markdown","ElementDefinition.fixedMeta":"Meta","ElementDefinition.fixedMoney":"Money","ElementDefinition.fixedOid":"oid","ElementDefinition.fixedParameterDefinition":"ParameterDefinition","ElementDefinition.fixedPeriod":"Period","ElementDefinition.fixedPositiveInt":"positiveInt","ElementDefinition.fixedQuantity":"Quantity","ElementDefinition.fixedRange":"Range","ElementDefinition.fixedRatio":"Ratio","ElementDefinition.fixedReference":"Reference","ElementDefinition.fixedRelatedArtifact":"RelatedArtifact","ElementDefinition.fixedSampledData":"SampledData","ElementDefinition.fixedSignature":"Signature","ElementDefinition.fixedString":"string","ElementDefinition.fixedTime":"time","ElementDefinition.fixedTiming":"Timing","ElementDefinition.fixedTriggerDefinition":"TriggerDefinition","ElementDefinition.fixedUnsignedInt":"unsignedInt","ElementDefinition.fixedUri":"uri","ElementDefinition.fixedUrl":"url","ElementDefinition.fixedUsageContext":"UsageContext","ElementDefinition.fixedUuid":"uuid","ElementDefinition.id":"System.String","ElementDefinition.isModifier":"boolean","ElementDefinition.isModifierReason":"string","ElementDefinition.isSummary":"boolean","ElementDefinition.label":"string","ElementDefinition.mapping":"Element","ElementDefinition.mapping.comment":"string","ElementDefinition.mapping.extension":"Extension","ElementDefinition.mapping.id":"System.String","ElementDefinition.mapping.identity":"id","ElementDefinition.mapping.language":"code","ElementDefinition.mapping.map":"string","ElementDefinition.max":"string","ElementDefinition.maxLength":"integer","ElementDefinition.maxValueDate":"date","ElementDefinition.maxValueDateTime":"dateTime","ElementDefinition.maxValueDecimal":"decimal","ElementDefinition.maxValueInstant":"instant","ElementDefinition.maxValueInteger":"integer","ElementDefinition.maxValuePositiveInt":"positiveInt","ElementDefinition.maxValueQuantity":"Quantity","ElementDefinition.maxValueTime":"time","ElementDefinition.maxValueUnsignedInt":"unsignedInt","ElementDefinition.meaningWhenMissing":"markdown","ElementDefinition.min":"unsignedInt","ElementDefinition.minValueDate":"date","ElementDefinition.minValueDateTime":"dateTime","ElementDefinition.minValueDecimal":"decimal","ElementDefinition.minValueInstant":"instant","ElementDefinition.minValueInteger":"integer","ElementDefinition.minValuePositiveInt":"positiveInt","ElementDefinition.minValueQuantity":"Quantity","ElementDefinition.minValueTime":"time","ElementDefinition.minValueUnsignedInt":"unsignedInt","ElementDefinition.modifierExtension":"Extension","ElementDefinition.mustSupport":"boolean","ElementDefinition.orderMeaning":"string","ElementDefinition.path":"string","ElementDefinition.patternAddress":"Address","ElementDefinition.patternAge":"Age","ElementDefinition.patternAnnotation":"Annotation","ElementDefinition.patternAttachment":"Attachment","ElementDefinition.patternBase64Binary":"base64Binary","ElementDefinition.patternBoolean":"boolean","ElementDefinition.patternCanonical":"canonical","ElementDefinition.patternCode":"code","ElementDefinition.patternCodeableConcept":"CodeableConcept","ElementDefinition.patternCoding":"Coding","ElementDefinition.patternContactDetail":"ContactDetail","ElementDefinition.patternContactPoint":"ContactPoint","ElementDefinition.patternContributor":"Contributor","ElementDefinition.patternCount":"Count","ElementDefinition.patternDataRequirement":"DataRequirement","ElementDefinition.patternDate":"date","ElementDefinition.patternDateTime":"dateTime","ElementDefinition.patternDecimal":"decimal","ElementDefinition.patternDistance":"Distance","ElementDefinition.patternDosage":"Dosage","ElementDefinition.patternDuration":"Duration","ElementDefinition.patternExpression":"Expression","ElementDefinition.patternHumanName":"HumanName","ElementDefinition.patternId":"id","ElementDefinition.patternIdentifier":"Identifier","ElementDefinition.patternInstant":"instant","ElementDefinition.patternInteger":"integer","ElementDefinition.patternMarkdown":"markdown","ElementDefinition.patternMeta":"Meta","ElementDefinition.patternMoney":"Money","ElementDefinition.patternOid":"oid","ElementDefinition.patternParameterDefinition":"ParameterDefinition","ElementDefinition.patternPeriod":"Period","ElementDefinition.patternPositiveInt":"positiveInt","ElementDefinition.patternQuantity":"Quantity","ElementDefinition.patternRange":"Range","ElementDefinition.patternRatio":"Ratio","ElementDefinition.patternReference":"Reference","ElementDefinition.patternRelatedArtifact":"RelatedArtifact","ElementDefinition.patternSampledData":"SampledData","ElementDefinition.patternSignature":"Signature","ElementDefinition.patternString":"string","ElementDefinition.patternTime":"time","ElementDefinition.patternTiming":"Timing","ElementDefinition.patternTriggerDefinition":"TriggerDefinition","ElementDefinition.patternUnsignedInt":"unsignedInt","ElementDefinition.patternUri":"uri","ElementDefinition.patternUrl":"url","ElementDefinition.patternUsageContext":"UsageContext","ElementDefinition.patternUuid":"uuid","ElementDefinition.representation":"code","ElementDefinition.requirements":"markdown","ElementDefinition.short":"string","ElementDefinition.sliceIsConstraining":"boolean","ElementDefinition.sliceName":"string","ElementDefinition.slicing":"Element","ElementDefinition.slicing.description":"string","ElementDefinition.slicing.discriminator":"Element","ElementDefinition.slicing.discriminator.extension":"Extension","ElementDefinition.slicing.discriminator.id":"System.String","ElementDefinition.slicing.discriminator.path":"string","ElementDefinition.slicing.discriminator.type":"code","ElementDefinition.slicing.extension":"Extension","ElementDefinition.slicing.id":"System.String","ElementDefinition.slicing.ordered":"boolean","ElementDefinition.slicing.rules":"code","ElementDefinition.type":"Element","ElementDefinition.type.aggregation":"code","ElementDefinition.type.code":"uri","ElementDefinition.type.extension":"Extension","ElementDefinition.type.id":"System.String","ElementDefinition.type.profile":"canonical","ElementDefinition.type.targetProfile":"canonical","ElementDefinition.type.versioning":"code","Encounter.account":"Reference","Encounter.appointment":"Reference","Encounter.basedOn":"Reference","Encounter.class":"Coding","Encounter.classHistory":"BackboneElement","Encounter.classHistory.class":"Coding","Encounter.classHistory.extension":"Extension","Encounter.classHistory.id":"System.String","Encounter.classHistory.modifierExtension":"Extension","Encounter.classHistory.period":"Period","Encounter.contained":"Resource","Encounter.diagnosis":"BackboneElement","Encounter.diagnosis.condition":"Reference","Encounter.diagnosis.extension":"Extension","Encounter.diagnosis.id":"System.String","Encounter.diagnosis.modifierExtension":"Extension","Encounter.diagnosis.rank":"positiveInt","Encounter.diagnosis.use":"CodeableConcept","Encounter.episodeOfCare":"Reference","Encounter.extension":"Extension","Encounter.hospitalization":"BackboneElement","Encounter.hospitalization.admitSource":"CodeableConcept","Encounter.hospitalization.destination":"Reference","Encounter.hospitalization.dietPreference":"CodeableConcept","Encounter.hospitalization.dischargeDisposition":"CodeableConcept","Encounter.hospitalization.extension":"Extension","Encounter.hospitalization.id":"System.String","Encounter.hospitalization.modifierExtension":"Extension","Encounter.hospitalization.origin":"Reference","Encounter.hospitalization.preAdmissionIdentifier":"Identifier","Encounter.hospitalization.reAdmission":"CodeableConcept","Encounter.hospitalization.specialArrangement":"CodeableConcept","Encounter.hospitalization.specialCourtesy":"CodeableConcept","Encounter.id":"System.String","Encounter.identifier":"Identifier","Encounter.implicitRules":"uri","Encounter.language":"code","Encounter.length":"Duration","Encounter.location":"BackboneElement","Encounter.location.extension":"Extension","Encounter.location.id":"System.String","Encounter.location.location":"Reference","Encounter.location.modifierExtension":"Extension","Encounter.location.period":"Period","Encounter.location.physicalType":"CodeableConcept","Encounter.location.status":"code","Encounter.meta":"Meta","Encounter.modifierExtension":"Extension","Encounter.partOf":"Reference","Encounter.participant":"BackboneElement","Encounter.participant.extension":"Extension","Encounter.participant.id":"System.String","Encounter.participant.individual":"Reference","Encounter.participant.modifierExtension":"Extension","Encounter.participant.period":"Period","Encounter.participant.type":"CodeableConcept","Encounter.period":"Period","Encounter.priority":"CodeableConcept","Encounter.reasonCode":"CodeableConcept","Encounter.reasonReference":"Reference","Encounter.serviceProvider":"Reference","Encounter.serviceType":"CodeableConcept","Encounter.status":"code","Encounter.statusHistory":"BackboneElement","Encounter.statusHistory.extension":"Extension","Encounter.statusHistory.id":"System.String","Encounter.statusHistory.modifierExtension":"Extension","Encounter.statusHistory.period":"Period","Encounter.statusHistory.status":"code","Encounter.subject":"Reference","Encounter.text":"Narrative","Encounter.type":"CodeableConcept","Endpoint.address":"url","Endpoint.connectionType":"Coding","Endpoint.contact":"ContactPoint","Endpoint.contained":"Resource","Endpoint.extension":"Extension","Endpoint.header":"string","Endpoint.id":"System.String","Endpoint.identifier":"Identifier","Endpoint.implicitRules":"uri","Endpoint.language":"code","Endpoint.managingOrganization":"Reference","Endpoint.meta":"Meta","Endpoint.modifierExtension":"Extension","Endpoint.name":"string","Endpoint.payloadMimeType":"code","Endpoint.payloadType":"CodeableConcept","Endpoint.period":"Period","Endpoint.status":"code","Endpoint.text":"Narrative","EnrollmentRequest.candidate":"Reference","EnrollmentRequest.contained":"Resource","EnrollmentRequest.coverage":"Reference","EnrollmentRequest.created":"dateTime","EnrollmentRequest.extension":"Extension","EnrollmentRequest.id":"System.String","EnrollmentRequest.identifier":"Identifier","EnrollmentRequest.implicitRules":"uri","EnrollmentRequest.insurer":"Reference","EnrollmentRequest.language":"code","EnrollmentRequest.meta":"Meta","EnrollmentRequest.modifierExtension":"Extension","EnrollmentRequest.provider":"Reference","EnrollmentRequest.status":"code","EnrollmentRequest.text":"Narrative","EnrollmentResponse.contained":"Resource","EnrollmentResponse.created":"dateTime","EnrollmentResponse.disposition":"string","EnrollmentResponse.extension":"Extension","EnrollmentResponse.id":"System.String","EnrollmentResponse.identifier":"Identifier","EnrollmentResponse.implicitRules":"uri","EnrollmentResponse.language":"code","EnrollmentResponse.meta":"Meta","EnrollmentResponse.modifierExtension":"Extension","EnrollmentResponse.organization":"Reference","EnrollmentResponse.outcome":"code","EnrollmentResponse.request":"Reference","EnrollmentResponse.requestProvider":"Reference","EnrollmentResponse.status":"code","EnrollmentResponse.text":"Narrative","EpisodeOfCare.account":"Reference","EpisodeOfCare.careManager":"Reference","EpisodeOfCare.contained":"Resource","EpisodeOfCare.diagnosis":"BackboneElement","EpisodeOfCare.diagnosis.condition":"Reference","EpisodeOfCare.diagnosis.extension":"Extension","EpisodeOfCare.diagnosis.id":"System.String","EpisodeOfCare.diagnosis.modifierExtension":"Extension","EpisodeOfCare.diagnosis.rank":"positiveInt","EpisodeOfCare.diagnosis.role":"CodeableConcept","EpisodeOfCare.extension":"Extension","EpisodeOfCare.id":"System.String","EpisodeOfCare.identifier":"Identifier","EpisodeOfCare.implicitRules":"uri","EpisodeOfCare.language":"code","EpisodeOfCare.managingOrganization":"Reference","EpisodeOfCare.meta":"Meta","EpisodeOfCare.modifierExtension":"Extension","EpisodeOfCare.patient":"Reference","EpisodeOfCare.period":"Period","EpisodeOfCare.referralRequest":"Reference","EpisodeOfCare.status":"code","EpisodeOfCare.statusHistory":"BackboneElement","EpisodeOfCare.statusHistory.extension":"Extension","EpisodeOfCare.statusHistory.id":"System.String","EpisodeOfCare.statusHistory.modifierExtension":"Extension","EpisodeOfCare.statusHistory.period":"Period","EpisodeOfCare.statusHistory.status":"code","EpisodeOfCare.team":"Reference","EpisodeOfCare.text":"Narrative","EpisodeOfCare.type":"CodeableConcept","EventDefinition.approvalDate":"date","EventDefinition.author":"ContactDetail","EventDefinition.contact":"ContactDetail","EventDefinition.contained":"Resource","EventDefinition.copyright":"markdown","EventDefinition.date":"dateTime","EventDefinition.description":"markdown","EventDefinition.editor":"ContactDetail","EventDefinition.effectivePeriod":"Period","EventDefinition.endorser":"ContactDetail","EventDefinition.experimental":"boolean","EventDefinition.extension":"Extension","EventDefinition.id":"System.String","EventDefinition.identifier":"Identifier","EventDefinition.implicitRules":"uri","EventDefinition.jurisdiction":"CodeableConcept","EventDefinition.language":"code","EventDefinition.lastReviewDate":"date","EventDefinition.meta":"Meta","EventDefinition.modifierExtension":"Extension","EventDefinition.name":"string","EventDefinition.publisher":"string","EventDefinition.purpose":"markdown","EventDefinition.relatedArtifact":"RelatedArtifact","EventDefinition.reviewer":"ContactDetail","EventDefinition.status":"code","EventDefinition.subjectCodeableConcept":"CodeableConcept","EventDefinition.subjectReference":"Reference","EventDefinition.subtitle":"string","EventDefinition.text":"Narrative","EventDefinition.title":"string","EventDefinition.topic":"CodeableConcept","EventDefinition.trigger":"TriggerDefinition","EventDefinition.url":"uri","EventDefinition.usage":"string","EventDefinition.useContext":"UsageContext","EventDefinition.version":"string","Evidence.approvalDate":"date","Evidence.author":"ContactDetail","Evidence.contact":"ContactDetail","Evidence.contained":"Resource","Evidence.copyright":"markdown","Evidence.date":"dateTime","Evidence.description":"markdown","Evidence.editor":"ContactDetail","Evidence.effectivePeriod":"Period","Evidence.endorser":"ContactDetail","Evidence.exposureBackground":"Reference","Evidence.exposureVariant":"Reference","Evidence.extension":"Extension","Evidence.id":"System.String","Evidence.identifier":"Identifier","Evidence.implicitRules":"uri","Evidence.jurisdiction":"CodeableConcept","Evidence.language":"code","Evidence.lastReviewDate":"date","Evidence.meta":"Meta","Evidence.modifierExtension":"Extension","Evidence.name":"string","Evidence.note":"Annotation","Evidence.outcome":"Reference","Evidence.publisher":"string","Evidence.relatedArtifact":"RelatedArtifact","Evidence.reviewer":"ContactDetail","Evidence.shortTitle":"string","Evidence.status":"code","Evidence.subtitle":"string","Evidence.text":"Narrative","Evidence.title":"string","Evidence.topic":"CodeableConcept","Evidence.url":"uri","Evidence.useContext":"UsageContext","Evidence.version":"string","EvidenceVariable.approvalDate":"date","EvidenceVariable.author":"ContactDetail","EvidenceVariable.characteristic":"BackboneElement","EvidenceVariable.characteristic.definitionCanonical":"canonical","EvidenceVariable.characteristic.definitionCodeableConcept":"CodeableConcept","EvidenceVariable.characteristic.definitionDataRequirement":"DataRequirement","EvidenceVariable.characteristic.definitionExpression":"Expression","EvidenceVariable.characteristic.definitionReference":"Reference","EvidenceVariable.characteristic.definitionTriggerDefinition":"TriggerDefinition","EvidenceVariable.characteristic.description":"string","EvidenceVariable.characteristic.exclude":"boolean","EvidenceVariable.characteristic.extension":"Extension","EvidenceVariable.characteristic.groupMeasure":"code","EvidenceVariable.characteristic.id":"System.String","EvidenceVariable.characteristic.modifierExtension":"Extension","EvidenceVariable.characteristic.participantEffectiveDateTime":"dateTime","EvidenceVariable.characteristic.participantEffectiveDuration":"Duration","EvidenceVariable.characteristic.participantEffectivePeriod":"Period","EvidenceVariable.characteristic.participantEffectiveTiming":"Timing","EvidenceVariable.characteristic.timeFromStart":"Duration","EvidenceVariable.characteristic.usageContext":"UsageContext","EvidenceVariable.contact":"ContactDetail","EvidenceVariable.contained":"Resource","EvidenceVariable.copyright":"markdown","EvidenceVariable.date":"dateTime","EvidenceVariable.description":"markdown","EvidenceVariable.editor":"ContactDetail","EvidenceVariable.effectivePeriod":"Period","EvidenceVariable.endorser":"ContactDetail","EvidenceVariable.extension":"Extension","EvidenceVariable.id":"System.String","EvidenceVariable.identifier":"Identifier","EvidenceVariable.implicitRules":"uri","EvidenceVariable.jurisdiction":"CodeableConcept","EvidenceVariable.language":"code","EvidenceVariable.lastReviewDate":"date","EvidenceVariable.meta":"Meta","EvidenceVariable.modifierExtension":"Extension","EvidenceVariable.name":"string","EvidenceVariable.note":"Annotation","EvidenceVariable.publisher":"string","EvidenceVariable.relatedArtifact":"RelatedArtifact","EvidenceVariable.reviewer":"ContactDetail","EvidenceVariable.shortTitle":"string","EvidenceVariable.status":"code","EvidenceVariable.subtitle":"string","EvidenceVariable.text":"Narrative","EvidenceVariable.title":"string","EvidenceVariable.topic":"CodeableConcept","EvidenceVariable.type":"code","EvidenceVariable.url":"uri","EvidenceVariable.useContext":"UsageContext","EvidenceVariable.version":"string","ExampleScenario.actor":"BackboneElement","ExampleScenario.actor.actorId":"string","ExampleScenario.actor.description":"markdown","ExampleScenario.actor.extension":"Extension","ExampleScenario.actor.id":"System.String","ExampleScenario.actor.modifierExtension":"Extension","ExampleScenario.actor.name":"string","ExampleScenario.actor.type":"code","ExampleScenario.contact":"ContactDetail","ExampleScenario.contained":"Resource","ExampleScenario.copyright":"markdown","ExampleScenario.date":"dateTime","ExampleScenario.experimental":"boolean","ExampleScenario.extension":"Extension","ExampleScenario.id":"System.String","ExampleScenario.identifier":"Identifier","ExampleScenario.implicitRules":"uri","ExampleScenario.instance":"BackboneElement","ExampleScenario.instance.containedInstance":"BackboneElement","ExampleScenario.instance.containedInstance.extension":"Extension","ExampleScenario.instance.containedInstance.id":"System.String","ExampleScenario.instance.containedInstance.modifierExtension":"Extension","ExampleScenario.instance.containedInstance.resourceId":"string","ExampleScenario.instance.containedInstance.versionId":"string","ExampleScenario.instance.description":"markdown","ExampleScenario.instance.extension":"Extension","ExampleScenario.instance.id":"System.String","ExampleScenario.instance.modifierExtension":"Extension","ExampleScenario.instance.name":"string","ExampleScenario.instance.resourceId":"string","ExampleScenario.instance.resourceType":"code","ExampleScenario.instance.version":"BackboneElement","ExampleScenario.instance.version.description":"markdown","ExampleScenario.instance.version.extension":"Extension","ExampleScenario.instance.version.id":"System.String","ExampleScenario.instance.version.modifierExtension":"Extension","ExampleScenario.instance.version.versionId":"string","ExampleScenario.jurisdiction":"CodeableConcept","ExampleScenario.language":"code","ExampleScenario.meta":"Meta","ExampleScenario.modifierExtension":"Extension","ExampleScenario.name":"string","ExampleScenario.process":"BackboneElement","ExampleScenario.process.description":"markdown","ExampleScenario.process.extension":"Extension","ExampleScenario.process.id":"System.String","ExampleScenario.process.modifierExtension":"Extension","ExampleScenario.process.postConditions":"markdown","ExampleScenario.process.preConditions":"markdown","ExampleScenario.process.step":"BackboneElement","ExampleScenario.process.step.alternative":"BackboneElement","ExampleScenario.process.step.alternative.description":"markdown","ExampleScenario.process.step.alternative.extension":"Extension","ExampleScenario.process.step.alternative.id":"System.String","ExampleScenario.process.step.alternative.modifierExtension":"Extension","ExampleScenario.process.step.alternative.title":"string","ExampleScenario.process.step.extension":"Extension","ExampleScenario.process.step.id":"System.String","ExampleScenario.process.step.modifierExtension":"Extension","ExampleScenario.process.step.operation":"BackboneElement","ExampleScenario.process.step.operation.description":"markdown","ExampleScenario.process.step.operation.extension":"Extension","ExampleScenario.process.step.operation.id":"System.String","ExampleScenario.process.step.operation.initiator":"string","ExampleScenario.process.step.operation.initiatorActive":"boolean","ExampleScenario.process.step.operation.modifierExtension":"Extension","ExampleScenario.process.step.operation.name":"string","ExampleScenario.process.step.operation.number":"string","ExampleScenario.process.step.operation.receiver":"string","ExampleScenario.process.step.operation.receiverActive":"boolean","ExampleScenario.process.step.operation.type":"string","ExampleScenario.process.step.pause":"boolean","ExampleScenario.process.title":"string","ExampleScenario.publisher":"string","ExampleScenario.purpose":"markdown","ExampleScenario.status":"code","ExampleScenario.text":"Narrative","ExampleScenario.url":"uri","ExampleScenario.useContext":"UsageContext","ExampleScenario.version":"string","ExampleScenario.workflow":"canonical","ExplanationOfBenefit.accident":"BackboneElement","ExplanationOfBenefit.accident.date":"date","ExplanationOfBenefit.accident.extension":"Extension","ExplanationOfBenefit.accident.id":"System.String","ExplanationOfBenefit.accident.locationAddress":"Address","ExplanationOfBenefit.accident.locationReference":"Reference","ExplanationOfBenefit.accident.modifierExtension":"Extension","ExplanationOfBenefit.accident.type":"CodeableConcept","ExplanationOfBenefit.addItem":"BackboneElement","ExplanationOfBenefit.addItem.bodySite":"CodeableConcept","ExplanationOfBenefit.addItem.detail":"BackboneElement","ExplanationOfBenefit.addItem.detail.extension":"Extension","ExplanationOfBenefit.addItem.detail.factor":"decimal","ExplanationOfBenefit.addItem.detail.id":"System.String","ExplanationOfBenefit.addItem.detail.modifier":"CodeableConcept","ExplanationOfBenefit.addItem.detail.modifierExtension":"Extension","ExplanationOfBenefit.addItem.detail.net":"Money","ExplanationOfBenefit.addItem.detail.noteNumber":"positiveInt","ExplanationOfBenefit.addItem.detail.productOrService":"CodeableConcept","ExplanationOfBenefit.addItem.detail.quantity":"Quantity","ExplanationOfBenefit.addItem.detail.subDetail":"BackboneElement","ExplanationOfBenefit.addItem.detail.subDetail.extension":"Extension","ExplanationOfBenefit.addItem.detail.subDetail.factor":"decimal","ExplanationOfBenefit.addItem.detail.subDetail.id":"System.String","ExplanationOfBenefit.addItem.detail.subDetail.modifier":"CodeableConcept","ExplanationOfBenefit.addItem.detail.subDetail.modifierExtension":"Extension","ExplanationOfBenefit.addItem.detail.subDetail.net":"Money","ExplanationOfBenefit.addItem.detail.subDetail.noteNumber":"positiveInt","ExplanationOfBenefit.addItem.detail.subDetail.productOrService":"CodeableConcept","ExplanationOfBenefit.addItem.detail.subDetail.quantity":"Quantity","ExplanationOfBenefit.addItem.detail.subDetail.unitPrice":"Money","ExplanationOfBenefit.addItem.detail.unitPrice":"Money","ExplanationOfBenefit.addItem.detailSequence":"positiveInt","ExplanationOfBenefit.addItem.extension":"Extension","ExplanationOfBenefit.addItem.factor":"decimal","ExplanationOfBenefit.addItem.id":"System.String","ExplanationOfBenefit.addItem.itemSequence":"positiveInt","ExplanationOfBenefit.addItem.locationAddress":"Address","ExplanationOfBenefit.addItem.locationCodeableConcept":"CodeableConcept","ExplanationOfBenefit.addItem.locationReference":"Reference","ExplanationOfBenefit.addItem.modifier":"CodeableConcept","ExplanationOfBenefit.addItem.modifierExtension":"Extension","ExplanationOfBenefit.addItem.net":"Money","ExplanationOfBenefit.addItem.noteNumber":"positiveInt","ExplanationOfBenefit.addItem.productOrService":"CodeableConcept","ExplanationOfBenefit.addItem.programCode":"CodeableConcept","ExplanationOfBenefit.addItem.provider":"Reference","ExplanationOfBenefit.addItem.quantity":"Quantity","ExplanationOfBenefit.addItem.servicedDate":"date","ExplanationOfBenefit.addItem.servicedPeriod":"Period","ExplanationOfBenefit.addItem.subDetailSequence":"positiveInt","ExplanationOfBenefit.addItem.subSite":"CodeableConcept","ExplanationOfBenefit.addItem.unitPrice":"Money","ExplanationOfBenefit.benefitBalance":"BackboneElement","ExplanationOfBenefit.benefitBalance.category":"CodeableConcept","ExplanationOfBenefit.benefitBalance.description":"string","ExplanationOfBenefit.benefitBalance.excluded":"boolean","ExplanationOfBenefit.benefitBalance.extension":"Extension","ExplanationOfBenefit.benefitBalance.financial":"BackboneElement","ExplanationOfBenefit.benefitBalance.financial.allowedMoney":"Money","ExplanationOfBenefit.benefitBalance.financial.allowedString":"string","ExplanationOfBenefit.benefitBalance.financial.allowedUnsignedInt":"unsignedInt","ExplanationOfBenefit.benefitBalance.financial.extension":"Extension","ExplanationOfBenefit.benefitBalance.financial.id":"System.String","ExplanationOfBenefit.benefitBalance.financial.modifierExtension":"Extension","ExplanationOfBenefit.benefitBalance.financial.type":"CodeableConcept","ExplanationOfBenefit.benefitBalance.financial.usedMoney":"Money","ExplanationOfBenefit.benefitBalance.financial.usedUnsignedInt":"unsignedInt","ExplanationOfBenefit.benefitBalance.id":"System.String","ExplanationOfBenefit.benefitBalance.modifierExtension":"Extension","ExplanationOfBenefit.benefitBalance.name":"string","ExplanationOfBenefit.benefitBalance.network":"CodeableConcept","ExplanationOfBenefit.benefitBalance.term":"CodeableConcept","ExplanationOfBenefit.benefitBalance.unit":"CodeableConcept","ExplanationOfBenefit.benefitPeriod":"Period","ExplanationOfBenefit.billablePeriod":"Period","ExplanationOfBenefit.careTeam":"BackboneElement","ExplanationOfBenefit.careTeam.extension":"Extension","ExplanationOfBenefit.careTeam.id":"System.String","ExplanationOfBenefit.careTeam.modifierExtension":"Extension","ExplanationOfBenefit.careTeam.provider":"Reference","ExplanationOfBenefit.careTeam.qualification":"CodeableConcept","ExplanationOfBenefit.careTeam.responsible":"boolean","ExplanationOfBenefit.careTeam.role":"CodeableConcept","ExplanationOfBenefit.careTeam.sequence":"positiveInt","ExplanationOfBenefit.claim":"Reference","ExplanationOfBenefit.claimResponse":"Reference","ExplanationOfBenefit.contained":"Resource","ExplanationOfBenefit.created":"dateTime","ExplanationOfBenefit.diagnosis":"BackboneElement","ExplanationOfBenefit.diagnosis.diagnosisCodeableConcept":"CodeableConcept","ExplanationOfBenefit.diagnosis.diagnosisReference":"Reference","ExplanationOfBenefit.diagnosis.extension":"Extension","ExplanationOfBenefit.diagnosis.id":"System.String","ExplanationOfBenefit.diagnosis.modifierExtension":"Extension","ExplanationOfBenefit.diagnosis.onAdmission":"CodeableConcept","ExplanationOfBenefit.diagnosis.packageCode":"CodeableConcept","ExplanationOfBenefit.diagnosis.sequence":"positiveInt","ExplanationOfBenefit.diagnosis.type":"CodeableConcept","ExplanationOfBenefit.disposition":"string","ExplanationOfBenefit.enterer":"Reference","ExplanationOfBenefit.extension":"Extension","ExplanationOfBenefit.facility":"Reference","ExplanationOfBenefit.form":"Attachment","ExplanationOfBenefit.formCode":"CodeableConcept","ExplanationOfBenefit.fundsReserve":"CodeableConcept","ExplanationOfBenefit.fundsReserveRequested":"CodeableConcept","ExplanationOfBenefit.id":"System.String","ExplanationOfBenefit.identifier":"Identifier","ExplanationOfBenefit.implicitRules":"uri","ExplanationOfBenefit.insurance":"BackboneElement","ExplanationOfBenefit.insurance.coverage":"Reference","ExplanationOfBenefit.insurance.extension":"Extension","ExplanationOfBenefit.insurance.focal":"boolean","ExplanationOfBenefit.insurance.id":"System.String","ExplanationOfBenefit.insurance.modifierExtension":"Extension","ExplanationOfBenefit.insurance.preAuthRef":"string","ExplanationOfBenefit.insurer":"Reference","ExplanationOfBenefit.item":"BackboneElement","ExplanationOfBenefit.item.adjudication":"BackboneElement","ExplanationOfBenefit.item.adjudication.amount":"Money","ExplanationOfBenefit.item.adjudication.category":"CodeableConcept","ExplanationOfBenefit.item.adjudication.extension":"Extension","ExplanationOfBenefit.item.adjudication.id":"System.String","ExplanationOfBenefit.item.adjudication.modifierExtension":"Extension","ExplanationOfBenefit.item.adjudication.reason":"CodeableConcept","ExplanationOfBenefit.item.adjudication.value":"decimal","ExplanationOfBenefit.item.bodySite":"CodeableConcept","ExplanationOfBenefit.item.careTeamSequence":"positiveInt","ExplanationOfBenefit.item.category":"CodeableConcept","ExplanationOfBenefit.item.detail":"BackboneElement","ExplanationOfBenefit.item.detail.category":"CodeableConcept","ExplanationOfBenefit.item.detail.extension":"Extension","ExplanationOfBenefit.item.detail.factor":"decimal","ExplanationOfBenefit.item.detail.id":"System.String","ExplanationOfBenefit.item.detail.modifier":"CodeableConcept","ExplanationOfBenefit.item.detail.modifierExtension":"Extension","ExplanationOfBenefit.item.detail.net":"Money","ExplanationOfBenefit.item.detail.noteNumber":"positiveInt","ExplanationOfBenefit.item.detail.productOrService":"CodeableConcept","ExplanationOfBenefit.item.detail.programCode":"CodeableConcept","ExplanationOfBenefit.item.detail.quantity":"Quantity","ExplanationOfBenefit.item.detail.revenue":"CodeableConcept","ExplanationOfBenefit.item.detail.sequence":"positiveInt","ExplanationOfBenefit.item.detail.subDetail":"BackboneElement","ExplanationOfBenefit.item.detail.subDetail.category":"CodeableConcept","ExplanationOfBenefit.item.detail.subDetail.extension":"Extension","ExplanationOfBenefit.item.detail.subDetail.factor":"decimal","ExplanationOfBenefit.item.detail.subDetail.id":"System.String","ExplanationOfBenefit.item.detail.subDetail.modifier":"CodeableConcept","ExplanationOfBenefit.item.detail.subDetail.modifierExtension":"Extension","ExplanationOfBenefit.item.detail.subDetail.net":"Money","ExplanationOfBenefit.item.detail.subDetail.noteNumber":"positiveInt","ExplanationOfBenefit.item.detail.subDetail.productOrService":"CodeableConcept","ExplanationOfBenefit.item.detail.subDetail.programCode":"CodeableConcept","ExplanationOfBenefit.item.detail.subDetail.quantity":"Quantity","ExplanationOfBenefit.item.detail.subDetail.revenue":"CodeableConcept","ExplanationOfBenefit.item.detail.subDetail.sequence":"positiveInt","ExplanationOfBenefit.item.detail.subDetail.udi":"Reference","ExplanationOfBenefit.item.detail.subDetail.unitPrice":"Money","ExplanationOfBenefit.item.detail.udi":"Reference","ExplanationOfBenefit.item.detail.unitPrice":"Money","ExplanationOfBenefit.item.diagnosisSequence":"positiveInt","ExplanationOfBenefit.item.encounter":"Reference","ExplanationOfBenefit.item.extension":"Extension","ExplanationOfBenefit.item.factor":"decimal","ExplanationOfBenefit.item.id":"System.String","ExplanationOfBenefit.item.informationSequence":"positiveInt","ExplanationOfBenefit.item.locationAddress":"Address","ExplanationOfBenefit.item.locationCodeableConcept":"CodeableConcept","ExplanationOfBenefit.item.locationReference":"Reference","ExplanationOfBenefit.item.modifier":"CodeableConcept","ExplanationOfBenefit.item.modifierExtension":"Extension","ExplanationOfBenefit.item.net":"Money","ExplanationOfBenefit.item.noteNumber":"positiveInt","ExplanationOfBenefit.item.procedureSequence":"positiveInt","ExplanationOfBenefit.item.productOrService":"CodeableConcept","ExplanationOfBenefit.item.programCode":"CodeableConcept","ExplanationOfBenefit.item.quantity":"Quantity","ExplanationOfBenefit.item.revenue":"CodeableConcept","ExplanationOfBenefit.item.sequence":"positiveInt","ExplanationOfBenefit.item.servicedDate":"date","ExplanationOfBenefit.item.servicedPeriod":"Period","ExplanationOfBenefit.item.subSite":"CodeableConcept","ExplanationOfBenefit.item.udi":"Reference","ExplanationOfBenefit.item.unitPrice":"Money","ExplanationOfBenefit.language":"code","ExplanationOfBenefit.meta":"Meta","ExplanationOfBenefit.modifierExtension":"Extension","ExplanationOfBenefit.originalPrescription":"Reference","ExplanationOfBenefit.outcome":"code","ExplanationOfBenefit.patient":"Reference","ExplanationOfBenefit.payee":"BackboneElement","ExplanationOfBenefit.payee.extension":"Extension","ExplanationOfBenefit.payee.id":"System.String","ExplanationOfBenefit.payee.modifierExtension":"Extension","ExplanationOfBenefit.payee.party":"Reference","ExplanationOfBenefit.payee.type":"CodeableConcept","ExplanationOfBenefit.payment":"BackboneElement","ExplanationOfBenefit.payment.adjustment":"Money","ExplanationOfBenefit.payment.adjustmentReason":"CodeableConcept","ExplanationOfBenefit.payment.amount":"Money","ExplanationOfBenefit.payment.date":"date","ExplanationOfBenefit.payment.extension":"Extension","ExplanationOfBenefit.payment.id":"System.String","ExplanationOfBenefit.payment.identifier":"Identifier","ExplanationOfBenefit.payment.modifierExtension":"Extension","ExplanationOfBenefit.payment.type":"CodeableConcept","ExplanationOfBenefit.preAuthRef":"string","ExplanationOfBenefit.preAuthRefPeriod":"Period","ExplanationOfBenefit.precedence":"positiveInt","ExplanationOfBenefit.prescription":"Reference","ExplanationOfBenefit.priority":"CodeableConcept","ExplanationOfBenefit.procedure":"BackboneElement","ExplanationOfBenefit.procedure.date":"dateTime","ExplanationOfBenefit.procedure.extension":"Extension","ExplanationOfBenefit.procedure.id":"System.String","ExplanationOfBenefit.procedure.modifierExtension":"Extension","ExplanationOfBenefit.procedure.procedureCodeableConcept":"CodeableConcept","ExplanationOfBenefit.procedure.procedureReference":"Reference","ExplanationOfBenefit.procedure.sequence":"positiveInt","ExplanationOfBenefit.procedure.type":"CodeableConcept","ExplanationOfBenefit.procedure.udi":"Reference","ExplanationOfBenefit.processNote":"BackboneElement","ExplanationOfBenefit.processNote.extension":"Extension","ExplanationOfBenefit.processNote.id":"System.String","ExplanationOfBenefit.processNote.language":"CodeableConcept","ExplanationOfBenefit.processNote.modifierExtension":"Extension","ExplanationOfBenefit.processNote.number":"positiveInt","ExplanationOfBenefit.processNote.text":"string","ExplanationOfBenefit.processNote.type":"code","ExplanationOfBenefit.provider":"Reference","ExplanationOfBenefit.referral":"Reference","ExplanationOfBenefit.related":"BackboneElement","ExplanationOfBenefit.related.claim":"Reference","ExplanationOfBenefit.related.extension":"Extension","ExplanationOfBenefit.related.id":"System.String","ExplanationOfBenefit.related.modifierExtension":"Extension","ExplanationOfBenefit.related.reference":"Identifier","ExplanationOfBenefit.related.relationship":"CodeableConcept","ExplanationOfBenefit.status":"code","ExplanationOfBenefit.subType":"CodeableConcept","ExplanationOfBenefit.supportingInfo":"BackboneElement","ExplanationOfBenefit.supportingInfo.category":"CodeableConcept","ExplanationOfBenefit.supportingInfo.code":"CodeableConcept","ExplanationOfBenefit.supportingInfo.extension":"Extension","ExplanationOfBenefit.supportingInfo.id":"System.String","ExplanationOfBenefit.supportingInfo.modifierExtension":"Extension","ExplanationOfBenefit.supportingInfo.reason":"Coding","ExplanationOfBenefit.supportingInfo.sequence":"positiveInt","ExplanationOfBenefit.supportingInfo.timingDate":"date","ExplanationOfBenefit.supportingInfo.timingPeriod":"Period","ExplanationOfBenefit.supportingInfo.valueAttachment":"Attachment","ExplanationOfBenefit.supportingInfo.valueBoolean":"boolean","ExplanationOfBenefit.supportingInfo.valueQuantity":"Quantity","ExplanationOfBenefit.supportingInfo.valueReference":"Reference","ExplanationOfBenefit.supportingInfo.valueString":"string","ExplanationOfBenefit.text":"Narrative","ExplanationOfBenefit.total":"BackboneElement","ExplanationOfBenefit.total.amount":"Money","ExplanationOfBenefit.total.category":"CodeableConcept","ExplanationOfBenefit.total.extension":"Extension","ExplanationOfBenefit.total.id":"System.String","ExplanationOfBenefit.total.modifierExtension":"Extension","ExplanationOfBenefit.type":"CodeableConcept","ExplanationOfBenefit.use":"code","Expression.description":"string","Expression.expression":"string","Expression.extension":"Extension","Expression.id":"System.String","Expression.language":"code","Expression.name":"id","Expression.reference":"uri","Extension.extension":"Extension","Extension.id":"System.String","Extension.url":"System.String","Extension.valueAddress":"Address","Extension.valueAge":"Age","Extension.valueAnnotation":"Annotation","Extension.valueAttachment":"Attachment","Extension.valueBase64Binary":"base64Binary","Extension.valueBoolean":"boolean","Extension.valueCanonical":"canonical","Extension.valueCode":"code","Extension.valueCodeableConcept":"CodeableConcept","Extension.valueCoding":"Coding","Extension.valueContactDetail":"ContactDetail","Extension.valueContactPoint":"ContactPoint","Extension.valueContributor":"Contributor","Extension.valueCount":"Count","Extension.valueDataRequirement":"DataRequirement","Extension.valueDate":"date","Extension.valueDateTime":"dateTime","Extension.valueDecimal":"decimal","Extension.valueDistance":"Distance","Extension.valueDosage":"Dosage","Extension.valueDuration":"Duration","Extension.valueExpression":"Expression","Extension.valueHumanName":"HumanName","Extension.valueId":"id","Extension.valueIdentifier":"Identifier","Extension.valueInstant":"instant","Extension.valueInteger":"integer","Extension.valueMarkdown":"markdown","Extension.valueMeta":"Meta","Extension.valueMoney":"Money","Extension.valueOid":"oid","Extension.valueParameterDefinition":"ParameterDefinition","Extension.valuePeriod":"Period","Extension.valuePositiveInt":"positiveInt","Extension.valueQuantity":"Quantity","Extension.valueRange":"Range","Extension.valueRatio":"Ratio","Extension.valueReference":"Reference","Extension.valueRelatedArtifact":"RelatedArtifact","Extension.valueSampledData":"SampledData","Extension.valueSignature":"Signature","Extension.valueString":"string","Extension.valueTime":"time","Extension.valueTiming":"Timing","Extension.valueTriggerDefinition":"TriggerDefinition","Extension.valueUnsignedInt":"unsignedInt","Extension.valueUri":"uri","Extension.valueUrl":"url","Extension.valueUsageContext":"UsageContext","Extension.valueUuid":"uuid","FamilyMemberHistory.ageAge":"Age","FamilyMemberHistory.ageRange":"Range","FamilyMemberHistory.ageString":"string","FamilyMemberHistory.bornDate":"date","FamilyMemberHistory.bornPeriod":"Period","FamilyMemberHistory.bornString":"string","FamilyMemberHistory.condition":"BackboneElement","FamilyMemberHistory.condition.code":"CodeableConcept","FamilyMemberHistory.condition.contributedToDeath":"boolean","FamilyMemberHistory.condition.extension":"Extension","FamilyMemberHistory.condition.id":"System.String","FamilyMemberHistory.condition.modifierExtension":"Extension","FamilyMemberHistory.condition.note":"Annotation","FamilyMemberHistory.condition.onsetAge":"Age","FamilyMemberHistory.condition.onsetPeriod":"Period","FamilyMemberHistory.condition.onsetRange":"Range","FamilyMemberHistory.condition.onsetString":"string","FamilyMemberHistory.condition.outcome":"CodeableConcept","FamilyMemberHistory.contained":"Resource","FamilyMemberHistory.dataAbsentReason":"CodeableConcept","FamilyMemberHistory.date":"dateTime","FamilyMemberHistory.deceasedAge":"Age","FamilyMemberHistory.deceasedBoolean":"boolean","FamilyMemberHistory.deceasedDate":"date","FamilyMemberHistory.deceasedRange":"Range","FamilyMemberHistory.deceasedString":"string","FamilyMemberHistory.estimatedAge":"boolean","FamilyMemberHistory.extension":"Extension","FamilyMemberHistory.id":"System.String","FamilyMemberHistory.identifier":"Identifier","FamilyMemberHistory.implicitRules":"uri","FamilyMemberHistory.instantiatesCanonical":"canonical","FamilyMemberHistory.instantiatesUri":"uri","FamilyMemberHistory.language":"code","FamilyMemberHistory.meta":"Meta","FamilyMemberHistory.modifierExtension":"Extension","FamilyMemberHistory.name":"string","FamilyMemberHistory.note":"Annotation","FamilyMemberHistory.patient":"Reference","FamilyMemberHistory.reasonCode":"CodeableConcept","FamilyMemberHistory.reasonReference":"Reference","FamilyMemberHistory.relationship":"CodeableConcept","FamilyMemberHistory.sex":"CodeableConcept","FamilyMemberHistory.status":"code","FamilyMemberHistory.text":"Narrative","Flag.author":"Reference","Flag.category":"CodeableConcept","Flag.code":"CodeableConcept","Flag.contained":"Resource","Flag.encounter":"Reference","Flag.extension":"Extension","Flag.id":"System.String","Flag.identifier":"Identifier","Flag.implicitRules":"uri","Flag.language":"code","Flag.meta":"Meta","Flag.modifierExtension":"Extension","Flag.period":"Period","Flag.status":"code","Flag.subject":"Reference","Flag.text":"Narrative","Goal.achievementStatus":"CodeableConcept","Goal.addresses":"Reference","Goal.category":"CodeableConcept","Goal.contained":"Resource","Goal.description":"CodeableConcept","Goal.expressedBy":"Reference","Goal.extension":"Extension","Goal.id":"System.String","Goal.identifier":"Identifier","Goal.implicitRules":"uri","Goal.language":"code","Goal.lifecycleStatus":"code","Goal.meta":"Meta","Goal.modifierExtension":"Extension","Goal.note":"Annotation","Goal.outcomeCode":"CodeableConcept","Goal.outcomeReference":"Reference","Goal.priority":"CodeableConcept","Goal.startCodeableConcept":"CodeableConcept","Goal.startDate":"date","Goal.statusDate":"date","Goal.statusReason":"string","Goal.subject":"Reference","Goal.target":"BackboneElement","Goal.target.detailBoolean":"boolean","Goal.target.detailCodeableConcept":"CodeableConcept","Goal.target.detailInteger":"integer","Goal.target.detailQuantity":"Quantity","Goal.target.detailRange":"Range","Goal.target.detailRatio":"Ratio","Goal.target.detailString":"string","Goal.target.dueDate":"date","Goal.target.dueDuration":"Duration","Goal.target.extension":"Extension","Goal.target.id":"System.String","Goal.target.measure":"CodeableConcept","Goal.target.modifierExtension":"Extension","Goal.text":"Narrative","GraphDefinition.contact":"ContactDetail","GraphDefinition.contained":"Resource","GraphDefinition.date":"dateTime","GraphDefinition.description":"markdown","GraphDefinition.experimental":"boolean","GraphDefinition.extension":"Extension","GraphDefinition.id":"System.String","GraphDefinition.implicitRules":"uri","GraphDefinition.jurisdiction":"CodeableConcept","GraphDefinition.language":"code","GraphDefinition.link":"BackboneElement","GraphDefinition.link.description":"string","GraphDefinition.link.extension":"Extension","GraphDefinition.link.id":"System.String","GraphDefinition.link.max":"string","GraphDefinition.link.min":"integer","GraphDefinition.link.modifierExtension":"Extension","GraphDefinition.link.path":"string","GraphDefinition.link.sliceName":"string","GraphDefinition.link.target":"BackboneElement","GraphDefinition.link.target.compartment":"BackboneElement","GraphDefinition.link.target.compartment.code":"code","GraphDefinition.link.target.compartment.description":"string","GraphDefinition.link.target.compartment.expression":"string","GraphDefinition.link.target.compartment.extension":"Extension","GraphDefinition.link.target.compartment.id":"System.String","GraphDefinition.link.target.compartment.modifierExtension":"Extension","GraphDefinition.link.target.compartment.rule":"code","GraphDefinition.link.target.compartment.use":"code","GraphDefinition.link.target.extension":"Extension","GraphDefinition.link.target.id":"System.String","GraphDefinition.link.target.modifierExtension":"Extension","GraphDefinition.link.target.params":"string","GraphDefinition.link.target.profile":"canonical","GraphDefinition.link.target.type":"code","GraphDefinition.meta":"Meta","GraphDefinition.modifierExtension":"Extension","GraphDefinition.name":"string","GraphDefinition.profile":"canonical","GraphDefinition.publisher":"string","GraphDefinition.purpose":"markdown","GraphDefinition.start":"code","GraphDefinition.status":"code","GraphDefinition.text":"Narrative","GraphDefinition.url":"uri","GraphDefinition.useContext":"UsageContext","GraphDefinition.version":"string","Group.active":"boolean","Group.actual":"boolean","Group.characteristic":"BackboneElement","Group.characteristic.code":"CodeableConcept","Group.characteristic.exclude":"boolean","Group.characteristic.extension":"Extension","Group.characteristic.id":"System.String","Group.characteristic.modifierExtension":"Extension","Group.characteristic.period":"Period","Group.characteristic.valueBoolean":"boolean","Group.characteristic.valueCodeableConcept":"CodeableConcept","Group.characteristic.valueQuantity":"Quantity","Group.characteristic.valueRange":"Range","Group.characteristic.valueReference":"Reference","Group.code":"CodeableConcept","Group.contained":"Resource","Group.extension":"Extension","Group.id":"System.String","Group.identifier":"Identifier","Group.implicitRules":"uri","Group.language":"code","Group.managingEntity":"Reference","Group.member":"BackboneElement","Group.member.entity":"Reference","Group.member.extension":"Extension","Group.member.id":"System.String","Group.member.inactive":"boolean","Group.member.modifierExtension":"Extension","Group.member.period":"Period","Group.meta":"Meta","Group.modifierExtension":"Extension","Group.name":"string","Group.quantity":"unsignedInt","Group.text":"Narrative","Group.type":"code","GuidanceResponse.contained":"Resource","GuidanceResponse.dataRequirement":"DataRequirement","GuidanceResponse.encounter":"Reference","GuidanceResponse.evaluationMessage":"Reference","GuidanceResponse.extension":"Extension","GuidanceResponse.id":"System.String","GuidanceResponse.identifier":"Identifier","GuidanceResponse.implicitRules":"uri","GuidanceResponse.language":"code","GuidanceResponse.meta":"Meta","GuidanceResponse.modifierExtension":"Extension","GuidanceResponse.moduleCanonical":"canonical","GuidanceResponse.moduleCodeableConcept":"CodeableConcept","GuidanceResponse.moduleUri":"uri","GuidanceResponse.note":"Annotation","GuidanceResponse.occurrenceDateTime":"dateTime","GuidanceResponse.outputParameters":"Reference","GuidanceResponse.performer":"Reference","GuidanceResponse.reasonCode":"CodeableConcept","GuidanceResponse.reasonReference":"Reference","GuidanceResponse.requestIdentifier":"Identifier","GuidanceResponse.result":"Reference","GuidanceResponse.status":"code","GuidanceResponse.subject":"Reference","GuidanceResponse.text":"Narrative","HealthcareService.active":"boolean","HealthcareService.appointmentRequired":"boolean","HealthcareService.availabilityExceptions":"string","HealthcareService.availableTime":"BackboneElement","HealthcareService.availableTime.allDay":"boolean","HealthcareService.availableTime.availableEndTime":"time","HealthcareService.availableTime.availableStartTime":"time","HealthcareService.availableTime.daysOfWeek":"code","HealthcareService.availableTime.extension":"Extension","HealthcareService.availableTime.id":"System.String","HealthcareService.availableTime.modifierExtension":"Extension","HealthcareService.category":"CodeableConcept","HealthcareService.characteristic":"CodeableConcept","HealthcareService.comment":"string","HealthcareService.communication":"CodeableConcept","HealthcareService.contained":"Resource","HealthcareService.coverageArea":"Reference","HealthcareService.eligibility":"BackboneElement","HealthcareService.eligibility.code":"CodeableConcept","HealthcareService.eligibility.comment":"markdown","HealthcareService.eligibility.extension":"Extension","HealthcareService.eligibility.id":"System.String","HealthcareService.eligibility.modifierExtension":"Extension","HealthcareService.endpoint":"Reference","HealthcareService.extension":"Extension","HealthcareService.extraDetails":"markdown","HealthcareService.id":"System.String","HealthcareService.identifier":"Identifier","HealthcareService.implicitRules":"uri","HealthcareService.language":"code","HealthcareService.location":"Reference","HealthcareService.meta":"Meta","HealthcareService.modifierExtension":"Extension","HealthcareService.name":"string","HealthcareService.notAvailable":"BackboneElement","HealthcareService.notAvailable.description":"string","HealthcareService.notAvailable.during":"Period","HealthcareService.notAvailable.extension":"Extension","HealthcareService.notAvailable.id":"System.String","HealthcareService.notAvailable.modifierExtension":"Extension","HealthcareService.photo":"Attachment","HealthcareService.program":"CodeableConcept","HealthcareService.providedBy":"Reference","HealthcareService.referralMethod":"CodeableConcept","HealthcareService.serviceProvisionCode":"CodeableConcept","HealthcareService.specialty":"CodeableConcept","HealthcareService.telecom":"ContactPoint","HealthcareService.text":"Narrative","HealthcareService.type":"CodeableConcept","HumanName.extension":"Extension","HumanName.family":"string","HumanName.given":"string","HumanName.id":"System.String","HumanName.period":"Period","HumanName.prefix":"string","HumanName.suffix":"string","HumanName.text":"string","HumanName.use":"code","Identifier.assigner":"Reference","Identifier.extension":"Extension","Identifier.id":"System.String","Identifier.period":"Period","Identifier.system":"uri","Identifier.type":"CodeableConcept","Identifier.use":"code","Identifier.value":"string","ImagingStudy.basedOn":"Reference","ImagingStudy.contained":"Resource","ImagingStudy.description":"string","ImagingStudy.encounter":"Reference","ImagingStudy.endpoint":"Reference","ImagingStudy.extension":"Extension","ImagingStudy.id":"System.String","ImagingStudy.identifier":"Identifier","ImagingStudy.implicitRules":"uri","ImagingStudy.interpreter":"Reference","ImagingStudy.language":"code","ImagingStudy.location":"Reference","ImagingStudy.meta":"Meta","ImagingStudy.modality":"Coding","ImagingStudy.modifierExtension":"Extension","ImagingStudy.note":"Annotation","ImagingStudy.numberOfInstances":"unsignedInt","ImagingStudy.numberOfSeries":"unsignedInt","ImagingStudy.procedureCode":"CodeableConcept","ImagingStudy.procedureReference":"Reference","ImagingStudy.reasonCode":"CodeableConcept","ImagingStudy.reasonReference":"Reference","ImagingStudy.referrer":"Reference","ImagingStudy.series":"BackboneElement","ImagingStudy.series.bodySite":"Coding","ImagingStudy.series.description":"string","ImagingStudy.series.endpoint":"Reference","ImagingStudy.series.extension":"Extension","ImagingStudy.series.id":"System.String","ImagingStudy.series.instance":"BackboneElement","ImagingStudy.series.instance.extension":"Extension","ImagingStudy.series.instance.id":"System.String","ImagingStudy.series.instance.modifierExtension":"Extension","ImagingStudy.series.instance.number":"unsignedInt","ImagingStudy.series.instance.sopClass":"Coding","ImagingStudy.series.instance.title":"string","ImagingStudy.series.instance.uid":"id","ImagingStudy.series.laterality":"Coding","ImagingStudy.series.modality":"Coding","ImagingStudy.series.modifierExtension":"Extension","ImagingStudy.series.number":"unsignedInt","ImagingStudy.series.numberOfInstances":"unsignedInt","ImagingStudy.series.performer":"BackboneElement","ImagingStudy.series.performer.actor":"Reference","ImagingStudy.series.performer.extension":"Extension","ImagingStudy.series.performer.function":"CodeableConcept","ImagingStudy.series.performer.id":"System.String","ImagingStudy.series.performer.modifierExtension":"Extension","ImagingStudy.series.specimen":"Reference","ImagingStudy.series.started":"dateTime","ImagingStudy.series.uid":"id","ImagingStudy.started":"dateTime","ImagingStudy.status":"code","ImagingStudy.subject":"Reference","ImagingStudy.text":"Narrative","Immunization.contained":"Resource","Immunization.doseQuantity":"Quantity","Immunization.education":"BackboneElement","Immunization.education.documentType":"string","Immunization.education.extension":"Extension","Immunization.education.id":"System.String","Immunization.education.modifierExtension":"Extension","Immunization.education.presentationDate":"dateTime","Immunization.education.publicationDate":"dateTime","Immunization.education.reference":"uri","Immunization.encounter":"Reference","Immunization.expirationDate":"date","Immunization.extension":"Extension","Immunization.fundingSource":"CodeableConcept","Immunization.id":"System.String","Immunization.identifier":"Identifier","Immunization.implicitRules":"uri","Immunization.isSubpotent":"boolean","Immunization.language":"code","Immunization.location":"Reference","Immunization.lotNumber":"string","Immunization.manufacturer":"Reference","Immunization.meta":"Meta","Immunization.modifierExtension":"Extension","Immunization.note":"Annotation","Immunization.occurrenceDateTime":"dateTime","Immunization.occurrenceString":"string","Immunization.patient":"Reference","Immunization.performer":"BackboneElement","Immunization.performer.actor":"Reference","Immunization.performer.extension":"Extension","Immunization.performer.function":"CodeableConcept","Immunization.performer.id":"System.String","Immunization.performer.modifierExtension":"Extension","Immunization.primarySource":"boolean","Immunization.programEligibility":"CodeableConcept","Immunization.protocolApplied":"BackboneElement","Immunization.protocolApplied.authority":"Reference","Immunization.protocolApplied.doseNumberPositiveInt":"positiveInt","Immunization.protocolApplied.doseNumberString":"string","Immunization.protocolApplied.extension":"Extension","Immunization.protocolApplied.id":"System.String","Immunization.protocolApplied.modifierExtension":"Extension","Immunization.protocolApplied.series":"string","Immunization.protocolApplied.seriesDosesPositiveInt":"positiveInt","Immunization.protocolApplied.seriesDosesString":"string","Immunization.protocolApplied.targetDisease":"CodeableConcept","Immunization.reaction":"BackboneElement","Immunization.reaction.date":"dateTime","Immunization.reaction.detail":"Reference","Immunization.reaction.extension":"Extension","Immunization.reaction.id":"System.String","Immunization.reaction.modifierExtension":"Extension","Immunization.reaction.reported":"boolean","Immunization.reasonCode":"CodeableConcept","Immunization.reasonReference":"Reference","Immunization.recorded":"dateTime","Immunization.reportOrigin":"CodeableConcept","Immunization.route":"CodeableConcept","Immunization.site":"CodeableConcept","Immunization.status":"code","Immunization.statusReason":"CodeableConcept","Immunization.subpotentReason":"CodeableConcept","Immunization.text":"Narrative","Immunization.vaccineCode":"CodeableConcept","ImmunizationEvaluation.authority":"Reference","ImmunizationEvaluation.contained":"Resource","ImmunizationEvaluation.date":"dateTime","ImmunizationEvaluation.description":"string","ImmunizationEvaluation.doseNumberPositiveInt":"positiveInt","ImmunizationEvaluation.doseNumberString":"string","ImmunizationEvaluation.doseStatus":"CodeableConcept","ImmunizationEvaluation.doseStatusReason":"CodeableConcept","ImmunizationEvaluation.extension":"Extension","ImmunizationEvaluation.id":"System.String","ImmunizationEvaluation.identifier":"Identifier","ImmunizationEvaluation.immunizationEvent":"Reference","ImmunizationEvaluation.implicitRules":"uri","ImmunizationEvaluation.language":"code","ImmunizationEvaluation.meta":"Meta","ImmunizationEvaluation.modifierExtension":"Extension","ImmunizationEvaluation.patient":"Reference","ImmunizationEvaluation.series":"string","ImmunizationEvaluation.seriesDosesPositiveInt":"positiveInt","ImmunizationEvaluation.seriesDosesString":"string","ImmunizationEvaluation.status":"code","ImmunizationEvaluation.targetDisease":"CodeableConcept","ImmunizationEvaluation.text":"Narrative","ImmunizationRecommendation.authority":"Reference","ImmunizationRecommendation.contained":"Resource","ImmunizationRecommendation.date":"dateTime","ImmunizationRecommendation.extension":"Extension","ImmunizationRecommendation.id":"System.String","ImmunizationRecommendation.identifier":"Identifier","ImmunizationRecommendation.implicitRules":"uri","ImmunizationRecommendation.language":"code","ImmunizationRecommendation.meta":"Meta","ImmunizationRecommendation.modifierExtension":"Extension","ImmunizationRecommendation.patient":"Reference","ImmunizationRecommendation.recommendation":"BackboneElement","ImmunizationRecommendation.recommendation.contraindicatedVaccineCode":"CodeableConcept","ImmunizationRecommendation.recommendation.dateCriterion":"BackboneElement","ImmunizationRecommendation.recommendation.dateCriterion.code":"CodeableConcept","ImmunizationRecommendation.recommendation.dateCriterion.extension":"Extension","ImmunizationRecommendation.recommendation.dateCriterion.id":"System.String","ImmunizationRecommendation.recommendation.dateCriterion.modifierExtension":"Extension","ImmunizationRecommendation.recommendation.dateCriterion.value":"dateTime","ImmunizationRecommendation.recommendation.description":"string","ImmunizationRecommendation.recommendation.doseNumberPositiveInt":"positiveInt","ImmunizationRecommendation.recommendation.doseNumberString":"string","ImmunizationRecommendation.recommendation.extension":"Extension","ImmunizationRecommendation.recommendation.forecastReason":"CodeableConcept","ImmunizationRecommendation.recommendation.forecastStatus":"CodeableConcept","ImmunizationRecommendation.recommendation.id":"System.String","ImmunizationRecommendation.recommendation.modifierExtension":"Extension","ImmunizationRecommendation.recommendation.series":"string","ImmunizationRecommendation.recommendation.seriesDosesPositiveInt":"positiveInt","ImmunizationRecommendation.recommendation.seriesDosesString":"string","ImmunizationRecommendation.recommendation.supportingImmunization":"Reference","ImmunizationRecommendation.recommendation.supportingPatientInformation":"Reference","ImmunizationRecommendation.recommendation.targetDisease":"CodeableConcept","ImmunizationRecommendation.recommendation.vaccineCode":"CodeableConcept","ImmunizationRecommendation.text":"Narrative","ImplementationGuide.contact":"ContactDetail","ImplementationGuide.contained":"Resource","ImplementationGuide.copyright":"markdown","ImplementationGuide.date":"dateTime","ImplementationGuide.definition":"BackboneElement","ImplementationGuide.definition.extension":"Extension","ImplementationGuide.definition.grouping":"BackboneElement","ImplementationGuide.definition.grouping.description":"string","ImplementationGuide.definition.grouping.extension":"Extension","ImplementationGuide.definition.grouping.id":"System.String","ImplementationGuide.definition.grouping.modifierExtension":"Extension","ImplementationGuide.definition.grouping.name":"string","ImplementationGuide.definition.id":"System.String","ImplementationGuide.definition.modifierExtension":"Extension","ImplementationGuide.definition.page":"BackboneElement","ImplementationGuide.definition.page.extension":"Extension","ImplementationGuide.definition.page.generation":"code","ImplementationGuide.definition.page.id":"System.String","ImplementationGuide.definition.page.modifierExtension":"Extension","ImplementationGuide.definition.page.nameReference":"Reference","ImplementationGuide.definition.page.nameUrl":"url","ImplementationGuide.definition.page.title":"string","ImplementationGuide.definition.parameter":"BackboneElement","ImplementationGuide.definition.parameter.code":"code","ImplementationGuide.definition.parameter.extension":"Extension","ImplementationGuide.definition.parameter.id":"System.String","ImplementationGuide.definition.parameter.modifierExtension":"Extension","ImplementationGuide.definition.parameter.value":"string","ImplementationGuide.definition.resource":"BackboneElement","ImplementationGuide.definition.resource.description":"string","ImplementationGuide.definition.resource.exampleBoolean":"boolean","ImplementationGuide.definition.resource.exampleCanonical":"canonical","ImplementationGuide.definition.resource.extension":"Extension","ImplementationGuide.definition.resource.fhirVersion":"code","ImplementationGuide.definition.resource.groupingId":"id","ImplementationGuide.definition.resource.id":"System.String","ImplementationGuide.definition.resource.modifierExtension":"Extension","ImplementationGuide.definition.resource.name":"string","ImplementationGuide.definition.resource.reference":"Reference","ImplementationGuide.definition.template":"BackboneElement","ImplementationGuide.definition.template.code":"code","ImplementationGuide.definition.template.extension":"Extension","ImplementationGuide.definition.template.id":"System.String","ImplementationGuide.definition.template.modifierExtension":"Extension","ImplementationGuide.definition.template.scope":"string","ImplementationGuide.definition.template.source":"string","ImplementationGuide.dependsOn":"BackboneElement","ImplementationGuide.dependsOn.extension":"Extension","ImplementationGuide.dependsOn.id":"System.String","ImplementationGuide.dependsOn.modifierExtension":"Extension","ImplementationGuide.dependsOn.packageId":"id","ImplementationGuide.dependsOn.uri":"canonical","ImplementationGuide.dependsOn.version":"string","ImplementationGuide.description":"markdown","ImplementationGuide.experimental":"boolean","ImplementationGuide.extension":"Extension","ImplementationGuide.fhirVersion":"code","ImplementationGuide.global":"BackboneElement","ImplementationGuide.global.extension":"Extension","ImplementationGuide.global.id":"System.String","ImplementationGuide.global.modifierExtension":"Extension","ImplementationGuide.global.profile":"canonical","ImplementationGuide.global.type":"code","ImplementationGuide.id":"System.String","ImplementationGuide.implicitRules":"uri","ImplementationGuide.jurisdiction":"CodeableConcept","ImplementationGuide.language":"code","ImplementationGuide.license":"code","ImplementationGuide.manifest":"BackboneElement","ImplementationGuide.manifest.extension":"Extension","ImplementationGuide.manifest.id":"System.String","ImplementationGuide.manifest.image":"string","ImplementationGuide.manifest.modifierExtension":"Extension","ImplementationGuide.manifest.other":"string","ImplementationGuide.manifest.page":"BackboneElement","ImplementationGuide.manifest.page.anchor":"string","ImplementationGuide.manifest.page.extension":"Extension","ImplementationGuide.manifest.page.id":"System.String","ImplementationGuide.manifest.page.modifierExtension":"Extension","ImplementationGuide.manifest.page.name":"string","ImplementationGuide.manifest.page.title":"string","ImplementationGuide.manifest.rendering":"url","ImplementationGuide.manifest.resource":"BackboneElement","ImplementationGuide.manifest.resource.exampleBoolean":"boolean","ImplementationGuide.manifest.resource.exampleCanonical":"canonical","ImplementationGuide.manifest.resource.extension":"Extension","ImplementationGuide.manifest.resource.id":"System.String","ImplementationGuide.manifest.resource.modifierExtension":"Extension","ImplementationGuide.manifest.resource.reference":"Reference","ImplementationGuide.manifest.resource.relativePath":"url","ImplementationGuide.meta":"Meta","ImplementationGuide.modifierExtension":"Extension","ImplementationGuide.name":"string","ImplementationGuide.packageId":"id","ImplementationGuide.publisher":"string","ImplementationGuide.status":"code","ImplementationGuide.text":"Narrative","ImplementationGuide.title":"string","ImplementationGuide.url":"uri","ImplementationGuide.useContext":"UsageContext","ImplementationGuide.version":"string","InsurancePlan.administeredBy":"Reference","InsurancePlan.alias":"string","InsurancePlan.contact":"BackboneElement","InsurancePlan.contact.address":"Address","InsurancePlan.contact.extension":"Extension","InsurancePlan.contact.id":"System.String","InsurancePlan.contact.modifierExtension":"Extension","InsurancePlan.contact.name":"HumanName","InsurancePlan.contact.purpose":"CodeableConcept","InsurancePlan.contact.telecom":"ContactPoint","InsurancePlan.contained":"Resource","InsurancePlan.coverage":"BackboneElement","InsurancePlan.coverage.benefit":"BackboneElement","InsurancePlan.coverage.benefit.extension":"Extension","InsurancePlan.coverage.benefit.id":"System.String","InsurancePlan.coverage.benefit.limit":"BackboneElement","InsurancePlan.coverage.benefit.limit.code":"CodeableConcept","InsurancePlan.coverage.benefit.limit.extension":"Extension","InsurancePlan.coverage.benefit.limit.id":"System.String","InsurancePlan.coverage.benefit.limit.modifierExtension":"Extension","InsurancePlan.coverage.benefit.limit.value":"Quantity","InsurancePlan.coverage.benefit.modifierExtension":"Extension","InsurancePlan.coverage.benefit.requirement":"string","InsurancePlan.coverage.benefit.type":"CodeableConcept","InsurancePlan.coverage.extension":"Extension","InsurancePlan.coverage.id":"System.String","InsurancePlan.coverage.modifierExtension":"Extension","InsurancePlan.coverage.network":"Reference","InsurancePlan.coverage.type":"CodeableConcept","InsurancePlan.coverageArea":"Reference","InsurancePlan.endpoint":"Reference","InsurancePlan.extension":"Extension","InsurancePlan.id":"System.String","InsurancePlan.identifier":"Identifier","InsurancePlan.implicitRules":"uri","InsurancePlan.language":"code","InsurancePlan.meta":"Meta","InsurancePlan.modifierExtension":"Extension","InsurancePlan.name":"string","InsurancePlan.network":"Reference","InsurancePlan.ownedBy":"Reference","InsurancePlan.period":"Period","InsurancePlan.plan":"BackboneElement","InsurancePlan.plan.coverageArea":"Reference","InsurancePlan.plan.extension":"Extension","InsurancePlan.plan.generalCost":"BackboneElement","InsurancePlan.plan.generalCost.comment":"string","InsurancePlan.plan.generalCost.cost":"Money","InsurancePlan.plan.generalCost.extension":"Extension","InsurancePlan.plan.generalCost.groupSize":"positiveInt","InsurancePlan.plan.generalCost.id":"System.String","InsurancePlan.plan.generalCost.modifierExtension":"Extension","InsurancePlan.plan.generalCost.type":"CodeableConcept","InsurancePlan.plan.id":"System.String","InsurancePlan.plan.identifier":"Identifier","InsurancePlan.plan.modifierExtension":"Extension","InsurancePlan.plan.network":"Reference","InsurancePlan.plan.specificCost":"BackboneElement","InsurancePlan.plan.specificCost.benefit":"BackboneElement","InsurancePlan.plan.specificCost.benefit.cost":"BackboneElement","InsurancePlan.plan.specificCost.benefit.cost.applicability":"CodeableConcept","InsurancePlan.plan.specificCost.benefit.cost.extension":"Extension","InsurancePlan.plan.specificCost.benefit.cost.id":"System.String","InsurancePlan.plan.specificCost.benefit.cost.modifierExtension":"Extension","InsurancePlan.plan.specificCost.benefit.cost.qualifiers":"CodeableConcept","InsurancePlan.plan.specificCost.benefit.cost.type":"CodeableConcept","InsurancePlan.plan.specificCost.benefit.cost.value":"Quantity","InsurancePlan.plan.specificCost.benefit.extension":"Extension","InsurancePlan.plan.specificCost.benefit.id":"System.String","InsurancePlan.plan.specificCost.benefit.modifierExtension":"Extension","InsurancePlan.plan.specificCost.benefit.type":"CodeableConcept","InsurancePlan.plan.specificCost.category":"CodeableConcept","InsurancePlan.plan.specificCost.extension":"Extension","InsurancePlan.plan.specificCost.id":"System.String","InsurancePlan.plan.specificCost.modifierExtension":"Extension","InsurancePlan.plan.type":"CodeableConcept","InsurancePlan.status":"code","InsurancePlan.text":"Narrative","InsurancePlan.type":"CodeableConcept","Invoice.account":"Reference","Invoice.cancelledReason":"string","Invoice.contained":"Resource","Invoice.date":"dateTime","Invoice.extension":"Extension","Invoice.id":"System.String","Invoice.identifier":"Identifier","Invoice.implicitRules":"uri","Invoice.issuer":"Reference","Invoice.language":"code","Invoice.lineItem":"BackboneElement","Invoice.lineItem.chargeItemCodeableConcept":"CodeableConcept","Invoice.lineItem.chargeItemReference":"Reference","Invoice.lineItem.extension":"Extension","Invoice.lineItem.id":"System.String","Invoice.lineItem.modifierExtension":"Extension","Invoice.lineItem.priceComponent":"BackboneElement","Invoice.lineItem.priceComponent.amount":"Money","Invoice.lineItem.priceComponent.code":"CodeableConcept","Invoice.lineItem.priceComponent.extension":"Extension","Invoice.lineItem.priceComponent.factor":"decimal","Invoice.lineItem.priceComponent.id":"System.String","Invoice.lineItem.priceComponent.modifierExtension":"Extension","Invoice.lineItem.priceComponent.type":"code","Invoice.lineItem.sequence":"positiveInt","Invoice.meta":"Meta","Invoice.modifierExtension":"Extension","Invoice.note":"Annotation","Invoice.participant":"BackboneElement","Invoice.participant.actor":"Reference","Invoice.participant.extension":"Extension","Invoice.participant.id":"System.String","Invoice.participant.modifierExtension":"Extension","Invoice.participant.role":"CodeableConcept","Invoice.paymentTerms":"markdown","Invoice.recipient":"Reference","Invoice.status":"code","Invoice.subject":"Reference","Invoice.text":"Narrative","Invoice.totalGross":"Money","Invoice.totalNet":"Money","Invoice.type":"CodeableConcept","Library.approvalDate":"date","Library.author":"ContactDetail","Library.contact":"ContactDetail","Library.contained":"Resource","Library.content":"Attachment","Library.copyright":"markdown","Library.dataRequirement":"DataRequirement","Library.date":"dateTime","Library.description":"markdown","Library.editor":"ContactDetail","Library.effectivePeriod":"Period","Library.endorser":"ContactDetail","Library.experimental":"boolean","Library.extension":"Extension","Library.id":"System.String","Library.identifier":"Identifier","Library.implicitRules":"uri","Library.jurisdiction":"CodeableConcept","Library.language":"code","Library.lastReviewDate":"date","Library.meta":"Meta","Library.modifierExtension":"Extension","Library.name":"string","Library.parameter":"ParameterDefinition","Library.publisher":"string","Library.purpose":"markdown","Library.relatedArtifact":"RelatedArtifact","Library.reviewer":"ContactDetail","Library.status":"code","Library.subjectCodeableConcept":"CodeableConcept","Library.subjectReference":"Reference","Library.subtitle":"string","Library.text":"Narrative","Library.title":"string","Library.topic":"CodeableConcept","Library.type":"CodeableConcept","Library.url":"uri","Library.usage":"string","Library.useContext":"UsageContext","Library.version":"string","Linkage.active":"boolean","Linkage.author":"Reference","Linkage.contained":"Resource","Linkage.extension":"Extension","Linkage.id":"System.String","Linkage.implicitRules":"uri","Linkage.item":"BackboneElement","Linkage.item.extension":"Extension","Linkage.item.id":"System.String","Linkage.item.modifierExtension":"Extension","Linkage.item.resource":"Reference","Linkage.item.type":"code","Linkage.language":"code","Linkage.meta":"Meta","Linkage.modifierExtension":"Extension","Linkage.text":"Narrative","List.code":"CodeableConcept","List.contained":"Resource","List.date":"dateTime","List.emptyReason":"CodeableConcept","List.encounter":"Reference","List.entry":"BackboneElement","List.entry.date":"dateTime","List.entry.deleted":"boolean","List.entry.extension":"Extension","List.entry.flag":"CodeableConcept","List.entry.id":"System.String","List.entry.item":"Reference","List.entry.modifierExtension":"Extension","List.extension":"Extension","List.id":"System.String","List.identifier":"Identifier","List.implicitRules":"uri","List.language":"code","List.meta":"Meta","List.mode":"code","List.modifierExtension":"Extension","List.note":"Annotation","List.orderedBy":"CodeableConcept","List.source":"Reference","List.status":"code","List.subject":"Reference","List.text":"Narrative","List.title":"string","Location.address":"Address","Location.alias":"string","Location.availabilityExceptions":"string","Location.contained":"Resource","Location.description":"string","Location.endpoint":"Reference","Location.extension":"Extension","Location.hoursOfOperation":"BackboneElement","Location.hoursOfOperation.allDay":"boolean","Location.hoursOfOperation.closingTime":"time","Location.hoursOfOperation.daysOfWeek":"code","Location.hoursOfOperation.extension":"Extension","Location.hoursOfOperation.id":"System.String","Location.hoursOfOperation.modifierExtension":"Extension","Location.hoursOfOperation.openingTime":"time","Location.id":"System.String","Location.identifier":"Identifier","Location.implicitRules":"uri","Location.language":"code","Location.managingOrganization":"Reference","Location.meta":"Meta","Location.mode":"code","Location.modifierExtension":"Extension","Location.name":"string","Location.operationalStatus":"Coding","Location.partOf":"Reference","Location.physicalType":"CodeableConcept","Location.position":"BackboneElement","Location.position.altitude":"decimal","Location.position.extension":"Extension","Location.position.id":"System.String","Location.position.latitude":"decimal","Location.position.longitude":"decimal","Location.position.modifierExtension":"Extension","Location.status":"code","Location.telecom":"ContactPoint","Location.text":"Narrative","Location.type":"CodeableConcept","MarketingStatus.country":"CodeableConcept","MarketingStatus.dateRange":"Period","MarketingStatus.extension":"Extension","MarketingStatus.id":"System.String","MarketingStatus.jurisdiction":"CodeableConcept","MarketingStatus.modifierExtension":"Extension","MarketingStatus.restoreDate":"dateTime","MarketingStatus.status":"CodeableConcept","Measure.approvalDate":"date","Measure.author":"ContactDetail","Measure.clinicalRecommendationStatement":"markdown","Measure.compositeScoring":"CodeableConcept","Measure.contact":"ContactDetail","Measure.contained":"Resource","Measure.copyright":"markdown","Measure.date":"dateTime","Measure.definition":"markdown","Measure.description":"markdown","Measure.disclaimer":"markdown","Measure.editor":"ContactDetail","Measure.effectivePeriod":"Period","Measure.endorser":"ContactDetail","Measure.experimental":"boolean","Measure.extension":"Extension","Measure.group":"BackboneElement","Measure.group.code":"CodeableConcept","Measure.group.description":"string","Measure.group.extension":"Extension","Measure.group.id":"System.String","Measure.group.modifierExtension":"Extension","Measure.group.population":"BackboneElement","Measure.group.population.code":"CodeableConcept","Measure.group.population.criteria":"Expression","Measure.group.population.description":"string","Measure.group.population.extension":"Extension","Measure.group.population.id":"System.String","Measure.group.population.modifierExtension":"Extension","Measure.group.stratifier":"BackboneElement","Measure.group.stratifier.code":"CodeableConcept","Measure.group.stratifier.component":"BackboneElement","Measure.group.stratifier.component.code":"CodeableConcept","Measure.group.stratifier.component.criteria":"Expression","Measure.group.stratifier.component.description":"string","Measure.group.stratifier.component.extension":"Extension","Measure.group.stratifier.component.id":"System.String","Measure.group.stratifier.component.modifierExtension":"Extension","Measure.group.stratifier.criteria":"Expression","Measure.group.stratifier.description":"string","Measure.group.stratifier.extension":"Extension","Measure.group.stratifier.id":"System.String","Measure.group.stratifier.modifierExtension":"Extension","Measure.guidance":"markdown","Measure.id":"System.String","Measure.identifier":"Identifier","Measure.implicitRules":"uri","Measure.improvementNotation":"CodeableConcept","Measure.jurisdiction":"CodeableConcept","Measure.language":"code","Measure.lastReviewDate":"date","Measure.library":"canonical","Measure.meta":"Meta","Measure.modifierExtension":"Extension","Measure.name":"string","Measure.publisher":"string","Measure.purpose":"markdown","Measure.rateAggregation":"string","Measure.rationale":"markdown","Measure.relatedArtifact":"RelatedArtifact","Measure.reviewer":"ContactDetail","Measure.riskAdjustment":"string","Measure.scoring":"CodeableConcept","Measure.status":"code","Measure.subjectCodeableConcept":"CodeableConcept","Measure.subjectReference":"Reference","Measure.subtitle":"string","Measure.supplementalData":"BackboneElement","Measure.supplementalData.code":"CodeableConcept","Measure.supplementalData.criteria":"Expression","Measure.supplementalData.description":"string","Measure.supplementalData.extension":"Extension","Measure.supplementalData.id":"System.String","Measure.supplementalData.modifierExtension":"Extension","Measure.supplementalData.usage":"CodeableConcept","Measure.text":"Narrative","Measure.title":"string","Measure.topic":"CodeableConcept","Measure.type":"CodeableConcept","Measure.url":"uri","Measure.usage":"string","Measure.useContext":"UsageContext","Measure.version":"string","MeasureReport.contained":"Resource","MeasureReport.date":"dateTime","MeasureReport.evaluatedResource":"Reference","MeasureReport.extension":"Extension","MeasureReport.group":"BackboneElement","MeasureReport.group.code":"CodeableConcept","MeasureReport.group.extension":"Extension","MeasureReport.group.id":"System.String","MeasureReport.group.measureScore":"Quantity","MeasureReport.group.modifierExtension":"Extension","MeasureReport.group.population":"BackboneElement","MeasureReport.group.population.code":"CodeableConcept","MeasureReport.group.population.count":"integer","MeasureReport.group.population.extension":"Extension","MeasureReport.group.population.id":"System.String","MeasureReport.group.population.modifierExtension":"Extension","MeasureReport.group.population.subjectResults":"Reference","MeasureReport.group.stratifier":"BackboneElement","MeasureReport.group.stratifier.code":"CodeableConcept","MeasureReport.group.stratifier.extension":"Extension","MeasureReport.group.stratifier.id":"System.String","MeasureReport.group.stratifier.modifierExtension":"Extension","MeasureReport.group.stratifier.stratum":"BackboneElement","MeasureReport.group.stratifier.stratum.component":"BackboneElement","MeasureReport.group.stratifier.stratum.component.code":"CodeableConcept","MeasureReport.group.stratifier.stratum.component.extension":"Extension","MeasureReport.group.stratifier.stratum.component.id":"System.String","MeasureReport.group.stratifier.stratum.component.modifierExtension":"Extension","MeasureReport.group.stratifier.stratum.component.value":"CodeableConcept","MeasureReport.group.stratifier.stratum.extension":"Extension","MeasureReport.group.stratifier.stratum.id":"System.String","MeasureReport.group.stratifier.stratum.measureScore":"Quantity","MeasureReport.group.stratifier.stratum.modifierExtension":"Extension","MeasureReport.group.stratifier.stratum.population":"BackboneElement","MeasureReport.group.stratifier.stratum.population.code":"CodeableConcept","MeasureReport.group.stratifier.stratum.population.count":"integer","MeasureReport.group.stratifier.stratum.population.extension":"Extension","MeasureReport.group.stratifier.stratum.population.id":"System.String","MeasureReport.group.stratifier.stratum.population.modifierExtension":"Extension","MeasureReport.group.stratifier.stratum.population.subjectResults":"Reference","MeasureReport.group.stratifier.stratum.value":"CodeableConcept","MeasureReport.id":"System.String","MeasureReport.identifier":"Identifier","MeasureReport.implicitRules":"uri","MeasureReport.improvementNotation":"CodeableConcept","MeasureReport.language":"code","MeasureReport.measure":"canonical","MeasureReport.meta":"Meta","MeasureReport.modifierExtension":"Extension","MeasureReport.period":"Period","MeasureReport.reporter":"Reference","MeasureReport.status":"code","MeasureReport.subject":"Reference","MeasureReport.text":"Narrative","MeasureReport.type":"code","Media.basedOn":"Reference","Media.bodySite":"CodeableConcept","Media.contained":"Resource","Media.content":"Attachment","Media.createdDateTime":"dateTime","Media.createdPeriod":"Period","Media.device":"Reference","Media.deviceName":"string","Media.duration":"decimal","Media.encounter":"Reference","Media.extension":"Extension","Media.frames":"positiveInt","Media.height":"positiveInt","Media.id":"System.String","Media.identifier":"Identifier","Media.implicitRules":"uri","Media.issued":"instant","Media.language":"code","Media.meta":"Meta","Media.modality":"CodeableConcept","Media.modifierExtension":"Extension","Media.note":"Annotation","Media.operator":"Reference","Media.partOf":"Reference","Media.reasonCode":"CodeableConcept","Media.status":"code","Media.subject":"Reference","Media.text":"Narrative","Media.type":"CodeableConcept","Media.view":"CodeableConcept","Media.width":"positiveInt","Medication.amount":"Ratio","Medication.batch":"BackboneElement","Medication.batch.expirationDate":"dateTime","Medication.batch.extension":"Extension","Medication.batch.id":"System.String","Medication.batch.lotNumber":"string","Medication.batch.modifierExtension":"Extension","Medication.code":"CodeableConcept","Medication.contained":"Resource","Medication.extension":"Extension","Medication.form":"CodeableConcept","Medication.id":"System.String","Medication.identifier":"Identifier","Medication.implicitRules":"uri","Medication.ingredient":"BackboneElement","Medication.ingredient.extension":"Extension","Medication.ingredient.id":"System.String","Medication.ingredient.isActive":"boolean","Medication.ingredient.itemCodeableConcept":"CodeableConcept","Medication.ingredient.itemReference":"Reference","Medication.ingredient.modifierExtension":"Extension","Medication.ingredient.strength":"Ratio","Medication.language":"code","Medication.manufacturer":"Reference","Medication.meta":"Meta","Medication.modifierExtension":"Extension","Medication.status":"code","Medication.text":"Narrative","MedicationAdministration.category":"CodeableConcept","MedicationAdministration.contained":"Resource","MedicationAdministration.context":"Reference","MedicationAdministration.device":"Reference","MedicationAdministration.dosage":"BackboneElement","MedicationAdministration.dosage.dose":"Quantity","MedicationAdministration.dosage.extension":"Extension","MedicationAdministration.dosage.id":"System.String","MedicationAdministration.dosage.method":"CodeableConcept","MedicationAdministration.dosage.modifierExtension":"Extension","MedicationAdministration.dosage.rateQuantity":"Quantity","MedicationAdministration.dosage.rateRatio":"Ratio","MedicationAdministration.dosage.route":"CodeableConcept","MedicationAdministration.dosage.site":"CodeableConcept","MedicationAdministration.dosage.text":"string","MedicationAdministration.effectiveDateTime":"dateTime","MedicationAdministration.effectivePeriod":"Period","MedicationAdministration.eventHistory":"Reference","MedicationAdministration.extension":"Extension","MedicationAdministration.id":"System.String","MedicationAdministration.identifier":"Identifier","MedicationAdministration.implicitRules":"uri","MedicationAdministration.instantiates":"uri","MedicationAdministration.language":"code","MedicationAdministration.medicationCodeableConcept":"CodeableConcept","MedicationAdministration.medicationReference":"Reference","MedicationAdministration.meta":"Meta","MedicationAdministration.modifierExtension":"Extension","MedicationAdministration.note":"Annotation","MedicationAdministration.partOf":"Reference","MedicationAdministration.performer":"BackboneElement","MedicationAdministration.performer.actor":"Reference","MedicationAdministration.performer.extension":"Extension","MedicationAdministration.performer.function":"CodeableConcept","MedicationAdministration.performer.id":"System.String","MedicationAdministration.performer.modifierExtension":"Extension","MedicationAdministration.reasonCode":"CodeableConcept","MedicationAdministration.reasonReference":"Reference","MedicationAdministration.request":"Reference","MedicationAdministration.status":"code","MedicationAdministration.statusReason":"CodeableConcept","MedicationAdministration.subject":"Reference","MedicationAdministration.supportingInformation":"Reference","MedicationAdministration.text":"Narrative","MedicationDispense.authorizingPrescription":"Reference","MedicationDispense.category":"CodeableConcept","MedicationDispense.contained":"Resource","MedicationDispense.context":"Reference","MedicationDispense.daysSupply":"Quantity","MedicationDispense.destination":"Reference","MedicationDispense.detectedIssue":"Reference","MedicationDispense.dosageInstruction":"Dosage","MedicationDispense.eventHistory":"Reference","MedicationDispense.extension":"Extension","MedicationDispense.id":"System.String","MedicationDispense.identifier":"Identifier","MedicationDispense.implicitRules":"uri","MedicationDispense.language":"code","MedicationDispense.location":"Reference","MedicationDispense.medicationCodeableConcept":"CodeableConcept","MedicationDispense.medicationReference":"Reference","MedicationDispense.meta":"Meta","MedicationDispense.modifierExtension":"Extension","MedicationDispense.note":"Annotation","MedicationDispense.partOf":"Reference","MedicationDispense.performer":"BackboneElement","MedicationDispense.performer.actor":"Reference","MedicationDispense.performer.extension":"Extension","MedicationDispense.performer.function":"CodeableConcept","MedicationDispense.performer.id":"System.String","MedicationDispense.performer.modifierExtension":"Extension","MedicationDispense.quantity":"Quantity","MedicationDispense.receiver":"Reference","MedicationDispense.status":"code","MedicationDispense.statusReasonCodeableConcept":"CodeableConcept","MedicationDispense.statusReasonReference":"Reference","MedicationDispense.subject":"Reference","MedicationDispense.substitution":"BackboneElement","MedicationDispense.substitution.extension":"Extension","MedicationDispense.substitution.id":"System.String","MedicationDispense.substitution.modifierExtension":"Extension","MedicationDispense.substitution.reason":"CodeableConcept","MedicationDispense.substitution.responsibleParty":"Reference","MedicationDispense.substitution.type":"CodeableConcept","MedicationDispense.substitution.wasSubstituted":"boolean","MedicationDispense.supportingInformation":"Reference","MedicationDispense.text":"Narrative","MedicationDispense.type":"CodeableConcept","MedicationDispense.whenHandedOver":"dateTime","MedicationDispense.whenPrepared":"dateTime","MedicationKnowledge.administrationGuidelines":"BackboneElement","MedicationKnowledge.administrationGuidelines.dosage":"BackboneElement","MedicationKnowledge.administrationGuidelines.dosage.dosage":"Dosage","MedicationKnowledge.administrationGuidelines.dosage.extension":"Extension","MedicationKnowledge.administrationGuidelines.dosage.id":"System.String","MedicationKnowledge.administrationGuidelines.dosage.modifierExtension":"Extension","MedicationKnowledge.administrationGuidelines.dosage.type":"CodeableConcept","MedicationKnowledge.administrationGuidelines.extension":"Extension","MedicationKnowledge.administrationGuidelines.id":"System.String","MedicationKnowledge.administrationGuidelines.indicationCodeableConcept":"CodeableConcept","MedicationKnowledge.administrationGuidelines.indicationReference":"Reference","MedicationKnowledge.administrationGuidelines.modifierExtension":"Extension","MedicationKnowledge.administrationGuidelines.patientCharacteristics":"BackboneElement","MedicationKnowledge.administrationGuidelines.patientCharacteristics.characteristicCodeableConcept":"CodeableConcept","MedicationKnowledge.administrationGuidelines.patientCharacteristics.characteristicQuantity":"Quantity","MedicationKnowledge.administrationGuidelines.patientCharacteristics.extension":"Extension","MedicationKnowledge.administrationGuidelines.patientCharacteristics.id":"System.String","MedicationKnowledge.administrationGuidelines.patientCharacteristics.modifierExtension":"Extension","MedicationKnowledge.administrationGuidelines.patientCharacteristics.value":"string","MedicationKnowledge.amount":"Quantity","MedicationKnowledge.associatedMedication":"Reference","MedicationKnowledge.code":"CodeableConcept","MedicationKnowledge.contained":"Resource","MedicationKnowledge.contraindication":"Reference","MedicationKnowledge.cost":"BackboneElement","MedicationKnowledge.cost.cost":"Money","MedicationKnowledge.cost.extension":"Extension","MedicationKnowledge.cost.id":"System.String","MedicationKnowledge.cost.modifierExtension":"Extension","MedicationKnowledge.cost.source":"string","MedicationKnowledge.cost.type":"CodeableConcept","MedicationKnowledge.doseForm":"CodeableConcept","MedicationKnowledge.drugCharacteristic":"BackboneElement","MedicationKnowledge.drugCharacteristic.extension":"Extension","MedicationKnowledge.drugCharacteristic.id":"System.String","MedicationKnowledge.drugCharacteristic.modifierExtension":"Extension","MedicationKnowledge.drugCharacteristic.type":"CodeableConcept","MedicationKnowledge.drugCharacteristic.valueBase64Binary":"base64Binary","MedicationKnowledge.drugCharacteristic.valueCodeableConcept":"CodeableConcept","MedicationKnowledge.drugCharacteristic.valueQuantity":"Quantity","MedicationKnowledge.drugCharacteristic.valueString":"string","MedicationKnowledge.extension":"Extension","MedicationKnowledge.id":"System.String","MedicationKnowledge.implicitRules":"uri","MedicationKnowledge.ingredient":"BackboneElement","MedicationKnowledge.ingredient.extension":"Extension","MedicationKnowledge.ingredient.id":"System.String","MedicationKnowledge.ingredient.isActive":"boolean","MedicationKnowledge.ingredient.itemCodeableConcept":"CodeableConcept","MedicationKnowledge.ingredient.itemReference":"Reference","MedicationKnowledge.ingredient.modifierExtension":"Extension","MedicationKnowledge.ingredient.strength":"Ratio","MedicationKnowledge.intendedRoute":"CodeableConcept","MedicationKnowledge.kinetics":"BackboneElement","MedicationKnowledge.kinetics.areaUnderCurve":"Quantity","MedicationKnowledge.kinetics.extension":"Extension","MedicationKnowledge.kinetics.halfLifePeriod":"Duration","MedicationKnowledge.kinetics.id":"System.String","MedicationKnowledge.kinetics.lethalDose50":"Quantity","MedicationKnowledge.kinetics.modifierExtension":"Extension","MedicationKnowledge.language":"code","MedicationKnowledge.manufacturer":"Reference","MedicationKnowledge.medicineClassification":"BackboneElement","MedicationKnowledge.medicineClassification.classification":"CodeableConcept","MedicationKnowledge.medicineClassification.extension":"Extension","MedicationKnowledge.medicineClassification.id":"System.String","MedicationKnowledge.medicineClassification.modifierExtension":"Extension","MedicationKnowledge.medicineClassification.type":"CodeableConcept","MedicationKnowledge.meta":"Meta","MedicationKnowledge.modifierExtension":"Extension","MedicationKnowledge.monitoringProgram":"BackboneElement","MedicationKnowledge.monitoringProgram.extension":"Extension","MedicationKnowledge.monitoringProgram.id":"System.String","MedicationKnowledge.monitoringProgram.modifierExtension":"Extension","MedicationKnowledge.monitoringProgram.name":"string","MedicationKnowledge.monitoringProgram.type":"CodeableConcept","MedicationKnowledge.monograph":"BackboneElement","MedicationKnowledge.monograph.extension":"Extension","MedicationKnowledge.monograph.id":"System.String","MedicationKnowledge.monograph.modifierExtension":"Extension","MedicationKnowledge.monograph.source":"Reference","MedicationKnowledge.monograph.type":"CodeableConcept","MedicationKnowledge.packaging":"BackboneElement","MedicationKnowledge.packaging.extension":"Extension","MedicationKnowledge.packaging.id":"System.String","MedicationKnowledge.packaging.modifierExtension":"Extension","MedicationKnowledge.packaging.quantity":"Quantity","MedicationKnowledge.packaging.type":"CodeableConcept","MedicationKnowledge.preparationInstruction":"markdown","MedicationKnowledge.productType":"CodeableConcept","MedicationKnowledge.regulatory":"BackboneElement","MedicationKnowledge.regulatory.extension":"Extension","MedicationKnowledge.regulatory.id":"System.String","MedicationKnowledge.regulatory.maxDispense":"BackboneElement","MedicationKnowledge.regulatory.maxDispense.extension":"Extension","MedicationKnowledge.regulatory.maxDispense.id":"System.String","MedicationKnowledge.regulatory.maxDispense.modifierExtension":"Extension","MedicationKnowledge.regulatory.maxDispense.period":"Duration","MedicationKnowledge.regulatory.maxDispense.quantity":"Quantity","MedicationKnowledge.regulatory.modifierExtension":"Extension","MedicationKnowledge.regulatory.regulatoryAuthority":"Reference","MedicationKnowledge.regulatory.schedule":"BackboneElement","MedicationKnowledge.regulatory.schedule.extension":"Extension","MedicationKnowledge.regulatory.schedule.id":"System.String","MedicationKnowledge.regulatory.schedule.modifierExtension":"Extension","MedicationKnowledge.regulatory.schedule.schedule":"CodeableConcept","MedicationKnowledge.regulatory.substitution":"BackboneElement","MedicationKnowledge.regulatory.substitution.allowed":"boolean","MedicationKnowledge.regulatory.substitution.extension":"Extension","MedicationKnowledge.regulatory.substitution.id":"System.String","MedicationKnowledge.regulatory.substitution.modifierExtension":"Extension","MedicationKnowledge.regulatory.substitution.type":"CodeableConcept","MedicationKnowledge.relatedMedicationKnowledge":"BackboneElement","MedicationKnowledge.relatedMedicationKnowledge.extension":"Extension","MedicationKnowledge.relatedMedicationKnowledge.id":"System.String","MedicationKnowledge.relatedMedicationKnowledge.modifierExtension":"Extension","MedicationKnowledge.relatedMedicationKnowledge.reference":"Reference","MedicationKnowledge.relatedMedicationKnowledge.type":"CodeableConcept","MedicationKnowledge.status":"code","MedicationKnowledge.synonym":"string","MedicationKnowledge.text":"Narrative","MedicationRequest.authoredOn":"dateTime","MedicationRequest.basedOn":"Reference","MedicationRequest.category":"CodeableConcept","MedicationRequest.contained":"Resource","MedicationRequest.courseOfTherapyType":"CodeableConcept","MedicationRequest.detectedIssue":"Reference","MedicationRequest.dispenseRequest":"BackboneElement","MedicationRequest.dispenseRequest.dispenseInterval":"Duration","MedicationRequest.dispenseRequest.expectedSupplyDuration":"Duration","MedicationRequest.dispenseRequest.extension":"Extension","MedicationRequest.dispenseRequest.id":"System.String","MedicationRequest.dispenseRequest.initialFill":"BackboneElement","MedicationRequest.dispenseRequest.initialFill.duration":"Duration","MedicationRequest.dispenseRequest.initialFill.extension":"Extension","MedicationRequest.dispenseRequest.initialFill.id":"System.String","MedicationRequest.dispenseRequest.initialFill.modifierExtension":"Extension","MedicationRequest.dispenseRequest.initialFill.quantity":"Quantity","MedicationRequest.dispenseRequest.modifierExtension":"Extension","MedicationRequest.dispenseRequest.numberOfRepeatsAllowed":"unsignedInt","MedicationRequest.dispenseRequest.performer":"Reference","MedicationRequest.dispenseRequest.quantity":"Quantity","MedicationRequest.dispenseRequest.validityPeriod":"Period","MedicationRequest.doNotPerform":"boolean","MedicationRequest.dosageInstruction":"Dosage","MedicationRequest.encounter":"Reference","MedicationRequest.eventHistory":"Reference","MedicationRequest.extension":"Extension","MedicationRequest.groupIdentifier":"Identifier","MedicationRequest.id":"System.String","MedicationRequest.identifier":"Identifier","MedicationRequest.implicitRules":"uri","MedicationRequest.instantiatesCanonical":"canonical","MedicationRequest.instantiatesUri":"uri","MedicationRequest.insurance":"Reference","MedicationRequest.intent":"code","MedicationRequest.language":"code","MedicationRequest.medicationCodeableConcept":"CodeableConcept","MedicationRequest.medicationReference":"Reference","MedicationRequest.meta":"Meta","MedicationRequest.modifierExtension":"Extension","MedicationRequest.note":"Annotation","MedicationRequest.performer":"Reference","MedicationRequest.performerType":"CodeableConcept","MedicationRequest.priorPrescription":"Reference","MedicationRequest.priority":"code","MedicationRequest.reasonCode":"CodeableConcept","MedicationRequest.reasonReference":"Reference","MedicationRequest.recorder":"Reference","MedicationRequest.reportedBoolean":"boolean","MedicationRequest.reportedReference":"Reference","MedicationRequest.requester":"Reference","MedicationRequest.status":"code","MedicationRequest.statusReason":"CodeableConcept","MedicationRequest.subject":"Reference","MedicationRequest.substitution":"BackboneElement","MedicationRequest.substitution.allowedBoolean":"boolean","MedicationRequest.substitution.allowedCodeableConcept":"CodeableConcept","MedicationRequest.substitution.extension":"Extension","MedicationRequest.substitution.id":"System.String","MedicationRequest.substitution.modifierExtension":"Extension","MedicationRequest.substitution.reason":"CodeableConcept","MedicationRequest.supportingInformation":"Reference","MedicationRequest.text":"Narrative","MedicationStatement.basedOn":"Reference","MedicationStatement.category":"CodeableConcept","MedicationStatement.contained":"Resource","MedicationStatement.context":"Reference","MedicationStatement.dateAsserted":"dateTime","MedicationStatement.derivedFrom":"Reference","MedicationStatement.dosage":"Dosage","MedicationStatement.effectiveDateTime":"dateTime","MedicationStatement.effectivePeriod":"Period","MedicationStatement.extension":"Extension","MedicationStatement.id":"System.String","MedicationStatement.identifier":"Identifier","MedicationStatement.implicitRules":"uri","MedicationStatement.informationSource":"Reference","MedicationStatement.language":"code","MedicationStatement.medicationCodeableConcept":"CodeableConcept","MedicationStatement.medicationReference":"Reference","MedicationStatement.meta":"Meta","MedicationStatement.modifierExtension":"Extension","MedicationStatement.note":"Annotation","MedicationStatement.partOf":"Reference","MedicationStatement.reasonCode":"CodeableConcept","MedicationStatement.reasonReference":"Reference","MedicationStatement.status":"code","MedicationStatement.statusReason":"CodeableConcept","MedicationStatement.subject":"Reference","MedicationStatement.text":"Narrative","MedicinalProduct.additionalMonitoringIndicator":"CodeableConcept","MedicinalProduct.attachedDocument":"Reference","MedicinalProduct.clinicalTrial":"Reference","MedicinalProduct.combinedPharmaceuticalDoseForm":"CodeableConcept","MedicinalProduct.contact":"Reference","MedicinalProduct.contained":"Resource","MedicinalProduct.crossReference":"Identifier","MedicinalProduct.domain":"Coding","MedicinalProduct.extension":"Extension","MedicinalProduct.id":"System.String","MedicinalProduct.identifier":"Identifier","MedicinalProduct.implicitRules":"uri","MedicinalProduct.language":"code","MedicinalProduct.legalStatusOfSupply":"CodeableConcept","MedicinalProduct.manufacturingBusinessOperation":"BackboneElement","MedicinalProduct.manufacturingBusinessOperation.authorisationReferenceNumber":"Identifier","MedicinalProduct.manufacturingBusinessOperation.confidentialityIndicator":"CodeableConcept","MedicinalProduct.manufacturingBusinessOperation.effectiveDate":"dateTime","MedicinalProduct.manufacturingBusinessOperation.extension":"Extension","MedicinalProduct.manufacturingBusinessOperation.id":"System.String","MedicinalProduct.manufacturingBusinessOperation.manufacturer":"Reference","MedicinalProduct.manufacturingBusinessOperation.modifierExtension":"Extension","MedicinalProduct.manufacturingBusinessOperation.operationType":"CodeableConcept","MedicinalProduct.manufacturingBusinessOperation.regulator":"Reference","MedicinalProduct.marketingStatus":"MarketingStatus","MedicinalProduct.masterFile":"Reference","MedicinalProduct.meta":"Meta","MedicinalProduct.modifierExtension":"Extension","MedicinalProduct.name":"BackboneElement","MedicinalProduct.name.countryLanguage":"BackboneElement","MedicinalProduct.name.countryLanguage.country":"CodeableConcept","MedicinalProduct.name.countryLanguage.extension":"Extension","MedicinalProduct.name.countryLanguage.id":"System.String","MedicinalProduct.name.countryLanguage.jurisdiction":"CodeableConcept","MedicinalProduct.name.countryLanguage.language":"CodeableConcept","MedicinalProduct.name.countryLanguage.modifierExtension":"Extension","MedicinalProduct.name.extension":"Extension","MedicinalProduct.name.id":"System.String","MedicinalProduct.name.modifierExtension":"Extension","MedicinalProduct.name.namePart":"BackboneElement","MedicinalProduct.name.namePart.extension":"Extension","MedicinalProduct.name.namePart.id":"System.String","MedicinalProduct.name.namePart.modifierExtension":"Extension","MedicinalProduct.name.namePart.part":"string","MedicinalProduct.name.namePart.type":"Coding","MedicinalProduct.name.productName":"string","MedicinalProduct.packagedMedicinalProduct":"Reference","MedicinalProduct.paediatricUseIndicator":"CodeableConcept","MedicinalProduct.pharmaceuticalProduct":"Reference","MedicinalProduct.productClassification":"CodeableConcept","MedicinalProduct.specialDesignation":"BackboneElement","MedicinalProduct.specialDesignation.date":"dateTime","MedicinalProduct.specialDesignation.extension":"Extension","MedicinalProduct.specialDesignation.id":"System.String","MedicinalProduct.specialDesignation.identifier":"Identifier","MedicinalProduct.specialDesignation.indicationCodeableConcept":"CodeableConcept","MedicinalProduct.specialDesignation.indicationReference":"Reference","MedicinalProduct.specialDesignation.intendedUse":"CodeableConcept","MedicinalProduct.specialDesignation.modifierExtension":"Extension","MedicinalProduct.specialDesignation.species":"CodeableConcept","MedicinalProduct.specialDesignation.status":"CodeableConcept","MedicinalProduct.specialDesignation.type":"CodeableConcept","MedicinalProduct.specialMeasures":"string","MedicinalProduct.text":"Narrative","MedicinalProduct.type":"CodeableConcept","MedicinalProductAuthorization.contained":"Resource","MedicinalProductAuthorization.country":"CodeableConcept","MedicinalProductAuthorization.dataExclusivityPeriod":"Period","MedicinalProductAuthorization.dateOfFirstAuthorization":"dateTime","MedicinalProductAuthorization.extension":"Extension","MedicinalProductAuthorization.holder":"Reference","MedicinalProductAuthorization.id":"System.String","MedicinalProductAuthorization.identifier":"Identifier","MedicinalProductAuthorization.implicitRules":"uri","MedicinalProductAuthorization.internationalBirthDate":"dateTime","MedicinalProductAuthorization.jurisdiction":"CodeableConcept","MedicinalProductAuthorization.jurisdictionalAuthorization":"BackboneElement","MedicinalProductAuthorization.jurisdictionalAuthorization.country":"CodeableConcept","MedicinalProductAuthorization.jurisdictionalAuthorization.extension":"Extension","MedicinalProductAuthorization.jurisdictionalAuthorization.id":"System.String","MedicinalProductAuthorization.jurisdictionalAuthorization.identifier":"Identifier","MedicinalProductAuthorization.jurisdictionalAuthorization.jurisdiction":"CodeableConcept","MedicinalProductAuthorization.jurisdictionalAuthorization.legalStatusOfSupply":"CodeableConcept","MedicinalProductAuthorization.jurisdictionalAuthorization.modifierExtension":"Extension","MedicinalProductAuthorization.jurisdictionalAuthorization.validityPeriod":"Period","MedicinalProductAuthorization.language":"code","MedicinalProductAuthorization.legalBasis":"CodeableConcept","MedicinalProductAuthorization.meta":"Meta","MedicinalProductAuthorization.modifierExtension":"Extension","MedicinalProductAuthorization.procedure":"BackboneElement","MedicinalProductAuthorization.procedure.dateDateTime":"dateTime","MedicinalProductAuthorization.procedure.datePeriod":"Period","MedicinalProductAuthorization.procedure.extension":"Extension","MedicinalProductAuthorization.procedure.id":"System.String","MedicinalProductAuthorization.procedure.identifier":"Identifier","MedicinalProductAuthorization.procedure.modifierExtension":"Extension","MedicinalProductAuthorization.procedure.type":"CodeableConcept","MedicinalProductAuthorization.regulator":"Reference","MedicinalProductAuthorization.restoreDate":"dateTime","MedicinalProductAuthorization.status":"CodeableConcept","MedicinalProductAuthorization.statusDate":"dateTime","MedicinalProductAuthorization.subject":"Reference","MedicinalProductAuthorization.text":"Narrative","MedicinalProductAuthorization.validityPeriod":"Period","MedicinalProductContraindication.comorbidity":"CodeableConcept","MedicinalProductContraindication.contained":"Resource","MedicinalProductContraindication.disease":"CodeableConcept","MedicinalProductContraindication.diseaseStatus":"CodeableConcept","MedicinalProductContraindication.extension":"Extension","MedicinalProductContraindication.id":"System.String","MedicinalProductContraindication.implicitRules":"uri","MedicinalProductContraindication.language":"code","MedicinalProductContraindication.meta":"Meta","MedicinalProductContraindication.modifierExtension":"Extension","MedicinalProductContraindication.otherTherapy":"BackboneElement","MedicinalProductContraindication.otherTherapy.extension":"Extension","MedicinalProductContraindication.otherTherapy.id":"System.String","MedicinalProductContraindication.otherTherapy.medicationCodeableConcept":"CodeableConcept","MedicinalProductContraindication.otherTherapy.medicationReference":"Reference","MedicinalProductContraindication.otherTherapy.modifierExtension":"Extension","MedicinalProductContraindication.otherTherapy.therapyRelationshipType":"CodeableConcept","MedicinalProductContraindication.population":"Population","MedicinalProductContraindication.subject":"Reference","MedicinalProductContraindication.text":"Narrative","MedicinalProductContraindication.therapeuticIndication":"Reference","MedicinalProductIndication.comorbidity":"CodeableConcept","MedicinalProductIndication.contained":"Resource","MedicinalProductIndication.diseaseStatus":"CodeableConcept","MedicinalProductIndication.diseaseSymptomProcedure":"CodeableConcept","MedicinalProductIndication.duration":"Quantity","MedicinalProductIndication.extension":"Extension","MedicinalProductIndication.id":"System.String","MedicinalProductIndication.implicitRules":"uri","MedicinalProductIndication.intendedEffect":"CodeableConcept","MedicinalProductIndication.language":"code","MedicinalProductIndication.meta":"Meta","MedicinalProductIndication.modifierExtension":"Extension","MedicinalProductIndication.otherTherapy":"BackboneElement","MedicinalProductIndication.otherTherapy.extension":"Extension","MedicinalProductIndication.otherTherapy.id":"System.String","MedicinalProductIndication.otherTherapy.medicationCodeableConcept":"CodeableConcept","MedicinalProductIndication.otherTherapy.medicationReference":"Reference","MedicinalProductIndication.otherTherapy.modifierExtension":"Extension","MedicinalProductIndication.otherTherapy.therapyRelationshipType":"CodeableConcept","MedicinalProductIndication.population":"Population","MedicinalProductIndication.subject":"Reference","MedicinalProductIndication.text":"Narrative","MedicinalProductIndication.undesirableEffect":"Reference","MedicinalProductIngredient.allergenicIndicator":"boolean","MedicinalProductIngredient.contained":"Resource","MedicinalProductIngredient.extension":"Extension","MedicinalProductIngredient.id":"System.String","MedicinalProductIngredient.identifier":"Identifier","MedicinalProductIngredient.implicitRules":"uri","MedicinalProductIngredient.language":"code","MedicinalProductIngredient.manufacturer":"Reference","MedicinalProductIngredient.meta":"Meta","MedicinalProductIngredient.modifierExtension":"Extension","MedicinalProductIngredient.role":"CodeableConcept","MedicinalProductIngredient.specifiedSubstance":"BackboneElement","MedicinalProductIngredient.specifiedSubstance.code":"CodeableConcept","MedicinalProductIngredient.specifiedSubstance.confidentiality":"CodeableConcept","MedicinalProductIngredient.specifiedSubstance.extension":"Extension","MedicinalProductIngredient.specifiedSubstance.group":"CodeableConcept","MedicinalProductIngredient.specifiedSubstance.id":"System.String","MedicinalProductIngredient.specifiedSubstance.modifierExtension":"Extension","MedicinalProductIngredient.specifiedSubstance.strength":"BackboneElement","MedicinalProductIngredient.specifiedSubstance.strength.concentration":"Ratio","MedicinalProductIngredient.specifiedSubstance.strength.concentrationLowLimit":"Ratio","MedicinalProductIngredient.specifiedSubstance.strength.country":"CodeableConcept","MedicinalProductIngredient.specifiedSubstance.strength.extension":"Extension","MedicinalProductIngredient.specifiedSubstance.strength.id":"System.String","MedicinalProductIngredient.specifiedSubstance.strength.measurementPoint":"string","MedicinalProductIngredient.specifiedSubstance.strength.modifierExtension":"Extension","MedicinalProductIngredient.specifiedSubstance.strength.presentation":"Ratio","MedicinalProductIngredient.specifiedSubstance.strength.presentationLowLimit":"Ratio","MedicinalProductIngredient.specifiedSubstance.strength.referenceStrength":"BackboneElement","MedicinalProductIngredient.specifiedSubstance.strength.referenceStrength.country":"CodeableConcept","MedicinalProductIngredient.specifiedSubstance.strength.referenceStrength.extension":"Extension","MedicinalProductIngredient.specifiedSubstance.strength.referenceStrength.id":"System.String","MedicinalProductIngredient.specifiedSubstance.strength.referenceStrength.measurementPoint":"string","MedicinalProductIngredient.specifiedSubstance.strength.referenceStrength.modifierExtension":"Extension","MedicinalProductIngredient.specifiedSubstance.strength.referenceStrength.strength":"Ratio","MedicinalProductIngredient.specifiedSubstance.strength.referenceStrength.strengthLowLimit":"Ratio","MedicinalProductIngredient.specifiedSubstance.strength.referenceStrength.substance":"CodeableConcept","MedicinalProductIngredient.substance":"BackboneElement","MedicinalProductIngredient.substance.code":"CodeableConcept","MedicinalProductIngredient.substance.extension":"Extension","MedicinalProductIngredient.substance.id":"System.String","MedicinalProductIngredient.substance.modifierExtension":"Extension","MedicinalProductIngredient.text":"Narrative","MedicinalProductInteraction.contained":"Resource","MedicinalProductInteraction.description":"string","MedicinalProductInteraction.effect":"CodeableConcept","MedicinalProductInteraction.extension":"Extension","MedicinalProductInteraction.id":"System.String","MedicinalProductInteraction.implicitRules":"uri","MedicinalProductInteraction.incidence":"CodeableConcept","MedicinalProductInteraction.interactant":"BackboneElement","MedicinalProductInteraction.interactant.extension":"Extension","MedicinalProductInteraction.interactant.id":"System.String","MedicinalProductInteraction.interactant.itemCodeableConcept":"CodeableConcept","MedicinalProductInteraction.interactant.itemReference":"Reference","MedicinalProductInteraction.interactant.modifierExtension":"Extension","MedicinalProductInteraction.language":"code","MedicinalProductInteraction.management":"CodeableConcept","MedicinalProductInteraction.meta":"Meta","MedicinalProductInteraction.modifierExtension":"Extension","MedicinalProductInteraction.subject":"Reference","MedicinalProductInteraction.text":"Narrative","MedicinalProductInteraction.type":"CodeableConcept","MedicinalProductManufactured.contained":"Resource","MedicinalProductManufactured.extension":"Extension","MedicinalProductManufactured.id":"System.String","MedicinalProductManufactured.implicitRules":"uri","MedicinalProductManufactured.ingredient":"Reference","MedicinalProductManufactured.language":"code","MedicinalProductManufactured.manufacturedDoseForm":"CodeableConcept","MedicinalProductManufactured.manufacturer":"Reference","MedicinalProductManufactured.meta":"Meta","MedicinalProductManufactured.modifierExtension":"Extension","MedicinalProductManufactured.otherCharacteristics":"CodeableConcept","MedicinalProductManufactured.physicalCharacteristics":"ProdCharacteristic","MedicinalProductManufactured.quantity":"Quantity","MedicinalProductManufactured.text":"Narrative","MedicinalProductManufactured.unitOfPresentation":"CodeableConcept","MedicinalProductPackaged.batchIdentifier":"BackboneElement","MedicinalProductPackaged.batchIdentifier.extension":"Extension","MedicinalProductPackaged.batchIdentifier.id":"System.String","MedicinalProductPackaged.batchIdentifier.immediatePackaging":"Identifier","MedicinalProductPackaged.batchIdentifier.modifierExtension":"Extension","MedicinalProductPackaged.batchIdentifier.outerPackaging":"Identifier","MedicinalProductPackaged.contained":"Resource","MedicinalProductPackaged.description":"string","MedicinalProductPackaged.extension":"Extension","MedicinalProductPackaged.id":"System.String","MedicinalProductPackaged.identifier":"Identifier","MedicinalProductPackaged.implicitRules":"uri","MedicinalProductPackaged.language":"code","MedicinalProductPackaged.legalStatusOfSupply":"CodeableConcept","MedicinalProductPackaged.manufacturer":"Reference","MedicinalProductPackaged.marketingAuthorization":"Reference","MedicinalProductPackaged.marketingStatus":"MarketingStatus","MedicinalProductPackaged.meta":"Meta","MedicinalProductPackaged.modifierExtension":"Extension","MedicinalProductPackaged.packageItem":"BackboneElement","MedicinalProductPackaged.packageItem.alternateMaterial":"CodeableConcept","MedicinalProductPackaged.packageItem.device":"Reference","MedicinalProductPackaged.packageItem.extension":"Extension","MedicinalProductPackaged.packageItem.id":"System.String","MedicinalProductPackaged.packageItem.identifier":"Identifier","MedicinalProductPackaged.packageItem.manufacturedItem":"Reference","MedicinalProductPackaged.packageItem.manufacturer":"Reference","MedicinalProductPackaged.packageItem.material":"CodeableConcept","MedicinalProductPackaged.packageItem.modifierExtension":"Extension","MedicinalProductPackaged.packageItem.otherCharacteristics":"CodeableConcept","MedicinalProductPackaged.packageItem.physicalCharacteristics":"ProdCharacteristic","MedicinalProductPackaged.packageItem.quantity":"Quantity","MedicinalProductPackaged.packageItem.shelfLifeStorage":"ProductShelfLife","MedicinalProductPackaged.packageItem.type":"CodeableConcept","MedicinalProductPackaged.subject":"Reference","MedicinalProductPackaged.text":"Narrative","MedicinalProductPharmaceutical.administrableDoseForm":"CodeableConcept","MedicinalProductPharmaceutical.characteristics":"BackboneElement","MedicinalProductPharmaceutical.characteristics.code":"CodeableConcept","MedicinalProductPharmaceutical.characteristics.extension":"Extension","MedicinalProductPharmaceutical.characteristics.id":"System.String","MedicinalProductPharmaceutical.characteristics.modifierExtension":"Extension","MedicinalProductPharmaceutical.characteristics.status":"CodeableConcept","MedicinalProductPharmaceutical.contained":"Resource","MedicinalProductPharmaceutical.device":"Reference","MedicinalProductPharmaceutical.extension":"Extension","MedicinalProductPharmaceutical.id":"System.String","MedicinalProductPharmaceutical.identifier":"Identifier","MedicinalProductPharmaceutical.implicitRules":"uri","MedicinalProductPharmaceutical.ingredient":"Reference","MedicinalProductPharmaceutical.language":"code","MedicinalProductPharmaceutical.meta":"Meta","MedicinalProductPharmaceutical.modifierExtension":"Extension","MedicinalProductPharmaceutical.routeOfAdministration":"BackboneElement","MedicinalProductPharmaceutical.routeOfAdministration.code":"CodeableConcept","MedicinalProductPharmaceutical.routeOfAdministration.extension":"Extension","MedicinalProductPharmaceutical.routeOfAdministration.firstDose":"Quantity","MedicinalProductPharmaceutical.routeOfAdministration.id":"System.String","MedicinalProductPharmaceutical.routeOfAdministration.maxDosePerDay":"Quantity","MedicinalProductPharmaceutical.routeOfAdministration.maxDosePerTreatmentPeriod":"Ratio","MedicinalProductPharmaceutical.routeOfAdministration.maxSingleDose":"Quantity","MedicinalProductPharmaceutical.routeOfAdministration.maxTreatmentPeriod":"Duration","MedicinalProductPharmaceutical.routeOfAdministration.modifierExtension":"Extension","MedicinalProductPharmaceutical.routeOfAdministration.targetSpecies":"BackboneElement","MedicinalProductPharmaceutical.routeOfAdministration.targetSpecies.code":"CodeableConcept","MedicinalProductPharmaceutical.routeOfAdministration.targetSpecies.extension":"Extension","MedicinalProductPharmaceutical.routeOfAdministration.targetSpecies.id":"System.String","MedicinalProductPharmaceutical.routeOfAdministration.targetSpecies.modifierExtension":"Extension","MedicinalProductPharmaceutical.routeOfAdministration.targetSpecies.withdrawalPeriod":"BackboneElement","MedicinalProductPharmaceutical.routeOfAdministration.targetSpecies.withdrawalPeriod.extension":"Extension","MedicinalProductPharmaceutical.routeOfAdministration.targetSpecies.withdrawalPeriod.id":"System.String","MedicinalProductPharmaceutical.routeOfAdministration.targetSpecies.withdrawalPeriod.modifierExtension":"Extension","MedicinalProductPharmaceutical.routeOfAdministration.targetSpecies.withdrawalPeriod.supportingInformation":"string","MedicinalProductPharmaceutical.routeOfAdministration.targetSpecies.withdrawalPeriod.tissue":"CodeableConcept","MedicinalProductPharmaceutical.routeOfAdministration.targetSpecies.withdrawalPeriod.value":"Quantity","MedicinalProductPharmaceutical.text":"Narrative","MedicinalProductPharmaceutical.unitOfPresentation":"CodeableConcept","MedicinalProductUndesirableEffect.classification":"CodeableConcept","MedicinalProductUndesirableEffect.contained":"Resource","MedicinalProductUndesirableEffect.extension":"Extension","MedicinalProductUndesirableEffect.frequencyOfOccurrence":"CodeableConcept","MedicinalProductUndesirableEffect.id":"System.String","MedicinalProductUndesirableEffect.implicitRules":"uri","MedicinalProductUndesirableEffect.language":"code","MedicinalProductUndesirableEffect.meta":"Meta","MedicinalProductUndesirableEffect.modifierExtension":"Extension","MedicinalProductUndesirableEffect.population":"Population","MedicinalProductUndesirableEffect.subject":"Reference","MedicinalProductUndesirableEffect.symptomConditionEffect":"CodeableConcept","MedicinalProductUndesirableEffect.text":"Narrative","MessageDefinition.allowedResponse":"BackboneElement","MessageDefinition.allowedResponse.extension":"Extension","MessageDefinition.allowedResponse.id":"System.String","MessageDefinition.allowedResponse.message":"canonical","MessageDefinition.allowedResponse.modifierExtension":"Extension","MessageDefinition.allowedResponse.situation":"markdown","MessageDefinition.base":"canonical","MessageDefinition.category":"code","MessageDefinition.contact":"ContactDetail","MessageDefinition.contained":"Resource","MessageDefinition.copyright":"markdown","MessageDefinition.date":"dateTime","MessageDefinition.description":"markdown","MessageDefinition.eventCoding":"Coding","MessageDefinition.eventUri":"uri","MessageDefinition.experimental":"boolean","MessageDefinition.extension":"Extension","MessageDefinition.focus":"BackboneElement","MessageDefinition.focus.code":"code","MessageDefinition.focus.extension":"Extension","MessageDefinition.focus.id":"System.String","MessageDefinition.focus.max":"string","MessageDefinition.focus.min":"unsignedInt","MessageDefinition.focus.modifierExtension":"Extension","MessageDefinition.focus.profile":"canonical","MessageDefinition.graph":"canonical","MessageDefinition.id":"System.String","MessageDefinition.identifier":"Identifier","MessageDefinition.implicitRules":"uri","MessageDefinition.jurisdiction":"CodeableConcept","MessageDefinition.language":"code","MessageDefinition.meta":"Meta","MessageDefinition.modifierExtension":"Extension","MessageDefinition.name":"string","MessageDefinition.parent":"canonical","MessageDefinition.publisher":"string","MessageDefinition.purpose":"markdown","MessageDefinition.replaces":"canonical","MessageDefinition.responseRequired":"code","MessageDefinition.status":"code","MessageDefinition.text":"Narrative","MessageDefinition.title":"string","MessageDefinition.url":"uri","MessageDefinition.useContext":"UsageContext","MessageDefinition.version":"string","MessageHeader.author":"Reference","MessageHeader.contained":"Resource","MessageHeader.definition":"canonical","MessageHeader.destination":"BackboneElement","MessageHeader.destination.endpoint":"url","MessageHeader.destination.extension":"Extension","MessageHeader.destination.id":"System.String","MessageHeader.destination.modifierExtension":"Extension","MessageHeader.destination.name":"string","MessageHeader.destination.receiver":"Reference","MessageHeader.destination.target":"Reference","MessageHeader.enterer":"Reference","MessageHeader.eventCoding":"Coding","MessageHeader.eventUri":"uri","MessageHeader.extension":"Extension","MessageHeader.focus":"Reference","MessageHeader.id":"System.String","MessageHeader.implicitRules":"uri","MessageHeader.language":"code","MessageHeader.meta":"Meta","MessageHeader.modifierExtension":"Extension","MessageHeader.reason":"CodeableConcept","MessageHeader.response":"BackboneElement","MessageHeader.response.code":"code","MessageHeader.response.details":"Reference","MessageHeader.response.extension":"Extension","MessageHeader.response.id":"System.String","MessageHeader.response.identifier":"id","MessageHeader.response.modifierExtension":"Extension","MessageHeader.responsible":"Reference","MessageHeader.sender":"Reference","MessageHeader.source":"BackboneElement","MessageHeader.source.contact":"ContactPoint","MessageHeader.source.endpoint":"url","MessageHeader.source.extension":"Extension","MessageHeader.source.id":"System.String","MessageHeader.source.modifierExtension":"Extension","MessageHeader.source.name":"string","MessageHeader.source.software":"string","MessageHeader.source.version":"string","MessageHeader.text":"Narrative","Meta.extension":"Extension","Meta.id":"System.String","Meta.lastUpdated":"instant","Meta.profile":"canonical","Meta.security":"Coding","Meta.source":"uri","Meta.tag":"Coding","Meta.versionId":"id","MetadataResource.contact":"ContactDetail","MetadataResource.contained":"Resource","MetadataResource.date":"dateTime","MetadataResource.description":"markdown","MetadataResource.experimental":"boolean","MetadataResource.extension":"Extension","MetadataResource.id":"System.String","MetadataResource.implicitRules":"uri","MetadataResource.jurisdiction":"CodeableConcept","MetadataResource.language":"code","MetadataResource.meta":"Meta","MetadataResource.modifierExtension":"Extension","MetadataResource.name":"string","MetadataResource.publisher":"string","MetadataResource.status":"code","MetadataResource.text":"Narrative","MetadataResource.title":"string","MetadataResource.url":"uri","MetadataResource.useContext":"UsageContext","MetadataResource.version":"string","MolecularSequence.contained":"Resource","MolecularSequence.coordinateSystem":"integer","MolecularSequence.device":"Reference","MolecularSequence.extension":"Extension","MolecularSequence.id":"System.String","MolecularSequence.identifier":"Identifier","MolecularSequence.implicitRules":"uri","MolecularSequence.language":"code","MolecularSequence.meta":"Meta","MolecularSequence.modifierExtension":"Extension","MolecularSequence.observedSeq":"string","MolecularSequence.patient":"Reference","MolecularSequence.performer":"Reference","MolecularSequence.pointer":"Reference","MolecularSequence.quality":"BackboneElement","MolecularSequence.quality.end":"integer","MolecularSequence.quality.extension":"Extension","MolecularSequence.quality.fScore":"decimal","MolecularSequence.quality.gtFP":"decimal","MolecularSequence.quality.id":"System.String","MolecularSequence.quality.method":"CodeableConcept","MolecularSequence.quality.modifierExtension":"Extension","MolecularSequence.quality.precision":"decimal","MolecularSequence.quality.queryFP":"decimal","MolecularSequence.quality.queryTP":"decimal","MolecularSequence.quality.recall":"decimal","MolecularSequence.quality.roc":"BackboneElement","MolecularSequence.quality.roc.extension":"Extension","MolecularSequence.quality.roc.fMeasure":"decimal","MolecularSequence.quality.roc.id":"System.String","MolecularSequence.quality.roc.modifierExtension":"Extension","MolecularSequence.quality.roc.numFN":"integer","MolecularSequence.quality.roc.numFP":"integer","MolecularSequence.quality.roc.numTP":"integer","MolecularSequence.quality.roc.precision":"decimal","MolecularSequence.quality.roc.score":"integer","MolecularSequence.quality.roc.sensitivity":"decimal","MolecularSequence.quality.score":"Quantity","MolecularSequence.quality.standardSequence":"CodeableConcept","MolecularSequence.quality.start":"integer","MolecularSequence.quality.truthFN":"decimal","MolecularSequence.quality.truthTP":"decimal","MolecularSequence.quality.type":"code","MolecularSequence.quantity":"Quantity","MolecularSequence.readCoverage":"integer","MolecularSequence.referenceSeq":"BackboneElement","MolecularSequence.referenceSeq.chromosome":"CodeableConcept","MolecularSequence.referenceSeq.extension":"Extension","MolecularSequence.referenceSeq.genomeBuild":"string","MolecularSequence.referenceSeq.id":"System.String","MolecularSequence.referenceSeq.modifierExtension":"Extension","MolecularSequence.referenceSeq.orientation":"code","MolecularSequence.referenceSeq.referenceSeqId":"CodeableConcept","MolecularSequence.referenceSeq.referenceSeqPointer":"Reference","MolecularSequence.referenceSeq.referenceSeqString":"string","MolecularSequence.referenceSeq.strand":"code","MolecularSequence.referenceSeq.windowEnd":"integer","MolecularSequence.referenceSeq.windowStart":"integer","MolecularSequence.repository":"BackboneElement","MolecularSequence.repository.datasetId":"string","MolecularSequence.repository.extension":"Extension","MolecularSequence.repository.id":"System.String","MolecularSequence.repository.modifierExtension":"Extension","MolecularSequence.repository.name":"string","MolecularSequence.repository.readsetId":"string","MolecularSequence.repository.type":"code","MolecularSequence.repository.url":"uri","MolecularSequence.repository.variantsetId":"string","MolecularSequence.specimen":"Reference","MolecularSequence.structureVariant":"BackboneElement","MolecularSequence.structureVariant.exact":"boolean","MolecularSequence.structureVariant.extension":"Extension","MolecularSequence.structureVariant.id":"System.String","MolecularSequence.structureVariant.inner":"BackboneElement","MolecularSequence.structureVariant.inner.end":"integer","MolecularSequence.structureVariant.inner.extension":"Extension","MolecularSequence.structureVariant.inner.id":"System.String","MolecularSequence.structureVariant.inner.modifierExtension":"Extension","MolecularSequence.structureVariant.inner.start":"integer","MolecularSequence.structureVariant.length":"integer","MolecularSequence.structureVariant.modifierExtension":"Extension","MolecularSequence.structureVariant.outer":"BackboneElement","MolecularSequence.structureVariant.outer.end":"integer","MolecularSequence.structureVariant.outer.extension":"Extension","MolecularSequence.structureVariant.outer.id":"System.String","MolecularSequence.structureVariant.outer.modifierExtension":"Extension","MolecularSequence.structureVariant.outer.start":"integer","MolecularSequence.structureVariant.variantType":"CodeableConcept","MolecularSequence.text":"Narrative","MolecularSequence.type":"code","MolecularSequence.variant":"BackboneElement","MolecularSequence.variant.cigar":"string","MolecularSequence.variant.end":"integer","MolecularSequence.variant.extension":"Extension","MolecularSequence.variant.id":"System.String","MolecularSequence.variant.modifierExtension":"Extension","MolecularSequence.variant.observedAllele":"string","MolecularSequence.variant.referenceAllele":"string","MolecularSequence.variant.start":"integer","MolecularSequence.variant.variantPointer":"Reference","Money.currency":"code","Money.extension":"Extension","Money.id":"System.String","Money.value":"decimal","NamingSystem.contact":"ContactDetail","NamingSystem.contained":"Resource","NamingSystem.date":"dateTime","NamingSystem.description":"markdown","NamingSystem.extension":"Extension","NamingSystem.id":"System.String","NamingSystem.implicitRules":"uri","NamingSystem.jurisdiction":"CodeableConcept","NamingSystem.kind":"code","NamingSystem.language":"code","NamingSystem.meta":"Meta","NamingSystem.modifierExtension":"Extension","NamingSystem.name":"string","NamingSystem.publisher":"string","NamingSystem.responsible":"string","NamingSystem.status":"code","NamingSystem.text":"Narrative","NamingSystem.type":"CodeableConcept","NamingSystem.uniqueId":"BackboneElement","NamingSystem.uniqueId.comment":"string","NamingSystem.uniqueId.extension":"Extension","NamingSystem.uniqueId.id":"System.String","NamingSystem.uniqueId.modifierExtension":"Extension","NamingSystem.uniqueId.period":"Period","NamingSystem.uniqueId.preferred":"boolean","NamingSystem.uniqueId.type":"code","NamingSystem.uniqueId.value":"string","NamingSystem.usage":"string","NamingSystem.useContext":"UsageContext","Narrative.div":"xhtml","Narrative.extension":"Extension","Narrative.id":"System.String","Narrative.status":"code","NutritionOrder.allergyIntolerance":"Reference","NutritionOrder.contained":"Resource","NutritionOrder.dateTime":"dateTime","NutritionOrder.encounter":"Reference","NutritionOrder.enteralFormula":"BackboneElement","NutritionOrder.enteralFormula.additiveProductName":"string","NutritionOrder.enteralFormula.additiveType":"CodeableConcept","NutritionOrder.enteralFormula.administration":"BackboneElement","NutritionOrder.enteralFormula.administration.extension":"Extension","NutritionOrder.enteralFormula.administration.id":"System.String","NutritionOrder.enteralFormula.administration.modifierExtension":"Extension","NutritionOrder.enteralFormula.administration.quantity":"Quantity","NutritionOrder.enteralFormula.administration.rateQuantity":"Quantity","NutritionOrder.enteralFormula.administration.rateRatio":"Ratio","NutritionOrder.enteralFormula.administration.schedule":"Timing","NutritionOrder.enteralFormula.administrationInstruction":"string","NutritionOrder.enteralFormula.baseFormulaProductName":"string","NutritionOrder.enteralFormula.baseFormulaType":"CodeableConcept","NutritionOrder.enteralFormula.caloricDensity":"Quantity","NutritionOrder.enteralFormula.extension":"Extension","NutritionOrder.enteralFormula.id":"System.String","NutritionOrder.enteralFormula.maxVolumeToDeliver":"Quantity","NutritionOrder.enteralFormula.modifierExtension":"Extension","NutritionOrder.enteralFormula.routeofAdministration":"CodeableConcept","NutritionOrder.excludeFoodModifier":"CodeableConcept","NutritionOrder.extension":"Extension","NutritionOrder.foodPreferenceModifier":"CodeableConcept","NutritionOrder.id":"System.String","NutritionOrder.identifier":"Identifier","NutritionOrder.implicitRules":"uri","NutritionOrder.instantiates":"uri","NutritionOrder.instantiatesCanonical":"canonical","NutritionOrder.instantiatesUri":"uri","NutritionOrder.intent":"code","NutritionOrder.language":"code","NutritionOrder.meta":"Meta","NutritionOrder.modifierExtension":"Extension","NutritionOrder.note":"Annotation","NutritionOrder.oralDiet":"BackboneElement","NutritionOrder.oralDiet.extension":"Extension","NutritionOrder.oralDiet.fluidConsistencyType":"CodeableConcept","NutritionOrder.oralDiet.id":"System.String","NutritionOrder.oralDiet.instruction":"string","NutritionOrder.oralDiet.modifierExtension":"Extension","NutritionOrder.oralDiet.nutrient":"BackboneElement","NutritionOrder.oralDiet.nutrient.amount":"Quantity","NutritionOrder.oralDiet.nutrient.extension":"Extension","NutritionOrder.oralDiet.nutrient.id":"System.String","NutritionOrder.oralDiet.nutrient.modifier":"CodeableConcept","NutritionOrder.oralDiet.nutrient.modifierExtension":"Extension","NutritionOrder.oralDiet.schedule":"Timing","NutritionOrder.oralDiet.texture":"BackboneElement","NutritionOrder.oralDiet.texture.extension":"Extension","NutritionOrder.oralDiet.texture.foodType":"CodeableConcept","NutritionOrder.oralDiet.texture.id":"System.String","NutritionOrder.oralDiet.texture.modifier":"CodeableConcept","NutritionOrder.oralDiet.texture.modifierExtension":"Extension","NutritionOrder.oralDiet.type":"CodeableConcept","NutritionOrder.orderer":"Reference","NutritionOrder.patient":"Reference","NutritionOrder.status":"code","NutritionOrder.supplement":"BackboneElement","NutritionOrder.supplement.extension":"Extension","NutritionOrder.supplement.id":"System.String","NutritionOrder.supplement.instruction":"string","NutritionOrder.supplement.modifierExtension":"Extension","NutritionOrder.supplement.productName":"string","NutritionOrder.supplement.quantity":"Quantity","NutritionOrder.supplement.schedule":"Timing","NutritionOrder.supplement.type":"CodeableConcept","NutritionOrder.text":"Narrative","Observation.basedOn":"Reference","Observation.bodySite":"CodeableConcept","Observation.category":"CodeableConcept","Observation.code":"CodeableConcept","Observation.component":"BackboneElement","Observation.component.code":"CodeableConcept","Observation.component.dataAbsentReason":"CodeableConcept","Observation.component.extension":"Extension","Observation.component.id":"System.String","Observation.component.interpretation":"CodeableConcept","Observation.component.modifierExtension":"Extension","Observation.component.valueBoolean":"boolean","Observation.component.valueCodeableConcept":"CodeableConcept","Observation.component.valueDateTime":"dateTime","Observation.component.valueInteger":"integer","Observation.component.valuePeriod":"Period","Observation.component.valueQuantity":"Quantity","Observation.component.valueRange":"Range","Observation.component.valueRatio":"Ratio","Observation.component.valueSampledData":"SampledData","Observation.component.valueString":"string","Observation.component.valueTime":"time","Observation.contained":"Resource","Observation.dataAbsentReason":"CodeableConcept","Observation.derivedFrom":"Reference","Observation.device":"Reference","Observation.effectiveDateTime":"dateTime","Observation.effectiveInstant":"instant","Observation.effectivePeriod":"Period","Observation.effectiveTiming":"Timing","Observation.encounter":"Reference","Observation.extension":"Extension","Observation.focus":"Reference","Observation.hasMember":"Reference","Observation.id":"System.String","Observation.identifier":"Identifier","Observation.implicitRules":"uri","Observation.interpretation":"CodeableConcept","Observation.issued":"instant","Observation.language":"code","Observation.meta":"Meta","Observation.method":"CodeableConcept","Observation.modifierExtension":"Extension","Observation.note":"Annotation","Observation.partOf":"Reference","Observation.performer":"Reference","Observation.referenceRange":"BackboneElement","Observation.referenceRange.age":"Range","Observation.referenceRange.appliesTo":"CodeableConcept","Observation.referenceRange.extension":"Extension","Observation.referenceRange.high":"Quantity","Observation.referenceRange.id":"System.String","Observation.referenceRange.low":"Quantity","Observation.referenceRange.modifierExtension":"Extension","Observation.referenceRange.text":"string","Observation.referenceRange.type":"CodeableConcept","Observation.specimen":"Reference","Observation.status":"code","Observation.subject":"Reference","Observation.text":"Narrative","Observation.valueBoolean":"boolean","Observation.valueCodeableConcept":"CodeableConcept","Observation.valueDateTime":"dateTime","Observation.valueInteger":"integer","Observation.valuePeriod":"Period","Observation.valueQuantity":"Quantity","Observation.valueRange":"Range","Observation.valueRatio":"Ratio","Observation.valueSampledData":"SampledData","Observation.valueString":"string","Observation.valueTime":"time","ObservationDefinition.abnormalCodedValueSet":"Reference","ObservationDefinition.category":"CodeableConcept","ObservationDefinition.code":"CodeableConcept","ObservationDefinition.contained":"Resource","ObservationDefinition.criticalCodedValueSet":"Reference","ObservationDefinition.extension":"Extension","ObservationDefinition.id":"System.String","ObservationDefinition.identifier":"Identifier","ObservationDefinition.implicitRules":"uri","ObservationDefinition.language":"code","ObservationDefinition.meta":"Meta","ObservationDefinition.method":"CodeableConcept","ObservationDefinition.modifierExtension":"Extension","ObservationDefinition.multipleResultsAllowed":"boolean","ObservationDefinition.normalCodedValueSet":"Reference","ObservationDefinition.permittedDataType":"code","ObservationDefinition.preferredReportName":"string","ObservationDefinition.qualifiedInterval":"BackboneElement","ObservationDefinition.qualifiedInterval.age":"Range","ObservationDefinition.qualifiedInterval.appliesTo":"CodeableConcept","ObservationDefinition.qualifiedInterval.category":"code","ObservationDefinition.qualifiedInterval.condition":"string","ObservationDefinition.qualifiedInterval.context":"CodeableConcept","ObservationDefinition.qualifiedInterval.extension":"Extension","ObservationDefinition.qualifiedInterval.gender":"code","ObservationDefinition.qualifiedInterval.gestationalAge":"Range","ObservationDefinition.qualifiedInterval.id":"System.String","ObservationDefinition.qualifiedInterval.modifierExtension":"Extension","ObservationDefinition.qualifiedInterval.range":"Range","ObservationDefinition.quantitativeDetails":"BackboneElement","ObservationDefinition.quantitativeDetails.conversionFactor":"decimal","ObservationDefinition.quantitativeDetails.customaryUnit":"CodeableConcept","ObservationDefinition.quantitativeDetails.decimalPrecision":"integer","ObservationDefinition.quantitativeDetails.extension":"Extension","ObservationDefinition.quantitativeDetails.id":"System.String","ObservationDefinition.quantitativeDetails.modifierExtension":"Extension","ObservationDefinition.quantitativeDetails.unit":"CodeableConcept","ObservationDefinition.text":"Narrative","ObservationDefinition.validCodedValueSet":"Reference","OperationDefinition.affectsState":"boolean","OperationDefinition.base":"canonical","OperationDefinition.code":"code","OperationDefinition.comment":"markdown","OperationDefinition.contact":"ContactDetail","OperationDefinition.contained":"Resource","OperationDefinition.date":"dateTime","OperationDefinition.description":"markdown","OperationDefinition.experimental":"boolean","OperationDefinition.extension":"Extension","OperationDefinition.id":"System.String","OperationDefinition.implicitRules":"uri","OperationDefinition.inputProfile":"canonical","OperationDefinition.instance":"boolean","OperationDefinition.jurisdiction":"CodeableConcept","OperationDefinition.kind":"code","OperationDefinition.language":"code","OperationDefinition.meta":"Meta","OperationDefinition.modifierExtension":"Extension","OperationDefinition.name":"string","OperationDefinition.outputProfile":"canonical","OperationDefinition.overload":"BackboneElement","OperationDefinition.overload.comment":"string","OperationDefinition.overload.extension":"Extension","OperationDefinition.overload.id":"System.String","OperationDefinition.overload.modifierExtension":"Extension","OperationDefinition.overload.parameterName":"string","OperationDefinition.parameter":"BackboneElement","OperationDefinition.parameter.binding":"BackboneElement","OperationDefinition.parameter.binding.extension":"Extension","OperationDefinition.parameter.binding.id":"System.String","OperationDefinition.parameter.binding.modifierExtension":"Extension","OperationDefinition.parameter.binding.strength":"code","OperationDefinition.parameter.binding.valueSet":"canonical","OperationDefinition.parameter.documentation":"string","OperationDefinition.parameter.extension":"Extension","OperationDefinition.parameter.id":"System.String","OperationDefinition.parameter.max":"string","OperationDefinition.parameter.min":"integer","OperationDefinition.parameter.modifierExtension":"Extension","OperationDefinition.parameter.name":"code","OperationDefinition.parameter.referencedFrom":"BackboneElement","OperationDefinition.parameter.referencedFrom.extension":"Extension","OperationDefinition.parameter.referencedFrom.id":"System.String","OperationDefinition.parameter.referencedFrom.modifierExtension":"Extension","OperationDefinition.parameter.referencedFrom.source":"string","OperationDefinition.parameter.referencedFrom.sourceId":"string","OperationDefinition.parameter.searchType":"code","OperationDefinition.parameter.targetProfile":"canonical","OperationDefinition.parameter.type":"code","OperationDefinition.parameter.use":"code","OperationDefinition.publisher":"string","OperationDefinition.purpose":"markdown","OperationDefinition.resource":"code","OperationDefinition.status":"code","OperationDefinition.system":"boolean","OperationDefinition.text":"Narrative","OperationDefinition.title":"string","OperationDefinition.type":"boolean","OperationDefinition.url":"uri","OperationDefinition.useContext":"UsageContext","OperationDefinition.version":"string","OperationOutcome.contained":"Resource","OperationOutcome.extension":"Extension","OperationOutcome.id":"System.String","OperationOutcome.implicitRules":"uri","OperationOutcome.issue":"BackboneElement","OperationOutcome.issue.code":"code","OperationOutcome.issue.details":"CodeableConcept","OperationOutcome.issue.diagnostics":"string","OperationOutcome.issue.expression":"string","OperationOutcome.issue.extension":"Extension","OperationOutcome.issue.id":"System.String","OperationOutcome.issue.location":"string","OperationOutcome.issue.modifierExtension":"Extension","OperationOutcome.issue.severity":"code","OperationOutcome.language":"code","OperationOutcome.meta":"Meta","OperationOutcome.modifierExtension":"Extension","OperationOutcome.text":"Narrative","Organization.active":"boolean","Organization.address":"Address","Organization.alias":"string","Organization.contact":"BackboneElement","Organization.contact.address":"Address","Organization.contact.extension":"Extension","Organization.contact.id":"System.String","Organization.contact.modifierExtension":"Extension","Organization.contact.name":"HumanName","Organization.contact.purpose":"CodeableConcept","Organization.contact.telecom":"ContactPoint","Organization.contained":"Resource","Organization.endpoint":"Reference","Organization.extension":"Extension","Organization.id":"System.String","Organization.identifier":"Identifier","Organization.implicitRules":"uri","Organization.language":"code","Organization.meta":"Meta","Organization.modifierExtension":"Extension","Organization.name":"string","Organization.partOf":"Reference","Organization.telecom":"ContactPoint","Organization.text":"Narrative","Organization.type":"CodeableConcept","OrganizationAffiliation.active":"boolean","OrganizationAffiliation.code":"CodeableConcept","OrganizationAffiliation.contained":"Resource","OrganizationAffiliation.endpoint":"Reference","OrganizationAffiliation.extension":"Extension","OrganizationAffiliation.healthcareService":"Reference","OrganizationAffiliation.id":"System.String","OrganizationAffiliation.identifier":"Identifier","OrganizationAffiliation.implicitRules":"uri","OrganizationAffiliation.language":"code","OrganizationAffiliation.location":"Reference","OrganizationAffiliation.meta":"Meta","OrganizationAffiliation.modifierExtension":"Extension","OrganizationAffiliation.network":"Reference","OrganizationAffiliation.organization":"Reference","OrganizationAffiliation.participatingOrganization":"Reference","OrganizationAffiliation.period":"Period","OrganizationAffiliation.specialty":"CodeableConcept","OrganizationAffiliation.telecom":"ContactPoint","OrganizationAffiliation.text":"Narrative","ParameterDefinition.documentation":"string","ParameterDefinition.extension":"Extension","ParameterDefinition.id":"System.String","ParameterDefinition.max":"string","ParameterDefinition.min":"integer","ParameterDefinition.name":"code","ParameterDefinition.profile":"canonical","ParameterDefinition.type":"code","ParameterDefinition.use":"code","Parameters.id":"System.String","Parameters.implicitRules":"uri","Parameters.language":"code","Parameters.meta":"Meta","Parameters.parameter":"BackboneElement","Parameters.parameter.extension":"Extension","Parameters.parameter.id":"System.String","Parameters.parameter.modifierExtension":"Extension","Parameters.parameter.name":"string","Parameters.parameter.resource":"Resource","Parameters.parameter.valueAddress":"Address","Parameters.parameter.valueAge":"Age","Parameters.parameter.valueAnnotation":"Annotation","Parameters.parameter.valueAttachment":"Attachment","Parameters.parameter.valueBase64Binary":"base64Binary","Parameters.parameter.valueBoolean":"boolean","Parameters.parameter.valueCanonical":"canonical","Parameters.parameter.valueCode":"code","Parameters.parameter.valueCodeableConcept":"CodeableConcept","Parameters.parameter.valueCoding":"Coding","Parameters.parameter.valueContactDetail":"ContactDetail","Parameters.parameter.valueContactPoint":"ContactPoint","Parameters.parameter.valueContributor":"Contributor","Parameters.parameter.valueCount":"Count","Parameters.parameter.valueDataRequirement":"DataRequirement","Parameters.parameter.valueDate":"date","Parameters.parameter.valueDateTime":"dateTime","Parameters.parameter.valueDecimal":"decimal","Parameters.parameter.valueDistance":"Distance","Parameters.parameter.valueDosage":"Dosage","Parameters.parameter.valueDuration":"Duration","Parameters.parameter.valueExpression":"Expression","Parameters.parameter.valueHumanName":"HumanName","Parameters.parameter.valueId":"id","Parameters.parameter.valueIdentifier":"Identifier","Parameters.parameter.valueInstant":"instant","Parameters.parameter.valueInteger":"integer","Parameters.parameter.valueMarkdown":"markdown","Parameters.parameter.valueMeta":"Meta","Parameters.parameter.valueMoney":"Money","Parameters.parameter.valueOid":"oid","Parameters.parameter.valueParameterDefinition":"ParameterDefinition","Parameters.parameter.valuePeriod":"Period","Parameters.parameter.valuePositiveInt":"positiveInt","Parameters.parameter.valueQuantity":"Quantity","Parameters.parameter.valueRange":"Range","Parameters.parameter.valueRatio":"Ratio","Parameters.parameter.valueReference":"Reference","Parameters.parameter.valueRelatedArtifact":"RelatedArtifact","Parameters.parameter.valueSampledData":"SampledData","Parameters.parameter.valueSignature":"Signature","Parameters.parameter.valueString":"string","Parameters.parameter.valueTime":"time","Parameters.parameter.valueTiming":"Timing","Parameters.parameter.valueTriggerDefinition":"TriggerDefinition","Parameters.parameter.valueUnsignedInt":"unsignedInt","Parameters.parameter.valueUri":"uri","Parameters.parameter.valueUrl":"url","Parameters.parameter.valueUsageContext":"UsageContext","Parameters.parameter.valueUuid":"uuid","Patient.active":"boolean","Patient.address":"Address","Patient.birthDate":"date","Patient.communication":"BackboneElement","Patient.communication.extension":"Extension","Patient.communication.id":"System.String","Patient.communication.language":"CodeableConcept","Patient.communication.modifierExtension":"Extension","Patient.communication.preferred":"boolean","Patient.contact":"BackboneElement","Patient.contact.address":"Address","Patient.contact.extension":"Extension","Patient.contact.gender":"code","Patient.contact.id":"System.String","Patient.contact.modifierExtension":"Extension","Patient.contact.name":"HumanName","Patient.contact.organization":"Reference","Patient.contact.period":"Period","Patient.contact.relationship":"CodeableConcept","Patient.contact.telecom":"ContactPoint","Patient.contained":"Resource","Patient.deceasedBoolean":"boolean","Patient.deceasedDateTime":"dateTime","Patient.extension":"Extension","Patient.gender":"code","Patient.generalPractitioner":"Reference","Patient.id":"System.String","Patient.identifier":"Identifier","Patient.implicitRules":"uri","Patient.language":"code","Patient.link":"BackboneElement","Patient.link.extension":"Extension","Patient.link.id":"System.String","Patient.link.modifierExtension":"Extension","Patient.link.other":"Reference","Patient.link.type":"code","Patient.managingOrganization":"Reference","Patient.maritalStatus":"CodeableConcept","Patient.meta":"Meta","Patient.modifierExtension":"Extension","Patient.multipleBirthBoolean":"boolean","Patient.multipleBirthInteger":"integer","Patient.name":"HumanName","Patient.photo":"Attachment","Patient.telecom":"ContactPoint","Patient.text":"Narrative","PaymentNotice.amount":"Money","PaymentNotice.contained":"Resource","PaymentNotice.created":"dateTime","PaymentNotice.extension":"Extension","PaymentNotice.id":"System.String","PaymentNotice.identifier":"Identifier","PaymentNotice.implicitRules":"uri","PaymentNotice.language":"code","PaymentNotice.meta":"Meta","PaymentNotice.modifierExtension":"Extension","PaymentNotice.payee":"Reference","PaymentNotice.payment":"Reference","PaymentNotice.paymentDate":"date","PaymentNotice.paymentStatus":"CodeableConcept","PaymentNotice.provider":"Reference","PaymentNotice.recipient":"Reference","PaymentNotice.request":"Reference","PaymentNotice.response":"Reference","PaymentNotice.status":"code","PaymentNotice.text":"Narrative","PaymentReconciliation.contained":"Resource","PaymentReconciliation.created":"dateTime","PaymentReconciliation.detail":"BackboneElement","PaymentReconciliation.detail.amount":"Money","PaymentReconciliation.detail.date":"date","PaymentReconciliation.detail.extension":"Extension","PaymentReconciliation.detail.id":"System.String","PaymentReconciliation.detail.identifier":"Identifier","PaymentReconciliation.detail.modifierExtension":"Extension","PaymentReconciliation.detail.payee":"Reference","PaymentReconciliation.detail.predecessor":"Identifier","PaymentReconciliation.detail.request":"Reference","PaymentReconciliation.detail.response":"Reference","PaymentReconciliation.detail.responsible":"Reference","PaymentReconciliation.detail.submitter":"Reference","PaymentReconciliation.detail.type":"CodeableConcept","PaymentReconciliation.disposition":"string","PaymentReconciliation.extension":"Extension","PaymentReconciliation.formCode":"CodeableConcept","PaymentReconciliation.id":"System.String","PaymentReconciliation.identifier":"Identifier","PaymentReconciliation.implicitRules":"uri","PaymentReconciliation.language":"code","PaymentReconciliation.meta":"Meta","PaymentReconciliation.modifierExtension":"Extension","PaymentReconciliation.outcome":"code","PaymentReconciliation.paymentAmount":"Money","PaymentReconciliation.paymentDate":"date","PaymentReconciliation.paymentIdentifier":"Identifier","PaymentReconciliation.paymentIssuer":"Reference","PaymentReconciliation.period":"Period","PaymentReconciliation.processNote":"BackboneElement","PaymentReconciliation.processNote.extension":"Extension","PaymentReconciliation.processNote.id":"System.String","PaymentReconciliation.processNote.modifierExtension":"Extension","PaymentReconciliation.processNote.text":"string","PaymentReconciliation.processNote.type":"code","PaymentReconciliation.request":"Reference","PaymentReconciliation.requestor":"Reference","PaymentReconciliation.status":"code","PaymentReconciliation.text":"Narrative","Period.end":"dateTime","Period.extension":"Extension","Period.id":"System.String","Period.start":"dateTime","Person.active":"boolean","Person.address":"Address","Person.birthDate":"date","Person.contained":"Resource","Person.extension":"Extension","Person.gender":"code","Person.id":"System.String","Person.identifier":"Identifier","Person.implicitRules":"uri","Person.language":"code","Person.link":"BackboneElement","Person.link.assurance":"code","Person.link.extension":"Extension","Person.link.id":"System.String","Person.link.modifierExtension":"Extension","Person.link.target":"Reference","Person.managingOrganization":"Reference","Person.meta":"Meta","Person.modifierExtension":"Extension","Person.name":"HumanName","Person.photo":"Attachment","Person.telecom":"ContactPoint","Person.text":"Narrative","PlanDefinition.action":"BackboneElement","PlanDefinition.action.cardinalityBehavior":"code","PlanDefinition.action.code":"CodeableConcept","PlanDefinition.action.condition":"BackboneElement","PlanDefinition.action.condition.expression":"Expression","PlanDefinition.action.condition.extension":"Extension","PlanDefinition.action.condition.id":"System.String","PlanDefinition.action.condition.kind":"code","PlanDefinition.action.condition.modifierExtension":"Extension","PlanDefinition.action.definitionCanonical":"canonical","PlanDefinition.action.definitionUri":"uri","PlanDefinition.action.description":"string","PlanDefinition.action.documentation":"RelatedArtifact","PlanDefinition.action.dynamicValue":"BackboneElement","PlanDefinition.action.dynamicValue.expression":"Expression","PlanDefinition.action.dynamicValue.extension":"Extension","PlanDefinition.action.dynamicValue.id":"System.String","PlanDefinition.action.dynamicValue.modifierExtension":"Extension","PlanDefinition.action.dynamicValue.path":"string","PlanDefinition.action.extension":"Extension","PlanDefinition.action.goalId":"id","PlanDefinition.action.groupingBehavior":"code","PlanDefinition.action.id":"System.String","PlanDefinition.action.input":"DataRequirement","PlanDefinition.action.modifierExtension":"Extension","PlanDefinition.action.output":"DataRequirement","PlanDefinition.action.participant":"BackboneElement","PlanDefinition.action.participant.extension":"Extension","PlanDefinition.action.participant.id":"System.String","PlanDefinition.action.participant.modifierExtension":"Extension","PlanDefinition.action.participant.role":"CodeableConcept","PlanDefinition.action.participant.type":"code","PlanDefinition.action.precheckBehavior":"code","PlanDefinition.action.prefix":"string","PlanDefinition.action.priority":"code","PlanDefinition.action.reason":"CodeableConcept","PlanDefinition.action.relatedAction":"BackboneElement","PlanDefinition.action.relatedAction.actionId":"id","PlanDefinition.action.relatedAction.extension":"Extension","PlanDefinition.action.relatedAction.id":"System.String","PlanDefinition.action.relatedAction.modifierExtension":"Extension","PlanDefinition.action.relatedAction.offsetDuration":"Duration","PlanDefinition.action.relatedAction.offsetRange":"Range","PlanDefinition.action.relatedAction.relationship":"code","PlanDefinition.action.requiredBehavior":"code","PlanDefinition.action.selectionBehavior":"code","PlanDefinition.action.subjectCodeableConcept":"CodeableConcept","PlanDefinition.action.subjectReference":"Reference","PlanDefinition.action.textEquivalent":"string","PlanDefinition.action.timingAge":"Age","PlanDefinition.action.timingDateTime":"dateTime","PlanDefinition.action.timingDuration":"Duration","PlanDefinition.action.timingPeriod":"Period","PlanDefinition.action.timingRange":"Range","PlanDefinition.action.timingTiming":"Timing","PlanDefinition.action.title":"string","PlanDefinition.action.transform":"canonical","PlanDefinition.action.trigger":"TriggerDefinition","PlanDefinition.action.type":"CodeableConcept","PlanDefinition.approvalDate":"date","PlanDefinition.author":"ContactDetail","PlanDefinition.contact":"ContactDetail","PlanDefinition.contained":"Resource","PlanDefinition.copyright":"markdown","PlanDefinition.date":"dateTime","PlanDefinition.description":"markdown","PlanDefinition.editor":"ContactDetail","PlanDefinition.effectivePeriod":"Period","PlanDefinition.endorser":"ContactDetail","PlanDefinition.experimental":"boolean","PlanDefinition.extension":"Extension","PlanDefinition.goal":"BackboneElement","PlanDefinition.goal.addresses":"CodeableConcept","PlanDefinition.goal.category":"CodeableConcept","PlanDefinition.goal.description":"CodeableConcept","PlanDefinition.goal.documentation":"RelatedArtifact","PlanDefinition.goal.extension":"Extension","PlanDefinition.goal.id":"System.String","PlanDefinition.goal.modifierExtension":"Extension","PlanDefinition.goal.priority":"CodeableConcept","PlanDefinition.goal.start":"CodeableConcept","PlanDefinition.goal.target":"BackboneElement","PlanDefinition.goal.target.detailCodeableConcept":"CodeableConcept","PlanDefinition.goal.target.detailQuantity":"Quantity","PlanDefinition.goal.target.detailRange":"Range","PlanDefinition.goal.target.due":"Duration","PlanDefinition.goal.target.extension":"Extension","PlanDefinition.goal.target.id":"System.String","PlanDefinition.goal.target.measure":"CodeableConcept","PlanDefinition.goal.target.modifierExtension":"Extension","PlanDefinition.id":"System.String","PlanDefinition.identifier":"Identifier","PlanDefinition.implicitRules":"uri","PlanDefinition.jurisdiction":"CodeableConcept","PlanDefinition.language":"code","PlanDefinition.lastReviewDate":"date","PlanDefinition.library":"canonical","PlanDefinition.meta":"Meta","PlanDefinition.modifierExtension":"Extension","PlanDefinition.name":"string","PlanDefinition.publisher":"string","PlanDefinition.purpose":"markdown","PlanDefinition.relatedArtifact":"RelatedArtifact","PlanDefinition.reviewer":"ContactDetail","PlanDefinition.status":"code","PlanDefinition.subjectCodeableConcept":"CodeableConcept","PlanDefinition.subjectReference":"Reference","PlanDefinition.subtitle":"string","PlanDefinition.text":"Narrative","PlanDefinition.title":"string","PlanDefinition.topic":"CodeableConcept","PlanDefinition.type":"CodeableConcept","PlanDefinition.url":"uri","PlanDefinition.usage":"string","PlanDefinition.useContext":"UsageContext","PlanDefinition.version":"string","Population.ageCodeableConcept":"CodeableConcept","Population.ageRange":"Range","Population.extension":"Extension","Population.gender":"CodeableConcept","Population.id":"System.String","Population.modifierExtension":"Extension","Population.physiologicalCondition":"CodeableConcept","Population.race":"CodeableConcept","Practitioner.active":"boolean","Practitioner.address":"Address","Practitioner.birthDate":"date","Practitioner.communication":"CodeableConcept","Practitioner.contained":"Resource","Practitioner.extension":"Extension","Practitioner.gender":"code","Practitioner.id":"System.String","Practitioner.identifier":"Identifier","Practitioner.implicitRules":"uri","Practitioner.language":"code","Practitioner.meta":"Meta","Practitioner.modifierExtension":"Extension","Practitioner.name":"HumanName","Practitioner.photo":"Attachment","Practitioner.qualification":"BackboneElement","Practitioner.qualification.code":"CodeableConcept","Practitioner.qualification.extension":"Extension","Practitioner.qualification.id":"System.String","Practitioner.qualification.identifier":"Identifier","Practitioner.qualification.issuer":"Reference","Practitioner.qualification.modifierExtension":"Extension","Practitioner.qualification.period":"Period","Practitioner.telecom":"ContactPoint","Practitioner.text":"Narrative","PractitionerRole.active":"boolean","PractitionerRole.availabilityExceptions":"string","PractitionerRole.availableTime":"BackboneElement","PractitionerRole.availableTime.allDay":"boolean","PractitionerRole.availableTime.availableEndTime":"time","PractitionerRole.availableTime.availableStartTime":"time","PractitionerRole.availableTime.daysOfWeek":"code","PractitionerRole.availableTime.extension":"Extension","PractitionerRole.availableTime.id":"System.String","PractitionerRole.availableTime.modifierExtension":"Extension","PractitionerRole.code":"CodeableConcept","PractitionerRole.contained":"Resource","PractitionerRole.endpoint":"Reference","PractitionerRole.extension":"Extension","PractitionerRole.healthcareService":"Reference","PractitionerRole.id":"System.String","PractitionerRole.identifier":"Identifier","PractitionerRole.implicitRules":"uri","PractitionerRole.language":"code","PractitionerRole.location":"Reference","PractitionerRole.meta":"Meta","PractitionerRole.modifierExtension":"Extension","PractitionerRole.notAvailable":"BackboneElement","PractitionerRole.notAvailable.description":"string","PractitionerRole.notAvailable.during":"Period","PractitionerRole.notAvailable.extension":"Extension","PractitionerRole.notAvailable.id":"System.String","PractitionerRole.notAvailable.modifierExtension":"Extension","PractitionerRole.organization":"Reference","PractitionerRole.period":"Period","PractitionerRole.practitioner":"Reference","PractitionerRole.specialty":"CodeableConcept","PractitionerRole.telecom":"ContactPoint","PractitionerRole.text":"Narrative","Procedure.asserter":"Reference","Procedure.basedOn":"Reference","Procedure.bodySite":"CodeableConcept","Procedure.category":"CodeableConcept","Procedure.code":"CodeableConcept","Procedure.complication":"CodeableConcept","Procedure.complicationDetail":"Reference","Procedure.contained":"Resource","Procedure.encounter":"Reference","Procedure.extension":"Extension","Procedure.focalDevice":"BackboneElement","Procedure.focalDevice.action":"CodeableConcept","Procedure.focalDevice.extension":"Extension","Procedure.focalDevice.id":"System.String","Procedure.focalDevice.manipulated":"Reference","Procedure.focalDevice.modifierExtension":"Extension","Procedure.followUp":"CodeableConcept","Procedure.id":"System.String","Procedure.identifier":"Identifier","Procedure.implicitRules":"uri","Procedure.instantiatesCanonical":"canonical","Procedure.instantiatesUri":"uri","Procedure.language":"code","Procedure.location":"Reference","Procedure.meta":"Meta","Procedure.modifierExtension":"Extension","Procedure.note":"Annotation","Procedure.outcome":"CodeableConcept","Procedure.partOf":"Reference","Procedure.performedAge":"Age","Procedure.performedDateTime":"dateTime","Procedure.performedPeriod":"Period","Procedure.performedRange":"Range","Procedure.performedString":"string","Procedure.performer":"BackboneElement","Procedure.performer.actor":"Reference","Procedure.performer.extension":"Extension","Procedure.performer.function":"CodeableConcept","Procedure.performer.id":"System.String","Procedure.performer.modifierExtension":"Extension","Procedure.performer.onBehalfOf":"Reference","Procedure.reasonCode":"CodeableConcept","Procedure.reasonReference":"Reference","Procedure.recorder":"Reference","Procedure.report":"Reference","Procedure.status":"code","Procedure.statusReason":"CodeableConcept","Procedure.subject":"Reference","Procedure.text":"Narrative","Procedure.usedCode":"CodeableConcept","Procedure.usedReference":"Reference","ProdCharacteristic.color":"string","ProdCharacteristic.depth":"Quantity","ProdCharacteristic.extension":"Extension","ProdCharacteristic.externalDiameter":"Quantity","ProdCharacteristic.height":"Quantity","ProdCharacteristic.id":"System.String","ProdCharacteristic.image":"Attachment","ProdCharacteristic.imprint":"string","ProdCharacteristic.modifierExtension":"Extension","ProdCharacteristic.nominalVolume":"Quantity","ProdCharacteristic.scoring":"CodeableConcept","ProdCharacteristic.shape":"string","ProdCharacteristic.weight":"Quantity","ProdCharacteristic.width":"Quantity","ProductShelfLife.extension":"Extension","ProductShelfLife.id":"System.String","ProductShelfLife.identifier":"Identifier","ProductShelfLife.modifierExtension":"Extension","ProductShelfLife.period":"Quantity","ProductShelfLife.specialPrecautionsForStorage":"CodeableConcept","ProductShelfLife.type":"CodeableConcept","Provenance.activity":"CodeableConcept","Provenance.agent":"BackboneElement","Provenance.agent.extension":"Extension","Provenance.agent.id":"System.String","Provenance.agent.modifierExtension":"Extension","Provenance.agent.onBehalfOf":"Reference","Provenance.agent.role":"CodeableConcept","Provenance.agent.type":"CodeableConcept","Provenance.agent.who":"Reference","Provenance.contained":"Resource","Provenance.entity":"BackboneElement","Provenance.entity.extension":"Extension","Provenance.entity.id":"System.String","Provenance.entity.modifierExtension":"Extension","Provenance.entity.role":"code","Provenance.entity.what":"Reference","Provenance.extension":"Extension","Provenance.id":"System.String","Provenance.implicitRules":"uri","Provenance.language":"code","Provenance.location":"Reference","Provenance.meta":"Meta","Provenance.modifierExtension":"Extension","Provenance.occurredDateTime":"dateTime","Provenance.occurredPeriod":"Period","Provenance.policy":"uri","Provenance.reason":"CodeableConcept","Provenance.recorded":"instant","Provenance.signature":"Signature","Provenance.target":"Reference","Provenance.text":"Narrative","Quantity.code":"code","Quantity.comparator":"code","Quantity.extension":"Extension","Quantity.id":"System.String","Quantity.system":"uri","Quantity.unit":"string","Quantity.value":"decimal","Questionnaire.approvalDate":"date","Questionnaire.code":"Coding","Questionnaire.contact":"ContactDetail","Questionnaire.contained":"Resource","Questionnaire.copyright":"markdown","Questionnaire.date":"dateTime","Questionnaire.derivedFrom":"canonical","Questionnaire.description":"markdown","Questionnaire.effectivePeriod":"Period","Questionnaire.experimental":"boolean","Questionnaire.extension":"Extension","Questionnaire.id":"System.String","Questionnaire.identifier":"Identifier","Questionnaire.implicitRules":"uri","Questionnaire.item":"BackboneElement","Questionnaire.item.answerOption":"BackboneElement","Questionnaire.item.answerOption.extension":"Extension","Questionnaire.item.answerOption.id":"System.String","Questionnaire.item.answerOption.initialSelected":"boolean","Questionnaire.item.answerOption.modifierExtension":"Extension","Questionnaire.item.answerOption.valueCoding":"Coding","Questionnaire.item.answerOption.valueDate":"date","Questionnaire.item.answerOption.valueInteger":"integer","Questionnaire.item.answerOption.valueReference":"Reference","Questionnaire.item.answerOption.valueString":"string","Questionnaire.item.answerOption.valueTime":"time","Questionnaire.item.answerValueSet":"canonical","Questionnaire.item.code":"Coding","Questionnaire.item.definition":"uri","Questionnaire.item.enableBehavior":"code","Questionnaire.item.enableWhen":"BackboneElement","Questionnaire.item.enableWhen.answerBoolean":"boolean","Questionnaire.item.enableWhen.answerCoding":"Coding","Questionnaire.item.enableWhen.answerDate":"date","Questionnaire.item.enableWhen.answerDateTime":"dateTime","Questionnaire.item.enableWhen.answerDecimal":"decimal","Questionnaire.item.enableWhen.answerInteger":"integer","Questionnaire.item.enableWhen.answerQuantity":"Quantity","Questionnaire.item.enableWhen.answerReference":"Reference","Questionnaire.item.enableWhen.answerString":"string","Questionnaire.item.enableWhen.answerTime":"time","Questionnaire.item.enableWhen.extension":"Extension","Questionnaire.item.enableWhen.id":"System.String","Questionnaire.item.enableWhen.modifierExtension":"Extension","Questionnaire.item.enableWhen.operator":"code","Questionnaire.item.enableWhen.question":"string","Questionnaire.item.extension":"Extension","Questionnaire.item.id":"System.String","Questionnaire.item.initial":"BackboneElement","Questionnaire.item.initial.extension":"Extension","Questionnaire.item.initial.id":"System.String","Questionnaire.item.initial.modifierExtension":"Extension","Questionnaire.item.initial.valueAttachment":"Attachment","Questionnaire.item.initial.valueBoolean":"boolean","Questionnaire.item.initial.valueCoding":"Coding","Questionnaire.item.initial.valueDate":"date","Questionnaire.item.initial.valueDateTime":"dateTime","Questionnaire.item.initial.valueDecimal":"decimal","Questionnaire.item.initial.valueInteger":"integer","Questionnaire.item.initial.valueQuantity":"Quantity","Questionnaire.item.initial.valueReference":"Reference","Questionnaire.item.initial.valueString":"string","Questionnaire.item.initial.valueTime":"time","Questionnaire.item.initial.valueUri":"uri","Questionnaire.item.linkId":"string","Questionnaire.item.maxLength":"integer","Questionnaire.item.modifierExtension":"Extension","Questionnaire.item.prefix":"string","Questionnaire.item.readOnly":"boolean","Questionnaire.item.repeats":"boolean","Questionnaire.item.required":"boolean","Questionnaire.item.text":"string","Questionnaire.item.type":"code","Questionnaire.jurisdiction":"CodeableConcept","Questionnaire.language":"code","Questionnaire.lastReviewDate":"date","Questionnaire.meta":"Meta","Questionnaire.modifierExtension":"Extension","Questionnaire.name":"string","Questionnaire.publisher":"string","Questionnaire.purpose":"markdown","Questionnaire.status":"code","Questionnaire.subjectType":"code","Questionnaire.text":"Narrative","Questionnaire.title":"string","Questionnaire.url":"uri","Questionnaire.useContext":"UsageContext","Questionnaire.version":"string","QuestionnaireResponse.author":"Reference","QuestionnaireResponse.authored":"dateTime","QuestionnaireResponse.basedOn":"Reference","QuestionnaireResponse.contained":"Resource","QuestionnaireResponse.encounter":"Reference","QuestionnaireResponse.extension":"Extension","QuestionnaireResponse.id":"System.String","QuestionnaireResponse.identifier":"Identifier","QuestionnaireResponse.implicitRules":"uri","QuestionnaireResponse.item":"BackboneElement","QuestionnaireResponse.item.answer":"BackboneElement","QuestionnaireResponse.item.answer.extension":"Extension","QuestionnaireResponse.item.answer.id":"System.String","QuestionnaireResponse.item.answer.modifierExtension":"Extension","QuestionnaireResponse.item.answer.valueAttachment":"Attachment","QuestionnaireResponse.item.answer.valueBoolean":"boolean","QuestionnaireResponse.item.answer.valueCoding":"Coding","QuestionnaireResponse.item.answer.valueDate":"date","QuestionnaireResponse.item.answer.valueDateTime":"dateTime","QuestionnaireResponse.item.answer.valueDecimal":"decimal","QuestionnaireResponse.item.answer.valueInteger":"integer","QuestionnaireResponse.item.answer.valueQuantity":"Quantity","QuestionnaireResponse.item.answer.valueReference":"Reference","QuestionnaireResponse.item.answer.valueString":"string","QuestionnaireResponse.item.answer.valueTime":"time","QuestionnaireResponse.item.answer.valueUri":"uri","QuestionnaireResponse.item.definition":"uri","QuestionnaireResponse.item.extension":"Extension","QuestionnaireResponse.item.id":"System.String","QuestionnaireResponse.item.linkId":"string","QuestionnaireResponse.item.modifierExtension":"Extension","QuestionnaireResponse.item.text":"string","QuestionnaireResponse.language":"code","QuestionnaireResponse.meta":"Meta","QuestionnaireResponse.modifierExtension":"Extension","QuestionnaireResponse.partOf":"Reference","QuestionnaireResponse.questionnaire":"canonical","QuestionnaireResponse.source":"Reference","QuestionnaireResponse.status":"code","QuestionnaireResponse.subject":"Reference","QuestionnaireResponse.text":"Narrative","Range.extension":"Extension","Range.high":"Quantity","Range.id":"System.String","Range.low":"Quantity","Ratio.denominator":"Quantity","Ratio.extension":"Extension","Ratio.id":"System.String","Ratio.numerator":"Quantity","Reference.display":"string","Reference.extension":"Extension","Reference.id":"System.String","Reference.identifier":"Identifier","Reference.reference":"string","Reference.type":"uri","RelatedArtifact.citation":"markdown","RelatedArtifact.display":"string","RelatedArtifact.document":"Attachment","RelatedArtifact.extension":"Extension","RelatedArtifact.id":"System.String","RelatedArtifact.label":"string","RelatedArtifact.resource":"canonical","RelatedArtifact.type":"code","RelatedArtifact.url":"url","RelatedPerson.active":"boolean","RelatedPerson.address":"Address","RelatedPerson.birthDate":"date","RelatedPerson.communication":"BackboneElement","RelatedPerson.communication.extension":"Extension","RelatedPerson.communication.id":"System.String","RelatedPerson.communication.language":"CodeableConcept","RelatedPerson.communication.modifierExtension":"Extension","RelatedPerson.communication.preferred":"boolean","RelatedPerson.contained":"Resource","RelatedPerson.extension":"Extension","RelatedPerson.gender":"code","RelatedPerson.id":"System.String","RelatedPerson.identifier":"Identifier","RelatedPerson.implicitRules":"uri","RelatedPerson.language":"code","RelatedPerson.meta":"Meta","RelatedPerson.modifierExtension":"Extension","RelatedPerson.name":"HumanName","RelatedPerson.patient":"Reference","RelatedPerson.period":"Period","RelatedPerson.photo":"Attachment","RelatedPerson.relationship":"CodeableConcept","RelatedPerson.telecom":"ContactPoint","RelatedPerson.text":"Narrative","RequestGroup.action":"BackboneElement","RequestGroup.action.cardinalityBehavior":"code","RequestGroup.action.code":"CodeableConcept","RequestGroup.action.condition":"BackboneElement","RequestGroup.action.condition.expression":"Expression","RequestGroup.action.condition.extension":"Extension","RequestGroup.action.condition.id":"System.String","RequestGroup.action.condition.kind":"code","RequestGroup.action.condition.modifierExtension":"Extension","RequestGroup.action.description":"string","RequestGroup.action.documentation":"RelatedArtifact","RequestGroup.action.extension":"Extension","RequestGroup.action.groupingBehavior":"code","RequestGroup.action.id":"System.String","RequestGroup.action.modifierExtension":"Extension","RequestGroup.action.participant":"Reference","RequestGroup.action.precheckBehavior":"code","RequestGroup.action.prefix":"string","RequestGroup.action.priority":"code","RequestGroup.action.relatedAction":"BackboneElement","RequestGroup.action.relatedAction.actionId":"id","RequestGroup.action.relatedAction.extension":"Extension","RequestGroup.action.relatedAction.id":"System.String","RequestGroup.action.relatedAction.modifierExtension":"Extension","RequestGroup.action.relatedAction.offsetDuration":"Duration","RequestGroup.action.relatedAction.offsetRange":"Range","RequestGroup.action.relatedAction.relationship":"code","RequestGroup.action.requiredBehavior":"code","RequestGroup.action.resource":"Reference","RequestGroup.action.selectionBehavior":"code","RequestGroup.action.textEquivalent":"string","RequestGroup.action.timingAge":"Age","RequestGroup.action.timingDateTime":"dateTime","RequestGroup.action.timingDuration":"Duration","RequestGroup.action.timingPeriod":"Period","RequestGroup.action.timingRange":"Range","RequestGroup.action.timingTiming":"Timing","RequestGroup.action.title":"string","RequestGroup.action.type":"CodeableConcept","RequestGroup.author":"Reference","RequestGroup.authoredOn":"dateTime","RequestGroup.basedOn":"Reference","RequestGroup.code":"CodeableConcept","RequestGroup.contained":"Resource","RequestGroup.encounter":"Reference","RequestGroup.extension":"Extension","RequestGroup.groupIdentifier":"Identifier","RequestGroup.id":"System.String","RequestGroup.identifier":"Identifier","RequestGroup.implicitRules":"uri","RequestGroup.instantiatesCanonical":"canonical","RequestGroup.instantiatesUri":"uri","RequestGroup.intent":"code","RequestGroup.language":"code","RequestGroup.meta":"Meta","RequestGroup.modifierExtension":"Extension","RequestGroup.note":"Annotation","RequestGroup.priority":"code","RequestGroup.reasonCode":"CodeableConcept","RequestGroup.reasonReference":"Reference","RequestGroup.replaces":"Reference","RequestGroup.status":"code","RequestGroup.subject":"Reference","RequestGroup.text":"Narrative","ResearchDefinition.approvalDate":"date","ResearchDefinition.author":"ContactDetail","ResearchDefinition.comment":"string","ResearchDefinition.contact":"ContactDetail","ResearchDefinition.contained":"Resource","ResearchDefinition.copyright":"markdown","ResearchDefinition.date":"dateTime","ResearchDefinition.description":"markdown","ResearchDefinition.editor":"ContactDetail","ResearchDefinition.effectivePeriod":"Period","ResearchDefinition.endorser":"ContactDetail","ResearchDefinition.experimental":"boolean","ResearchDefinition.exposure":"Reference","ResearchDefinition.exposureAlternative":"Reference","ResearchDefinition.extension":"Extension","ResearchDefinition.id":"System.String","ResearchDefinition.identifier":"Identifier","ResearchDefinition.implicitRules":"uri","ResearchDefinition.jurisdiction":"CodeableConcept","ResearchDefinition.language":"code","ResearchDefinition.lastReviewDate":"date","ResearchDefinition.library":"canonical","ResearchDefinition.meta":"Meta","ResearchDefinition.modifierExtension":"Extension","ResearchDefinition.name":"string","ResearchDefinition.outcome":"Reference","ResearchDefinition.population":"Reference","ResearchDefinition.publisher":"string","ResearchDefinition.purpose":"markdown","ResearchDefinition.relatedArtifact":"RelatedArtifact","ResearchDefinition.reviewer":"ContactDetail","ResearchDefinition.shortTitle":"string","ResearchDefinition.status":"code","ResearchDefinition.subjectCodeableConcept":"CodeableConcept","ResearchDefinition.subjectReference":"Reference","ResearchDefinition.subtitle":"string","ResearchDefinition.text":"Narrative","ResearchDefinition.title":"string","ResearchDefinition.topic":"CodeableConcept","ResearchDefinition.url":"uri","ResearchDefinition.usage":"string","ResearchDefinition.useContext":"UsageContext","ResearchDefinition.version":"string","ResearchElementDefinition.approvalDate":"date","ResearchElementDefinition.author":"ContactDetail","ResearchElementDefinition.characteristic":"BackboneElement","ResearchElementDefinition.characteristic.definitionCanonical":"canonical","ResearchElementDefinition.characteristic.definitionCodeableConcept":"CodeableConcept","ResearchElementDefinition.characteristic.definitionDataRequirement":"DataRequirement","ResearchElementDefinition.characteristic.definitionExpression":"Expression","ResearchElementDefinition.characteristic.exclude":"boolean","ResearchElementDefinition.characteristic.extension":"Extension","ResearchElementDefinition.characteristic.id":"System.String","ResearchElementDefinition.characteristic.modifierExtension":"Extension","ResearchElementDefinition.characteristic.participantEffectiveDateTime":"dateTime","ResearchElementDefinition.characteristic.participantEffectiveDescription":"string","ResearchElementDefinition.characteristic.participantEffectiveDuration":"Duration","ResearchElementDefinition.characteristic.participantEffectiveGroupMeasure":"code","ResearchElementDefinition.characteristic.participantEffectivePeriod":"Period","ResearchElementDefinition.characteristic.participantEffectiveTimeFromStart":"Duration","ResearchElementDefinition.characteristic.participantEffectiveTiming":"Timing","ResearchElementDefinition.characteristic.studyEffectiveDateTime":"dateTime","ResearchElementDefinition.characteristic.studyEffectiveDescription":"string","ResearchElementDefinition.characteristic.studyEffectiveDuration":"Duration","ResearchElementDefinition.characteristic.studyEffectiveGroupMeasure":"code","ResearchElementDefinition.characteristic.studyEffectivePeriod":"Period","ResearchElementDefinition.characteristic.studyEffectiveTimeFromStart":"Duration","ResearchElementDefinition.characteristic.studyEffectiveTiming":"Timing","ResearchElementDefinition.characteristic.unitOfMeasure":"CodeableConcept","ResearchElementDefinition.characteristic.usageContext":"UsageContext","ResearchElementDefinition.comment":"string","ResearchElementDefinition.contact":"ContactDetail","ResearchElementDefinition.contained":"Resource","ResearchElementDefinition.copyright":"markdown","ResearchElementDefinition.date":"dateTime","ResearchElementDefinition.description":"markdown","ResearchElementDefinition.editor":"ContactDetail","ResearchElementDefinition.effectivePeriod":"Period","ResearchElementDefinition.endorser":"ContactDetail","ResearchElementDefinition.experimental":"boolean","ResearchElementDefinition.extension":"Extension","ResearchElementDefinition.id":"System.String","ResearchElementDefinition.identifier":"Identifier","ResearchElementDefinition.implicitRules":"uri","ResearchElementDefinition.jurisdiction":"CodeableConcept","ResearchElementDefinition.language":"code","ResearchElementDefinition.lastReviewDate":"date","ResearchElementDefinition.library":"canonical","ResearchElementDefinition.meta":"Meta","ResearchElementDefinition.modifierExtension":"Extension","ResearchElementDefinition.name":"string","ResearchElementDefinition.publisher":"string","ResearchElementDefinition.purpose":"markdown","ResearchElementDefinition.relatedArtifact":"RelatedArtifact","ResearchElementDefinition.reviewer":"ContactDetail","ResearchElementDefinition.shortTitle":"string","ResearchElementDefinition.status":"code","ResearchElementDefinition.subjectCodeableConcept":"CodeableConcept","ResearchElementDefinition.subjectReference":"Reference","ResearchElementDefinition.subtitle":"string","ResearchElementDefinition.text":"Narrative","ResearchElementDefinition.title":"string","ResearchElementDefinition.topic":"CodeableConcept","ResearchElementDefinition.type":"code","ResearchElementDefinition.url":"uri","ResearchElementDefinition.usage":"string","ResearchElementDefinition.useContext":"UsageContext","ResearchElementDefinition.variableType":"code","ResearchElementDefinition.version":"string","ResearchStudy.arm":"BackboneElement","ResearchStudy.arm.description":"string","ResearchStudy.arm.extension":"Extension","ResearchStudy.arm.id":"System.String","ResearchStudy.arm.modifierExtension":"Extension","ResearchStudy.arm.name":"string","ResearchStudy.arm.type":"CodeableConcept","ResearchStudy.category":"CodeableConcept","ResearchStudy.condition":"CodeableConcept","ResearchStudy.contact":"ContactDetail","ResearchStudy.contained":"Resource","ResearchStudy.description":"markdown","ResearchStudy.enrollment":"Reference","ResearchStudy.extension":"Extension","ResearchStudy.focus":"CodeableConcept","ResearchStudy.id":"System.String","ResearchStudy.identifier":"Identifier","ResearchStudy.implicitRules":"uri","ResearchStudy.keyword":"CodeableConcept","ResearchStudy.language":"code","ResearchStudy.location":"CodeableConcept","ResearchStudy.meta":"Meta","ResearchStudy.modifierExtension":"Extension","ResearchStudy.note":"Annotation","ResearchStudy.objective":"BackboneElement","ResearchStudy.objective.extension":"Extension","ResearchStudy.objective.id":"System.String","ResearchStudy.objective.modifierExtension":"Extension","ResearchStudy.objective.name":"string","ResearchStudy.objective.type":"CodeableConcept","ResearchStudy.partOf":"Reference","ResearchStudy.period":"Period","ResearchStudy.phase":"CodeableConcept","ResearchStudy.primaryPurposeType":"CodeableConcept","ResearchStudy.principalInvestigator":"Reference","ResearchStudy.protocol":"Reference","ResearchStudy.reasonStopped":"CodeableConcept","ResearchStudy.relatedArtifact":"RelatedArtifact","ResearchStudy.site":"Reference","ResearchStudy.sponsor":"Reference","ResearchStudy.status":"code","ResearchStudy.text":"Narrative","ResearchStudy.title":"string","ResearchSubject.actualArm":"string","ResearchSubject.assignedArm":"string","ResearchSubject.consent":"Reference","ResearchSubject.contained":"Resource","ResearchSubject.extension":"Extension","ResearchSubject.id":"System.String","ResearchSubject.identifier":"Identifier","ResearchSubject.implicitRules":"uri","ResearchSubject.individual":"Reference","ResearchSubject.language":"code","ResearchSubject.meta":"Meta","ResearchSubject.modifierExtension":"Extension","ResearchSubject.period":"Period","ResearchSubject.status":"code","ResearchSubject.study":"Reference","ResearchSubject.text":"Narrative","Resource.id":"System.String","Resource.implicitRules":"uri","Resource.language":"code","Resource.meta":"Meta","RiskAssessment.basedOn":"Reference","RiskAssessment.basis":"Reference","RiskAssessment.code":"CodeableConcept","RiskAssessment.condition":"Reference","RiskAssessment.contained":"Resource","RiskAssessment.encounter":"Reference","RiskAssessment.extension":"Extension","RiskAssessment.id":"System.String","RiskAssessment.identifier":"Identifier","RiskAssessment.implicitRules":"uri","RiskAssessment.language":"code","RiskAssessment.meta":"Meta","RiskAssessment.method":"CodeableConcept","RiskAssessment.mitigation":"string","RiskAssessment.modifierExtension":"Extension","RiskAssessment.note":"Annotation","RiskAssessment.occurrenceDateTime":"dateTime","RiskAssessment.occurrencePeriod":"Period","RiskAssessment.parent":"Reference","RiskAssessment.performer":"Reference","RiskAssessment.prediction":"BackboneElement","RiskAssessment.prediction.extension":"Extension","RiskAssessment.prediction.id":"System.String","RiskAssessment.prediction.modifierExtension":"Extension","RiskAssessment.prediction.outcome":"CodeableConcept","RiskAssessment.prediction.probabilityDecimal":"decimal","RiskAssessment.prediction.probabilityRange":"Range","RiskAssessment.prediction.qualitativeRisk":"CodeableConcept","RiskAssessment.prediction.rationale":"string","RiskAssessment.prediction.relativeRisk":"decimal","RiskAssessment.prediction.whenPeriod":"Period","RiskAssessment.prediction.whenRange":"Range","RiskAssessment.reasonCode":"CodeableConcept","RiskAssessment.reasonReference":"Reference","RiskAssessment.status":"code","RiskAssessment.subject":"Reference","RiskAssessment.text":"Narrative","RiskEvidenceSynthesis.approvalDate":"date","RiskEvidenceSynthesis.author":"ContactDetail","RiskEvidenceSynthesis.certainty":"BackboneElement","RiskEvidenceSynthesis.certainty.certaintySubcomponent":"BackboneElement","RiskEvidenceSynthesis.certainty.certaintySubcomponent.extension":"Extension","RiskEvidenceSynthesis.certainty.certaintySubcomponent.id":"System.String","RiskEvidenceSynthesis.certainty.certaintySubcomponent.modifierExtension":"Extension","RiskEvidenceSynthesis.certainty.certaintySubcomponent.note":"Annotation","RiskEvidenceSynthesis.certainty.certaintySubcomponent.rating":"CodeableConcept","RiskEvidenceSynthesis.certainty.certaintySubcomponent.type":"CodeableConcept","RiskEvidenceSynthesis.certainty.extension":"Extension","RiskEvidenceSynthesis.certainty.id":"System.String","RiskEvidenceSynthesis.certainty.modifierExtension":"Extension","RiskEvidenceSynthesis.certainty.note":"Annotation","RiskEvidenceSynthesis.certainty.rating":"CodeableConcept","RiskEvidenceSynthesis.contact":"ContactDetail","RiskEvidenceSynthesis.contained":"Resource","RiskEvidenceSynthesis.copyright":"markdown","RiskEvidenceSynthesis.date":"dateTime","RiskEvidenceSynthesis.description":"markdown","RiskEvidenceSynthesis.editor":"ContactDetail","RiskEvidenceSynthesis.effectivePeriod":"Period","RiskEvidenceSynthesis.endorser":"ContactDetail","RiskEvidenceSynthesis.exposure":"Reference","RiskEvidenceSynthesis.extension":"Extension","RiskEvidenceSynthesis.id":"System.String","RiskEvidenceSynthesis.identifier":"Identifier","RiskEvidenceSynthesis.implicitRules":"uri","RiskEvidenceSynthesis.jurisdiction":"CodeableConcept","RiskEvidenceSynthesis.language":"code","RiskEvidenceSynthesis.lastReviewDate":"date","RiskEvidenceSynthesis.meta":"Meta","RiskEvidenceSynthesis.modifierExtension":"Extension","RiskEvidenceSynthesis.name":"string","RiskEvidenceSynthesis.note":"Annotation","RiskEvidenceSynthesis.outcome":"Reference","RiskEvidenceSynthesis.population":"Reference","RiskEvidenceSynthesis.publisher":"string","RiskEvidenceSynthesis.relatedArtifact":"RelatedArtifact","RiskEvidenceSynthesis.reviewer":"ContactDetail","RiskEvidenceSynthesis.riskEstimate":"BackboneElement","RiskEvidenceSynthesis.riskEstimate.denominatorCount":"integer","RiskEvidenceSynthesis.riskEstimate.description":"string","RiskEvidenceSynthesis.riskEstimate.extension":"Extension","RiskEvidenceSynthesis.riskEstimate.id":"System.String","RiskEvidenceSynthesis.riskEstimate.modifierExtension":"Extension","RiskEvidenceSynthesis.riskEstimate.numeratorCount":"integer","RiskEvidenceSynthesis.riskEstimate.precisionEstimate":"BackboneElement","RiskEvidenceSynthesis.riskEstimate.precisionEstimate.extension":"Extension","RiskEvidenceSynthesis.riskEstimate.precisionEstimate.from":"decimal","RiskEvidenceSynthesis.riskEstimate.precisionEstimate.id":"System.String","RiskEvidenceSynthesis.riskEstimate.precisionEstimate.level":"decimal","RiskEvidenceSynthesis.riskEstimate.precisionEstimate.modifierExtension":"Extension","RiskEvidenceSynthesis.riskEstimate.precisionEstimate.to":"decimal","RiskEvidenceSynthesis.riskEstimate.precisionEstimate.type":"CodeableConcept","RiskEvidenceSynthesis.riskEstimate.type":"CodeableConcept","RiskEvidenceSynthesis.riskEstimate.unitOfMeasure":"CodeableConcept","RiskEvidenceSynthesis.riskEstimate.value":"decimal","RiskEvidenceSynthesis.sampleSize":"BackboneElement","RiskEvidenceSynthesis.sampleSize.description":"string","RiskEvidenceSynthesis.sampleSize.extension":"Extension","RiskEvidenceSynthesis.sampleSize.id":"System.String","RiskEvidenceSynthesis.sampleSize.modifierExtension":"Extension","RiskEvidenceSynthesis.sampleSize.numberOfParticipants":"integer","RiskEvidenceSynthesis.sampleSize.numberOfStudies":"integer","RiskEvidenceSynthesis.status":"code","RiskEvidenceSynthesis.studyType":"CodeableConcept","RiskEvidenceSynthesis.synthesisType":"CodeableConcept","RiskEvidenceSynthesis.text":"Narrative","RiskEvidenceSynthesis.title":"string","RiskEvidenceSynthesis.topic":"CodeableConcept","RiskEvidenceSynthesis.url":"uri","RiskEvidenceSynthesis.useContext":"UsageContext","RiskEvidenceSynthesis.version":"string","SampledData.data":"string","SampledData.dimensions":"positiveInt","SampledData.extension":"Extension","SampledData.factor":"decimal","SampledData.id":"System.String","SampledData.lowerLimit":"decimal","SampledData.origin":"Quantity","SampledData.period":"decimal","SampledData.upperLimit":"decimal","Schedule.active":"boolean","Schedule.actor":"Reference","Schedule.comment":"string","Schedule.contained":"Resource","Schedule.extension":"Extension","Schedule.id":"System.String","Schedule.identifier":"Identifier","Schedule.implicitRules":"uri","Schedule.language":"code","Schedule.meta":"Meta","Schedule.modifierExtension":"Extension","Schedule.planningHorizon":"Period","Schedule.serviceCategory":"CodeableConcept","Schedule.serviceType":"CodeableConcept","Schedule.specialty":"CodeableConcept","Schedule.text":"Narrative","SearchParameter.base":"code","SearchParameter.chain":"string","SearchParameter.code":"code","SearchParameter.comparator":"code","SearchParameter.component":"BackboneElement","SearchParameter.component.definition":"canonical","SearchParameter.component.expression":"string","SearchParameter.component.extension":"Extension","SearchParameter.component.id":"System.String","SearchParameter.component.modifierExtension":"Extension","SearchParameter.contact":"ContactDetail","SearchParameter.contained":"Resource","SearchParameter.date":"dateTime","SearchParameter.derivedFrom":"canonical","SearchParameter.description":"markdown","SearchParameter.experimental":"boolean","SearchParameter.expression":"string","SearchParameter.extension":"Extension","SearchParameter.id":"System.String","SearchParameter.implicitRules":"uri","SearchParameter.jurisdiction":"CodeableConcept","SearchParameter.language":"code","SearchParameter.meta":"Meta","SearchParameter.modifier":"code","SearchParameter.modifierExtension":"Extension","SearchParameter.multipleAnd":"boolean","SearchParameter.multipleOr":"boolean","SearchParameter.name":"string","SearchParameter.publisher":"string","SearchParameter.purpose":"markdown","SearchParameter.status":"code","SearchParameter.target":"code","SearchParameter.text":"Narrative","SearchParameter.type":"code","SearchParameter.url":"uri","SearchParameter.useContext":"UsageContext","SearchParameter.version":"string","SearchParameter.xpath":"string","SearchParameter.xpathUsage":"code","ServiceRequest.asNeededBoolean":"boolean","ServiceRequest.asNeededCodeableConcept":"CodeableConcept","ServiceRequest.authoredOn":"dateTime","ServiceRequest.basedOn":"Reference","ServiceRequest.bodySite":"CodeableConcept","ServiceRequest.category":"CodeableConcept","ServiceRequest.code":"CodeableConcept","ServiceRequest.contained":"Resource","ServiceRequest.doNotPerform":"boolean","ServiceRequest.encounter":"Reference","ServiceRequest.extension":"Extension","ServiceRequest.id":"System.String","ServiceRequest.identifier":"Identifier","ServiceRequest.implicitRules":"uri","ServiceRequest.instantiatesCanonical":"canonical","ServiceRequest.instantiatesUri":"uri","ServiceRequest.insurance":"Reference","ServiceRequest.intent":"code","ServiceRequest.language":"code","ServiceRequest.locationCode":"CodeableConcept","ServiceRequest.locationReference":"Reference","ServiceRequest.meta":"Meta","ServiceRequest.modifierExtension":"Extension","ServiceRequest.note":"Annotation","ServiceRequest.occurrenceDateTime":"dateTime","ServiceRequest.occurrencePeriod":"Period","ServiceRequest.occurrenceTiming":"Timing","ServiceRequest.orderDetail":"CodeableConcept","ServiceRequest.patientInstruction":"string","ServiceRequest.performer":"Reference","ServiceRequest.performerType":"CodeableConcept","ServiceRequest.priority":"code","ServiceRequest.quantityQuantity":"Quantity","ServiceRequest.quantityRange":"Range","ServiceRequest.quantityRatio":"Ratio","ServiceRequest.reasonCode":"CodeableConcept","ServiceRequest.reasonReference":"Reference","ServiceRequest.relevantHistory":"Reference","ServiceRequest.replaces":"Reference","ServiceRequest.requester":"Reference","ServiceRequest.requisition":"Identifier","ServiceRequest.specimen":"Reference","ServiceRequest.status":"code","ServiceRequest.subject":"Reference","ServiceRequest.supportingInfo":"Reference","ServiceRequest.text":"Narrative","Signature.data":"base64Binary","Signature.extension":"Extension","Signature.id":"System.String","Signature.onBehalfOf":"Reference","Signature.sigFormat":"code","Signature.targetFormat":"code","Signature.type":"Coding","Signature.when":"instant","Signature.who":"Reference","Slot.appointmentType":"CodeableConcept","Slot.comment":"string","Slot.contained":"Resource","Slot.end":"instant","Slot.extension":"Extension","Slot.id":"System.String","Slot.identifier":"Identifier","Slot.implicitRules":"uri","Slot.language":"code","Slot.meta":"Meta","Slot.modifierExtension":"Extension","Slot.overbooked":"boolean","Slot.schedule":"Reference","Slot.serviceCategory":"CodeableConcept","Slot.serviceType":"CodeableConcept","Slot.specialty":"CodeableConcept","Slot.start":"instant","Slot.status":"code","Slot.text":"Narrative","Specimen.accessionIdentifier":"Identifier","Specimen.collection":"BackboneElement","Specimen.collection.bodySite":"CodeableConcept","Specimen.collection.collectedDateTime":"dateTime","Specimen.collection.collectedPeriod":"Period","Specimen.collection.collector":"Reference","Specimen.collection.duration":"Duration","Specimen.collection.extension":"Extension","Specimen.collection.fastingStatusCodeableConcept":"CodeableConcept","Specimen.collection.fastingStatusDuration":"Duration","Specimen.collection.id":"System.String","Specimen.collection.method":"CodeableConcept","Specimen.collection.modifierExtension":"Extension","Specimen.collection.quantity":"Quantity","Specimen.condition":"CodeableConcept","Specimen.contained":"Resource","Specimen.container":"BackboneElement","Specimen.container.additiveCodeableConcept":"CodeableConcept","Specimen.container.additiveReference":"Reference","Specimen.container.capacity":"Quantity","Specimen.container.description":"string","Specimen.container.extension":"Extension","Specimen.container.id":"System.String","Specimen.container.identifier":"Identifier","Specimen.container.modifierExtension":"Extension","Specimen.container.specimenQuantity":"Quantity","Specimen.container.type":"CodeableConcept","Specimen.extension":"Extension","Specimen.id":"System.String","Specimen.identifier":"Identifier","Specimen.implicitRules":"uri","Specimen.language":"code","Specimen.meta":"Meta","Specimen.modifierExtension":"Extension","Specimen.note":"Annotation","Specimen.parent":"Reference","Specimen.processing":"BackboneElement","Specimen.processing.additive":"Reference","Specimen.processing.description":"string","Specimen.processing.extension":"Extension","Specimen.processing.id":"System.String","Specimen.processing.modifierExtension":"Extension","Specimen.processing.procedure":"CodeableConcept","Specimen.processing.timeDateTime":"dateTime","Specimen.processing.timePeriod":"Period","Specimen.receivedTime":"dateTime","Specimen.request":"Reference","Specimen.status":"code","Specimen.subject":"Reference","Specimen.text":"Narrative","Specimen.type":"CodeableConcept","SpecimenDefinition.collection":"CodeableConcept","SpecimenDefinition.contained":"Resource","SpecimenDefinition.extension":"Extension","SpecimenDefinition.id":"System.String","SpecimenDefinition.identifier":"Identifier","SpecimenDefinition.implicitRules":"uri","SpecimenDefinition.language":"code","SpecimenDefinition.meta":"Meta","SpecimenDefinition.modifierExtension":"Extension","SpecimenDefinition.patientPreparation":"CodeableConcept","SpecimenDefinition.text":"Narrative","SpecimenDefinition.timeAspect":"string","SpecimenDefinition.typeCollected":"CodeableConcept","SpecimenDefinition.typeTested":"BackboneElement","SpecimenDefinition.typeTested.container":"BackboneElement","SpecimenDefinition.typeTested.container.additive":"BackboneElement","SpecimenDefinition.typeTested.container.additive.additiveCodeableConcept":"CodeableConcept","SpecimenDefinition.typeTested.container.additive.additiveReference":"Reference","SpecimenDefinition.typeTested.container.additive.extension":"Extension","SpecimenDefinition.typeTested.container.additive.id":"System.String","SpecimenDefinition.typeTested.container.additive.modifierExtension":"Extension","SpecimenDefinition.typeTested.container.cap":"CodeableConcept","SpecimenDefinition.typeTested.container.capacity":"Quantity","SpecimenDefinition.typeTested.container.description":"string","SpecimenDefinition.typeTested.container.extension":"Extension","SpecimenDefinition.typeTested.container.id":"System.String","SpecimenDefinition.typeTested.container.material":"CodeableConcept","SpecimenDefinition.typeTested.container.minimumVolumeQuantity":"Quantity","SpecimenDefinition.typeTested.container.minimumVolumeString":"string","SpecimenDefinition.typeTested.container.modifierExtension":"Extension","SpecimenDefinition.typeTested.container.preparation":"string","SpecimenDefinition.typeTested.container.type":"CodeableConcept","SpecimenDefinition.typeTested.extension":"Extension","SpecimenDefinition.typeTested.handling":"BackboneElement","SpecimenDefinition.typeTested.handling.extension":"Extension","SpecimenDefinition.typeTested.handling.id":"System.String","SpecimenDefinition.typeTested.handling.instruction":"string","SpecimenDefinition.typeTested.handling.maxDuration":"Duration","SpecimenDefinition.typeTested.handling.modifierExtension":"Extension","SpecimenDefinition.typeTested.handling.temperatureQualifier":"CodeableConcept","SpecimenDefinition.typeTested.handling.temperatureRange":"Range","SpecimenDefinition.typeTested.id":"System.String","SpecimenDefinition.typeTested.isDerived":"boolean","SpecimenDefinition.typeTested.modifierExtension":"Extension","SpecimenDefinition.typeTested.preference":"code","SpecimenDefinition.typeTested.rejectionCriterion":"CodeableConcept","SpecimenDefinition.typeTested.requirement":"string","SpecimenDefinition.typeTested.retentionTime":"Duration","SpecimenDefinition.typeTested.type":"CodeableConcept","StructureDefinition.abstract":"boolean","StructureDefinition.baseDefinition":"canonical","StructureDefinition.contact":"ContactDetail","StructureDefinition.contained":"Resource","StructureDefinition.context":"BackboneElement","StructureDefinition.context.expression":"string","StructureDefinition.context.extension":"Extension","StructureDefinition.context.id":"System.String","StructureDefinition.context.modifierExtension":"Extension","StructureDefinition.context.type":"code","StructureDefinition.contextInvariant":"string","StructureDefinition.copyright":"markdown","StructureDefinition.date":"dateTime","StructureDefinition.derivation":"code","StructureDefinition.description":"markdown","StructureDefinition.differential":"BackboneElement","StructureDefinition.differential.element":"ElementDefinition","StructureDefinition.differential.extension":"Extension","StructureDefinition.differential.id":"System.String","StructureDefinition.differential.modifierExtension":"Extension","StructureDefinition.experimental":"boolean","StructureDefinition.extension":"Extension","StructureDefinition.fhirVersion":"code","StructureDefinition.id":"System.String","StructureDefinition.identifier":"Identifier","StructureDefinition.implicitRules":"uri","StructureDefinition.jurisdiction":"CodeableConcept","StructureDefinition.keyword":"Coding","StructureDefinition.kind":"code","StructureDefinition.language":"code","StructureDefinition.mapping":"BackboneElement","StructureDefinition.mapping.comment":"string","StructureDefinition.mapping.extension":"Extension","StructureDefinition.mapping.id":"System.String","StructureDefinition.mapping.identity":"id","StructureDefinition.mapping.modifierExtension":"Extension","StructureDefinition.mapping.name":"string","StructureDefinition.mapping.uri":"uri","StructureDefinition.meta":"Meta","StructureDefinition.modifierExtension":"Extension","StructureDefinition.name":"string","StructureDefinition.publisher":"string","StructureDefinition.purpose":"markdown","StructureDefinition.snapshot":"BackboneElement","StructureDefinition.snapshot.element":"ElementDefinition","StructureDefinition.snapshot.extension":"Extension","StructureDefinition.snapshot.id":"System.String","StructureDefinition.snapshot.modifierExtension":"Extension","StructureDefinition.status":"code","StructureDefinition.text":"Narrative","StructureDefinition.title":"string","StructureDefinition.type":"uri","StructureDefinition.url":"uri","StructureDefinition.useContext":"UsageContext","StructureDefinition.version":"string","StructureMap.contact":"ContactDetail","StructureMap.contained":"Resource","StructureMap.copyright":"markdown","StructureMap.date":"dateTime","StructureMap.description":"markdown","StructureMap.experimental":"boolean","StructureMap.extension":"Extension","StructureMap.group":"BackboneElement","StructureMap.group.documentation":"string","StructureMap.group.extends":"id","StructureMap.group.extension":"Extension","StructureMap.group.id":"System.String","StructureMap.group.input":"BackboneElement","StructureMap.group.input.documentation":"string","StructureMap.group.input.extension":"Extension","StructureMap.group.input.id":"System.String","StructureMap.group.input.mode":"code","StructureMap.group.input.modifierExtension":"Extension","StructureMap.group.input.name":"id","StructureMap.group.input.type":"string","StructureMap.group.modifierExtension":"Extension","StructureMap.group.name":"id","StructureMap.group.rule":"BackboneElement","StructureMap.group.rule.dependent":"BackboneElement","StructureMap.group.rule.dependent.extension":"Extension","StructureMap.group.rule.dependent.id":"System.String","StructureMap.group.rule.dependent.modifierExtension":"Extension","StructureMap.group.rule.dependent.name":"id","StructureMap.group.rule.dependent.variable":"string","StructureMap.group.rule.documentation":"string","StructureMap.group.rule.extension":"Extension","StructureMap.group.rule.id":"System.String","StructureMap.group.rule.modifierExtension":"Extension","StructureMap.group.rule.name":"id","StructureMap.group.rule.source":"BackboneElement","StructureMap.group.rule.source.check":"string","StructureMap.group.rule.source.condition":"string","StructureMap.group.rule.source.context":"id","StructureMap.group.rule.source.defaultValueAddress":"Address","StructureMap.group.rule.source.defaultValueAge":"Age","StructureMap.group.rule.source.defaultValueAnnotation":"Annotation","StructureMap.group.rule.source.defaultValueAttachment":"Attachment","StructureMap.group.rule.source.defaultValueBase64Binary":"base64Binary","StructureMap.group.rule.source.defaultValueBoolean":"boolean","StructureMap.group.rule.source.defaultValueCanonical":"canonical","StructureMap.group.rule.source.defaultValueCode":"code","StructureMap.group.rule.source.defaultValueCodeableConcept":"CodeableConcept","StructureMap.group.rule.source.defaultValueCoding":"Coding","StructureMap.group.rule.source.defaultValueContactDetail":"ContactDetail","StructureMap.group.rule.source.defaultValueContactPoint":"ContactPoint","StructureMap.group.rule.source.defaultValueContributor":"Contributor","StructureMap.group.rule.source.defaultValueCount":"Count","StructureMap.group.rule.source.defaultValueDataRequirement":"DataRequirement","StructureMap.group.rule.source.defaultValueDate":"date","StructureMap.group.rule.source.defaultValueDateTime":"dateTime","StructureMap.group.rule.source.defaultValueDecimal":"decimal","StructureMap.group.rule.source.defaultValueDistance":"Distance","StructureMap.group.rule.source.defaultValueDosage":"Dosage","StructureMap.group.rule.source.defaultValueDuration":"Duration","StructureMap.group.rule.source.defaultValueExpression":"Expression","StructureMap.group.rule.source.defaultValueHumanName":"HumanName","StructureMap.group.rule.source.defaultValueId":"id","StructureMap.group.rule.source.defaultValueIdentifier":"Identifier","StructureMap.group.rule.source.defaultValueInstant":"instant","StructureMap.group.rule.source.defaultValueInteger":"integer","StructureMap.group.rule.source.defaultValueMarkdown":"markdown","StructureMap.group.rule.source.defaultValueMeta":"Meta","StructureMap.group.rule.source.defaultValueMoney":"Money","StructureMap.group.rule.source.defaultValueOid":"oid","StructureMap.group.rule.source.defaultValueParameterDefinition":"ParameterDefinition","StructureMap.group.rule.source.defaultValuePeriod":"Period","StructureMap.group.rule.source.defaultValuePositiveInt":"positiveInt","StructureMap.group.rule.source.defaultValueQuantity":"Quantity","StructureMap.group.rule.source.defaultValueRange":"Range","StructureMap.group.rule.source.defaultValueRatio":"Ratio","StructureMap.group.rule.source.defaultValueReference":"Reference","StructureMap.group.rule.source.defaultValueRelatedArtifact":"RelatedArtifact","StructureMap.group.rule.source.defaultValueSampledData":"SampledData","StructureMap.group.rule.source.defaultValueSignature":"Signature","StructureMap.group.rule.source.defaultValueString":"string","StructureMap.group.rule.source.defaultValueTime":"time","StructureMap.group.rule.source.defaultValueTiming":"Timing","StructureMap.group.rule.source.defaultValueTriggerDefinition":"TriggerDefinition","StructureMap.group.rule.source.defaultValueUnsignedInt":"unsignedInt","StructureMap.group.rule.source.defaultValueUri":"uri","StructureMap.group.rule.source.defaultValueUrl":"url","StructureMap.group.rule.source.defaultValueUsageContext":"UsageContext","StructureMap.group.rule.source.defaultValueUuid":"uuid","StructureMap.group.rule.source.element":"string","StructureMap.group.rule.source.extension":"Extension","StructureMap.group.rule.source.id":"System.String","StructureMap.group.rule.source.listMode":"code","StructureMap.group.rule.source.logMessage":"string","StructureMap.group.rule.source.max":"string","StructureMap.group.rule.source.min":"integer","StructureMap.group.rule.source.modifierExtension":"Extension","StructureMap.group.rule.source.type":"string","StructureMap.group.rule.source.variable":"id","StructureMap.group.rule.target":"BackboneElement","StructureMap.group.rule.target.context":"id","StructureMap.group.rule.target.contextType":"code","StructureMap.group.rule.target.element":"string","StructureMap.group.rule.target.extension":"Extension","StructureMap.group.rule.target.id":"System.String","StructureMap.group.rule.target.listMode":"code","StructureMap.group.rule.target.listRuleId":"id","StructureMap.group.rule.target.modifierExtension":"Extension","StructureMap.group.rule.target.parameter":"BackboneElement","StructureMap.group.rule.target.parameter.extension":"Extension","StructureMap.group.rule.target.parameter.id":"System.String","StructureMap.group.rule.target.parameter.modifierExtension":"Extension","StructureMap.group.rule.target.parameter.valueBoolean":"boolean","StructureMap.group.rule.target.parameter.valueDecimal":"decimal","StructureMap.group.rule.target.parameter.valueId":"id","StructureMap.group.rule.target.parameter.valueInteger":"integer","StructureMap.group.rule.target.parameter.valueString":"string","StructureMap.group.rule.target.transform":"code","StructureMap.group.rule.target.variable":"id","StructureMap.group.typeMode":"code","StructureMap.id":"System.String","StructureMap.identifier":"Identifier","StructureMap.implicitRules":"uri","StructureMap.import":"canonical","StructureMap.jurisdiction":"CodeableConcept","StructureMap.language":"code","StructureMap.meta":"Meta","StructureMap.modifierExtension":"Extension","StructureMap.name":"string","StructureMap.publisher":"string","StructureMap.purpose":"markdown","StructureMap.status":"code","StructureMap.structure":"BackboneElement","StructureMap.structure.alias":"string","StructureMap.structure.documentation":"string","StructureMap.structure.extension":"Extension","StructureMap.structure.id":"System.String","StructureMap.structure.mode":"code","StructureMap.structure.modifierExtension":"Extension","StructureMap.structure.url":"canonical","StructureMap.text":"Narrative","StructureMap.title":"string","StructureMap.url":"uri","StructureMap.useContext":"UsageContext","StructureMap.version":"string","Subscription.channel":"BackboneElement","Subscription.channel.endpoint":"url","Subscription.channel.extension":"Extension","Subscription.channel.header":"string","Subscription.channel.id":"System.String","Subscription.channel.modifierExtension":"Extension","Subscription.channel.payload":"code","Subscription.channel.type":"code","Subscription.contact":"ContactPoint","Subscription.contained":"Resource","Subscription.criteria":"string","Subscription.end":"instant","Subscription.error":"string","Subscription.extension":"Extension","Subscription.id":"System.String","Subscription.implicitRules":"uri","Subscription.language":"code","Subscription.meta":"Meta","Subscription.modifierExtension":"Extension","Subscription.reason":"string","Subscription.status":"code","Subscription.text":"Narrative","Substance.category":"CodeableConcept","Substance.code":"CodeableConcept","Substance.contained":"Resource","Substance.description":"string","Substance.extension":"Extension","Substance.id":"System.String","Substance.identifier":"Identifier","Substance.implicitRules":"uri","Substance.ingredient":"BackboneElement","Substance.ingredient.extension":"Extension","Substance.ingredient.id":"System.String","Substance.ingredient.modifierExtension":"Extension","Substance.ingredient.quantity":"Ratio","Substance.ingredient.substanceCodeableConcept":"CodeableConcept","Substance.ingredient.substanceReference":"Reference","Substance.instance":"BackboneElement","Substance.instance.expiry":"dateTime","Substance.instance.extension":"Extension","Substance.instance.id":"System.String","Substance.instance.identifier":"Identifier","Substance.instance.modifierExtension":"Extension","Substance.instance.quantity":"Quantity","Substance.language":"code","Substance.meta":"Meta","Substance.modifierExtension":"Extension","Substance.status":"code","Substance.text":"Narrative","SubstanceAmount.amountQuantity":"Quantity","SubstanceAmount.amountRange":"Range","SubstanceAmount.amountString":"string","SubstanceAmount.amountText":"string","SubstanceAmount.amountType":"CodeableConcept","SubstanceAmount.extension":"Extension","SubstanceAmount.id":"System.String","SubstanceAmount.modifierExtension":"Extension","SubstanceAmount.referenceRange":"Element","SubstanceAmount.referenceRange.extension":"Extension","SubstanceAmount.referenceRange.highLimit":"Quantity","SubstanceAmount.referenceRange.id":"System.String","SubstanceAmount.referenceRange.lowLimit":"Quantity","SubstanceNucleicAcid.areaOfHybridisation":"string","SubstanceNucleicAcid.contained":"Resource","SubstanceNucleicAcid.extension":"Extension","SubstanceNucleicAcid.id":"System.String","SubstanceNucleicAcid.implicitRules":"uri","SubstanceNucleicAcid.language":"code","SubstanceNucleicAcid.meta":"Meta","SubstanceNucleicAcid.modifierExtension":"Extension","SubstanceNucleicAcid.numberOfSubunits":"integer","SubstanceNucleicAcid.oligoNucleotideType":"CodeableConcept","SubstanceNucleicAcid.sequenceType":"CodeableConcept","SubstanceNucleicAcid.subunit":"BackboneElement","SubstanceNucleicAcid.subunit.extension":"Extension","SubstanceNucleicAcid.subunit.fivePrime":"CodeableConcept","SubstanceNucleicAcid.subunit.id":"System.String","SubstanceNucleicAcid.subunit.length":"integer","SubstanceNucleicAcid.subunit.linkage":"BackboneElement","SubstanceNucleicAcid.subunit.linkage.connectivity":"string","SubstanceNucleicAcid.subunit.linkage.extension":"Extension","SubstanceNucleicAcid.subunit.linkage.id":"System.String","SubstanceNucleicAcid.subunit.linkage.identifier":"Identifier","SubstanceNucleicAcid.subunit.linkage.modifierExtension":"Extension","SubstanceNucleicAcid.subunit.linkage.name":"string","SubstanceNucleicAcid.subunit.linkage.residueSite":"string","SubstanceNucleicAcid.subunit.modifierExtension":"Extension","SubstanceNucleicAcid.subunit.sequence":"string","SubstanceNucleicAcid.subunit.sequenceAttachment":"Attachment","SubstanceNucleicAcid.subunit.subunit":"integer","SubstanceNucleicAcid.subunit.sugar":"BackboneElement","SubstanceNucleicAcid.subunit.sugar.extension":"Extension","SubstanceNucleicAcid.subunit.sugar.id":"System.String","SubstanceNucleicAcid.subunit.sugar.identifier":"Identifier","SubstanceNucleicAcid.subunit.sugar.modifierExtension":"Extension","SubstanceNucleicAcid.subunit.sugar.name":"string","SubstanceNucleicAcid.subunit.sugar.residueSite":"string","SubstanceNucleicAcid.subunit.threePrime":"CodeableConcept","SubstanceNucleicAcid.text":"Narrative","SubstancePolymer.class":"CodeableConcept","SubstancePolymer.contained":"Resource","SubstancePolymer.copolymerConnectivity":"CodeableConcept","SubstancePolymer.extension":"Extension","SubstancePolymer.geometry":"CodeableConcept","SubstancePolymer.id":"System.String","SubstancePolymer.implicitRules":"uri","SubstancePolymer.language":"code","SubstancePolymer.meta":"Meta","SubstancePolymer.modification":"string","SubstancePolymer.modifierExtension":"Extension","SubstancePolymer.monomerSet":"BackboneElement","SubstancePolymer.monomerSet.extension":"Extension","SubstancePolymer.monomerSet.id":"System.String","SubstancePolymer.monomerSet.modifierExtension":"Extension","SubstancePolymer.monomerSet.ratioType":"CodeableConcept","SubstancePolymer.monomerSet.startingMaterial":"BackboneElement","SubstancePolymer.monomerSet.startingMaterial.amount":"SubstanceAmount","SubstancePolymer.monomerSet.startingMaterial.extension":"Extension","SubstancePolymer.monomerSet.startingMaterial.id":"System.String","SubstancePolymer.monomerSet.startingMaterial.isDefining":"boolean","SubstancePolymer.monomerSet.startingMaterial.material":"CodeableConcept","SubstancePolymer.monomerSet.startingMaterial.modifierExtension":"Extension","SubstancePolymer.monomerSet.startingMaterial.type":"CodeableConcept","SubstancePolymer.repeat":"BackboneElement","SubstancePolymer.repeat.averageMolecularFormula":"string","SubstancePolymer.repeat.extension":"Extension","SubstancePolymer.repeat.id":"System.String","SubstancePolymer.repeat.modifierExtension":"Extension","SubstancePolymer.repeat.numberOfUnits":"integer","SubstancePolymer.repeat.repeatUnit":"BackboneElement","SubstancePolymer.repeat.repeatUnit.amount":"SubstanceAmount","SubstancePolymer.repeat.repeatUnit.degreeOfPolymerisation":"BackboneElement","SubstancePolymer.repeat.repeatUnit.degreeOfPolymerisation.amount":"SubstanceAmount","SubstancePolymer.repeat.repeatUnit.degreeOfPolymerisation.degree":"CodeableConcept","SubstancePolymer.repeat.repeatUnit.degreeOfPolymerisation.extension":"Extension","SubstancePolymer.repeat.repeatUnit.degreeOfPolymerisation.id":"System.String","SubstancePolymer.repeat.repeatUnit.degreeOfPolymerisation.modifierExtension":"Extension","SubstancePolymer.repeat.repeatUnit.extension":"Extension","SubstancePolymer.repeat.repeatUnit.id":"System.String","SubstancePolymer.repeat.repeatUnit.modifierExtension":"Extension","SubstancePolymer.repeat.repeatUnit.orientationOfPolymerisation":"CodeableConcept","SubstancePolymer.repeat.repeatUnit.repeatUnit":"string","SubstancePolymer.repeat.repeatUnit.structuralRepresentation":"BackboneElement","SubstancePolymer.repeat.repeatUnit.structuralRepresentation.attachment":"Attachment","SubstancePolymer.repeat.repeatUnit.structuralRepresentation.extension":"Extension","SubstancePolymer.repeat.repeatUnit.structuralRepresentation.id":"System.String","SubstancePolymer.repeat.repeatUnit.structuralRepresentation.modifierExtension":"Extension","SubstancePolymer.repeat.repeatUnit.structuralRepresentation.representation":"string","SubstancePolymer.repeat.repeatUnit.structuralRepresentation.type":"CodeableConcept","SubstancePolymer.repeat.repeatUnitAmountType":"CodeableConcept","SubstancePolymer.text":"Narrative","SubstanceProtein.contained":"Resource","SubstanceProtein.disulfideLinkage":"string","SubstanceProtein.extension":"Extension","SubstanceProtein.id":"System.String","SubstanceProtein.implicitRules":"uri","SubstanceProtein.language":"code","SubstanceProtein.meta":"Meta","SubstanceProtein.modifierExtension":"Extension","SubstanceProtein.numberOfSubunits":"integer","SubstanceProtein.sequenceType":"CodeableConcept","SubstanceProtein.subunit":"BackboneElement","SubstanceProtein.subunit.cTerminalModification":"string","SubstanceProtein.subunit.cTerminalModificationId":"Identifier","SubstanceProtein.subunit.extension":"Extension","SubstanceProtein.subunit.id":"System.String","SubstanceProtein.subunit.length":"integer","SubstanceProtein.subunit.modifierExtension":"Extension","SubstanceProtein.subunit.nTerminalModification":"string","SubstanceProtein.subunit.nTerminalModificationId":"Identifier","SubstanceProtein.subunit.sequence":"string","SubstanceProtein.subunit.sequenceAttachment":"Attachment","SubstanceProtein.subunit.subunit":"integer","SubstanceProtein.text":"Narrative","SubstanceReferenceInformation.classification":"BackboneElement","SubstanceReferenceInformation.classification.classification":"CodeableConcept","SubstanceReferenceInformation.classification.domain":"CodeableConcept","SubstanceReferenceInformation.classification.extension":"Extension","SubstanceReferenceInformation.classification.id":"System.String","SubstanceReferenceInformation.classification.modifierExtension":"Extension","SubstanceReferenceInformation.classification.source":"Reference","SubstanceReferenceInformation.classification.subtype":"CodeableConcept","SubstanceReferenceInformation.comment":"string","SubstanceReferenceInformation.contained":"Resource","SubstanceReferenceInformation.extension":"Extension","SubstanceReferenceInformation.gene":"BackboneElement","SubstanceReferenceInformation.gene.extension":"Extension","SubstanceReferenceInformation.gene.gene":"CodeableConcept","SubstanceReferenceInformation.gene.geneSequenceOrigin":"CodeableConcept","SubstanceReferenceInformation.gene.id":"System.String","SubstanceReferenceInformation.gene.modifierExtension":"Extension","SubstanceReferenceInformation.gene.source":"Reference","SubstanceReferenceInformation.geneElement":"BackboneElement","SubstanceReferenceInformation.geneElement.element":"Identifier","SubstanceReferenceInformation.geneElement.extension":"Extension","SubstanceReferenceInformation.geneElement.id":"System.String","SubstanceReferenceInformation.geneElement.modifierExtension":"Extension","SubstanceReferenceInformation.geneElement.source":"Reference","SubstanceReferenceInformation.geneElement.type":"CodeableConcept","SubstanceReferenceInformation.id":"System.String","SubstanceReferenceInformation.implicitRules":"uri","SubstanceReferenceInformation.language":"code","SubstanceReferenceInformation.meta":"Meta","SubstanceReferenceInformation.modifierExtension":"Extension","SubstanceReferenceInformation.target":"BackboneElement","SubstanceReferenceInformation.target.amountQuantity":"Quantity","SubstanceReferenceInformation.target.amountRange":"Range","SubstanceReferenceInformation.target.amountString":"string","SubstanceReferenceInformation.target.amountType":"CodeableConcept","SubstanceReferenceInformation.target.extension":"Extension","SubstanceReferenceInformation.target.id":"System.String","SubstanceReferenceInformation.target.interaction":"CodeableConcept","SubstanceReferenceInformation.target.modifierExtension":"Extension","SubstanceReferenceInformation.target.organism":"CodeableConcept","SubstanceReferenceInformation.target.organismType":"CodeableConcept","SubstanceReferenceInformation.target.source":"Reference","SubstanceReferenceInformation.target.target":"Identifier","SubstanceReferenceInformation.target.type":"CodeableConcept","SubstanceReferenceInformation.text":"Narrative","SubstanceSourceMaterial.contained":"Resource","SubstanceSourceMaterial.countryOfOrigin":"CodeableConcept","SubstanceSourceMaterial.developmentStage":"CodeableConcept","SubstanceSourceMaterial.extension":"Extension","SubstanceSourceMaterial.fractionDescription":"BackboneElement","SubstanceSourceMaterial.fractionDescription.extension":"Extension","SubstanceSourceMaterial.fractionDescription.fraction":"string","SubstanceSourceMaterial.fractionDescription.id":"System.String","SubstanceSourceMaterial.fractionDescription.materialType":"CodeableConcept","SubstanceSourceMaterial.fractionDescription.modifierExtension":"Extension","SubstanceSourceMaterial.geographicalLocation":"string","SubstanceSourceMaterial.id":"System.String","SubstanceSourceMaterial.implicitRules":"uri","SubstanceSourceMaterial.language":"code","SubstanceSourceMaterial.meta":"Meta","SubstanceSourceMaterial.modifierExtension":"Extension","SubstanceSourceMaterial.organism":"BackboneElement","SubstanceSourceMaterial.organism.author":"BackboneElement","SubstanceSourceMaterial.organism.author.authorDescription":"string","SubstanceSourceMaterial.organism.author.authorType":"CodeableConcept","SubstanceSourceMaterial.organism.author.extension":"Extension","SubstanceSourceMaterial.organism.author.id":"System.String","SubstanceSourceMaterial.organism.author.modifierExtension":"Extension","SubstanceSourceMaterial.organism.extension":"Extension","SubstanceSourceMaterial.organism.family":"CodeableConcept","SubstanceSourceMaterial.organism.genus":"CodeableConcept","SubstanceSourceMaterial.organism.hybrid":"BackboneElement","SubstanceSourceMaterial.organism.hybrid.extension":"Extension","SubstanceSourceMaterial.organism.hybrid.hybridType":"CodeableConcept","SubstanceSourceMaterial.organism.hybrid.id":"System.String","SubstanceSourceMaterial.organism.hybrid.maternalOrganismId":"string","SubstanceSourceMaterial.organism.hybrid.maternalOrganismName":"string","SubstanceSourceMaterial.organism.hybrid.modifierExtension":"Extension","SubstanceSourceMaterial.organism.hybrid.paternalOrganismId":"string","SubstanceSourceMaterial.organism.hybrid.paternalOrganismName":"string","SubstanceSourceMaterial.organism.id":"System.String","SubstanceSourceMaterial.organism.intraspecificDescription":"string","SubstanceSourceMaterial.organism.intraspecificType":"CodeableConcept","SubstanceSourceMaterial.organism.modifierExtension":"Extension","SubstanceSourceMaterial.organism.organismGeneral":"BackboneElement","SubstanceSourceMaterial.organism.organismGeneral.class":"CodeableConcept","SubstanceSourceMaterial.organism.organismGeneral.extension":"Extension","SubstanceSourceMaterial.organism.organismGeneral.id":"System.String","SubstanceSourceMaterial.organism.organismGeneral.kingdom":"CodeableConcept","SubstanceSourceMaterial.organism.organismGeneral.modifierExtension":"Extension","SubstanceSourceMaterial.organism.organismGeneral.order":"CodeableConcept","SubstanceSourceMaterial.organism.organismGeneral.phylum":"CodeableConcept","SubstanceSourceMaterial.organism.species":"CodeableConcept","SubstanceSourceMaterial.organismId":"Identifier","SubstanceSourceMaterial.organismName":"string","SubstanceSourceMaterial.parentSubstanceId":"Identifier","SubstanceSourceMaterial.parentSubstanceName":"string","SubstanceSourceMaterial.partDescription":"BackboneElement","SubstanceSourceMaterial.partDescription.extension":"Extension","SubstanceSourceMaterial.partDescription.id":"System.String","SubstanceSourceMaterial.partDescription.modifierExtension":"Extension","SubstanceSourceMaterial.partDescription.part":"CodeableConcept","SubstanceSourceMaterial.partDescription.partLocation":"CodeableConcept","SubstanceSourceMaterial.sourceMaterialClass":"CodeableConcept","SubstanceSourceMaterial.sourceMaterialState":"CodeableConcept","SubstanceSourceMaterial.sourceMaterialType":"CodeableConcept","SubstanceSourceMaterial.text":"Narrative","SubstanceSpecification.code":"BackboneElement","SubstanceSpecification.code.code":"CodeableConcept","SubstanceSpecification.code.comment":"string","SubstanceSpecification.code.extension":"Extension","SubstanceSpecification.code.id":"System.String","SubstanceSpecification.code.modifierExtension":"Extension","SubstanceSpecification.code.source":"Reference","SubstanceSpecification.code.status":"CodeableConcept","SubstanceSpecification.code.statusDate":"dateTime","SubstanceSpecification.comment":"string","SubstanceSpecification.contained":"Resource","SubstanceSpecification.description":"string","SubstanceSpecification.domain":"CodeableConcept","SubstanceSpecification.extension":"Extension","SubstanceSpecification.id":"System.String","SubstanceSpecification.identifier":"Identifier","SubstanceSpecification.implicitRules":"uri","SubstanceSpecification.language":"code","SubstanceSpecification.meta":"Meta","SubstanceSpecification.modifierExtension":"Extension","SubstanceSpecification.moiety":"BackboneElement","SubstanceSpecification.moiety.amountQuantity":"Quantity","SubstanceSpecification.moiety.amountString":"string","SubstanceSpecification.moiety.extension":"Extension","SubstanceSpecification.moiety.id":"System.String","SubstanceSpecification.moiety.identifier":"Identifier","SubstanceSpecification.moiety.modifierExtension":"Extension","SubstanceSpecification.moiety.molecularFormula":"string","SubstanceSpecification.moiety.name":"string","SubstanceSpecification.moiety.opticalActivity":"CodeableConcept","SubstanceSpecification.moiety.role":"CodeableConcept","SubstanceSpecification.moiety.stereochemistry":"CodeableConcept","SubstanceSpecification.name":"BackboneElement","SubstanceSpecification.name.domain":"CodeableConcept","SubstanceSpecification.name.extension":"Extension","SubstanceSpecification.name.id":"System.String","SubstanceSpecification.name.jurisdiction":"CodeableConcept","SubstanceSpecification.name.language":"CodeableConcept","SubstanceSpecification.name.modifierExtension":"Extension","SubstanceSpecification.name.name":"string","SubstanceSpecification.name.official":"BackboneElement","SubstanceSpecification.name.official.authority":"CodeableConcept","SubstanceSpecification.name.official.date":"dateTime","SubstanceSpecification.name.official.extension":"Extension","SubstanceSpecification.name.official.id":"System.String","SubstanceSpecification.name.official.modifierExtension":"Extension","SubstanceSpecification.name.official.status":"CodeableConcept","SubstanceSpecification.name.preferred":"boolean","SubstanceSpecification.name.source":"Reference","SubstanceSpecification.name.status":"CodeableConcept","SubstanceSpecification.name.type":"CodeableConcept","SubstanceSpecification.nucleicAcid":"Reference","SubstanceSpecification.polymer":"Reference","SubstanceSpecification.property":"BackboneElement","SubstanceSpecification.property.amountQuantity":"Quantity","SubstanceSpecification.property.amountString":"string","SubstanceSpecification.property.category":"CodeableConcept","SubstanceSpecification.property.code":"CodeableConcept","SubstanceSpecification.property.definingSubstanceCodeableConcept":"CodeableConcept","SubstanceSpecification.property.definingSubstanceReference":"Reference","SubstanceSpecification.property.extension":"Extension","SubstanceSpecification.property.id":"System.String","SubstanceSpecification.property.modifierExtension":"Extension","SubstanceSpecification.property.parameters":"string","SubstanceSpecification.protein":"Reference","SubstanceSpecification.referenceInformation":"Reference","SubstanceSpecification.relationship":"BackboneElement","SubstanceSpecification.relationship.amountQuantity":"Quantity","SubstanceSpecification.relationship.amountRange":"Range","SubstanceSpecification.relationship.amountRatio":"Ratio","SubstanceSpecification.relationship.amountRatioLowLimit":"Ratio","SubstanceSpecification.relationship.amountString":"string","SubstanceSpecification.relationship.amountType":"CodeableConcept","SubstanceSpecification.relationship.extension":"Extension","SubstanceSpecification.relationship.id":"System.String","SubstanceSpecification.relationship.isDefining":"boolean","SubstanceSpecification.relationship.modifierExtension":"Extension","SubstanceSpecification.relationship.relationship":"CodeableConcept","SubstanceSpecification.relationship.source":"Reference","SubstanceSpecification.relationship.substanceCodeableConcept":"CodeableConcept","SubstanceSpecification.relationship.substanceReference":"Reference","SubstanceSpecification.source":"Reference","SubstanceSpecification.sourceMaterial":"Reference","SubstanceSpecification.status":"CodeableConcept","SubstanceSpecification.structure":"BackboneElement","SubstanceSpecification.structure.extension":"Extension","SubstanceSpecification.structure.id":"System.String","SubstanceSpecification.structure.isotope":"BackboneElement","SubstanceSpecification.structure.isotope.extension":"Extension","SubstanceSpecification.structure.isotope.halfLife":"Quantity","SubstanceSpecification.structure.isotope.id":"System.String","SubstanceSpecification.structure.isotope.identifier":"Identifier","SubstanceSpecification.structure.isotope.modifierExtension":"Extension","SubstanceSpecification.structure.isotope.molecularWeight":"BackboneElement","SubstanceSpecification.structure.isotope.molecularWeight.amount":"Quantity","SubstanceSpecification.structure.isotope.molecularWeight.extension":"Extension","SubstanceSpecification.structure.isotope.molecularWeight.id":"System.String","SubstanceSpecification.structure.isotope.molecularWeight.method":"CodeableConcept","SubstanceSpecification.structure.isotope.molecularWeight.modifierExtension":"Extension","SubstanceSpecification.structure.isotope.molecularWeight.type":"CodeableConcept","SubstanceSpecification.structure.isotope.name":"CodeableConcept","SubstanceSpecification.structure.isotope.substitution":"CodeableConcept","SubstanceSpecification.structure.modifierExtension":"Extension","SubstanceSpecification.structure.molecularFormula":"string","SubstanceSpecification.structure.molecularFormulaByMoiety":"string","SubstanceSpecification.structure.opticalActivity":"CodeableConcept","SubstanceSpecification.structure.representation":"BackboneElement","SubstanceSpecification.structure.representation.attachment":"Attachment","SubstanceSpecification.structure.representation.extension":"Extension","SubstanceSpecification.structure.representation.id":"System.String","SubstanceSpecification.structure.representation.modifierExtension":"Extension","SubstanceSpecification.structure.representation.representation":"string","SubstanceSpecification.structure.representation.type":"CodeableConcept","SubstanceSpecification.structure.source":"Reference","SubstanceSpecification.structure.stereochemistry":"CodeableConcept","SubstanceSpecification.text":"Narrative","SubstanceSpecification.type":"CodeableConcept","SupplyDelivery.basedOn":"Reference","SupplyDelivery.contained":"Resource","SupplyDelivery.destination":"Reference","SupplyDelivery.extension":"Extension","SupplyDelivery.id":"System.String","SupplyDelivery.identifier":"Identifier","SupplyDelivery.implicitRules":"uri","SupplyDelivery.language":"code","SupplyDelivery.meta":"Meta","SupplyDelivery.modifierExtension":"Extension","SupplyDelivery.occurrenceDateTime":"dateTime","SupplyDelivery.occurrencePeriod":"Period","SupplyDelivery.occurrenceTiming":"Timing","SupplyDelivery.partOf":"Reference","SupplyDelivery.patient":"Reference","SupplyDelivery.receiver":"Reference","SupplyDelivery.status":"code","SupplyDelivery.suppliedItem":"BackboneElement","SupplyDelivery.suppliedItem.extension":"Extension","SupplyDelivery.suppliedItem.id":"System.String","SupplyDelivery.suppliedItem.itemCodeableConcept":"CodeableConcept","SupplyDelivery.suppliedItem.itemReference":"Reference","SupplyDelivery.suppliedItem.modifierExtension":"Extension","SupplyDelivery.suppliedItem.quantity":"Quantity","SupplyDelivery.supplier":"Reference","SupplyDelivery.text":"Narrative","SupplyDelivery.type":"CodeableConcept","SupplyRequest.authoredOn":"dateTime","SupplyRequest.category":"CodeableConcept","SupplyRequest.contained":"Resource","SupplyRequest.deliverFrom":"Reference","SupplyRequest.deliverTo":"Reference","SupplyRequest.extension":"Extension","SupplyRequest.id":"System.String","SupplyRequest.identifier":"Identifier","SupplyRequest.implicitRules":"uri","SupplyRequest.itemCodeableConcept":"CodeableConcept","SupplyRequest.itemReference":"Reference","SupplyRequest.language":"code","SupplyRequest.meta":"Meta","SupplyRequest.modifierExtension":"Extension","SupplyRequest.occurrenceDateTime":"dateTime","SupplyRequest.occurrencePeriod":"Period","SupplyRequest.occurrenceTiming":"Timing","SupplyRequest.parameter":"BackboneElement","SupplyRequest.parameter.code":"CodeableConcept","SupplyRequest.parameter.extension":"Extension","SupplyRequest.parameter.id":"System.String","SupplyRequest.parameter.modifierExtension":"Extension","SupplyRequest.parameter.valueBoolean":"boolean","SupplyRequest.parameter.valueCodeableConcept":"CodeableConcept","SupplyRequest.parameter.valueQuantity":"Quantity","SupplyRequest.parameter.valueRange":"Range","SupplyRequest.priority":"code","SupplyRequest.quantity":"Quantity","SupplyRequest.reasonCode":"CodeableConcept","SupplyRequest.reasonReference":"Reference","SupplyRequest.requester":"Reference","SupplyRequest.status":"code","SupplyRequest.supplier":"Reference","SupplyRequest.text":"Narrative","Task.authoredOn":"dateTime","Task.basedOn":"Reference","Task.businessStatus":"CodeableConcept","Task.code":"CodeableConcept","Task.contained":"Resource","Task.description":"string","Task.encounter":"Reference","Task.executionPeriod":"Period","Task.extension":"Extension","Task.focus":"Reference","Task.for":"Reference","Task.groupIdentifier":"Identifier","Task.id":"System.String","Task.identifier":"Identifier","Task.implicitRules":"uri","Task.input":"BackboneElement","Task.input.extension":"Extension","Task.input.id":"System.String","Task.input.modifierExtension":"Extension","Task.input.type":"CodeableConcept","Task.input.valueAddress":"Address","Task.input.valueAge":"Age","Task.input.valueAnnotation":"Annotation","Task.input.valueAttachment":"Attachment","Task.input.valueBase64Binary":"base64Binary","Task.input.valueBoolean":"boolean","Task.input.valueCanonical":"canonical","Task.input.valueCode":"code","Task.input.valueCodeableConcept":"CodeableConcept","Task.input.valueCoding":"Coding","Task.input.valueContactDetail":"ContactDetail","Task.input.valueContactPoint":"ContactPoint","Task.input.valueContributor":"Contributor","Task.input.valueCount":"Count","Task.input.valueDataRequirement":"DataRequirement","Task.input.valueDate":"date","Task.input.valueDateTime":"dateTime","Task.input.valueDecimal":"decimal","Task.input.valueDistance":"Distance","Task.input.valueDosage":"Dosage","Task.input.valueDuration":"Duration","Task.input.valueExpression":"Expression","Task.input.valueHumanName":"HumanName","Task.input.valueId":"id","Task.input.valueIdentifier":"Identifier","Task.input.valueInstant":"instant","Task.input.valueInteger":"integer","Task.input.valueMarkdown":"markdown","Task.input.valueMeta":"Meta","Task.input.valueMoney":"Money","Task.input.valueOid":"oid","Task.input.valueParameterDefinition":"ParameterDefinition","Task.input.valuePeriod":"Period","Task.input.valuePositiveInt":"positiveInt","Task.input.valueQuantity":"Quantity","Task.input.valueRange":"Range","Task.input.valueRatio":"Ratio","Task.input.valueReference":"Reference","Task.input.valueRelatedArtifact":"RelatedArtifact","Task.input.valueSampledData":"SampledData","Task.input.valueSignature":"Signature","Task.input.valueString":"string","Task.input.valueTime":"time","Task.input.valueTiming":"Timing","Task.input.valueTriggerDefinition":"TriggerDefinition","Task.input.valueUnsignedInt":"unsignedInt","Task.input.valueUri":"uri","Task.input.valueUrl":"url","Task.input.valueUsageContext":"UsageContext","Task.input.valueUuid":"uuid","Task.instantiatesCanonical":"canonical","Task.instantiatesUri":"uri","Task.insurance":"Reference","Task.intent":"code","Task.language":"code","Task.lastModified":"dateTime","Task.location":"Reference","Task.meta":"Meta","Task.modifierExtension":"Extension","Task.note":"Annotation","Task.output":"BackboneElement","Task.output.extension":"Extension","Task.output.id":"System.String","Task.output.modifierExtension":"Extension","Task.output.type":"CodeableConcept","Task.output.valueAddress":"Address","Task.output.valueAge":"Age","Task.output.valueAnnotation":"Annotation","Task.output.valueAttachment":"Attachment","Task.output.valueBase64Binary":"base64Binary","Task.output.valueBoolean":"boolean","Task.output.valueCanonical":"canonical","Task.output.valueCode":"code","Task.output.valueCodeableConcept":"CodeableConcept","Task.output.valueCoding":"Coding","Task.output.valueContactDetail":"ContactDetail","Task.output.valueContactPoint":"ContactPoint","Task.output.valueContributor":"Contributor","Task.output.valueCount":"Count","Task.output.valueDataRequirement":"DataRequirement","Task.output.valueDate":"date","Task.output.valueDateTime":"dateTime","Task.output.valueDecimal":"decimal","Task.output.valueDistance":"Distance","Task.output.valueDosage":"Dosage","Task.output.valueDuration":"Duration","Task.output.valueExpression":"Expression","Task.output.valueHumanName":"HumanName","Task.output.valueId":"id","Task.output.valueIdentifier":"Identifier","Task.output.valueInstant":"instant","Task.output.valueInteger":"integer","Task.output.valueMarkdown":"markdown","Task.output.valueMeta":"Meta","Task.output.valueMoney":"Money","Task.output.valueOid":"oid","Task.output.valueParameterDefinition":"ParameterDefinition","Task.output.valuePeriod":"Period","Task.output.valuePositiveInt":"positiveInt","Task.output.valueQuantity":"Quantity","Task.output.valueRange":"Range","Task.output.valueRatio":"Ratio","Task.output.valueReference":"Reference","Task.output.valueRelatedArtifact":"RelatedArtifact","Task.output.valueSampledData":"SampledData","Task.output.valueSignature":"Signature","Task.output.valueString":"string","Task.output.valueTime":"time","Task.output.valueTiming":"Timing","Task.output.valueTriggerDefinition":"TriggerDefinition","Task.output.valueUnsignedInt":"unsignedInt","Task.output.valueUri":"uri","Task.output.valueUrl":"url","Task.output.valueUsageContext":"UsageContext","Task.output.valueUuid":"uuid","Task.owner":"Reference","Task.partOf":"Reference","Task.performerType":"CodeableConcept","Task.priority":"code","Task.reasonCode":"CodeableConcept","Task.reasonReference":"Reference","Task.relevantHistory":"Reference","Task.requester":"Reference","Task.restriction":"BackboneElement","Task.restriction.extension":"Extension","Task.restriction.id":"System.String","Task.restriction.modifierExtension":"Extension","Task.restriction.period":"Period","Task.restriction.recipient":"Reference","Task.restriction.repetitions":"positiveInt","Task.status":"code","Task.statusReason":"CodeableConcept","Task.text":"Narrative","TerminologyCapabilities.closure":"BackboneElement","TerminologyCapabilities.closure.extension":"Extension","TerminologyCapabilities.closure.id":"System.String","TerminologyCapabilities.closure.modifierExtension":"Extension","TerminologyCapabilities.closure.translation":"boolean","TerminologyCapabilities.codeSearch":"code","TerminologyCapabilities.codeSystem":"BackboneElement","TerminologyCapabilities.codeSystem.extension":"Extension","TerminologyCapabilities.codeSystem.id":"System.String","TerminologyCapabilities.codeSystem.modifierExtension":"Extension","TerminologyCapabilities.codeSystem.subsumption":"boolean","TerminologyCapabilities.codeSystem.uri":"canonical","TerminologyCapabilities.codeSystem.version":"BackboneElement","TerminologyCapabilities.codeSystem.version.code":"string","TerminologyCapabilities.codeSystem.version.compositional":"boolean","TerminologyCapabilities.codeSystem.version.extension":"Extension","TerminologyCapabilities.codeSystem.version.filter":"BackboneElement","TerminologyCapabilities.codeSystem.version.filter.code":"code","TerminologyCapabilities.codeSystem.version.filter.extension":"Extension","TerminologyCapabilities.codeSystem.version.filter.id":"System.String","TerminologyCapabilities.codeSystem.version.filter.modifierExtension":"Extension","TerminologyCapabilities.codeSystem.version.filter.op":"code","TerminologyCapabilities.codeSystem.version.id":"System.String","TerminologyCapabilities.codeSystem.version.isDefault":"boolean","TerminologyCapabilities.codeSystem.version.language":"code","TerminologyCapabilities.codeSystem.version.modifierExtension":"Extension","TerminologyCapabilities.codeSystem.version.property":"code","TerminologyCapabilities.contact":"ContactDetail","TerminologyCapabilities.contained":"Resource","TerminologyCapabilities.copyright":"markdown","TerminologyCapabilities.date":"dateTime","TerminologyCapabilities.description":"markdown","TerminologyCapabilities.expansion":"BackboneElement","TerminologyCapabilities.expansion.extension":"Extension","TerminologyCapabilities.expansion.hierarchical":"boolean","TerminologyCapabilities.expansion.id":"System.String","TerminologyCapabilities.expansion.incomplete":"boolean","TerminologyCapabilities.expansion.modifierExtension":"Extension","TerminologyCapabilities.expansion.paging":"boolean","TerminologyCapabilities.expansion.parameter":"BackboneElement","TerminologyCapabilities.expansion.parameter.documentation":"string","TerminologyCapabilities.expansion.parameter.extension":"Extension","TerminologyCapabilities.expansion.parameter.id":"System.String","TerminologyCapabilities.expansion.parameter.modifierExtension":"Extension","TerminologyCapabilities.expansion.parameter.name":"code","TerminologyCapabilities.expansion.textFilter":"markdown","TerminologyCapabilities.experimental":"boolean","TerminologyCapabilities.extension":"Extension","TerminologyCapabilities.id":"System.String","TerminologyCapabilities.implementation":"BackboneElement","TerminologyCapabilities.implementation.description":"string","TerminologyCapabilities.implementation.extension":"Extension","TerminologyCapabilities.implementation.id":"System.String","TerminologyCapabilities.implementation.modifierExtension":"Extension","TerminologyCapabilities.implementation.url":"url","TerminologyCapabilities.implicitRules":"uri","TerminologyCapabilities.jurisdiction":"CodeableConcept","TerminologyCapabilities.kind":"code","TerminologyCapabilities.language":"code","TerminologyCapabilities.lockedDate":"boolean","TerminologyCapabilities.meta":"Meta","TerminologyCapabilities.modifierExtension":"Extension","TerminologyCapabilities.name":"string","TerminologyCapabilities.publisher":"string","TerminologyCapabilities.purpose":"markdown","TerminologyCapabilities.software":"BackboneElement","TerminologyCapabilities.software.extension":"Extension","TerminologyCapabilities.software.id":"System.String","TerminologyCapabilities.software.modifierExtension":"Extension","TerminologyCapabilities.software.name":"string","TerminologyCapabilities.software.version":"string","TerminologyCapabilities.status":"code","TerminologyCapabilities.text":"Narrative","TerminologyCapabilities.title":"string","TerminologyCapabilities.translation":"BackboneElement","TerminologyCapabilities.translation.extension":"Extension","TerminologyCapabilities.translation.id":"System.String","TerminologyCapabilities.translation.modifierExtension":"Extension","TerminologyCapabilities.translation.needsMap":"boolean","TerminologyCapabilities.url":"uri","TerminologyCapabilities.useContext":"UsageContext","TerminologyCapabilities.validateCode":"BackboneElement","TerminologyCapabilities.validateCode.extension":"Extension","TerminologyCapabilities.validateCode.id":"System.String","TerminologyCapabilities.validateCode.modifierExtension":"Extension","TerminologyCapabilities.validateCode.translations":"boolean","TerminologyCapabilities.version":"string","TestReport.contained":"Resource","TestReport.extension":"Extension","TestReport.id":"System.String","TestReport.identifier":"Identifier","TestReport.implicitRules":"uri","TestReport.issued":"dateTime","TestReport.language":"code","TestReport.meta":"Meta","TestReport.modifierExtension":"Extension","TestReport.name":"string","TestReport.participant":"BackboneElement","TestReport.participant.display":"string","TestReport.participant.extension":"Extension","TestReport.participant.id":"System.String","TestReport.participant.modifierExtension":"Extension","TestReport.participant.type":"code","TestReport.participant.uri":"uri","TestReport.result":"code","TestReport.score":"decimal","TestReport.setup":"BackboneElement","TestReport.setup.action":"BackboneElement","TestReport.setup.action.assert":"BackboneElement","TestReport.setup.action.assert.detail":"string","TestReport.setup.action.assert.extension":"Extension","TestReport.setup.action.assert.id":"System.String","TestReport.setup.action.assert.message":"markdown","TestReport.setup.action.assert.modifierExtension":"Extension","TestReport.setup.action.assert.result":"code","TestReport.setup.action.extension":"Extension","TestReport.setup.action.id":"System.String","TestReport.setup.action.modifierExtension":"Extension","TestReport.setup.action.operation":"BackboneElement","TestReport.setup.action.operation.detail":"uri","TestReport.setup.action.operation.extension":"Extension","TestReport.setup.action.operation.id":"System.String","TestReport.setup.action.operation.message":"markdown","TestReport.setup.action.operation.modifierExtension":"Extension","TestReport.setup.action.operation.result":"code","TestReport.setup.extension":"Extension","TestReport.setup.id":"System.String","TestReport.setup.modifierExtension":"Extension","TestReport.status":"code","TestReport.teardown":"BackboneElement","TestReport.teardown.action":"BackboneElement","TestReport.teardown.action.extension":"Extension","TestReport.teardown.action.id":"System.String","TestReport.teardown.action.modifierExtension":"Extension","TestReport.teardown.extension":"Extension","TestReport.teardown.id":"System.String","TestReport.teardown.modifierExtension":"Extension","TestReport.test":"BackboneElement","TestReport.test.action":"BackboneElement","TestReport.test.action.extension":"Extension","TestReport.test.action.id":"System.String","TestReport.test.action.modifierExtension":"Extension","TestReport.test.description":"string","TestReport.test.extension":"Extension","TestReport.test.id":"System.String","TestReport.test.modifierExtension":"Extension","TestReport.test.name":"string","TestReport.testScript":"Reference","TestReport.tester":"string","TestReport.text":"Narrative","TestScript.contact":"ContactDetail","TestScript.contained":"Resource","TestScript.copyright":"markdown","TestScript.date":"dateTime","TestScript.description":"markdown","TestScript.destination":"BackboneElement","TestScript.destination.extension":"Extension","TestScript.destination.id":"System.String","TestScript.destination.index":"integer","TestScript.destination.modifierExtension":"Extension","TestScript.destination.profile":"Coding","TestScript.experimental":"boolean","TestScript.extension":"Extension","TestScript.fixture":"BackboneElement","TestScript.fixture.autocreate":"boolean","TestScript.fixture.autodelete":"boolean","TestScript.fixture.extension":"Extension","TestScript.fixture.id":"System.String","TestScript.fixture.modifierExtension":"Extension","TestScript.fixture.resource":"Reference","TestScript.id":"System.String","TestScript.identifier":"Identifier","TestScript.implicitRules":"uri","TestScript.jurisdiction":"CodeableConcept","TestScript.language":"code","TestScript.meta":"Meta","TestScript.metadata":"BackboneElement","TestScript.metadata.capability":"BackboneElement","TestScript.metadata.capability.capabilities":"canonical","TestScript.metadata.capability.description":"string","TestScript.metadata.capability.destination":"integer","TestScript.metadata.capability.extension":"Extension","TestScript.metadata.capability.id":"System.String","TestScript.metadata.capability.link":"uri","TestScript.metadata.capability.modifierExtension":"Extension","TestScript.metadata.capability.origin":"integer","TestScript.metadata.capability.required":"boolean","TestScript.metadata.capability.validated":"boolean","TestScript.metadata.extension":"Extension","TestScript.metadata.id":"System.String","TestScript.metadata.link":"BackboneElement","TestScript.metadata.link.description":"string","TestScript.metadata.link.extension":"Extension","TestScript.metadata.link.id":"System.String","TestScript.metadata.link.modifierExtension":"Extension","TestScript.metadata.link.url":"uri","TestScript.metadata.modifierExtension":"Extension","TestScript.modifierExtension":"Extension","TestScript.name":"string","TestScript.origin":"BackboneElement","TestScript.origin.extension":"Extension","TestScript.origin.id":"System.String","TestScript.origin.index":"integer","TestScript.origin.modifierExtension":"Extension","TestScript.origin.profile":"Coding","TestScript.profile":"Reference","TestScript.publisher":"string","TestScript.purpose":"markdown","TestScript.setup":"BackboneElement","TestScript.setup.action":"BackboneElement","TestScript.setup.action.assert":"BackboneElement","TestScript.setup.action.assert.compareToSourceExpression":"string","TestScript.setup.action.assert.compareToSourceId":"string","TestScript.setup.action.assert.compareToSourcePath":"string","TestScript.setup.action.assert.contentType":"code","TestScript.setup.action.assert.description":"string","TestScript.setup.action.assert.direction":"code","TestScript.setup.action.assert.expression":"string","TestScript.setup.action.assert.extension":"Extension","TestScript.setup.action.assert.headerField":"string","TestScript.setup.action.assert.id":"System.String","TestScript.setup.action.assert.label":"string","TestScript.setup.action.assert.minimumId":"string","TestScript.setup.action.assert.modifierExtension":"Extension","TestScript.setup.action.assert.navigationLinks":"boolean","TestScript.setup.action.assert.operator":"code","TestScript.setup.action.assert.path":"string","TestScript.setup.action.assert.requestMethod":"code","TestScript.setup.action.assert.requestURL":"string","TestScript.setup.action.assert.resource":"code","TestScript.setup.action.assert.response":"code","TestScript.setup.action.assert.responseCode":"string","TestScript.setup.action.assert.sourceId":"id","TestScript.setup.action.assert.validateProfileId":"id","TestScript.setup.action.assert.value":"string","TestScript.setup.action.assert.warningOnly":"boolean","TestScript.setup.action.extension":"Extension","TestScript.setup.action.id":"System.String","TestScript.setup.action.modifierExtension":"Extension","TestScript.setup.action.operation":"BackboneElement","TestScript.setup.action.operation.accept":"code","TestScript.setup.action.operation.contentType":"code","TestScript.setup.action.operation.description":"string","TestScript.setup.action.operation.destination":"integer","TestScript.setup.action.operation.encodeRequestUrl":"boolean","TestScript.setup.action.operation.extension":"Extension","TestScript.setup.action.operation.id":"System.String","TestScript.setup.action.operation.label":"string","TestScript.setup.action.operation.method":"code","TestScript.setup.action.operation.modifierExtension":"Extension","TestScript.setup.action.operation.origin":"integer","TestScript.setup.action.operation.params":"string","TestScript.setup.action.operation.requestHeader":"BackboneElement","TestScript.setup.action.operation.requestHeader.extension":"Extension","TestScript.setup.action.operation.requestHeader.field":"string","TestScript.setup.action.operation.requestHeader.id":"System.String","TestScript.setup.action.operation.requestHeader.modifierExtension":"Extension","TestScript.setup.action.operation.requestHeader.value":"string","TestScript.setup.action.operation.requestId":"id","TestScript.setup.action.operation.resource":"code","TestScript.setup.action.operation.responseId":"id","TestScript.setup.action.operation.sourceId":"id","TestScript.setup.action.operation.targetId":"id","TestScript.setup.action.operation.type":"Coding","TestScript.setup.action.operation.url":"string","TestScript.setup.extension":"Extension","TestScript.setup.id":"System.String","TestScript.setup.modifierExtension":"Extension","TestScript.status":"code","TestScript.teardown":"BackboneElement","TestScript.teardown.action":"BackboneElement","TestScript.teardown.action.extension":"Extension","TestScript.teardown.action.id":"System.String","TestScript.teardown.action.modifierExtension":"Extension","TestScript.teardown.extension":"Extension","TestScript.teardown.id":"System.String","TestScript.teardown.modifierExtension":"Extension","TestScript.test":"BackboneElement","TestScript.test.action":"BackboneElement","TestScript.test.action.extension":"Extension","TestScript.test.action.id":"System.String","TestScript.test.action.modifierExtension":"Extension","TestScript.test.description":"string","TestScript.test.extension":"Extension","TestScript.test.id":"System.String","TestScript.test.modifierExtension":"Extension","TestScript.test.name":"string","TestScript.text":"Narrative","TestScript.title":"string","TestScript.url":"uri","TestScript.useContext":"UsageContext","TestScript.variable":"BackboneElement","TestScript.variable.defaultValue":"string","TestScript.variable.description":"string","TestScript.variable.expression":"string","TestScript.variable.extension":"Extension","TestScript.variable.headerField":"string","TestScript.variable.hint":"string","TestScript.variable.id":"System.String","TestScript.variable.modifierExtension":"Extension","TestScript.variable.name":"string","TestScript.variable.path":"string","TestScript.variable.sourceId":"id","TestScript.version":"string","Timing.code":"CodeableConcept","Timing.event":"dateTime","Timing.extension":"Extension","Timing.id":"System.String","Timing.modifierExtension":"Extension","Timing.repeat":"Element","Timing.repeat.boundsDuration":"Duration","Timing.repeat.boundsPeriod":"Period","Timing.repeat.boundsRange":"Range","Timing.repeat.count":"positiveInt","Timing.repeat.countMax":"positiveInt","Timing.repeat.dayOfWeek":"code","Timing.repeat.duration":"decimal","Timing.repeat.durationMax":"decimal","Timing.repeat.durationUnit":"code","Timing.repeat.extension":"Extension","Timing.repeat.frequency":"positiveInt","Timing.repeat.frequencyMax":"positiveInt","Timing.repeat.id":"System.String","Timing.repeat.offset":"unsignedInt","Timing.repeat.period":"decimal","Timing.repeat.periodMax":"decimal","Timing.repeat.periodUnit":"code","Timing.repeat.timeOfDay":"time","Timing.repeat.when":"code","TriggerDefinition.condition":"Expression","TriggerDefinition.data":"DataRequirement","TriggerDefinition.extension":"Extension","TriggerDefinition.id":"System.String","TriggerDefinition.name":"string","TriggerDefinition.timingDate":"date","TriggerDefinition.timingDateTime":"dateTime","TriggerDefinition.timingReference":"Reference","TriggerDefinition.timingTiming":"Timing","TriggerDefinition.type":"code","UsageContext.code":"Coding","UsageContext.extension":"Extension","UsageContext.id":"System.String","UsageContext.valueCodeableConcept":"CodeableConcept","UsageContext.valueQuantity":"Quantity","UsageContext.valueRange":"Range","UsageContext.valueReference":"Reference","ValueSet.compose":"BackboneElement","ValueSet.compose.extension":"Extension","ValueSet.compose.id":"System.String","ValueSet.compose.inactive":"boolean","ValueSet.compose.include":"BackboneElement","ValueSet.compose.include.concept":"BackboneElement","ValueSet.compose.include.concept.code":"code","ValueSet.compose.include.concept.designation":"BackboneElement","ValueSet.compose.include.concept.designation.extension":"Extension","ValueSet.compose.include.concept.designation.id":"System.String","ValueSet.compose.include.concept.designation.language":"code","ValueSet.compose.include.concept.designation.modifierExtension":"Extension","ValueSet.compose.include.concept.designation.use":"Coding","ValueSet.compose.include.concept.designation.value":"string","ValueSet.compose.include.concept.display":"string","ValueSet.compose.include.concept.extension":"Extension","ValueSet.compose.include.concept.id":"System.String","ValueSet.compose.include.concept.modifierExtension":"Extension","ValueSet.compose.include.extension":"Extension","ValueSet.compose.include.filter":"BackboneElement","ValueSet.compose.include.filter.extension":"Extension","ValueSet.compose.include.filter.id":"System.String","ValueSet.compose.include.filter.modifierExtension":"Extension","ValueSet.compose.include.filter.op":"code","ValueSet.compose.include.filter.property":"code","ValueSet.compose.include.filter.value":"string","ValueSet.compose.include.id":"System.String","ValueSet.compose.include.modifierExtension":"Extension","ValueSet.compose.include.system":"uri","ValueSet.compose.include.valueSet":"canonical","ValueSet.compose.include.version":"string","ValueSet.compose.lockedDate":"date","ValueSet.compose.modifierExtension":"Extension","ValueSet.contact":"ContactDetail","ValueSet.contained":"Resource","ValueSet.copyright":"markdown","ValueSet.date":"dateTime","ValueSet.description":"markdown","ValueSet.expansion":"BackboneElement","ValueSet.expansion.contains":"BackboneElement","ValueSet.expansion.contains.abstract":"boolean","ValueSet.expansion.contains.code":"code","ValueSet.expansion.contains.display":"string","ValueSet.expansion.contains.extension":"Extension","ValueSet.expansion.contains.id":"System.String","ValueSet.expansion.contains.inactive":"boolean","ValueSet.expansion.contains.modifierExtension":"Extension","ValueSet.expansion.contains.system":"uri","ValueSet.expansion.contains.version":"string","ValueSet.expansion.extension":"Extension","ValueSet.expansion.id":"System.String","ValueSet.expansion.identifier":"uri","ValueSet.expansion.modifierExtension":"Extension","ValueSet.expansion.offset":"integer","ValueSet.expansion.parameter":"BackboneElement","ValueSet.expansion.parameter.extension":"Extension","ValueSet.expansion.parameter.id":"System.String","ValueSet.expansion.parameter.modifierExtension":"Extension","ValueSet.expansion.parameter.name":"string","ValueSet.expansion.parameter.valueBoolean":"boolean","ValueSet.expansion.parameter.valueCode":"code","ValueSet.expansion.parameter.valueDateTime":"dateTime","ValueSet.expansion.parameter.valueDecimal":"decimal","ValueSet.expansion.parameter.valueInteger":"integer","ValueSet.expansion.parameter.valueString":"string","ValueSet.expansion.parameter.valueUri":"uri","ValueSet.expansion.timestamp":"dateTime","ValueSet.expansion.total":"integer","ValueSet.experimental":"boolean","ValueSet.extension":"Extension","ValueSet.id":"System.String","ValueSet.identifier":"Identifier","ValueSet.immutable":"boolean","ValueSet.implicitRules":"uri","ValueSet.jurisdiction":"CodeableConcept","ValueSet.language":"code","ValueSet.meta":"Meta","ValueSet.modifierExtension":"Extension","ValueSet.name":"string","ValueSet.publisher":"string","ValueSet.purpose":"markdown","ValueSet.status":"code","ValueSet.text":"Narrative","ValueSet.title":"string","ValueSet.url":"uri","ValueSet.useContext":"UsageContext","ValueSet.version":"string","VerificationResult.attestation":"BackboneElement","VerificationResult.attestation.communicationMethod":"CodeableConcept","VerificationResult.attestation.date":"date","VerificationResult.attestation.extension":"Extension","VerificationResult.attestation.id":"System.String","VerificationResult.attestation.modifierExtension":"Extension","VerificationResult.attestation.onBehalfOf":"Reference","VerificationResult.attestation.proxyIdentityCertificate":"string","VerificationResult.attestation.proxySignature":"Signature","VerificationResult.attestation.sourceIdentityCertificate":"string","VerificationResult.attestation.sourceSignature":"Signature","VerificationResult.attestation.who":"Reference","VerificationResult.contained":"Resource","VerificationResult.extension":"Extension","VerificationResult.failureAction":"CodeableConcept","VerificationResult.frequency":"Timing","VerificationResult.id":"System.String","VerificationResult.implicitRules":"uri","VerificationResult.language":"code","VerificationResult.lastPerformed":"dateTime","VerificationResult.meta":"Meta","VerificationResult.modifierExtension":"Extension","VerificationResult.need":"CodeableConcept","VerificationResult.nextScheduled":"date","VerificationResult.primarySource":"BackboneElement","VerificationResult.primarySource.canPushUpdates":"CodeableConcept","VerificationResult.primarySource.communicationMethod":"CodeableConcept","VerificationResult.primarySource.extension":"Extension","VerificationResult.primarySource.id":"System.String","VerificationResult.primarySource.modifierExtension":"Extension","VerificationResult.primarySource.pushTypeAvailable":"CodeableConcept","VerificationResult.primarySource.type":"CodeableConcept","VerificationResult.primarySource.validationDate":"dateTime","VerificationResult.primarySource.validationStatus":"CodeableConcept","VerificationResult.primarySource.who":"Reference","VerificationResult.status":"code","VerificationResult.statusDate":"dateTime","VerificationResult.target":"Reference","VerificationResult.targetLocation":"string","VerificationResult.text":"Narrative","VerificationResult.validationProcess":"CodeableConcept","VerificationResult.validationType":"CodeableConcept","VerificationResult.validator":"BackboneElement","VerificationResult.validator.attestationSignature":"Signature","VerificationResult.validator.extension":"Extension","VerificationResult.validator.id":"System.String","VerificationResult.validator.identityCertificate":"string","VerificationResult.validator.modifierExtension":"Extension","VerificationResult.validator.organization":"Reference","VisionPrescription.contained":"Resource","VisionPrescription.created":"dateTime","VisionPrescription.dateWritten":"dateTime","VisionPrescription.encounter":"Reference","VisionPrescription.extension":"Extension","VisionPrescription.id":"System.String","VisionPrescription.identifier":"Identifier","VisionPrescription.implicitRules":"uri","VisionPrescription.language":"code","VisionPrescription.lensSpecification":"BackboneElement","VisionPrescription.lensSpecification.add":"decimal","VisionPrescription.lensSpecification.axis":"integer","VisionPrescription.lensSpecification.backCurve":"decimal","VisionPrescription.lensSpecification.brand":"string","VisionPrescription.lensSpecification.color":"string","VisionPrescription.lensSpecification.cylinder":"decimal","VisionPrescription.lensSpecification.diameter":"decimal","VisionPrescription.lensSpecification.duration":"Quantity","VisionPrescription.lensSpecification.extension":"Extension","VisionPrescription.lensSpecification.eye":"code","VisionPrescription.lensSpecification.id":"System.String","VisionPrescription.lensSpecification.modifierExtension":"Extension","VisionPrescription.lensSpecification.note":"Annotation","VisionPrescription.lensSpecification.power":"decimal","VisionPrescription.lensSpecification.prism":"BackboneElement","VisionPrescription.lensSpecification.prism.amount":"decimal","VisionPrescription.lensSpecification.prism.base":"code","VisionPrescription.lensSpecification.prism.extension":"Extension","VisionPrescription.lensSpecification.prism.id":"System.String","VisionPrescription.lensSpecification.prism.modifierExtension":"Extension","VisionPrescription.lensSpecification.product":"CodeableConcept","VisionPrescription.lensSpecification.sphere":"decimal","VisionPrescription.meta":"Meta","VisionPrescription.modifierExtension":"Extension","VisionPrescription.patient":"Reference","VisionPrescription.prescriber":"Reference","VisionPrescription.status":"code","VisionPrescription.text":"Narrative","base64Binary.extension":"Extension","base64Binary.id":"System.String","base64Binary.value":"System.String","boolean.extension":"Extension","boolean.id":"System.String","boolean.value":"System.Boolean","canonical.extension":"Extension","canonical.id":"System.String","canonical.value":"System.String","code.extension":"Extension","code.id":"System.String","code.value":"System.String","date.extension":"Extension","date.id":"System.String","date.value":"System.Date","dateTime.extension":"Extension","dateTime.id":"System.String","dateTime.value":"System.DateTime","decimal.extension":"Extension","decimal.id":"System.String","decimal.value":"System.Decimal","id.extension":"Extension","id.id":"System.String","id.value":"System.String","instant.extension":"Extension","instant.id":"System.String","instant.value":"System.DateTime","integer.extension":"Extension","integer.id":"System.String","integer.value":"System.Integer","markdown.extension":"Extension","markdown.id":"System.String","markdown.value":"System.String","oid.extension":"Extension","oid.id":"System.String","oid.value":"System.String","positiveInt.extension":"Extension","positiveInt.id":"System.String","positiveInt.value":"System.String","string.extension":"Extension","string.id":"System.String","string.value":"System.String","time.extension":"Extension","time.id":"System.String","time.value":"System.Time","unsignedInt.extension":"Extension","unsignedInt.id":"System.String","unsignedInt.value":"System.String","uri.extension":"Extension","uri.id":"System.String","uri.value":"System.String","url.extension":"Extension","url.id":"System.String","url.value":"System.String","uuid.extension":"Extension","uuid.id":"System.String","uuid.value":"System.String","xhtml.extension":"Extension","xhtml.id":"System.String","xhtml.value":"System.String"}')},2690:(e,t,n)=>{let i={};const a=n(566),r=n(6668),o=n(38);function s(e,t){let n;if(0===e.length||null==o.valData(e[0]))n=[];else{n=[e[0]];for(let i=1;i<e.length;i++){if(null==o.valData(e[i])){n=[];break}const a=[e[i]];n=o.isTrue(t(a,n))?a:n}}return n}i.aggregateMacro=function(e,t,n){return e.reduce(((e,n,i)=>e instanceof Promise?e.then((e=>(this.$index=i,this.$total=e,this.$total=t(n)))):(this.$index=i,this.$total=t(n))),this.$total=n)},i.countFn=function(e){return e&&e.length?e.length:0},i.sumFn=function(e){return i.aggregateMacro.apply(this,[e.slice(1),e=>{let t=o.arraify(e).filter((e=>null!=o.valData(e))),n=o.arraify(this.$total).filter((e=>null!=o.valData(e)));return 0===t.length||0===n.length?[]:a.plus(t,n)},e[0]])},i.minFn=function(e){return s(e,r.lt)},i.maxFn=function(e){return s(e,r.gt)},i.avgFn=function(e){const t=o.arraify(i.sumFn(e)),n=o.arraify(i.countFn(e));return 0===t.length||0===n.length?[]:a.div(t,n)},e.exports=i},2763:e=>{e.exports=e=>{e.availableTypes=new Set,Object.keys(e.type2Parent).forEach((t=>e.availableTypes.add(t))),Object.values(e.type2Parent).forEach((t=>e.availableTypes.add(t))),e.path2TypeWithoutElements={};for(let t in e.path2Type)"Element"!==e.path2Type[t]&&"BackboneElement"!==e.path2Type[t]&&(e.path2TypeWithoutElements[t]=e.path2Type[t])}},2784:(e,t,n)=>{const i=n(7931).Token,a=n(4674);e.exports=class extends a{constructor(e,t){super(e),this.channel=void 0===t?i.DEFAULT_CHANNEL:t}adjustSeekIndex(e){return this.nextTokenOnChannel(e,this.channel)}LB(e){if(0===e||this.index-e<0)return null;let t=this.index,n=1;for(;n<=e;)t=this.previousTokenOnChannel(t-1,this.channel),n+=1;return t<0?null:this.tokens[t]}LT(e){if(this.lazyInit(),0===e)return null;if(e<0)return this.LB(-e);let t=this.index,n=1;for(;n<e;)this.sync(t+1)&&(t=this.nextTokenOnChannel(t+1,this.channel)),n+=1;return this.tokens[t]}getNumberOfOnChannelTokens(){let e=0;this.fill();for(let t=0;t<this.tokens.length;t++){const n=this.tokens[t];if(n.channel===this.channel&&(e+=1),n.type===i.EOF)break}return e}}},2791:(e,t,n)=>{const{deepEqual:i}=n(7071),a={};function r(e,t){for(var n=0;n<e.length;n++)if(i(e[n],t[0]))return!0;return!1}a.contains=function(e,t){if(0==t.length)return[];if(0==e.length)return!1;if(t.length>1)throw new Error("Expected singleton on right side of contains, got "+JSON.stringify(t));return r(e,t)},a.in=function(e,t){if(0==e.length)return[];if(0==t.length)return!1;if(e.length>1)throw new Error("Expected singleton on right side of in, got "+JSON.stringify(t));return r(t,e)},e.exports=a},2864:e=>{let t={};function n(e){const t=/(\d+)(?:\.(\d+))?(?:[eE]([+-]?\d+))?$/.exec(""+ +e);if(!t)return 0;const n=t[2],i=t[3];return Math.max(0,("0"===n?0:(n||"").length)-(i||0))}function i(e,t){const n=Math.pow(10,t);return Math.round(e*n)/n}const a=t.roundToMaxPrecision=function(e){return 1e-8*Math.round(e/1e-8)};t.isEquivalent=function(e,t){if(Number.isInteger(e)&&Number.isInteger(t))return e===t;const a=Math.min(n(e),n(t));return 0===a?Math.round(e)===Math.round(t):i(e,a)===i(t,a)},t.isEqual=function(e,t){return a(e)===a(t)},e.exports=t},2926:(e,t,n)=>{var i=n(1805),a=n(1152),r=36e5,o=6e4,s=/[T ]/,l=/:/,c=/^(\d{2})$/,u=[/^([+-]\d{2})$/,/^([+-]\d{3})$/,/^([+-]\d{4})$/],m=/^(\d{4})/,d=[/^([+-]\d{4})/,/^([+-]\d{5})/,/^([+-]\d{6})/],f=/^-(\d{2})$/,p=/^-?(\d{3})$/,g=/^-?(\d{2})-?(\d{2})$/,h=/^-?W(\d{2})$/,y=/^-?W(\d{2})-?(\d{1})$/,C=/^(\d{2}([.,]\d*)?)$/,S=/^(\d{2}):?(\d{2}([.,]\d*)?)$/,b=/^(\d{2}):?(\d{2}):?(\d{2}([.,]\d*)?)$/,E=/([Z+-].*)$/,x=/^(Z)$/,v=/^([+-])(\d{2})$/,R=/^([+-])(\d{2}):?(\d{2})$/;function _(e,t,n){t=t||0,n=n||0;var i=new Date(0);i.setUTCFullYear(e,0,4);var a=7*t+n+1-(i.getUTCDay()||7);return i.setUTCDate(i.getUTCDate()+a),i}e.exports=function(e,t){if(a(e))return new Date(e.getTime());if("string"!=typeof e)return new Date(e);var n=(t||{}).additionalDigits;n=null==n?2:Number(n);var M,I,D,T=function(e){var t,n={},i=e.split(s);if(l.test(i[0])?(n.date=null,t=i[0]):(n.date=i[0],t=i[1]),t){var a=E.exec(t);a?(n.time=t.replace(a[1],""),n.timezone=a[1]):n.time=t}return n}(e),k=function(e,t){var n,i=u[t],a=d[t];if(n=m.exec(e)||a.exec(e)){var r=n[1];return{year:parseInt(r,10),restDateString:e.slice(r.length)}}if(n=c.exec(e)||i.exec(e)){var o=n[1];return{year:100*parseInt(o,10),restDateString:e.slice(o.length)}}return{year:null}}(T.date,n),P=k.year,O=function(e,t){if(null===t)return null;var n,i,a;if(0===e.length)return(i=new Date(0)).setUTCFullYear(t),i;if(n=f.exec(e))return i=new Date(0),a=parseInt(n[1],10)-1,i.setUTCFullYear(t,a),i;if(n=p.exec(e)){i=new Date(0);var r=parseInt(n[1],10);return i.setUTCFullYear(t,0,r),i}if(n=g.exec(e)){i=new Date(0),a=parseInt(n[1],10)-1;var o=parseInt(n[2],10);return i.setUTCFullYear(t,a,o),i}return(n=h.exec(e))?_(t,parseInt(n[1],10)-1):(n=y.exec(e))?_(t,parseInt(n[1],10)-1,parseInt(n[2],10)-1):null}(k.restDateString,P);if(O){var L,A=O.getTime(),N=0;if(T.time&&(N=function(e){var t,n,i;if(t=C.exec(e))return(n=parseFloat(t[1].replace(",",".")))%24*r;if(t=S.exec(e))return n=parseInt(t[1],10),i=parseFloat(t[2].replace(",",".")),n%24*r+i*o;if(t=b.exec(e)){n=parseInt(t[1],10),i=parseInt(t[2],10);var a=parseFloat(t[3].replace(",","."));return n%24*r+i*o+1e3*a}return null}(T.time)),T.timezone)M=T.timezone,L=((I=x.exec(M))?0:(I=v.exec(M))?(D=60*parseInt(I[2],10),"+"===I[1]?-D:D):(I=R.exec(M))?(D=60*parseInt(I[2],10)+parseInt(I[3],10),"+"===I[1]?-D:D):0)*o;else{var w=A+N,U=new Date(w);L=i(U);var B=new Date(w);B.setDate(U.getDate()+1);var q=i(B)-i(U);q>0&&(L+=q)}return new Date(A+N+L)}return new Date(e)}},2953:(e,t,n)=>{const{Set:i}=n(4623),{DFAState:a}=n(1576),{StarLoopEntryState:r}=n(976),{ATNConfigSet:o}=n(9191),{DFASerializer:s}=n(309),{LexerDFASerializer:l}=n(309);e.exports=class{constructor(e,t){if(void 0===t&&(t=0),this.atnStartState=e,this.decision=t,this._states=new i,this.s0=null,this.precedenceDfa=!1,e instanceof r&&e.isPrecedenceDecision){this.precedenceDfa=!0;const e=new a(null,new o);e.edges=[],e.isAcceptState=!1,e.requiresFullContext=!1,this.s0=e}}getPrecedenceStartState(e){if(!this.precedenceDfa)throw"Only precedence DFAs may contain a precedence start state.";return e<0||e>=this.s0.edges.length?null:this.s0.edges[e]||null}setPrecedenceStartState(e,t){if(!this.precedenceDfa)throw"Only precedence DFAs may contain a precedence start state.";e<0||(this.s0.edges[e]=t)}setPrecedenceDfa(e){if(this.precedenceDfa!==e){if(this._states=new i,e){const e=new a(null,new o);e.edges=[],e.isAcceptState=!1,e.requiresFullContext=!1,this.s0=e}else this.s0=null;this.precedenceDfa=e}}sortedStates(){return this._states.values().sort((function(e,t){return e.stateNumber-t.stateNumber}))}toString(e,t){return e=e||null,t=t||null,null===this.s0?"":new s(this,e,t).toString()}toLexerString(){return null===this.s0?"":new l(this).toString()}get states(){return this._states}}},3076:e=>{var t={orOp:function(e,t){if(Array.isArray(t)){if(!0===e)return!0;if(!1===e)return[];if(Array.isArray(e))return[]}return Array.isArray(e)?!0===t||[]:e||t},andOp:function(e,t){if(Array.isArray(t)){if(!0===e)return[];if(!1===e)return!1;if(Array.isArray(e))return[]}return Array.isArray(e)?!0===t&&[]:e&&t},xorOp:function(e,t){return Array.isArray(e)||Array.isArray(t)?[]:e&&!t||!e&&t},impliesOp:function(e,t){if(Array.isArray(t)){if(!0===e)return[];if(!1===e)return!0;if(Array.isArray(e))return[]}return Array.isArray(e)?!0===t||[]:!1===e||e&&t}};e.exports=t},3084:e=>{class t{constructor(e){void 0===e&&(e=null),this.readOnly=!1,this.verifyATN=null===e||e.verifyATN,this.generateRuleBypassTransitions=null!==e&&e.generateRuleBypassTransitions}}t.defaultOptions=new t,t.defaultOptions.readOnly=!0,e.exports=t},3203:(e,t,n)=>{e.exports.RecognitionException=n(188).RecognitionException,e.exports.NoViableAltException=n(188).NoViableAltException,e.exports.LexerNoViableAltException=n(188).LexerNoViableAltException,e.exports.InputMismatchException=n(188).InputMismatchException,e.exports.FailedPredicateException=n(188).FailedPredicateException,e.exports.DiagnosticErrorListener=n(5332),e.exports.BailErrorStrategy=n(3396).BailErrorStrategy,e.exports.DefaultErrorStrategy=n(3396).DefaultErrorStrategy,e.exports.ErrorListener=n(8845).ErrorListener},3279:(e,t,n)=>{const i=n(6307),a=n(2022);e.exports={...i,Trees:a}},3322:(e,t,n)=>{const{Token:i}=n(7931),{ConsoleErrorListener:a}=n(8845),{ProxyErrorListener:r}=n(8845);class o{constructor(){this._listeners=[a.INSTANCE],this._interp=null,this._stateNumber=-1}checkVersion(e){"4.9.3"!==e&&console.log("ANTLR runtime and generated code versions disagree: 4.9.3!="+e)}addErrorListener(e){this._listeners.push(e)}removeErrorListeners(){this._listeners=[]}getLiteralNames(){return Object.getPrototypeOf(this).constructor.literalNames||[]}getSymbolicNames(){return Object.getPrototypeOf(this).constructor.symbolicNames||[]}getTokenNames(){if(!this.tokenNames){const e=this.getLiteralNames(),t=this.getSymbolicNames(),n=e.length>t.length?e.length:t.length;this.tokenNames=[];for(let i=0;i<n;i++)this.tokenNames[i]=e[i]||t[i]||"<INVALID"}return this.tokenNames}getTokenTypeMap(){const e=this.getTokenNames();if(null===e)throw"The current recognizer does not provide a list of token names.";let t=this.tokenTypeMapCache[e];return void 0===t&&(t=e.reduce((function(e,t,n){e[t]=n})),t.EOF=i.EOF,this.tokenTypeMapCache[e]=t),t}getRuleIndexMap(){const e=this.ruleNames;if(null===e)throw"The current recognizer does not provide a list of rule names.";let t=this.ruleIndexMapCache[e];return void 0===t&&(t=e.reduce((function(e,t,n){e[t]=n})),this.ruleIndexMapCache[e]=t),t}getTokenType(e){const t=this.getTokenTypeMap()[e];return void 0!==t?t:i.INVALID_TYPE}getErrorHeader(e){return"line "+e.getOffendingToken().line+":"+e.getOffendingToken().column}getTokenErrorDisplay(e){if(null===e)return"<no token>";let t=e.text;return null===t&&(t=e.type===i.EOF?"<EOF>":"<"+e.type+">"),t=t.replace("\n","\\n").replace("\r","\\r").replace("\t","\\t"),"'"+t+"'"}getErrorListenerDispatch(){return new r(this._listeners)}sempred(e,t,n){return!0}precpred(e,t){return!0}get state(){return this._stateNumber}set state(e){this._stateNumber=e}}o.tokenTypeMapCache={},o.ruleIndexMapCache={},e.exports=o},3358:(e,t,n)=>{const i=n(3394);class a extends i.tree.ParseTreeListener{enterEntireExpression(e){}exitEntireExpression(e){}enterIndexerExpression(e){}exitIndexerExpression(e){}enterPolarityExpression(e){}exitPolarityExpression(e){}enterAdditiveExpression(e){}exitAdditiveExpression(e){}enterMultiplicativeExpression(e){}exitMultiplicativeExpression(e){}enterUnionExpression(e){}exitUnionExpression(e){}enterOrExpression(e){}exitOrExpression(e){}enterAndExpression(e){}exitAndExpression(e){}enterMembershipExpression(e){}exitMembershipExpression(e){}enterInequalityExpression(e){}exitInequalityExpression(e){}enterInvocationExpression(e){}exitInvocationExpression(e){}enterEqualityExpression(e){}exitEqualityExpression(e){}enterImpliesExpression(e){}exitImpliesExpression(e){}enterTermExpression(e){}exitTermExpression(e){}enterTypeExpression(e){}exitTypeExpression(e){}enterInvocationTerm(e){}exitInvocationTerm(e){}enterLiteralTerm(e){}exitLiteralTerm(e){}enterExternalConstantTerm(e){}exitExternalConstantTerm(e){}enterParenthesizedTerm(e){}exitParenthesizedTerm(e){}enterNullLiteral(e){}exitNullLiteral(e){}enterBooleanLiteral(e){}exitBooleanLiteral(e){}enterStringLiteral(e){}exitStringLiteral(e){}enterNumberLiteral(e){}exitNumberLiteral(e){}enterDateTimeLiteral(e){}exitDateTimeLiteral(e){}enterTimeLiteral(e){}exitTimeLiteral(e){}enterQuantityLiteral(e){}exitQuantityLiteral(e){}enterExternalConstant(e){}exitExternalConstant(e){}enterMemberInvocation(e){}exitMemberInvocation(e){}enterFunctionInvocation(e){}exitFunctionInvocation(e){}enterThisInvocation(e){}exitThisInvocation(e){}enterIndexInvocation(e){}exitIndexInvocation(e){}enterTotalInvocation(e){}exitTotalInvocation(e){}enterFunctn(e){}exitFunctn(e){}enterParamList(e){}exitParamList(e){}enterQuantity(e){}exitQuantity(e){}enterUnit(e){}exitUnit(e){}enterDateTimePrecision(e){}exitDateTimePrecision(e){}enterPluralDateTimePrecision(e){}exitPluralDateTimePrecision(e){}enterTypeSpecifier(e){}exitTypeSpecifier(e){}enterQualifiedIdentifier(e){}exitQualifiedIdentifier(e){}enterIdentifier(e){}exitIdentifier(e){}}e.exports=a},3366:e=>{e.exports=JSON.parse('{"Bundle.entry.link":"Bundle.link","CapabilityStatement.rest.operation":"CapabilityStatement.rest.resource.operation","CapabilityStatement.rest.searchParam":"CapabilityStatement.rest.resource.searchParam","ChargeItemDefinition.propertyGroup.applicability":"ChargeItemDefinition.applicability","ClaimResponse.addItem.adjudication":"ClaimResponse.item.adjudication","ClaimResponse.addItem.detail.adjudication":"ClaimResponse.item.adjudication","ClaimResponse.addItem.detail.subDetail.adjudication":"ClaimResponse.item.adjudication","ClaimResponse.adjudication":"ClaimResponse.item.adjudication","ClaimResponse.item.detail.adjudication":"ClaimResponse.item.adjudication","ClaimResponse.item.detail.subDetail.adjudication":"ClaimResponse.item.adjudication","CodeSystem.concept.concept":"CodeSystem.concept","Composition.section.section":"Composition.section","ConceptMap.group.element.target.product":"ConceptMap.group.element.target.dependsOn","Consent.provision.provision":"Consent.provision","Contract.term.asset.answer":"Contract.term.offer.answer","Contract.term.group":"Contract.term","ExampleScenario.process.step.alternative.step":"ExampleScenario.process.step","ExampleScenario.process.step.operation.request":"ExampleScenario.instance.containedInstance","ExampleScenario.process.step.operation.response":"ExampleScenario.instance.containedInstance","ExampleScenario.process.step.process":"ExampleScenario.process","ExplanationOfBenefit.addItem.adjudication":"ExplanationOfBenefit.item.adjudication","ExplanationOfBenefit.addItem.detail.adjudication":"ExplanationOfBenefit.item.adjudication","ExplanationOfBenefit.addItem.detail.subDetail.adjudication":"ExplanationOfBenefit.item.adjudication","ExplanationOfBenefit.adjudication":"ExplanationOfBenefit.item.adjudication","ExplanationOfBenefit.item.detail.adjudication":"ExplanationOfBenefit.item.adjudication","ExplanationOfBenefit.item.detail.subDetail.adjudication":"ExplanationOfBenefit.item.adjudication","GraphDefinition.link.target.link":"GraphDefinition.link","ImplementationGuide.definition.page.page":"ImplementationGuide.definition.page","Invoice.totalPriceComponent":"Invoice.lineItem.priceComponent","MedicinalProductAuthorization.procedure.application":"MedicinalProductAuthorization.procedure","MedicinalProductIngredient.substance.strength":"MedicinalProductIngredient.specifiedSubstance.strength","MedicinalProductPackaged.packageItem.packageItem":"MedicinalProductPackaged.packageItem","Observation.component.referenceRange":"Observation.referenceRange","OperationDefinition.parameter.part":"OperationDefinition.parameter","Parameters.parameter.part":"Parameters.parameter","PlanDefinition.action.action":"PlanDefinition.action","Provenance.entity.agent":"Provenance.agent","Questionnaire.item.item":"Questionnaire.item","QuestionnaireResponse.item.answer.item":"QuestionnaireResponse.item","QuestionnaireResponse.item.item":"QuestionnaireResponse.item","RequestGroup.action.action":"RequestGroup.action","StructureMap.group.rule.rule":"StructureMap.group.rule","SubstanceSpecification.molecularWeight":"SubstanceSpecification.structure.isotope.molecularWeight","SubstanceSpecification.name.synonym":"SubstanceSpecification.name","SubstanceSpecification.name.translation":"SubstanceSpecification.name","SubstanceSpecification.structure.molecularWeight":"SubstanceSpecification.structure.isotope.molecularWeight","TestReport.teardown.action.operation":"TestReport.setup.action.operation","TestReport.test.action.assert":"TestReport.setup.action.assert","TestReport.test.action.operation":"TestReport.setup.action.operation","TestScript.teardown.action.operation":"TestScript.setup.action.operation","TestScript.test.action.assert":"TestScript.setup.action.assert","TestScript.test.action.operation":"TestScript.setup.action.operation","ValueSet.compose.exclude":"ValueSet.compose.include","ValueSet.expansion.contains.contains":"ValueSet.expansion.contains","ValueSet.expansion.contains.designation":"ValueSet.compose.include.concept.designation"}')},3390:(e,t,n)=>{const{Token:i}=n(7931);n(2437),n(4344),e.exports=class{constructor(e,t){if(this.name="<empty>",this.strdata=e,this.decodeToUnicodeCodePoints=t||!1,this._index=0,this.data=[],this.decodeToUnicodeCodePoints)for(let e=0;e<this.strdata.length;){const t=this.strdata.codePointAt(e);this.data.push(t),e+=t<=65535?1:2}else{this.data=new Array(this.strdata.length);for(let e=0;e<this.strdata.length;e++){const t=this.strdata.charCodeAt(e);this.data[e]=t}}this._size=this.data.length}reset(){this._index=0}consume(){if(this._index>=this._size)throw"cannot consume EOF";this._index+=1}LA(e){if(0===e)return 0;e<0&&(e+=1);const t=this._index+e-1;return t<0||t>=this._size?i.EOF:this.data[t]}LT(e){return this.LA(e)}mark(){return-1}release(e){}seek(e){e<=this._index?this._index=e:this._index=Math.min(e,this._size)}getText(e,t){if(t>=this._size&&(t=this._size-1),e>=this._size)return"";if(this.decodeToUnicodeCodePoints){let n="";for(let i=e;i<=t;i++)n+=String.fromCodePoint(this.data[i]);return n}return this.strdata.slice(e,t+1)}toString(){return this.strdata}get index(){return this._index}get size(){return this._size}}},3394:(e,t,n)=>{t.atn=n(6636),t.codepointat=n(2437),t.dfa=n(3436),t.fromcodepoint=n(4344),t.tree=n(3279),t.error=n(3203),t.Token=n(7931).Token,t.CommonToken=n(7931).CommonToken,t.InputStream=n(3390),t.CommonTokenStream=n(2784),t.Lexer=n(1184),t.Parser=n(4015);var i=n(2482);t.PredictionContextCache=i.PredictionContextCache,t.ParserRuleContext=n(7210),t.Interval=n(5897).Interval,t.IntervalSet=n(5897).IntervalSet,t.Utils=n(4623),t.LL1Analyzer=n(1743).LL1Analyzer},3396:(e,t,n)=>{const{Token:i}=n(7931),{NoViableAltException:a,InputMismatchException:r,FailedPredicateException:o,ParseCancellationException:s}=n(188),{ATNState:l}=n(976),{Interval:c,IntervalSet:u}=n(5897);class m{reset(e){}recoverInline(e){}recover(e,t){}sync(e){}inErrorRecoveryMode(e){}reportError(e){}}class d extends m{constructor(){super(),this.errorRecoveryMode=!1,this.lastErrorIndex=-1,this.lastErrorStates=null,this.nextTokensContext=null,this.nextTokenState=0}reset(e){this.endErrorCondition(e)}beginErrorCondition(e){this.errorRecoveryMode=!0}inErrorRecoveryMode(e){return this.errorRecoveryMode}endErrorCondition(e){this.errorRecoveryMode=!1,this.lastErrorStates=null,this.lastErrorIndex=-1}reportMatch(e){this.endErrorCondition(e)}reportError(e,t){this.inErrorRecoveryMode(e)||(this.beginErrorCondition(e),t instanceof a?this.reportNoViableAlternative(e,t):t instanceof r?this.reportInputMismatch(e,t):t instanceof o?this.reportFailedPredicate(e,t):(console.log("unknown recognition error type: "+t.constructor.name),console.log(t.stack),e.notifyErrorListeners(t.getOffendingToken(),t.getMessage(),t)))}recover(e,t){this.lastErrorIndex===e.getInputStream().index&&null!==this.lastErrorStates&&this.lastErrorStates.indexOf(e.state)>=0&&e.consume(),this.lastErrorIndex=e._input.index,null===this.lastErrorStates&&(this.lastErrorStates=[]),this.lastErrorStates.push(e.state);const n=this.getErrorRecoverySet(e);this.consumeUntil(e,n)}sync(e){if(this.inErrorRecoveryMode(e))return;const t=e._interp.atn.states[e.state],n=e.getTokenStream().LA(1),a=e.atn.nextTokens(t);if(a.contains(n))return this.nextTokensContext=null,void(this.nextTokenState=l.INVALID_STATE_NUMBER);if(a.contains(i.EPSILON))null===this.nextTokensContext&&(this.nextTokensContext=e._ctx,this.nextTokensState=e._stateNumber);else switch(t.stateType){case l.BLOCK_START:case l.STAR_BLOCK_START:case l.PLUS_BLOCK_START:case l.STAR_LOOP_ENTRY:if(null!==this.singleTokenDeletion(e))return;throw new r(e);case l.PLUS_LOOP_BACK:case l.STAR_LOOP_BACK:this.reportUnwantedToken(e);const t=new u;t.addSet(e.getExpectedTokens());const n=t.addSet(this.getErrorRecoverySet(e));this.consumeUntil(e,n)}}reportNoViableAlternative(e,t){const n=e.getTokenStream();let a;a=null!==n?t.startToken.type===i.EOF?"<EOF>":n.getText(new c(t.startToken.tokenIndex,t.offendingToken.tokenIndex)):"<unknown input>";const r="no viable alternative at input "+this.escapeWSAndQuote(a);e.notifyErrorListeners(r,t.offendingToken,t)}reportInputMismatch(e,t){const n="mismatched input "+this.getTokenErrorDisplay(t.offendingToken)+" expecting "+t.getExpectedTokens().toString(e.literalNames,e.symbolicNames);e.notifyErrorListeners(n,t.offendingToken,t)}reportFailedPredicate(e,t){const n="rule "+e.ruleNames[e._ctx.ruleIndex]+" "+t.message;e.notifyErrorListeners(n,t.offendingToken,t)}reportUnwantedToken(e){if(this.inErrorRecoveryMode(e))return;this.beginErrorCondition(e);const t=e.getCurrentToken(),n="extraneous input "+this.getTokenErrorDisplay(t)+" expecting "+this.getExpectedTokens(e).toString(e.literalNames,e.symbolicNames);e.notifyErrorListeners(n,t,null)}reportMissingToken(e){if(this.inErrorRecoveryMode(e))return;this.beginErrorCondition(e);const t=e.getCurrentToken(),n="missing "+this.getExpectedTokens(e).toString(e.literalNames,e.symbolicNames)+" at "+this.getTokenErrorDisplay(t);e.notifyErrorListeners(n,t,null)}recoverInline(e){const t=this.singleTokenDeletion(e);if(null!==t)return e.consume(),t;if(this.singleTokenInsertion(e))return this.getMissingSymbol(e);throw new r(e)}singleTokenInsertion(e){const t=e.getTokenStream().LA(1),n=e._interp.atn,i=n.states[e.state].transitions[0].target;return!!n.nextTokens(i,e._ctx).contains(t)&&(this.reportMissingToken(e),!0)}singleTokenDeletion(e){const t=e.getTokenStream().LA(2);if(this.getExpectedTokens(e).contains(t)){this.reportUnwantedToken(e),e.consume();const t=e.getCurrentToken();return this.reportMatch(e),t}return null}getMissingSymbol(e){const t=e.getCurrentToken(),n=this.getExpectedTokens(e).first();let a;a=n===i.EOF?"<missing EOF>":"<missing "+e.literalNames[n]+">";let r=t;const o=e.getTokenStream().LT(-1);return r.type===i.EOF&&null!==o&&(r=o),e.getTokenFactory().create(r.source,n,a,i.DEFAULT_CHANNEL,-1,-1,r.line,r.column)}getExpectedTokens(e){return e.getExpectedTokens()}getTokenErrorDisplay(e){if(null===e)return"<no token>";let t=e.text;return null===t&&(t=e.type===i.EOF?"<EOF>":"<"+e.type+">"),this.escapeWSAndQuote(t)}escapeWSAndQuote(e){return"'"+(e=(e=(e=e.replace(/\n/g,"\\n")).replace(/\r/g,"\\r")).replace(/\t/g,"\\t"))+"'"}getErrorRecoverySet(e){const t=e._interp.atn;let n=e._ctx;const a=new u;for(;null!==n&&n.invokingState>=0;){const e=t.states[n.invokingState].transitions[0],i=t.nextTokens(e.followState);a.addSet(i),n=n.parentCtx}return a.removeOne(i.EPSILON),a}consumeUntil(e,t){let n=e.getTokenStream().LA(1);for(;n!==i.EOF&&!t.contains(n);)e.consume(),n=e.getTokenStream().LA(1)}}e.exports={BailErrorStrategy:class extends d{constructor(){super()}recover(e,t){let n=e._ctx;for(;null!==n;)n.exception=t,n=n.parentCtx;throw new s(t)}recoverInline(e){this.recover(e,new r(e))}sync(e){}},DefaultErrorStrategy:d}},3436:(e,t,n)=>{t.DFA=n(2953),t.DFASerializer=n(309).DFASerializer,t.LexerDFASerializer=n(309).LexerDFASerializer,t.PredPrediction=n(1576).PredPrediction},3499:(e,t)=>{t.YH=function(e){const t=e&&e.config;if(t){if(t.length&&e.data){const a=n(t);return e.data.map(i.bind(null,a))}return e.data}return e};Array.prototype.push;function n(e){return e.map((e=>Array.isArray(e)?e:[e]))}function i(e,t){let n={};return e.forEach(((e,i)=>{let a=n;for(let t=0;t<e.length-1;t++)a=a[e[t]]=a[e[t]]||{};a[e[e.length-1]]=t[i]})),n}},3580:(e,t,n)=>{var i=n(38),a=n(1231);const{FP_Quantity:r,TypeInfo:o}=a;var s={};function l(e,t,n,a){return i.isTrue(t)?n(e):a?a(e):[]}s.iifMacro=function(e,t,n,i){const a=t(e);return a instanceof Promise?a.then((t=>l(e,t,n,i))):l(e,a,n,i)},s.traceFn=function(e,t,n){const i=n?n(e):null;return i instanceof Promise?i.then((n=>s.traceFn(e,t,n))):(this.customTraceFn?n?this.customTraceFn(n(e),t??""):this.customTraceFn(e,t??""):n?console.log("TRACE:["+(t||"")+"]",JSON.stringify(n(e),null," ")):console.log("TRACE:["+(t||"")+"]",JSON.stringify(e,null," ")),e)},s.defineVariable=function(e,t,n){let i=e;if(n&&(i=n(e)),this.definedVars||(this.definedVars={}),t in this.vars||t in this.processedVars)throw new Error("Environment Variable %"+t+" already defined");if(Object.keys(this.definedVars).includes(t))throw new Error("Variable %"+t+" already defined");return this.definedVars[t]=i,e};var c=/^[+-]?\d+$/;s.toInteger=function(e){if(1!==e.length)return[];var t=i.valData(e[0]);return!1===t?0:!0===t?1:"number"==typeof t?Number.isInteger(t)?t:[]:"string"==typeof t&&c.test(t)?parseInt(t):[]};const u=/^((\+|-)?\d+(\.\d+)?)\s*(('[^']+')|([a-zA-Z]+))?$/;s.toQuantity=function(e,t){let n;if(e.length>1)throw new Error("Could not convert to quantity: input collection contains multiple items");if(1===e.length){if(t){const e=r._calendarDuration2Seconds[this.unit],n=r._calendarDuration2Seconds[t];if(!e!=!n&&(e>1||n>1))return null;r.mapTimeUnitsToUCUMCode[t]||(t=`'${t}'`)}var a=i.valDataConverted(e[0]);let o;if("number"==typeof a)n=new r(a,"'1'");else if(a instanceof r)n=a;else if("boolean"==typeof a)n=new r(a?1:0,"'1'");else if("string"==typeof a&&(o=u.exec(a))){const e=o[1],t=o[5],i=o[6];i&&!r.mapTimeUnitsToUCUMCode[i]||(n=new r(Number(e),t||i||"'1'"))}n&&t&&n.unit!==t&&(n=r.convUnitTo(n.unit,n.value,t))}return n||[]};var m=/^[+-]?\d+(\.\d+)?$/;function d(e){let t=e.slice(3);s["to"+t]=function(n){var r=[];if(n.length>1)throw Error("to "+t+" called for a collection of length "+n.length);if(1===n.length){var o=i.valData(n[0]);if("string"==typeof o){var s=a[e].checkString(o);s&&(r=s)}}return r}}s.toDecimal=function(e){if(1!==e.length)return[];var t=i.valData(e[0]);return!1===t?0:!0===t?1:"number"==typeof t?t:"string"==typeof t&&m.test(t)?parseFloat(t):[]},s.toString=function(e){if(1!==e.length)return[];var t=i.valDataConverted(e[0]);return null==t?[]:t.toString()},d("FP_Date"),d("FP_DateTime"),d("FP_Time");const f=["true","t","yes","y","1","1.0"].reduce(((e,t)=>(e[t]=!0,e)),{}),p=["false","f","no","n","0","0.0"].reduce(((e,t)=>(e[t]=!0,e)),{});s.toBoolean=function(e){if(1!==e.length)return[];const t=i.valData(e[0]);switch(typeof t){case"boolean":return t;case"number":if(1===t)return!0;if(0===t)return!1;break;case"string":const e=t.toLowerCase();if(f[e])return!0;if(p[e])return!1}return[]},s.createConvertsToFn=function(e,t){return"string"==typeof t?function(n){return 1!==n.length?[]:typeof e(n)===t}:function(n){return 1!==n.length?[]:e(n)instanceof t}};const g={Integer:function(e){if(Number.isInteger(e))return e},Boolean:function(e){return!0!==e&&!1!==e||e},Number:function(e){if("number"==typeof e)return e},String:function(e){if("string"==typeof e)return e},StringOrNumber:function(e){if("string"==typeof e||"number"==typeof e)return e},AnySingletonAtRoot:function(e){return e}};s.singleton=function(e,t){if(e.length>1)throw new Error("Unexpected collection"+JSON.stringify(e)+"; expected singleton of type "+t);if(0===e.length)return[];const n=i.valData(e[0]);if(null==n)return[];const a=g[t];if(a){const i=a(n);if(void 0!==i)return i;throw new Error(`Expected ${t.toLowerCase()}, but got: ${JSON.stringify(e)}`)}throw new Error("Not supported type "+t)},s.hasValueFn=function(e){return 1===e.length&&null!=i.valData(e[0])&&o.isPrimitive(o.fromValue(e[0]))},s.getValueFn=function(e){if(1===e.length){const t=e[0],n=i.valData(t);if(null!=n&&o.isPrimitive(o.fromValue(t)))return n}return[]},e.exports=s},3687:(e,t,n)=>{const{RuleNode:i}=n(6307),{INVALID_INTERVAL:a}=n(6307),r=n(2022);e.exports=class extends i{constructor(e,t){super(),this.parentCtx=e||null,this.invokingState=t||-1}depth(){let e=0,t=this;for(;null!==t;)t=t.parentCtx,e+=1;return e}isEmpty(){return-1===this.invokingState}getSourceInterval(){return a}getRuleContext(){return this}getPayload(){return this}getText(){return 0===this.getChildCount()?"":this.children.map((function(e){return e.getText()})).join("")}getAltNumber(){return 0}setAltNumber(e){}getChild(e){return null}getChildCount(){return 0}accept(e){return e.visitChildren(this)}toStringTree(e,t){return r.toStringTree(this,e,t)}toString(e,t){e=e||null,t=t||null;let n=this,i="[";for(;null!==n&&n!==t;){if(null===e)n.isEmpty()||(i+=n.invokingState);else{const t=n.ruleIndex;i+=t>=0&&t<e.length?e[t]:""+t}null===n.parentCtx||null===e&&n.parentCtx.isEmpty()||(i+=" "),n=n.parentCtx}return i+="]",i}}},3717:(e,t,n)=>{const i=n(38),a=n(269);let r={memberOf:function(e,t){if(!this.async)throw new Error('The asynchronous function "memberOf" is not allowed. To enable asynchronous functions, use the async=true or async="always" option.');if(1!==e.length||null==e[0])return[];if("string"==typeof t&&/^https?:\/\/.*/.test(t)){const n=this.processedVars.terminologies;if(!n)throw new Error('Option "terminologyUrl" is not specified.');return a.validateVS([n],t,i.valData(e[0]),"").then((e=>e.parameter.find((e=>"result"===e.name)).valueBoolean),(()=>[]))}return[]}};e.exports=r},3883:(e,t,n)=>{const{Token:i}=n(7931),a=n(1184),r=n(7601),o=n(1535),{DFAState:s}=n(1576),{OrderedATNConfigSet:l}=n(9191),{PredictionContext:c}=n(2482),{SingletonPredictionContext:u}=n(2482),{RuleStopState:m}=n(976),{LexerATNConfig:d}=n(2431),{Transition:f}=n(7377),p=n(741),{LexerNoViableAltException:g}=n(188);function h(e){e.index=-1,e.line=0,e.column=-1,e.dfaState=null}class y{constructor(){h(this)}reset(){h(this)}}class C extends o{constructor(e,t,n,i){super(t,i),this.decisionToDFA=n,this.recog=e,this.startIndex=-1,this.line=1,this.column=0,this.mode=a.DEFAULT_MODE,this.prevAccept=new y}copyState(e){this.column=e.column,this.line=e.line,this.mode=e.mode,this.startIndex=e.startIndex}match(e,t){this.match_calls+=1,this.mode=t;const n=e.mark();try{this.startIndex=e.index,this.prevAccept.reset();const n=this.decisionToDFA[t];return null===n.s0?this.matchATN(e):this.execATN(e,n.s0)}finally{e.release(n)}}reset(){this.prevAccept.reset(),this.startIndex=-1,this.line=1,this.column=0,this.mode=a.DEFAULT_MODE}matchATN(e){const t=this.atn.modeToStartState[this.mode];C.debug&&console.log("matchATN mode "+this.mode+" start: "+t);const n=this.mode,i=this.computeStartState(e,t),a=i.hasSemanticContext;i.hasSemanticContext=!1;const r=this.addDFAState(i);a||(this.decisionToDFA[this.mode].s0=r);const o=this.execATN(e,r);return C.debug&&console.log("DFA after matchATN: "+this.decisionToDFA[n].toLexerString()),o}execATN(e,t){C.debug&&console.log("start state closure="+t.configs),t.isAcceptState&&this.captureSimState(this.prevAccept,e,t);let n=e.LA(1),a=t;for(;;){C.debug&&console.log("execATN loop starting closure: "+a.configs);let t=this.getExistingTargetState(a,n);if(null===t&&(t=this.computeTargetState(e,a,n)),t===o.ERROR)break;if(n!==i.EOF&&this.consume(e),t.isAcceptState&&(this.captureSimState(this.prevAccept,e,t),n===i.EOF))break;n=e.LA(1),a=t}return this.failOrAccept(this.prevAccept,e,a.configs,n)}getExistingTargetState(e,t){if(null===e.edges||t<C.MIN_DFA_EDGE||t>C.MAX_DFA_EDGE)return null;let n=e.edges[t-C.MIN_DFA_EDGE];return void 0===n&&(n=null),C.debug&&null!==n&&console.log("reuse state "+e.stateNumber+" edge to "+n.stateNumber),n}computeTargetState(e,t,n){const i=new l;return this.getReachableConfigSet(e,t.configs,i,n),0===i.items.length?(i.hasSemanticContext||this.addDFAEdge(t,n,o.ERROR),o.ERROR):this.addDFAEdge(t,n,null,i)}failOrAccept(e,t,n,a){if(null!==this.prevAccept.dfaState){const n=e.dfaState.lexerActionExecutor;return this.accept(t,n,this.startIndex,e.index,e.line,e.column),e.dfaState.prediction}if(a===i.EOF&&t.index===this.startIndex)return i.EOF;throw new g(this.recog,t,this.startIndex,n)}getReachableConfigSet(e,t,n,a){let o=r.INVALID_ALT_NUMBER;for(let r=0;r<t.items.length;r++){const s=t.items[r],l=s.alt===o;if(!l||!s.passedThroughNonGreedyDecision){C.debug&&console.log("testing %s at %s\n",this.getTokenName(a),s.toString(this.recog,!0));for(let t=0;t<s.state.transitions.length;t++){const r=s.state.transitions[t],c=this.getReachableTarget(r,a);if(null!==c){let t=s.lexerActionExecutor;null!==t&&(t=t.fixOffsetBeforeMatch(e.index-this.startIndex));const r=a===i.EOF,u=new d({state:c,lexerActionExecutor:t},s);this.closure(e,u,n,l,!0,r)&&(o=s.alt)}}}}}accept(e,t,n,i,a,r){C.debug&&console.log("ACTION %s\n",t),e.seek(i),this.line=a,this.column=r,null!==t&&null!==this.recog&&t.execute(this.recog,e,n)}getReachableTarget(e,t){return e.matches(t,0,a.MAX_CHAR_VALUE)?e.target:null}computeStartState(e,t){const n=c.EMPTY,i=new l;for(let a=0;a<t.transitions.length;a++){const r=t.transitions[a].target,o=new d({state:r,alt:a+1,context:n},null);this.closure(e,o,i,!1,!1,!1)}return i}closure(e,t,n,i,a,r){let o=null;if(C.debug&&console.log("closure("+t.toString(this.recog,!0)+")"),t.state instanceof m){if(C.debug&&(null!==this.recog?console.log("closure at %s rule stop %s\n",this.recog.ruleNames[t.state.ruleIndex],t):console.log("closure at rule stop %s\n",t)),null===t.context||t.context.hasEmptyPath()){if(null===t.context||t.context.isEmpty())return n.add(t),!0;n.add(new d({state:t.state,context:c.EMPTY},t)),i=!0}if(null!==t.context&&!t.context.isEmpty())for(let s=0;s<t.context.length;s++)if(t.context.getReturnState(s)!==c.EMPTY_RETURN_STATE){const l=t.context.getParent(s),c=this.atn.states[t.context.getReturnState(s)];o=new d({state:c,context:l},t),i=this.closure(e,o,n,i,a,r)}return i}t.state.epsilonOnlyTransitions||i&&t.passedThroughNonGreedyDecision||n.add(t);for(let s=0;s<t.state.transitions.length;s++){const l=t.state.transitions[s];o=this.getEpsilonTarget(e,t,l,n,a,r),null!==o&&(i=this.closure(e,o,n,i,a,r))}return i}getEpsilonTarget(e,t,n,r,o,s){let l=null;if(n.serializationType===f.RULE){const e=u.create(t.context,n.followState.stateNumber);l=new d({state:n.target,context:e},t)}else{if(n.serializationType===f.PRECEDENCE)throw"Precedence predicates are not supported in lexers.";if(n.serializationType===f.PREDICATE)C.debug&&console.log("EVAL rule "+n.ruleIndex+":"+n.predIndex),r.hasSemanticContext=!0,this.evaluatePredicate(e,n.ruleIndex,n.predIndex,o)&&(l=new d({state:n.target},t));else if(n.serializationType===f.ACTION)if(null===t.context||t.context.hasEmptyPath()){const e=p.append(t.lexerActionExecutor,this.atn.lexerActions[n.actionIndex]);l=new d({state:n.target,lexerActionExecutor:e},t)}else l=new d({state:n.target},t);else n.serializationType===f.EPSILON?l=new d({state:n.target},t):n.serializationType!==f.ATOM&&n.serializationType!==f.RANGE&&n.serializationType!==f.SET||s&&n.matches(i.EOF,0,a.MAX_CHAR_VALUE)&&(l=new d({state:n.target},t))}return l}evaluatePredicate(e,t,n,i){if(null===this.recog)return!0;if(!i)return this.recog.sempred(null,t,n);const a=this.column,r=this.line,o=e.index,s=e.mark();try{return this.consume(e),this.recog.sempred(null,t,n)}finally{this.column=a,this.line=r,e.seek(o),e.release(s)}}captureSimState(e,t,n){e.index=t.index,e.line=this.line,e.column=this.column,e.dfaState=n}addDFAEdge(e,t,n,i){if(void 0===n&&(n=null),void 0===i&&(i=null),null===n&&null!==i){const e=i.hasSemanticContext;if(i.hasSemanticContext=!1,n=this.addDFAState(i),e)return n}return t<C.MIN_DFA_EDGE||t>C.MAX_DFA_EDGE||(C.debug&&console.log("EDGE "+e+" -> "+n+" upon "+t),null===e.edges&&(e.edges=[]),e.edges[t-C.MIN_DFA_EDGE]=n),n}addDFAState(e){const t=new s(null,e);let n=null;for(let t=0;t<e.items.length;t++){const i=e.items[t];if(i.state instanceof m){n=i;break}}null!==n&&(t.isAcceptState=!0,t.lexerActionExecutor=n.lexerActionExecutor,t.prediction=this.atn.ruleToTokenType[n.state.ruleIndex]);const i=this.decisionToDFA[this.mode],a=i.states.get(t);if(null!==a)return a;const r=t;return r.stateNumber=i.states.length,e.setReadonly(!0),r.configs=e,i.states.add(r),r}getDFA(e){return this.decisionToDFA[e]}getText(e){return e.getText(this.startIndex,e.index-1)}consume(e){e.LA(1)==="\n".charCodeAt(0)?(this.line+=1,this.column=0):this.column+=1,e.consume()}getTokenName(e){return-1===e?"EOF":"'"+String.fromCharCode(e)+"'"}}C.debug=!1,C.dfa_debug=!1,C.MIN_DFA_EDGE=0,C.MAX_DFA_EDGE=127,C.match_calls=0,e.exports=C},3972:e=>{const t={CHANNEL:0,CUSTOM:1,MODE:2,MORE:3,POP_MODE:4,PUSH_MODE:5,SKIP:6,TYPE:7};class n{constructor(e){this.actionType=e,this.isPositionDependent=!1}hashCode(){const e=new Hash;return this.updateHashCode(e),e.finish()}updateHashCode(e){e.update(this.actionType)}equals(e){return this===e}}class i extends n{constructor(){super(t.SKIP)}execute(e){e.skip()}toString(){return"skip"}}i.INSTANCE=new i;class a extends n{constructor(e){super(t.TYPE),this.type=e}execute(e){e.type=this.type}updateHashCode(e){e.update(this.actionType,this.type)}equals(e){return this===e||e instanceof a&&this.type===e.type}toString(){return"type("+this.type+")"}}class r extends n{constructor(e){super(t.PUSH_MODE),this.mode=e}execute(e){e.pushMode(this.mode)}updateHashCode(e){e.update(this.actionType,this.mode)}equals(e){return this===e||e instanceof r&&this.mode===e.mode}toString(){return"pushMode("+this.mode+")"}}class o extends n{constructor(){super(t.POP_MODE)}execute(e){e.popMode()}toString(){return"popMode"}}o.INSTANCE=new o;class s extends n{constructor(){super(t.MORE)}execute(e){e.more()}toString(){return"more"}}s.INSTANCE=new s;class l extends n{constructor(e){super(t.MODE),this.mode=e}execute(e){e.mode(this.mode)}updateHashCode(e){e.update(this.actionType,this.mode)}equals(e){return this===e||e instanceof l&&this.mode===e.mode}toString(){return"mode("+this.mode+")"}}class c extends n{constructor(e,n){super(t.CUSTOM),this.ruleIndex=e,this.actionIndex=n,this.isPositionDependent=!0}execute(e){e.action(null,this.ruleIndex,this.actionIndex)}updateHashCode(e){e.update(this.actionType,this.ruleIndex,this.actionIndex)}equals(e){return this===e||e instanceof c&&this.ruleIndex===e.ruleIndex&&this.actionIndex===e.actionIndex}}class u extends n{constructor(e){super(t.CHANNEL),this.channel=e}execute(e){e._channel=this.channel}updateHashCode(e){e.update(this.actionType,this.channel)}equals(e){return this===e||e instanceof u&&this.channel===e.channel}toString(){return"channel("+this.channel+")"}}class m extends n{constructor(e,t){super(t.actionType),this.offset=e,this.action=t,this.isPositionDependent=!0}execute(e){this.action.execute(e)}updateHashCode(e){e.update(this.actionType,this.offset,this.action)}equals(e){return this===e||e instanceof m&&this.offset===e.offset&&this.action===e.action}}e.exports={LexerActionType:t,LexerSkipAction:i,LexerChannelAction:u,LexerCustomAction:c,LexerIndexedCustomAction:m,LexerMoreAction:s,LexerTypeAction:a,LexerPushModeAction:r,LexerPopModeAction:o,LexerModeAction:l}},4015:(e,t,n)=>{const{Token:i}=n(7931),{ParseTreeListener:a,TerminalNode:r,ErrorNode:o}=n(6307),s=n(3322),{DefaultErrorStrategy:l}=n(3396),c=n(1950),u=n(3084),m=n(1184);class d extends a{constructor(e){super(),this.parser=e}enterEveryRule(e){console.log("enter   "+this.parser.ruleNames[e.ruleIndex]+", LT(1)="+this.parser._input.LT(1).text)}visitTerminal(e){console.log("consume "+e.symbol+" rule "+this.parser.ruleNames[this.parser._ctx.ruleIndex])}exitEveryRule(e){console.log("exit    "+this.parser.ruleNames[e.ruleIndex]+", LT(1)="+this.parser._input.LT(1).text)}}class f extends s{constructor(e){super(),this._input=null,this._errHandler=new l,this._precedenceStack=[],this._precedenceStack.push(0),this._ctx=null,this.buildParseTrees=!0,this._tracer=null,this._parseListeners=null,this._syntaxErrors=0,this.setInputStream(e)}reset(){null!==this._input&&this._input.seek(0),this._errHandler.reset(this),this._ctx=null,this._syntaxErrors=0,this.setTrace(!1),this._precedenceStack=[],this._precedenceStack.push(0),null!==this._interp&&this._interp.reset()}match(e){let t=this.getCurrentToken();return t.type===e?(this._errHandler.reportMatch(this),this.consume()):(t=this._errHandler.recoverInline(this),this.buildParseTrees&&-1===t.tokenIndex&&this._ctx.addErrorNode(t)),t}matchWildcard(){let e=this.getCurrentToken();return e.type>0?(this._errHandler.reportMatch(this),this.consume()):(e=this._errHandler.recoverInline(this),this._buildParseTrees&&-1===e.tokenIndex&&this._ctx.addErrorNode(e)),e}getParseListeners(){return this._parseListeners||[]}addParseListener(e){if(null===e)throw"listener";null===this._parseListeners&&(this._parseListeners=[]),this._parseListeners.push(e)}removeParseListener(e){if(null!==this._parseListeners){const t=this._parseListeners.indexOf(e);t>=0&&this._parseListeners.splice(t,1),0===this._parseListeners.length&&(this._parseListeners=null)}}removeParseListeners(){this._parseListeners=null}triggerEnterRuleEvent(){if(null!==this._parseListeners){const e=this._ctx;this._parseListeners.forEach((function(t){t.enterEveryRule(e),e.enterRule(t)}))}}triggerExitRuleEvent(){if(null!==this._parseListeners){const e=this._ctx;this._parseListeners.slice(0).reverse().forEach((function(t){e.exitRule(t),t.exitEveryRule(e)}))}}getTokenFactory(){return this._input.tokenSource._factory}setTokenFactory(e){this._input.tokenSource._factory=e}getATNWithBypassAlts(){const e=this.getSerializedATN();if(null===e)throw"The current parser does not support an ATN with bypass alternatives.";let t=this.bypassAltsAtnCache[e];if(null===t){const n=new u;n.generateRuleBypassTransitions=!0,t=new c(n).deserialize(e),this.bypassAltsAtnCache[e]=t}return t}compileParseTreePattern(e,t,n){if(null===(n=n||null)&&null!==this.getTokenStream()){const e=this.getTokenStream().tokenSource;e instanceof m&&(n=e)}if(null===n)throw"Parser can't discover a lexer to use";return new ParseTreePatternMatcher(n,this).compile(e,t)}getInputStream(){return this.getTokenStream()}setInputStream(e){this.setTokenStream(e)}getTokenStream(){return this._input}setTokenStream(e){this._input=null,this.reset(),this._input=e}getCurrentToken(){return this._input.LT(1)}notifyErrorListeners(e,t,n){n=n||null,null===(t=t||null)&&(t=this.getCurrentToken()),this._syntaxErrors+=1;const i=t.line,a=t.column;this.getErrorListenerDispatch().syntaxError(this,t,i,a,e,n)}consume(){const e=this.getCurrentToken();e.type!==i.EOF&&this.getInputStream().consume();const t=null!==this._parseListeners&&this._parseListeners.length>0;if(this.buildParseTrees||t){let n;n=this._errHandler.inErrorRecoveryMode(this)?this._ctx.addErrorNode(e):this._ctx.addTokenNode(e),n.invokingState=this.state,t&&this._parseListeners.forEach((function(e){n instanceof o||void 0!==n.isErrorNode&&n.isErrorNode()?e.visitErrorNode(n):n instanceof r&&e.visitTerminal(n)}))}return e}addContextToParseTree(){null!==this._ctx.parentCtx&&this._ctx.parentCtx.addChild(this._ctx)}enterRule(e,t,n){this.state=t,this._ctx=e,this._ctx.start=this._input.LT(1),this.buildParseTrees&&this.addContextToParseTree(),this.triggerEnterRuleEvent()}exitRule(){this._ctx.stop=this._input.LT(-1),this.triggerExitRuleEvent(),this.state=this._ctx.invokingState,this._ctx=this._ctx.parentCtx}enterOuterAlt(e,t){e.setAltNumber(t),this.buildParseTrees&&this._ctx!==e&&null!==this._ctx.parentCtx&&(this._ctx.parentCtx.removeLastChild(),this._ctx.parentCtx.addChild(e)),this._ctx=e}getPrecedence(){return 0===this._precedenceStack.length?-1:this._precedenceStack[this._precedenceStack.length-1]}enterRecursionRule(e,t,n,i){this.state=t,this._precedenceStack.push(i),this._ctx=e,this._ctx.start=this._input.LT(1),this.triggerEnterRuleEvent()}pushNewRecursionContext(e,t,n){const i=this._ctx;i.parentCtx=e,i.invokingState=t,i.stop=this._input.LT(-1),this._ctx=e,this._ctx.start=i.start,this.buildParseTrees&&this._ctx.addChild(i),this.triggerEnterRuleEvent()}unrollRecursionContexts(e){this._precedenceStack.pop(),this._ctx.stop=this._input.LT(-1);const t=this._ctx,n=this.getParseListeners();if(null!==n&&n.length>0)for(;this._ctx!==e;)this.triggerExitRuleEvent(),this._ctx=this._ctx.parentCtx;else this._ctx=e;t.parentCtx=e,this.buildParseTrees&&null!==e&&e.addChild(t)}getInvokingContext(e){let t=this._ctx;for(;null!==t;){if(t.ruleIndex===e)return t;t=t.parentCtx}return null}precpred(e,t){return t>=this._precedenceStack[this._precedenceStack.length-1]}inContext(e){return!1}isExpectedToken(e){const t=this._interp.atn;let n=this._ctx;const a=t.states[this.state];let r=t.nextTokens(a);if(r.contains(e))return!0;if(!r.contains(i.EPSILON))return!1;for(;null!==n&&n.invokingState>=0&&r.contains(i.EPSILON);){const i=t.states[n.invokingState].transitions[0];if(r=t.nextTokens(i.followState),r.contains(e))return!0;n=n.parentCtx}return!(!r.contains(i.EPSILON)||e!==i.EOF)}getExpectedTokens(){return this._interp.atn.getExpectedTokens(this.state,this._ctx)}getExpectedTokensWithinCurrentRule(){const e=this._interp.atn,t=e.states[this.state];return e.nextTokens(t)}getRuleIndex(e){const t=this.getRuleIndexMap()[e];return null!==t?t:-1}getRuleInvocationStack(e){null===(e=e||null)&&(e=this._ctx);const t=[];for(;null!==e;){const n=e.ruleIndex;n<0?t.push("n/a"):t.push(this.ruleNames[n]),e=e.parentCtx}return t}getDFAStrings(){return this._interp.decisionToDFA.toString()}dumpDFA(){let e=!1;for(let t=0;t<this._interp.decisionToDFA.length;t++){const n=this._interp.decisionToDFA[t];n.states.length>0&&(e&&console.log(),this.printer.println("Decision "+n.decision+":"),this.printer.print(n.toString(this.literalNames,this.symbolicNames)),e=!0)}}getSourceName(){return this._input.sourceName}setTrace(e){e?(null!==this._tracer&&this.removeParseListener(this._tracer),this._tracer=new d(this),this.addParseListener(this._tracer)):(this.removeParseListener(this._tracer),this._tracer=null)}}f.bypassAltsAtnCache={},e.exports=f},4060:(e,t,n)=>{const i=n(38),{ResourceNode:a,TypeInfo:r,instantRE:o,timeRE:s,dateRE:l,dateTimeRE:c}=n(1231);class u{static invocationTable={Extension:{fn:u.Extension,arity:{2:["String","AnyAtRoot"]}},Identifier:{fn:u.Identifier,arity:{1:["String"],2:["String","String"],3:["String","String","String"],4:["String","String","String","Any"]}},HumanName:{fn:u.HumanName,arity:{1:["String"],2:["String","AnyAtRoot"],3:["String","AnyAtRoot","String"],4:["String","AnyAtRoot","String","String"],5:["String","AnyAtRoot","String","String","String"],6:["String","AnyAtRoot","String","String","String","String"]}},ContactPoint:{fn:u.ContactPoint,arity:{1:["String"],2:["String","String"],3:["String","String","String"]}},Address:{fn:u.Address,arity:{1:["AnyAtRoot"],2:["AnyAtRoot","String"],3:["AnyAtRoot","String","String"],4:["AnyAtRoot","String","String","String"],5:["AnyAtRoot","String","String","String","String"],6:["AnyAtRoot","String","String","String","String","String"],7:["AnyAtRoot","String","String","String","String","String","String"]}},Quantity:{fn:u.Quantity,arity:{1:["String"],2:["String","String"],3:["String","String","StringOrNumber"],4:["String","String","StringOrNumber","String"]}},Coding:{fn:u.Coding,arity:{1:["String"],2:["String","String"],3:["String","String","String"],4:["String","String","String","String"]}},CodeableConcept:{fn:u.CodeableConcept,arity:{1:["AnyAtRoot"],2:["AnyAtRoot","String"]}},create:{fn:u.create,arity:{1:["TypeSpecifier"]}},withExtension:{fn:u.withExtension,arity:{3:["AnyAtRoot","String","AnyAtRoot"]}},withProperty:{fn:u.withProperty,arity:{3:["AnyAtRoot","String","AnyAtRoot"]}}};static{[{type:"string",getValue:function(e){if("string"==typeof e&&/^[\s\S]+$/.test(e))return String(e);throw new Error(`"${e}" is not a string.`)}},{type:"integer",getValue:e=>{const t=Number(e);if(Number.isInteger(t))return t;throw new Error(`"${e}" is not an integer.`)}},{type:"unsignedInt",getValue:e=>{const t=Number(e);if(Number.isInteger(t)&&t>=0)return t;throw new Error(`"${e}" is not an unsignedInt.`)}},{type:"positiveInt",getValue:e=>{const t=Number(e);if(Number.isInteger(t)&&t>0)return t;throw new Error(`"${e}" is not a positiveInt.`)}},{type:"integer64",getValue:e=>{const t=Number(e);if(Number.isInteger(t))return t;throw new Error(`"${e}" is not an integer.`)}},{type:"markdown",getValue(e){if("string"==typeof e&&/^[\s\S]+$/.test(e))return e;throw new Error(`"${e}" is not a markdown.`)}},{type:"url",getValue(e){if("string"==typeof e&&/^\S*$/.test(e))return e;throw new Error(`"${e}" is not a url.`)}},{type:"uri",getValue(e){if("string"==typeof e&&/^\S*$/.test(e))return e;throw new Error(`"${e}" is not a uri.`)}},{type:"instant",getValue(e){if("string"==typeof e&&o.test(e))return e;throw new Error(`"${e}" is not an instant.`)}},{type:"time",getValue(e){if("string"==typeof e&&s.test(e))return e;throw new Error(`"${e}" is not a time.`)}},{type:"date",getValue(e){if("string"==typeof e&&l.test(e))return e;throw new Error(`"${e}" is not a date.`)}},{type:"dateTime",getValue(e){if("string"==typeof e&&c.test(e))return e;throw new Error(`"${e}" is not a dateTime.`)}},{type:"base64Binary",getValue(e){if("string"==typeof e&&/^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(e))return e;throw new Error(`"${e}" is not a base64Binary.`)}},{type:"decimal",getValue(e){const t=Number(e);if(Number.isNaN(t))throw new Error(`"${e}" is not an decimal.`);return t}},{type:"boolean",getValue(e){if(!0===e||"true"===e)return!0;if(!1===e||"false"===e)return!1;throw new Error(`"${e}" is not a boolean.`)}},{type:"code",getValue(e){if("string"==typeof e&&/^\S+( \S+)*$/.test(e))return e;throw new Error(`"${e}" is not a code.`)}},{type:"id",getValue(e){if("string"==typeof e&&/^[A-Za-z0-9\-.]{1,64}$/.test(e))return e;throw new Error(`"${e}" is not an id.`)}},{type:"oid",getValue(e){if("string"==typeof e&&/^urn:oid:[0-2](\.(0|[1-9][0-9]*))+$/.test(e))return e;throw new Error(`"${e}" is not an oid.`)}},{type:"uuid",getValue(e){if("string"==typeof e&&/^urn:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/.test(e))return e;throw new Error(`"${e}" is not an uuid.`)}},{type:"canonical",getValue(e){if("string"==typeof e&&/^\S*$/.test(e))return e;throw new Error(`"${e}" is not an canonical.`)}}].forEach((({type:e,getValue:t})=>{u[e]=function(n,o,s){let l;if(o.length>1)throw new Error("Unexpected collection "+JSON.stringify(o)+` as a value for %factory.${e}(value, extensions)`);if(0===o.length)l=null;else{const n=i.valData(o[0]);if(null==n&&(l=null),"object"==typeof n)throw new Error(`"${n}" is not a ${e}`);l=t(n)}let c=null;return s?.length>0&&(c={extension:s.map((e=>{const t=r.fromValue(e);if(r.isType(t.name,"Extension"))return i.valData(e);throw new Error(`Expected "FHIR.Extension", got "${t}"`)}))}),a.makeResNode(l,null,e,c,e)},u.invocationTable[e]={fn:u[e],arity:{1:["AnyAtRoot"],2:["AnyAtRoot","Any"]}}}))}static Extension(e,t,n){if(1===n.length)return a.makeResNode(u.createExtensionObject(t,n[0]),null,"Extension",null,"Extension");if(n.length>1)throw new Error("Unexpected collection "+JSON.stringify(n)+" as a value for %factory.Extension(url, value)");if(0===n.length)throw new Error("Unexpected empty collection "+JSON.stringify(n)+" as a value for %factory.Extension(url, value)")}static createExtensionObject(e,t){const n="value"+r.fromValue(t).name.replace(/^\w/,(e=>e.toUpperCase()));return{url:e,[n]:i.valData(t)}}static Identifier(e,t,n,o,s){if(s?.length>1)throw new Error("Unexpected collection "+JSON.stringify(s)+" as a type for %factory.Identifier{system, value, use, type)");const l={};if(i.isSome(t)&&(l.system=t),i.isSome(n)&&(l.value=n),i.isSome(o)&&(l.use=o),i.isSome(s)){const e=r.fromValue(s[0]);if(!r.isType(e.name,"CodeableConcept"))throw new Error(`Expected "FHIR.CodeableConcept", got "${e}"`);l.type=s[0]}return a.makeResNode(l,null,"Identifier",null,"Identifier")}static HumanName(e,t,n,r,o,s,l){const c={};return i.isSome(t)&&(c.family=t),i.isSome(n)&&(c.given=n.map((e=>{const t=i.valData(e);if("string"==typeof t)return t;throw new Error(`Expected string, but got: ${JSON.stringify(t)}`)}))),i.isSome(r)&&(c.prefix=r),i.isSome(o)&&(c.suffix=o),i.isSome(s)&&(c.text=s),i.isSome(l)&&(c.use=l),a.makeResNode(c,null,"HumanName",null,"HumanName")}static ContactPoint(e,t,n,r){const o={};return i.isSome(t)&&(o.system=t),i.isSome(n)&&(o.value=n),i.isSome(r)&&(o.use=r),a.makeResNode(o,null,"ContactPoint",null,"ContactPoint")}static Address(e,t,n,r,o,s,l,c){const u={};return i.isSome(t)&&(u.line=t.map((e=>{const t=i.valData(e);if("string"==typeof t)return t;throw new Error(`Expected string, but got: ${JSON.stringify(t)}`)}))),i.isSome(n)&&(u.city=n),i.isSome(r)&&(u.state=r),i.isSome(o)&&(u.postalCode=o),i.isSome(s)&&(u.country=s),i.isSome(l)&&(u.use=l),i.isSome(c)&&(u.type=c),a.makeResNode(u,null,"Address",null,"Address")}static Quantity(e,t,n,r,o){const s={};return i.isSome(t)&&(s.system=t),i.isSome(n)&&(s.code=n),i.isSome(r)&&(s.value=Number(r)),i.isSome(o)&&(s.unit=o),a.makeResNode(s,null,"Quantity",null,"Quantity")}static Coding(e,t,n,r,o){const s={};return i.isSome(t)&&(s.system=t),i.isSome(n)&&(s.code=n),i.isSome(r)&&(s.display=r),i.isSome(o)&&(s.version=o),a.makeResNode(s,null,"Coding",null,"Coding")}static CodeableConcept(e,t,n){const r=t?.length>0?{coding:t.map((e=>{if(e instanceof a&&"Coding"===e.getTypeInfo().name)return i.valData(e);throw new Error("Unexpected value "+JSON.stringify(e)+"; expected value of type Coding")}))}:{};return i.isSome(n)&&(r.text=n),a.makeResNode(r,null,"CodeableConcept",null,"CodeableConcept")}static create(e,t){if(t.namespace===r.System)throw new Error("%factory.create(type) doesn't support system types.");return a.makeResNode(null,null,t.name,null,t.name)}static withExtension(e,t,n,i){if(t.length>1)throw new Error("Unexpected collection "+JSON.stringify(t)+" as an instance for %factory.withExtension(instance, url, value)");if(1!==i.length){if(i.length>1)throw new Error("Unexpected collection "+JSON.stringify(i)+" as a value for %factory.withExtension(instance, url, value)");if(0===i.length)throw new Error("Unexpected empty collection "+JSON.stringify(i)+" as a value for %factory.withExtension(instance, url, value)")}if(0===t.length)return[];const o=t[0];if(o instanceof a){let e=o.data,t=o._data;return r.isPrimitive(o.getTypeInfo())?t={...o._data||{},extension:[...o._data?.extension||[],u.createExtensionObject(n,i[0])]}:e={...o.data||{},extension:[...o.data?.extension||[],u.createExtensionObject(n,i[0])]},a.makeResNode(e,null,o.path,t,o.fhirNodeDataType)}throw new Error("Expected a ResourceNode.")}static withProperty(e,t,n,o){if(t.length>1)throw new Error("Unexpected collection "+JSON.stringify(t)+" as an instance for %factory.withProperty(instance, name, value)");if(1!==o.length){if(o.length>1)throw new Error("Unexpected collection "+JSON.stringify(o)+" as a value for %factory.withProperty(instance, name, value)");if(0===o.length)throw new Error("Unexpected empty collection "+JSON.stringify(o)+" as a value for %factory.withProperty(instance, name, value)")}if(0===t.length)return[];const s=t[0];if(s instanceof a){let e=s.data,t=s._data;return r.isPrimitive(s.getTypeInfo())?t={...s._data||{},[n]:i.valData(o[0]),...o[0]?._data?{["_"+n]:o[0]._data}:{}}:e={...s.data||{},[n]:i.valData(o[0]),...o[0]?._data?{["_"+n]:o[0]._data}:{}},a.makeResNode(e,null,s.path,t,s.fhirNodeDataType)}throw new Error("Expected a ResourceNode.")}}e.exports=u},4116:(e,t,n)=>{const i=n(7931).CommonToken;class a{}class r extends a{constructor(e){super(),this.copyText=void 0!==e&&e}create(e,t,n,a,r,o,s,l){const c=new i(e,t,a,r,o);return c.line=s,c.column=l,null!==n?c.text=n:this.copyText&&null!==e[1]&&(c.text=e[1].getText(r,o)),c}createThin(e,t){const n=new i(null,e);return n.text=t,n}}r.DEFAULT=new r,e.exports=r},4264:e=>{e.exports=JSON.parse('{"ActivityDefinition.product":["Reference","CodeableConcept"],"ActivityDefinition.subject":["CodeableConcept","Reference"],"ActivityDefinition.timing":["Timing","DateTime","Age","Period","Range","Duration"],"AllergyIntolerance.onset":["DateTime","Age","Period","Range","String"],"Annotation.author":["Reference","String"],"AuditEvent.entity.detail.value":["String","Base64Binary"],"BiologicallyDerivedProduct.collection.collected":["DateTime","Period"],"BiologicallyDerivedProduct.manipulation.time":["DateTime","Period"],"BiologicallyDerivedProduct.processing.time":["DateTime","Period"],"CarePlan.activity.detail.product":["CodeableConcept","Reference"],"CarePlan.activity.detail.scheduled":["Timing","Period","String"],"ChargeItem.occurrence":["DateTime","Period","Timing"],"ChargeItem.product":["Reference","CodeableConcept"],"Claim.accident.location":["Address","Reference"],"Claim.diagnosis.diagnosis":["CodeableConcept","Reference"],"Claim.item.location":["CodeableConcept","Address","Reference"],"Claim.item.serviced":["Date","Period"],"Claim.procedure.procedure":["CodeableConcept","Reference"],"Claim.supportingInfo.timing":["Date","Period"],"Claim.supportingInfo.value":["Boolean","String","Quantity","Attachment","Reference"],"ClaimResponse.addItem.location":["CodeableConcept","Address","Reference"],"ClaimResponse.addItem.serviced":["Date","Period"],"ClinicalImpression.effective":["DateTime","Period"],"CodeSystem.concept.property.value":["Code","Coding","String","Integer","Boolean","DateTime","Decimal"],"Communication.payload.content":["String","Attachment","Reference"],"CommunicationRequest.occurrence":["DateTime","Period"],"CommunicationRequest.payload.content":["String","Attachment","Reference"],"Composition.relatesTo.target":["Identifier","Reference"],"ConceptMap.source":["Uri","Canonical"],"ConceptMap.target":["Uri","Canonical"],"Condition.abatement":["DateTime","Age","Period","Range","String"],"Condition.onset":["DateTime","Age","Period","Range","String"],"Consent.source":["Attachment","Reference"],"Contract.friendly.content":["Attachment","Reference"],"Contract.legal.content":["Attachment","Reference"],"Contract.legallyBinding":["Attachment","Reference"],"Contract.rule.content":["Attachment","Reference"],"Contract.term.action.occurrence":["DateTime","Period","Timing"],"Contract.term.asset.valuedItem.entity":["CodeableConcept","Reference"],"Contract.term.offer.answer.value":["Boolean","Decimal","Integer","Date","DateTime","Time","String","Uri","Attachment","Coding","Quantity","Reference"],"Contract.term.topic":["CodeableConcept","Reference"],"Contract.topic":["CodeableConcept","Reference"],"Coverage.costToBeneficiary.value":["Quantity","Money"],"CoverageEligibilityRequest.item.diagnosis.diagnosis":["CodeableConcept","Reference"],"CoverageEligibilityRequest.serviced":["Date","Period"],"CoverageEligibilityResponse.insurance.item.benefit.allowed":["UnsignedInt","String","Money"],"CoverageEligibilityResponse.insurance.item.benefit.used":["UnsignedInt","String","Money"],"CoverageEligibilityResponse.serviced":["Date","Period"],"DataRequirement.dateFilter.value":["DateTime","Period","Duration"],"DataRequirement.subject":["CodeableConcept","Reference"],"DetectedIssue.identified":["DateTime","Period"],"DeviceDefinition.manufacturer":["String","Reference"],"DeviceRequest.code":["Reference","CodeableConcept"],"DeviceRequest.occurrence":["DateTime","Period","Timing"],"DeviceRequest.parameter.value":["CodeableConcept","Quantity","Range","Boolean"],"DeviceUseStatement.timing":["Timing","Period","DateTime"],"DiagnosticReport.effective":["DateTime","Period"],"Dosage.asNeeded":["Boolean","CodeableConcept"],"Dosage.doseAndRate.dose":["Range","Quantity"],"Dosage.doseAndRate.rate":["Ratio","Range","Quantity"],"ElementDefinition.defaultValue":["Base64Binary","Boolean","Canonical","Code","Date","DateTime","Decimal","Id","Instant","Integer","Markdown","Oid","PositiveInt","String","Time","UnsignedInt","Uri","Url","Uuid","Address","Age","Annotation","Attachment","CodeableConcept","Coding","ContactPoint","Count","Distance","Duration","HumanName","Identifier","Money","Period","Quantity","Range","Ratio","Reference","SampledData","Signature","Timing","ContactDetail","Contributor","DataRequirement","Expression","ParameterDefinition","RelatedArtifact","TriggerDefinition","UsageContext","Dosage","Meta"],"ElementDefinition.example.value":["Base64Binary","Boolean","Canonical","Code","Date","DateTime","Decimal","Id","Instant","Integer","Markdown","Oid","PositiveInt","String","Time","UnsignedInt","Uri","Url","Uuid","Address","Age","Annotation","Attachment","CodeableConcept","Coding","ContactPoint","Count","Distance","Duration","HumanName","Identifier","Money","Period","Quantity","Range","Ratio","Reference","SampledData","Signature","Timing","ContactDetail","Contributor","DataRequirement","Expression","ParameterDefinition","RelatedArtifact","TriggerDefinition","UsageContext","Dosage","Meta"],"ElementDefinition.extension.value":["CodeableConcept","Canonical"],"ElementDefinition.fixed":["Base64Binary","Boolean","Canonical","Code","Date","DateTime","Decimal","Id","Instant","Integer","Markdown","Oid","PositiveInt","String","Time","UnsignedInt","Uri","Url","Uuid","Address","Age","Annotation","Attachment","CodeableConcept","Coding","ContactPoint","Count","Distance","Duration","HumanName","Identifier","Money","Period","Quantity","Range","Ratio","Reference","SampledData","Signature","Timing","ContactDetail","Contributor","DataRequirement","Expression","ParameterDefinition","RelatedArtifact","TriggerDefinition","UsageContext","Dosage","Meta"],"ElementDefinition.maxValue":["Date","DateTime","Instant","Time","Decimal","Integer","PositiveInt","UnsignedInt","Quantity"],"ElementDefinition.minValue":["Date","DateTime","Instant","Time","Decimal","Integer","PositiveInt","UnsignedInt","Quantity"],"ElementDefinition.pattern":["Base64Binary","Boolean","Canonical","Code","Date","DateTime","Decimal","Id","Instant","Integer","Markdown","Oid","PositiveInt","String","Time","UnsignedInt","Uri","Url","Uuid","Address","Age","Annotation","Attachment","CodeableConcept","Coding","ContactPoint","Count","Distance","Duration","HumanName","Identifier","Money","Period","Quantity","Range","Ratio","Reference","SampledData","Signature","Timing","ContactDetail","Contributor","DataRequirement","Expression","ParameterDefinition","RelatedArtifact","TriggerDefinition","UsageContext","Dosage","Meta"],"EventDefinition.subject":["CodeableConcept","Reference"],"EvidenceVariable.characteristic.definition":["Reference","Canonical","CodeableConcept","Expression","DataRequirement","TriggerDefinition"],"EvidenceVariable.characteristic.participantEffective":["DateTime","Period","Duration","Timing"],"ExplanationOfBenefit.accident.location":["Address","Reference"],"ExplanationOfBenefit.addItem.location":["CodeableConcept","Address","Reference"],"ExplanationOfBenefit.addItem.serviced":["Date","Period"],"ExplanationOfBenefit.benefitBalance.financial.allowed":["UnsignedInt","String","Money"],"ExplanationOfBenefit.benefitBalance.financial.used":["UnsignedInt","Money"],"ExplanationOfBenefit.diagnosis.diagnosis":["CodeableConcept","Reference"],"ExplanationOfBenefit.item.location":["CodeableConcept","Address","Reference"],"ExplanationOfBenefit.item.serviced":["Date","Period"],"ExplanationOfBenefit.procedure.procedure":["CodeableConcept","Reference"],"ExplanationOfBenefit.supportingInfo.timing":["Date","Period"],"ExplanationOfBenefit.supportingInfo.value":["Boolean","String","Quantity","Attachment","Reference"],"Extension.value":["Base64Binary","Boolean","Canonical","Code","Date","DateTime","Decimal","Id","Instant","Integer","Markdown","Oid","PositiveInt","String","Time","UnsignedInt","Uri","Url","Uuid","Address","Age","Annotation","Attachment","CodeableConcept","Coding","ContactPoint","Count","Distance","Duration","HumanName","Identifier","Money","Period","Quantity","Range","Ratio","Reference","SampledData","Signature","Timing","ContactDetail","Contributor","DataRequirement","Expression","ParameterDefinition","RelatedArtifact","TriggerDefinition","UsageContext","Dosage","Meta"],"FamilyMemberHistory.age":["Age","Range","String"],"FamilyMemberHistory.born":["Period","Date","String"],"FamilyMemberHistory.condition.onset":["Age","Range","Period","String"],"FamilyMemberHistory.deceased":["Boolean","Age","Range","Date","String"],"Goal.start":["Date","CodeableConcept"],"Goal.target.detail":["Quantity","Range","CodeableConcept","String","Boolean","Integer","Ratio"],"Goal.target.due":["Date","Duration"],"Group.characteristic.value":["CodeableConcept","Boolean","Quantity","Range","Reference"],"GuidanceResponse.module":["Uri","Canonical","CodeableConcept"],"Immunization.occurrence":["DateTime","String"],"Immunization.protocolApplied.doseNumber":["PositiveInt","String"],"Immunization.protocolApplied.seriesDoses":["PositiveInt","String"],"ImmunizationEvaluation.doseNumber":["PositiveInt","String"],"ImmunizationEvaluation.seriesDoses":["PositiveInt","String"],"ImmunizationRecommendation.recommendation.doseNumber":["PositiveInt","String"],"ImmunizationRecommendation.recommendation.seriesDoses":["PositiveInt","String"],"ImplementationGuide.definition.page.name":["Url","Reference"],"ImplementationGuide.definition.resource.example":["Boolean","Canonical"],"ImplementationGuide.manifest.resource.example":["Boolean","Canonical"],"Invoice.lineItem.chargeItem":["Reference","CodeableConcept"],"Library.subject":["CodeableConcept","Reference"],"Measure.subject":["CodeableConcept","Reference"],"Media.created":["DateTime","Period"],"Medication.ingredient.item":["CodeableConcept","Reference"],"MedicationAdministration.dosage.rate":["Ratio","Quantity"],"MedicationAdministration.effective":["DateTime","Period"],"MedicationAdministration.medication":["CodeableConcept","Reference"],"MedicationDispense.medication":["CodeableConcept","Reference"],"MedicationDispense.statusReason":["CodeableConcept","Reference"],"MedicationKnowledge.administrationGuidelines.indication":["CodeableConcept","Reference"],"MedicationKnowledge.administrationGuidelines.patientCharacteristics.characteristic":["CodeableConcept","Quantity"],"MedicationKnowledge.drugCharacteristic.value":["CodeableConcept","String","Quantity","Base64Binary"],"MedicationKnowledge.ingredient.item":["CodeableConcept","Reference"],"MedicationRequest.medication":["CodeableConcept","Reference"],"MedicationRequest.reported":["Boolean","Reference"],"MedicationRequest.substitution.allowed":["Boolean","CodeableConcept"],"MedicationStatement.effective":["DateTime","Period"],"MedicationStatement.medication":["CodeableConcept","Reference"],"MedicinalProduct.specialDesignation.indication":["CodeableConcept","Reference"],"MedicinalProductAuthorization.procedure.date":["Period","DateTime"],"MedicinalProductContraindication.otherTherapy.medication":["CodeableConcept","Reference"],"MedicinalProductIndication.otherTherapy.medication":["CodeableConcept","Reference"],"MedicinalProductInteraction.interactant.item":["Reference","CodeableConcept"],"MessageDefinition.event":["Coding","Uri"],"MessageHeader.event":["Coding","Uri"],"NutritionOrder.enteralFormula.administration.rate":["Quantity","Ratio"],"Observation.component.value":["Quantity","CodeableConcept","String","Boolean","Integer","Range","Ratio","SampledData","Time","DateTime","Period"],"Observation.effective":["DateTime","Period","Timing","Instant"],"Observation.value":["Quantity","CodeableConcept","String","Boolean","Integer","Range","Ratio","SampledData","Time","DateTime","Period"],"Parameters.parameter.value":["Base64Binary","Boolean","Canonical","Code","Date","DateTime","Decimal","Id","Instant","Integer","Markdown","Oid","PositiveInt","String","Time","UnsignedInt","Uri","Url","Uuid","Address","Age","Annotation","Attachment","CodeableConcept","Coding","ContactPoint","Count","Distance","Duration","HumanName","Identifier","Money","Period","Quantity","Range","Ratio","Reference","SampledData","Signature","Timing","ContactDetail","Contributor","DataRequirement","Expression","ParameterDefinition","RelatedArtifact","TriggerDefinition","UsageContext","Dosage","Meta"],"Patient.deceased":["Boolean","DateTime"],"Patient.multipleBirth":["Boolean","Integer"],"PlanDefinition.action.definition":["Canonical","Uri"],"PlanDefinition.action.relatedAction.offset":["Duration","Range"],"PlanDefinition.action.subject":["CodeableConcept","Reference"],"PlanDefinition.action.timing":["DateTime","Age","Period","Duration","Range","Timing"],"PlanDefinition.goal.target.detail":["Quantity","Range","CodeableConcept"],"PlanDefinition.subject":["CodeableConcept","Reference"],"Population.age":["Range","CodeableConcept"],"Procedure.performed":["DateTime","Period","String","Age","Range"],"Provenance.occurred":["Period","DateTime"],"Questionnaire.item.answerOption.value":["Integer","Date","Time","String","Coding","Reference"],"Questionnaire.item.enableWhen.answer":["Boolean","Decimal","Integer","Date","DateTime","Time","String","Coding","Quantity","Reference"],"Questionnaire.item.initial.value":["Boolean","Decimal","Integer","Date","DateTime","Time","String","Uri","Attachment","Coding","Quantity","Reference"],"QuestionnaireResponse.item.answer.value":["Boolean","Decimal","Integer","Date","DateTime","Time","String","Uri","Attachment","Coding","Quantity","Reference"],"RequestGroup.action.relatedAction.offset":["Duration","Range"],"RequestGroup.action.timing":["DateTime","Age","Period","Duration","Range","Timing"],"ResearchDefinition.subject":["CodeableConcept","Reference"],"ResearchElementDefinition.characteristic.definition":["CodeableConcept","Canonical","Expression","DataRequirement"],"ResearchElementDefinition.characteristic.participantEffective":["DateTime","Period","Duration","Timing"],"ResearchElementDefinition.characteristic.studyEffective":["DateTime","Period","Duration","Timing"],"ResearchElementDefinition.subject":["CodeableConcept","Reference"],"RiskAssessment.occurrence":["DateTime","Period"],"RiskAssessment.prediction.probability":["Decimal","Range"],"RiskAssessment.prediction.when":["Period","Range"],"ServiceRequest.asNeeded":["Boolean","CodeableConcept"],"ServiceRequest.occurrence":["DateTime","Period","Timing"],"ServiceRequest.quantity":["Quantity","Ratio","Range"],"Specimen.collection.collected":["DateTime","Period"],"Specimen.collection.fastingStatus":["CodeableConcept","Duration"],"Specimen.container.additive":["CodeableConcept","Reference"],"Specimen.processing.time":["DateTime","Period"],"SpecimenDefinition.typeTested.container.additive.additive":["CodeableConcept","Reference"],"SpecimenDefinition.typeTested.container.minimumVolume":["Quantity","String"],"StructureMap.group.rule.source.defaultValue":["Base64Binary","Boolean","Canonical","Code","Date","DateTime","Decimal","Id","Instant","Integer","Markdown","Oid","PositiveInt","String","Time","UnsignedInt","Uri","Url","Uuid","Address","Age","Annotation","Attachment","CodeableConcept","Coding","ContactPoint","Count","Distance","Duration","HumanName","Identifier","Money","Period","Quantity","Range","Ratio","Reference","SampledData","Signature","Timing","ContactDetail","Contributor","DataRequirement","Expression","ParameterDefinition","RelatedArtifact","TriggerDefinition","UsageContext","Dosage","Meta"],"StructureMap.group.rule.target.parameter.value":["Id","String","Boolean","Integer","Decimal"],"Substance.ingredient.substance":["CodeableConcept","Reference"],"SubstanceAmount.amount":["Quantity","Range","String"],"SubstanceReferenceInformation.target.amount":["Quantity","Range","String"],"SubstanceSpecification.moiety.amount":["Quantity","String"],"SubstanceSpecification.property.amount":["Quantity","String"],"SubstanceSpecification.property.definingSubstance":["Reference","CodeableConcept"],"SubstanceSpecification.relationship.amount":["Quantity","Range","Ratio","String"],"SubstanceSpecification.relationship.substance":["Reference","CodeableConcept"],"SupplyDelivery.occurrence":["DateTime","Period","Timing"],"SupplyDelivery.suppliedItem.item":["CodeableConcept","Reference"],"SupplyRequest.item":["CodeableConcept","Reference"],"SupplyRequest.occurrence":["DateTime","Period","Timing"],"SupplyRequest.parameter.value":["CodeableConcept","Quantity","Range","Boolean"],"Task.input.value":["Base64Binary","Boolean","Canonical","Code","Date","DateTime","Decimal","Id","Instant","Integer","Markdown","Oid","PositiveInt","String","Time","UnsignedInt","Uri","Url","Uuid","Address","Age","Annotation","Attachment","CodeableConcept","Coding","ContactPoint","Count","Distance","Duration","HumanName","Identifier","Money","Period","Quantity","Range","Ratio","Reference","SampledData","Signature","Timing","ContactDetail","Contributor","DataRequirement","Expression","ParameterDefinition","RelatedArtifact","TriggerDefinition","UsageContext","Dosage","Meta"],"Task.output.value":["Base64Binary","Boolean","Canonical","Code","Date","DateTime","Decimal","Id","Instant","Integer","Markdown","Oid","PositiveInt","String","Time","UnsignedInt","Uri","Url","Uuid","Address","Age","Annotation","Attachment","CodeableConcept","Coding","ContactPoint","Count","Distance","Duration","HumanName","Identifier","Money","Period","Quantity","Range","Ratio","Reference","SampledData","Signature","Timing","ContactDetail","Contributor","DataRequirement","Expression","ParameterDefinition","RelatedArtifact","TriggerDefinition","UsageContext","Dosage","Meta"],"Timing.repeat.bounds":["Duration","Range","Period"],"TriggerDefinition.timing":["Timing","Reference","Date","DateTime"],"UsageContext.value":["CodeableConcept","Quantity","Range","Reference"],"ValueSet.expansion.parameter.value":["String","Boolean","Integer","Decimal","Uri","Code","DateTime"]}')},4310:(e,t,n)=>{const i=n(2763),a={choiceTypePaths:n(4264),pathsDefinedElsewhere:n(3366),type2Parent:n(7535),path2Type:n(2530)};i(a),e.exports=a},4339:(e,t,n)=>{const{Set:i,Hash:a,equalArrays:r}=n(4623);class o{hashCode(){const e=new a;return this.updateHashCode(e),e.finish()}evaluate(e,t){}evalPrecedence(e,t){return this}static andContext(e,t){if(null===e||e===o.NONE)return t;if(null===t||t===o.NONE)return e;const n=new c(e,t);return 1===n.opnds.length?n.opnds[0]:n}static orContext(e,t){if(null===e)return t;if(null===t)return e;if(e===o.NONE||t===o.NONE)return o.NONE;const n=new u(e,t);return 1===n.opnds.length?n.opnds[0]:n}}class s extends o{constructor(e,t,n){super(),this.ruleIndex=void 0===e?-1:e,this.predIndex=void 0===t?-1:t,this.isCtxDependent=void 0!==n&&n}evaluate(e,t){const n=this.isCtxDependent?t:null;return e.sempred(n,this.ruleIndex,this.predIndex)}updateHashCode(e){e.update(this.ruleIndex,this.predIndex,this.isCtxDependent)}equals(e){return this===e||e instanceof s&&this.ruleIndex===e.ruleIndex&&this.predIndex===e.predIndex&&this.isCtxDependent===e.isCtxDependent}toString(){return"{"+this.ruleIndex+":"+this.predIndex+"}?"}}o.NONE=new s;class l extends o{constructor(e){super(),this.precedence=void 0===e?0:e}evaluate(e,t){return e.precpred(t,this.precedence)}evalPrecedence(e,t){return e.precpred(t,this.precedence)?o.NONE:null}compareTo(e){return this.precedence-e.precedence}updateHashCode(e){e.update(this.precedence)}equals(e){return this===e||e instanceof l&&this.precedence===e.precedence}toString(){return"{"+this.precedence+">=prec}?"}static filterPrecedencePredicates(e){const t=[];return e.values().map((function(e){e instanceof l&&t.push(e)})),t}}class c extends o{constructor(e,t){super();const n=new i;e instanceof c?e.opnds.map((function(e){n.add(e)})):n.add(e),t instanceof c?t.opnds.map((function(e){n.add(e)})):n.add(t);const a=l.filterPrecedencePredicates(n);if(a.length>0){let e=null;a.map((function(t){(null===e||t.precedence<e.precedence)&&(e=t)})),n.add(e)}this.opnds=Array.from(n.values())}equals(e){return this===e||e instanceof c&&r(this.opnds,e.opnds)}updateHashCode(e){e.update(this.opnds,"AND")}evaluate(e,t){for(let n=0;n<this.opnds.length;n++)if(!this.opnds[n].evaluate(e,t))return!1;return!0}evalPrecedence(e,t){let n=!1;const i=[];for(let a=0;a<this.opnds.length;a++){const r=this.opnds[a],s=r.evalPrecedence(e,t);if(n|=s!==r,null===s)return null;s!==o.NONE&&i.push(s)}if(!n)return this;if(0===i.length)return o.NONE;let a=null;return i.map((function(e){a=null===a?e:o.andContext(a,e)})),a}toString(){const e=this.opnds.map((e=>e.toString()));return(e.length>3?e.slice(3):e).join("&&")}}class u extends o{constructor(e,t){super();const n=new i;e instanceof u?e.opnds.map((function(e){n.add(e)})):n.add(e),t instanceof u?t.opnds.map((function(e){n.add(e)})):n.add(t);const a=l.filterPrecedencePredicates(n);if(a.length>0){const e=a.sort((function(e,t){return e.compareTo(t)})),t=e[e.length-1];n.add(t)}this.opnds=Array.from(n.values())}equals(e){return this===e||e instanceof u&&r(this.opnds,e.opnds)}updateHashCode(e){e.update(this.opnds,"OR")}evaluate(e,t){for(let n=0;n<this.opnds.length;n++)if(this.opnds[n].evaluate(e,t))return!0;return!1}evalPrecedence(e,t){let n=!1;const i=[];for(let a=0;a<this.opnds.length;a++){const r=this.opnds[a],s=r.evalPrecedence(e,t);if(n|=s!==r,s===o.NONE)return o.NONE;null!==s&&i.push(s)}if(!n)return this;if(0===i.length)return null;return i.map((function(e){return e})),null}toString(){const e=this.opnds.map((e=>e.toString()));return(e.length>3?e.slice(3):e).join("||")}}e.exports={SemanticContext:o,PrecedencePredicate:l,Predicate:s}},4344:()=>{String.fromCodePoint||function(){const e=function(){let e;try{const t={},n=Object.defineProperty;e=n(t,t,t)&&n}catch(e){}return e}(),t=String.fromCharCode,n=Math.floor,i=function(e){const i=[];let a,r,o=-1;const s=arguments.length;if(!s)return"";let l="";for(;++o<s;){let e=Number(arguments[o]);if(!isFinite(e)||e<0||e>1114111||n(e)!==e)throw RangeError("Invalid code point: "+e);e<=65535?i.push(e):(e-=65536,a=55296+(e>>10),r=e%1024+56320,i.push(a,r)),(o+1===s||i.length>16384)&&(l+=t.apply(null,i),i.length=0)}return l};e?e(String,"fromCodePoint",{value:i,configurable:!0,writable:!0}):String.fromCodePoint=i}()},4435:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Ucum=void 0,t.Ucum={dimLen_:7,validOps_:[".","/"],codeSep_:": ",valMsgStart_:"Did you mean ",valMsgEnd_:"?",cnvMsgStart_:"We assumed you meant ",cnvMsgEnd_:".",openEmph_:" ->",closeEmph_:"<- ",openEmphHTML_:' <span class="emphSpan">',closeEmphHTML_:"</span> ",bracesMsg_:"FYI - annotations (text in curly braces {}) are ignored, except that an annotation without a leading symbol implies the default unit 1 (the unity).",needMoleWeightMsg_:"Did you wish to convert between mass and moles?  The molecular weight of the substance represented by the units is required to perform the conversion.",csvCols_:{"case-sensitive code":"csCode_","LOINC property":"loincProperty_","name (display)":"name_",synonyms:"synonyms_",source:"source_",category:"category_",Guidance:"guidance_"},inputKey_:"case-sensitive code",specUnits_:{"B[10.nV]":"specialUnitOne","[m/s2/Hz^(1/2)]":"specialUnitTwo"}}},4597:e=>{e.exports=Number.isFinite||function(e){return!("number"!=typeof e||e!=e||e===1/0||e===-1/0)}},4623:e=>{function t(e){return null===e?"null":e}function n(e){return Array.isArray(e)?"["+e.map(t).join(", ")+"]":"null"}function i(e,t){return e?e.equals(t):e==t}function a(e){return e?e.hashCode():-1}String.prototype.seed=String.prototype.seed||Math.round(Math.random()*Math.pow(2,32)),String.prototype.hashCode=function(){const e=this.toString();let t,n;const i=3&e.length,a=e.length-i;let r=String.prototype.seed;const o=3432918353,s=461845907;let l=0;for(;l<a;)n=255&e.charCodeAt(l)|(255&e.charCodeAt(++l))<<8|(255&e.charCodeAt(++l))<<16|(255&e.charCodeAt(++l))<<24,++l,n=(65535&n)*o+(((n>>>16)*o&65535)<<16)&4294967295,n=n<<15|n>>>17,n=(65535&n)*s+(((n>>>16)*s&65535)<<16)&4294967295,r^=n,r=r<<13|r>>>19,t=5*(65535&r)+((5*(r>>>16)&65535)<<16)&4294967295,r=27492+(65535&t)+((58964+(t>>>16)&65535)<<16);switch(n=0,i){case 3:n^=(255&e.charCodeAt(l+2))<<16;case 2:n^=(255&e.charCodeAt(l+1))<<8;case 1:n^=255&e.charCodeAt(l),n=(65535&n)*o+(((n>>>16)*o&65535)<<16)&4294967295,n=n<<15|n>>>17,n=(65535&n)*s+(((n>>>16)*s&65535)<<16)&4294967295,r^=n}return r^=e.length,r^=r>>>16,r=2246822507*(65535&r)+((2246822507*(r>>>16)&65535)<<16)&4294967295,r^=r>>>13,r=3266489909*(65535&r)+((3266489909*(r>>>16)&65535)<<16)&4294967295,r^=r>>>16,r>>>0};class r{constructor(){this.data=[]}add(e){this.data[e]=!0}or(e){const t=this;Object.keys(e.data).map((function(e){t.add(e)}))}remove(e){delete this.data[e]}contains(e){return!0===this.data[e]}values(){return Object.keys(this.data)}minValue(){return Math.min.apply(null,this.values())}hashCode(){const e=new s;return e.update(this.values()),e.finish()}equals(e){return e instanceof r&&this.hashCode()===e.hashCode()}toString(){return"{"+this.values().join(", ")+"}"}get length(){return this.values().length}}class o{constructor(e,t){this.data={},this.hashFunction=e||a,this.equalsFunction=t||i}put(e,t){const n="hash_"+this.hashFunction(e);if(n in this.data){const i=this.data[n];for(let n=0;n<i.length;n++){const a=i[n];if(this.equalsFunction(e,a.key)){const e=a.value;return a.value=t,e}}return i.push({key:e,value:t}),t}return this.data[n]=[{key:e,value:t}],t}containsKey(e){const t="hash_"+this.hashFunction(e);if(t in this.data){const n=this.data[t];for(let t=0;t<n.length;t++){const i=n[t];if(this.equalsFunction(e,i.key))return!0}}return!1}get(e){const t="hash_"+this.hashFunction(e);if(t in this.data){const n=this.data[t];for(let t=0;t<n.length;t++){const i=n[t];if(this.equalsFunction(e,i.key))return i.value}}return null}entries(){let e=[];for(const t in this.data)0===t.indexOf("hash_")&&(e=e.concat(this.data[t]));return e}getKeys(){return this.entries().map((function(e){return e.key}))}getValues(){return this.entries().map((function(e){return e.value}))}toString(){return"["+this.entries().map((function(e){return"{"+e.key+":"+e.value+"}"})).join(", ")+"]"}get length(){let e=0;for(const t in this.data)0===t.indexOf("hash_")&&(e+=this.data[t].length);return e}}class s{constructor(){this.count=0,this.hash=0}update(){for(let e=0;e<arguments.length;e++){const t=arguments[e];if(null!=t)if(Array.isArray(t))this.update.apply(this,t);else{let e=0;switch(typeof t){case"undefined":case"function":continue;case"number":case"boolean":e=t;break;case"string":e=t.hashCode();break;default:t.updateHashCode?t.updateHashCode(this):console.log("No updateHashCode for "+t.toString());continue}e*=3432918353,e=e<<15|e>>>17,e*=461845907,this.count=this.count+1;let n=this.hash^e;n=n<<13|n>>>19,n=5*n+3864292196,this.hash=n}}}finish(){let e=this.hash^4*this.count;return e^=e>>>16,e*=2246822507,e^=e>>>13,e*=3266489909,e^=e>>>16,e}}e.exports={Hash:s,Set:class{constructor(e,t){this.data={},this.hashFunction=e||a,this.equalsFunction=t||i}add(e){const t="hash_"+this.hashFunction(e);if(t in this.data){const n=this.data[t];for(let t=0;t<n.length;t++)if(this.equalsFunction(e,n[t]))return n[t];return n.push(e),e}return this.data[t]=[e],e}contains(e){return null!=this.get(e)}get(e){const t="hash_"+this.hashFunction(e);if(t in this.data){const n=this.data[t];for(let t=0;t<n.length;t++)if(this.equalsFunction(e,n[t]))return n[t]}return null}values(){let e=[];for(const t in this.data)0===t.indexOf("hash_")&&(e=e.concat(this.data[t]));return e}toString(){return n(this.values())}get length(){let e=0;for(const t in this.data)0===t.indexOf("hash_")&&(e+=this.data[t].length);return e}},Map:o,BitSet:r,AltDict:class{constructor(){this.data={}}get(e){return(e="k-"+e)in this.data?this.data[e]:null}put(e,t){e="k-"+e,this.data[e]=t}values(){const e=this.data;return Object.keys(this.data).map((function(t){return e[t]}))}},DoubleDict:class{constructor(e){this.defaultMapCtor=e||o,this.cacheMap=new this.defaultMapCtor}get(e,t){const n=this.cacheMap.get(e)||null;return null===n?null:n.get(t)||null}set(e,t,n){let i=this.cacheMap.get(e)||null;null===i&&(i=new this.defaultMapCtor,this.cacheMap.put(e,i)),i.put(t,n)}},hashStuff:function(){const e=new s;return e.update.apply(e,arguments),e.finish()},escapeWhitespace:function(e,t){return e=e.replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r"),t&&(e=e.replace(/ /g,"·")),e},arrayToString:n,titleCase:function(e){return e.replace(/\w\S*/g,(function(e){return e.charAt(0).toUpperCase()+e.substr(1)}))},equalArrays:function(e,t){if(!Array.isArray(e)||!Array.isArray(t))return!1;if(e===t)return!0;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(!(e[n]===t[n]||e[n].equals&&e[n].equals(t[n])))return!1;return!0}}},4674:(e,t,n)=>{const{Token:i}=n(7931),a=n(1184),{Interval:r}=n(5897);class o{}e.exports=class extends o{constructor(e){super(),this.tokenSource=e,this.tokens=[],this.index=-1,this.fetchedEOF=!1}mark(){return 0}release(e){}reset(){this.seek(0)}seek(e){this.lazyInit(),this.index=this.adjustSeekIndex(e)}get(e){return this.lazyInit(),this.tokens[e]}consume(){let e=!1;if(e=this.index>=0&&(this.fetchedEOF?this.index<this.tokens.length-1:this.index<this.tokens.length),!e&&this.LA(1)===i.EOF)throw"cannot consume EOF";this.sync(this.index+1)&&(this.index=this.adjustSeekIndex(this.index+1))}sync(e){const t=e-this.tokens.length+1;return!(t>0)||this.fetch(t)>=t}fetch(e){if(this.fetchedEOF)return 0;for(let t=0;t<e;t++){const e=this.tokenSource.nextToken();if(e.tokenIndex=this.tokens.length,this.tokens.push(e),e.type===i.EOF)return this.fetchedEOF=!0,t+1}return e}getTokens(e,t,n){if(void 0===n&&(n=null),e<0||t<0)return null;this.lazyInit();const a=[];t>=this.tokens.length&&(t=this.tokens.length-1);for(let r=e;r<t;r++){const e=this.tokens[r];if(e.type===i.EOF)break;(null===n||n.contains(e.type))&&a.push(e)}return a}LA(e){return this.LT(e).type}LB(e){return this.index-e<0?null:this.tokens[this.index-e]}LT(e){if(this.lazyInit(),0===e)return null;if(e<0)return this.LB(-e);const t=this.index+e-1;return this.sync(t),t>=this.tokens.length?this.tokens[this.tokens.length-1]:this.tokens[t]}adjustSeekIndex(e){return e}lazyInit(){-1===this.index&&this.setup()}setup(){this.sync(0),this.index=this.adjustSeekIndex(0)}setTokenSource(e){this.tokenSource=e,this.tokens=[],this.index=-1,this.fetchedEOF=!1}nextTokenOnChannel(e,t){if(this.sync(e),e>=this.tokens.length)return-1;let n=this.tokens[e];for(;n.channel!==this.channel;){if(n.type===i.EOF)return-1;e+=1,this.sync(e),n=this.tokens[e]}return e}previousTokenOnChannel(e,t){for(;e>=0&&this.tokens[e].channel!==t;)e-=1;return e}getHiddenTokensToRight(e,t){if(void 0===t&&(t=-1),this.lazyInit(),e<0||e>=this.tokens.length)throw e+" not in 0.."+this.tokens.length-1;const n=this.nextTokenOnChannel(e+1,a.DEFAULT_TOKEN_CHANNEL),i=e+1,r=-1===n?this.tokens.length-1:n;return this.filterForChannel(i,r,t)}getHiddenTokensToLeft(e,t){if(void 0===t&&(t=-1),this.lazyInit(),e<0||e>=this.tokens.length)throw e+" not in 0.."+this.tokens.length-1;const n=this.previousTokenOnChannel(e-1,a.DEFAULT_TOKEN_CHANNEL);if(n===e-1)return null;const i=n+1,r=e-1;return this.filterForChannel(i,r,t)}filterForChannel(e,t,n){const i=[];for(let r=e;r<t+1;r++){const e=this.tokens[r];-1===n?e.channel!==a.DEFAULT_TOKEN_CHANNEL&&i.push(e):e.channel===n&&i.push(e)}return 0===i.length?null:i}getSourceName(){return this.tokenSource.getSourceName()}getText(e){this.lazyInit(),this.fill(),null==e&&(e=new r(0,this.tokens.length-1));let t=e.start;t instanceof i&&(t=t.tokenIndex);let n=e.stop;if(n instanceof i&&(n=n.tokenIndex),null===t||null===n||t<0||n<0)return"";n>=this.tokens.length&&(n=this.tokens.length-1);let a="";for(let e=t;e<n+1;e++){const t=this.tokens[e];if(t.type===i.EOF)break;a+=t.text}return a}fill(){for(this.lazyInit();1e3===this.fetch(1e3););}}},4732:(e,t,n)=>{var i=n(4825);e.exports=function(e,t){var n=Number(t);return i(e,6e4*n)}},4825:(e,t,n)=>{var i=n(2926);e.exports=function(e,t){var n=i(e).getTime(),a=Number(t);return new Date(n+a)}},4838:(e,t,n)=>{const i=n(38);var a={children:function(e){let t=this.model;return e.reduce((function(e,n){let a=i.valData(n);if(null==a)return e;if("object"==typeof a){for(var r of Object.keys(a))i.pushFn(e,i.makeChildResNodes(n,r,t));return e}return e}),[])},descendants:function(e){for(var t=a.children.call(this,e),n=[];t.length>0;)i.pushFn(n,t),t=a.children.call(this,t);return n}};e.exports=a},4911:(e,t,n)=>{var i=n(2136);e.exports=function(e,t){var n=Number(t);return i(e,12*n)}},4992:(e,t,n)=>{var i=n(2926);e.exports=function(e){var t=i(e),n=t.getFullYear(),a=t.getMonth(),r=new Date(0);return r.setFullYear(n,a+1,0),r.setHours(0,0,0,0),r.getDate()}},4996:(e,t,n)=>{const i=n(3394),a=n(8046),r=n(1185),o=n(3358);class s extends i.error.ErrorListener{constructor(e){super(),this.errors=e}syntaxError(e,t,n,i,a,r){this.errors.push([e,t,n,i,a,r])}}e.exports={parse:function(e){var t=new i.InputStream(e),n=new a(t),l=new i.CommonTokenStream(n),c=new r(l);c.buildParseTrees=!0;var u=[],m=new s(u);n.removeErrorListeners(),n.addErrorListener(m),c.removeErrorListeners(),c.addErrorListener(m);var d=c.entireExpression();class f extends o{constructor(){super()}}var p,g={},h=[g];for(let e of Object.getOwnPropertyNames(o.prototype))e.startsWith("enter")?f.prototype[e]=function(t){let n=h[h.length-1],i=e.slice(5);(p={type:i}).text=t.getText(),n.children||(n.children=[]),n.children.push(p),h.push(p),p.terminalNodeText=[];for(let e of t.children)e.symbol&&p.terminalNodeText.push(e.getText())}:e.startsWith("exit")&&(f.prototype[e]=function(){h.pop()});var y=new f;if(i.tree.ParseTreeWalker.DEFAULT.walk(y,d),u.length>0){let e=[];for(let t=0,n=u.length;t<n;++t){let n=u[t],i="line: "+n[2]+"; column: "+n[3]+"; message: "+n[4];e.push(i)}var C=new Error(e.join("\n"));throw C.errors=u,C}return g}}},5313:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ucumJsonDefs=t.UcumJsonDefs=void 0;var i=n(8545),a=n(984),r=n(5683),o=n(8314),s=n(3499).YH;class l{loadJsonDefs(){const e=n(7084);if(e.prefixes=s(e.prefixes),e.units=s(e.units),0===o.UnitTables.getInstance().unitsCount()){let t=a.PrefixTables.getInstance(),n=e.prefixes,s=n.length;for(let e=0;e<s;e++){let a=new i.Prefix(n[e]);t.add(a)}let l=o.UnitTables.getInstance(),c=e.units,u=c.length;for(let e=0;e<u;e++){let t=new r.Unit(c[e]);l.addUnit(t)}}}}t.UcumJsonDefs=l;var c=new l;t.ucumJsonDefs=c},5332:(e,t,n)=>{const{BitSet:i}=n(4623),{ErrorListener:a}=n(8845),{Interval:r}=n(5897);e.exports=class extends a{constructor(e){super(),e=e||!0,this.exactOnly=e}reportAmbiguity(e,t,n,i,a,o,s){if(this.exactOnly&&!a)return;const l="reportAmbiguity d="+this.getDecisionDescription(e,t)+": ambigAlts="+this.getConflictingAlts(o,s)+", input='"+e.getTokenStream().getText(new r(n,i))+"'";e.notifyErrorListeners(l)}reportAttemptingFullContext(e,t,n,i,a,o){const s="reportAttemptingFullContext d="+this.getDecisionDescription(e,t)+", input='"+e.getTokenStream().getText(new r(n,i))+"'";e.notifyErrorListeners(s)}reportContextSensitivity(e,t,n,i,a,o){const s="reportContextSensitivity d="+this.getDecisionDescription(e,t)+", input='"+e.getTokenStream().getText(new r(n,i))+"'";e.notifyErrorListeners(s)}getDecisionDescription(e,t){const n=t.decision,i=t.atnStartState.ruleIndex,a=e.ruleNames;if(i<0||i>=a.length)return""+n;const r=a[i]||null;return null===r||0===r.length?""+n:`${n} (${r})`}getConflictingAlts(e,t){if(null!==e)return e;const n=new i;for(let e=0;e<t.items.length;e++)n.add(t.items[e].alt);return`{${n.values().join(", ")}}`}}},5413:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.isNumericString=function(e){let t=""+e;return!isNaN(t)&&!isNaN(parseFloat(t))},t.isIntegerUnit=function(e){return/^\d+$/.test(e)},t.getSynonyms=function(e){let t={},n={};if(n=i.getInstance().getUnitBySynonym(e),n.units){t.status="succeeded";let e=n.units.length;t.units=[];for(let i=0;i<e;i++){let e=n.units[i];t.units[i]={code:e.csCode_,name:e.name_,guidance:e.guidance_}}}else t.status=n.status,t.msg=n.msg;return t};var i=n(8314).UnitTables},5637:(e,t,n)=>{t.f=void 0;var i=n(4435),a=n(1563);class r{constructor(e){if(0===i.Ucum.dimLen_)throw new Error("Dimension.setDimensionLen must be called before Dimension constructor");if(null==e)this.assignZero();else if(e instanceof Array){if(e.length!==i.Ucum.dimLen_)throw new Error(`Parameter error, incorrect length of vector passed to Dimension constructor, vector = ${JSON.stringify(e)}`);this.dimVec_=[];for(let t=0;t<i.Ucum.dimLen_;t++)this.dimVec_.push(e[t])}else if(a(e)){if(e<0||e>=i.Ucum.dimLen_)throw new Error("Parameter error, invalid element number specified for Dimension constructor");this.assignZero(),this.dimVec_[e]=1}}setElementAt(e,t){if(!a(e)||e<0||e>=i.Ucum.dimLen_)throw new Error(`Dimension.setElementAt called with an invalid index position (${e})`);this.dimVec_||this.assignZero(),null==t&&(t=1),this.dimVec_[e]=t}getElementAt(e){if(!a(e)||e<0||e>=i.Ucum.dimLen_)throw new Error(`Dimension.getElementAt called with an invalid index position (${e})`);let t=null;return this.dimVec_&&(t=this.dimVec_[e]),t}getProperty(e){return this["_"===e.charAt(e.length-1)?e:e+"_"]}toString(){let e=null;return this.dimVec_&&(e="["+this.dimVec_.join(", ")+"]"),e}add(e){if(!e instanceof r)throw new Error("Dimension.add called with an invalid parameter - "+typeof e+" instead of a Dimension object");if(this.dimVec_&&e.dimVec_)for(let t=0;t<i.Ucum.dimLen_;t++)this.dimVec_[t]+=e.dimVec_[t];return this}sub(e){if(!e instanceof r)throw new Error("Dimension.sub called with an invalid parameter - "+typeof e+" instead of a Dimension object");if(this.dimVec_&&e.dimVec_)for(let t=0;t<i.Ucum.dimLen_;t++)this.dimVec_[t]-=e.dimVec_[t];return this}minus(){if(this.dimVec_)for(let e=0;e<i.Ucum.dimLen_;e++)this.dimVec_[e]=-this.dimVec_[e];return this}mul(e){if(!a(e))throw new Error("Dimension.sub called with an invalid parameter - "+typeof dim2+" instead of a number");if(this.dimVec_)for(let t=0;t<i.Ucum.dimLen_;t++)this.dimVec_[t]*=e;return this}equals(e){if(!e instanceof r)throw new Error("Dimension.equals called with an invalid parameter - "+typeof e+" instead of a Dimension object");let t=!0,n=e.dimVec_;if(this.dimVec_&&n)for(let e=0;t&&e<i.Ucum.dimLen_;e++)t=this.dimVec_[e]===n[e];else t=null===this.dimVec_&&null===n;return t}assignDim(e){if(!e instanceof r)throw new Error("Dimension.assignDim called with an invalid parameter - "+typeof e+" instead of a Dimension object");if(null===e.dimVec_)this.dimVec_=null;else{null===this.dimVec_&&(this.dimVec_=[]);for(let t=0;t<i.Ucum.dimLen_;t++)this.dimVec_[t]=e.dimVec_[t]}return this}assignZero(){null!==this.dimVec_&&void 0!==this.dimVec_||(this.dimVec_=[]);for(let e=0;e<i.Ucum.dimLen_;e++)this.dimVec_.push(0);return this}isZero(){let e=null!==this.dimVec_;if(this.dimVec_)for(let t=0;e&&t<i.Ucum.dimLen_;t++)e=0===this.dimVec_[t];return e}isNull(){return null===this.dimVec_}clone(){let e=new r;return e.assignDim(this),e}}t.f=r},5683:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Unit=void 0;var i,a=(i=n(2226))&&i.__esModule?i:{default:i},r=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=o();if(t&&t.has(e))return t.get(e);var n={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var a in e)if(Object.prototype.hasOwnProperty.call(e,a)){var r=i?Object.getOwnPropertyDescriptor(e,a):null;r&&(r.get||r.set)?Object.defineProperty(n,a,r):n[a]=e[a]}return n.default=e,t&&t.set(e,n),n}(n(5413));function o(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return o=function(){return e},e}var s,l=n(4435).Ucum,c=n(5637).f,u=n(1563);class m{constructor(e={}){this.isBase_=e.isBase_||!1,this.name_=e.name_||"",this.csCode_=e.csCode_||"",this.ciCode_=e.ciCode_||"",this.property_=e.property_||"",this.magnitude_=e.magnitude_||1,void 0===e.dim_||null===e.dim_?this.dim_=new c:void 0!==e.dim_.dimVec_?this.dim_=new c(e.dim_.dimVec_):e.dim_ instanceof c?this.dim_=e.dim_:e.dim_ instanceof Array||u(e.dim_)?this.dim_=new c(e.dim_):this.dim_=new c,this.printSymbol_=e.printSymbol_||null,this.class_=e.class_||null,this.isMetric_=e.isMetric_||!1,this.variable_=e.variable_||null,this.cnv_=e.cnv_||null,this.cnvPfx_=e.cnvPfx_||1,this.isSpecial_=e.isSpecial_||!1,this.isArbitrary_=e.isArbitrary_||!1,this.moleExp_=e.moleExp_||0,this.synonyms_=e.synonyms_||null,this.source_=e.source_||null,this.loincProperty_=e.loincProperty_||null,this.category_=e.category_||null,this.guidance_=e.guidance_||null,this.csUnitString_=e.csUnitString_||null,this.ciUnitString_=e.ciUnitString_||null,this.baseFactorStr_=e.baseFactorStr_||null,this.baseFactor_=e.baseFactor_||null,this.defError_=e.defError_||!1}assignUnity(){return this.name_="",this.magnitude_=1,this.dim_||(this.dim_=new c),this.dim_.assignZero(),this.cnv_=null,this.cnvPfx_=1,this}assignVals(e){for(let t in e){let n="_"===!t.charAt(t.length-1)?t+"_":t;if(!this.hasOwnProperty(n))throw new Error(`Parameter error; ${t} is not a property of a Unit`);this[n]=e[t]}}clone(){let e=new m;return Object.getOwnPropertyNames(this).forEach((t=>{"dim_"===t?this.dim_?e.dim_=this.dim_.clone():e.dim_=null:e[t]=this[t]})),e}assign(e){Object.getOwnPropertyNames(e).forEach((t=>{"dim_"===t?e.dim_?this.dim_=e.dim_.clone():this.dim_=null:this[t]=e[t]}))}equals(e){return this.magnitude_===e.magnitude_&&this.cnv_===e.cnv_&&this.cnvPfx_===e.cnvPfx_&&(null===this.dim_&&null===e.dim_||this.dim_.equals(e.dim_))}fullEquals(e){let t=Object.keys(this).sort(),n=Object.keys(e).sort(),i=t.length,a=i===n.length;for(let r=0;r<i&&a;r++)a=t[r]===n[r]&&("dim_"===t[r]?this.dim_.equals(e.dim_):this[t[r]]===e[t[r]]);return a}getProperty(e){return this["_"===e.charAt(e.length-1)?e:e+"_"]}convertFrom(e,t){let n=0;if(this.isArbitrary_)throw new Error(`Attempt to convert to arbitrary unit "${this.csCode_}"`);if(t.isArbitrary_)throw new Error(`Attempt to convert arbitrary unit "${t.csCode_}"`);if(t.dim_&&this.dim_&&!t.dim_.equals(this.dim_))throw this.isMoleMassCommensurable(t)?new Error(l.needMoleWeightMsg_):new Error(`Sorry.  ${t.csCode_} cannot be converted to ${this.csCode_}.`);if(t.dim_&&(!this.dim_||this.dim_.isNull()))throw new Error(`Sorry.  ${t.csCode_} cannot be converted to ${this.csCode_}.`);if(this.dim_&&(!t.dim_||t.dim_.isNull()))throw new Error(`Sorry.  ${t.csCode_} cannot be converted to ${this.csCode_}.`);let i,r=t.cnv_,o=t.magnitude_;return i=null!=r?a.default.forName(r).cnvFrom(e*t.cnvPfx_)*o:e*o,n=null!=this.cnv_?a.default.forName(this.cnv_).cnvTo(i/this.magnitude_)/this.cnvPfx_:i/this.magnitude_,n}convertTo(e,t){return t.convertFrom(e,this)}convertCoherent(e){return null!==this.cnv_&&(e=this.cnv_.f_from(e/this.cnvPfx_)*this.magnitude_),e}mutateCoherent(e){e=this.convertCoherent(e),this.magnitude_=1,this.cnv_=null,this.cnvPfx_=1,this.name_="";for(let e=0,t=c.getMax();e<t;e++){let t=this.dim_.getElementAt(e),n=this._getUnitTables().getUnitsByDimension(new c(e));if(null==n)throw new Error(`Can't find base unit for dimension ${e}`);this.name_=n.name+t}return e}convertMassToMol(e,t,n){let i=this.magnitude_*e/n,a=this._getUnitTables().getUnitByCode("mol").magnitude_;return i/(t.magnitude_/a)}convertMolToMass(e,t,n){let i=this._getUnitTables().getUnitByCode("mol").magnitude_;return this.magnitude_/i*e*n/t.magnitude_}mutateRatio(e){return null==this.cnv_?this.mutateCoherent(e):e}multiplyThis(e){let t=this.clone();null!=t.cnv_?t.cnvPfx_*=e:t.magnitude_*=e;let n=e.toString();return t.name_=this._concatStrs(n,"*",this.name_,"[","]"),t.csCode_=this._concatStrs(n,".",this.csCode_,"(",")"),t.ciCode_=this._concatStrs(n,".",this.ciCode_,"(",")"),t.printSymbol_=this._concatStrs(n,".",this.printSymbol_,"(",")"),t}multiplyThese(e){var t=this.clone();if(null!=t.cnv_){if(null!=e.cnv_||e.dim_&&!e.dim_.isZero())throw new Error(`Attempt to multiply non-ratio unit ${t.name_} failed.`);t.cnvPfx_*=e.magnitude_}else if(null!=e.cnv_){if(t.dim_&&!t.dim_.isZero())throw new Error(`Attempt to multiply non-ratio unit ${e.name_}`);t.cnvPfx_=e.cnvPfx_*t.magnitude_,t.magnitude_=e.magnitude_,t.cnv_=e.cnv_}else t.magnitude_*=e.magnitude_;return!t.dim_||t.dim_&&!t.dim_.dimVec_?e.dim_?t.dim_=e.dim_.clone():t.dim_=e.dim_:e.dim_&&e.dim_ instanceof c&&t.dim_.add(e.dim_),t.name_=this._concatStrs(t.name_,"*",e.name_,"[","]"),t.csCode_=this._concatStrs(t.csCode_,".",e.csCode_,"(",")"),t.ciCode_&&e.ciCode_?t.ciCode_=this._concatStrs(t.ciCode_,".",e.ciCode_,"(",")"):e.ciCode_&&(t.ciCode_=e.ciCode_),t.resetFieldsForDerivedUnit(),t.printSymbol_&&e.printSymbol_?t.printSymbol_=this._concatStrs(t.printSymbol_,".",e.printSymbol_,"(",")"):e.printSymbol_&&(t.printSymbol_=e.printSymbol_),t.moleExp_=t.moleExp_+e.moleExp_,t.isArbitrary_||(t.isArbitrary_=e.isArbitrary_),t.isSpecial_||(t.isSpecial_=e.isSpecial_),t}resetFieldsForDerivedUnit(){this.guidance_="",this.synonyms_=null,this.isBase_=!1}divide(e){var t=this.clone();if(null!=t.cnv_)throw new Error(`Attempt to divide non-ratio unit ${t.name_}`);if(null!=e.cnv_)throw new Error(`Attempt to divide by non-ratio unit ${e.name_}`);return t.name_&&e.name_?t.name_=this._concatStrs(t.name_,"/",e.name_,"[","]"):e.name_&&(t.name_=e.invertString(e.name_)),t.csCode_=this._concatStrs(t.csCode_,"/",e.csCode_,"(",")"),t.ciCode_&&e.ciCode_?t.ciCode_=this._concatStrs(t.ciCode_,"/",e.ciCode_,"(",")"):e.ciCode_&&(t.ciCode_=e.invertString(e.ciCode_)),t.resetFieldsForDerivedUnit(),t.magnitude_/=e.magnitude_,t.printSymbol_&&e.printSymbol_?t.printSymbol_=this._concatStrs(t.printSymbol_,"/",e.printSymbol_,"(",")"):e.printSymbol_&&(t.printSymbol_=e.invertString(e.printSymbol_)),e.dim_&&(t.dim_?(t.dim_.isNull()&&t.dim_.assignZero(),t.dim_=t.dim_.sub(e.dim_)):t.dim_=e.dim_.clone().minus()),t.moleExp_=t.moleExp_-e.moleExp_,t.isArbitrary_||(t.isArbitrary_=e.isArbitrary_),t}invert(){if(null!=this.cnv_)throw new Error(`Attempt to invert a non-ratio unit - ${this.name_}`);return this.name_=this.invertString(this.name_),this.magnitude_=1/this.magnitude_,this.dim_.minus(),this}invertString(e){if(e.length>0){let t=e.replace("/","!").replace(".","/").replace("<!","</").replace("!",".");switch(t.charAt(0)){case".":e=t.substr(1);break;case"/":e=t;break;default:e="/"+t}}return e}_concatStrs(e,t,n,i,a){return this._buildOneString(e,i,a)+t+this._buildOneString(n,i,a)}_buildOneString(e,t,n){let i="";return i=r.isNumericString(e)||"("===e.charAt(0)&&e.endsWith(")")||"["===e.charAt(0)&&e.endsWith("]")?e:/[./* ]/.test(e)?t+e+n:e,i}power(e){if(null!=this.cnv_)throw new Error(`Attempt to raise a non-ratio unit, ${this.name_}, to a power.`);let t=this.csCode_.match(/([./]|[^./]+)/g),n=t.length;for(let i=0;i<n;i++){let n=t[i];if("/"!==n&&"."!==n){let a=parseInt(n);if(u(a))t[i]=Math.pow(a,e).toString();else{let a=n.length;for(let r=a-1;r>=0;r--){let o=parseInt(n[r]);if(!u(o)){if("-"!==n[r]&&"+"!==n[r]||r--,r<a-1){let a=parseInt(n.substr(r));a=Math.pow(a,e),t[i]=n.substr(0,r)+a.toString(),r=-1}else t[i]+=e.toString(),r=-1;r=-1}}}}}return this.csCode_=t.join(""),this.magnitude_=Math.pow(this.magnitude_,e),this.dim_&&this.dim_.mul(e),this}isMoleMassCommensurable(e){let t=this._getUnitTables().getMassDimensionIndex(),n=!1;if(1===this.moleExp_&&0===e.moleExp_){let i=this.dim_.clone(),a=i.getElementAt(t);i.setElementAt(t,a+this.moleExp_),n=i.equals(e.dim_)}else if(1===e.moleExp_&&0===this.moleExp_){let i=e.dim_.clone(),a=i.getElementAt(t);i.setElementAt(t,a+e.moleExp_),n=i.equals(this.dim_)}return n}_getUnitTables(){return s||(s=n(8314).UnitTables),s.getInstance()}}t.Unit=m},5897:(e,t,n)=>{const{Token:i}=n(7931);class a{constructor(e,t){this.start=e,this.stop=t}clone(){return new a(this.start,this.stop)}contains(e){return e>=this.start&&e<this.stop}toString(){return this.start===this.stop-1?this.start.toString():this.start.toString()+".."+(this.stop-1).toString()}get length(){return this.stop-this.start}}class r{constructor(){this.intervals=null,this.readOnly=!1}first(e){return null===this.intervals||0===this.intervals.length?i.INVALID_TYPE:this.intervals[0].start}addOne(e){this.addInterval(new a(e,e+1))}addRange(e,t){this.addInterval(new a(e,t+1))}addInterval(e){if(null===this.intervals)this.intervals=[],this.intervals.push(e.clone());else{for(let t=0;t<this.intervals.length;t++){const n=this.intervals[t];if(e.stop<n.start)return void this.intervals.splice(t,0,e);if(e.stop===n.start)return void(this.intervals[t]=new a(e.start,n.stop));if(e.start<=n.stop)return this.intervals[t]=new a(Math.min(n.start,e.start),Math.max(n.stop,e.stop)),void this.reduce(t)}this.intervals.push(e.clone())}}addSet(e){return null!==e.intervals&&e.intervals.forEach((e=>this.addInterval(e)),this),this}reduce(e){if(e<this.intervals.length-1){const t=this.intervals[e],n=this.intervals[e+1];t.stop>=n.stop?(this.intervals.splice(e+1,1),this.reduce(e)):t.stop>=n.start&&(this.intervals[e]=new a(t.start,n.stop),this.intervals.splice(e+1,1))}}complement(e,t){const n=new r;return n.addInterval(new a(e,t+1)),null!==this.intervals&&this.intervals.forEach((e=>n.removeRange(e))),n}contains(e){if(null===this.intervals)return!1;for(let t=0;t<this.intervals.length;t++)if(this.intervals[t].contains(e))return!0;return!1}removeRange(e){if(e.start===e.stop-1)this.removeOne(e.start);else if(null!==this.intervals){let t=0;for(let n=0;n<this.intervals.length;n++){const n=this.intervals[t];if(e.stop<=n.start)return;if(e.start>n.start&&e.stop<n.stop){this.intervals[t]=new a(n.start,e.start);const i=new a(e.stop,n.stop);return void this.intervals.splice(t,0,i)}e.start<=n.start&&e.stop>=n.stop?(this.intervals.splice(t,1),t-=1):e.start<n.stop?this.intervals[t]=new a(n.start,e.start):e.stop<n.stop&&(this.intervals[t]=new a(e.stop,n.stop)),t+=1}}}removeOne(e){if(null!==this.intervals)for(let t=0;t<this.intervals.length;t++){const n=this.intervals[t];if(e<n.start)return;if(e===n.start&&e===n.stop-1)return void this.intervals.splice(t,1);if(e===n.start)return void(this.intervals[t]=new a(n.start+1,n.stop));if(e===n.stop-1)return void(this.intervals[t]=new a(n.start,n.stop-1));if(e<n.stop-1){const i=new a(n.start,e);return n.start=e+1,void this.intervals.splice(t,0,i)}}}toString(e,t,n){return e=e||null,t=t||null,n=n||!1,null===this.intervals?"{}":null!==e||null!==t?this.toTokenString(e,t):n?this.toCharString():this.toIndexString()}toCharString(){const e=[];for(let t=0;t<this.intervals.length;t++){const n=this.intervals[t];n.stop===n.start+1?n.start===i.EOF?e.push("<EOF>"):e.push("'"+String.fromCharCode(n.start)+"'"):e.push("'"+String.fromCharCode(n.start)+"'..'"+String.fromCharCode(n.stop-1)+"'")}return e.length>1?"{"+e.join(", ")+"}":e[0]}toIndexString(){const e=[];for(let t=0;t<this.intervals.length;t++){const n=this.intervals[t];n.stop===n.start+1?n.start===i.EOF?e.push("<EOF>"):e.push(n.start.toString()):e.push(n.start.toString()+".."+(n.stop-1).toString())}return e.length>1?"{"+e.join(", ")+"}":e[0]}toTokenString(e,t){const n=[];for(let i=0;i<this.intervals.length;i++){const a=this.intervals[i];for(let i=a.start;i<a.stop;i++)n.push(this.elementName(e,t,i))}return n.length>1?"{"+n.join(", ")+"}":n[0]}elementName(e,t,n){return n===i.EOF?"<EOF>":n===i.EPSILON?"<EPSILON>":e[n]||t[n]}get length(){return this.intervals.map((e=>e.length)).reduce(((e,t)=>e+t))}}e.exports={Interval:a,IntervalSet:r}},6001:(e,t,n)=>{var i={};const a=n(1231),r=n(787),o=a.FP_Date,s=a.FP_DateTime,l=a.FP_Time;i.now=function(){if(!r.now){var e=r.nowDate,t=s.isoDateTime(e);r.now=new s(t)}return r.now},i.today=function(){if(!r.today){var e=r.nowDate,t=o.isoDate(e);r.today=new o(t)}return r.today},i.timeOfDay=function(){if(!r.timeOfDay){const e=r.nowDate,t=s.isoTime(e);r.timeOfDay=new l(t)}return r.timeOfDay},e.exports=i},6177:e=>{e.exports={LEXER:0,PARSER:1}},6304:e=>{e.exports=JSON.parse('{"name":"fhirpath","version":"3.17.1","description":"A FHIRPath engine","main":"src/fhirpath.js","types":"src/fhirpath.d.ts","dependencies":{"@lhncbc/ucum-lhc":"^5.0.0","antlr4":"~4.9.3","commander":"^2.18.0","date-fns":"^1.30.1","js-yaml":"^3.13.1"},"devDependencies":{"@babel/core":"^7.21.4","@babel/eslint-parser":"^7.17.0","@babel/preset-env":"^7.16.11","babel-loader":"^8.2.3","benny":"github:caderek/benny#0ad058d3c7ef0b488a8fe9ae3519159fc7f36bb6","bestzip":"^2.2.0","copy-webpack-plugin":"^12.0.2","cypress":"^13.7.2","eslint":"^8.10.0","fhir":"^4.10.3","grunt":"^1.5.2","grunt-cli":"^1.4.3","grunt-text-replace":"^0.4.0","jasmine-spec-reporter":"^4.2.1","jest":"^29.7.0","jit-grunt":"^0.10.0","lodash":"^4.17.21","open":"^8.4.0","rimraf":"^3.0.0","tmp":"0.0.33","tsd":"^0.31.1","webpack":"^5.11.1","webpack-bundle-analyzer":"^4.4.2","webpack-cli":"^4.9.1","xml2js":"^0.5.0","yargs":"^15.1.0"},"engines":{"node":">=8.9.0"},"tsd":{"directory":"test/typescript"},"scripts":{"preinstall":"node bin/install-demo.js","postinstall":"echo \\"Building the Benny package based on a pull request which fixes an issue with \'statusShift\'... \\" && (cd node_modules/benny && npm i && npm run build > /dev/null) || echo \\"Building the Benny package is completed.\\"","generateParser":"cd src/parser; rimraf ./generated/*; java -Xmx500M -cp \\"../../antlr-4.9.3-complete.jar:$CLASSPATH\\" org.antlr.v4.Tool -o generated -Dlanguage=JavaScript FHIRPath.g4; grunt updateParserRequirements","build":"cd browser-build && webpack && rimraf fhirpath.zip && bestzip fhirpath.zip LICENSE.md fhirpath.min.js fhirpath.r5.min.js fhirpath.r4.min.js fhirpath.stu3.min.js fhirpath.dstu2.min.js && rimraf  LICENSE.md","test:unit":"node --use_strict node_modules/.bin/jest && TZ=America/New_York node --use_strict node_modules/.bin/jest && TZ=Europe/Paris node --use_strict node_modules/.bin/jest","test:unit:debug":"echo \'open chrome chrome://inspect/\' && node --inspect node_modules/.bin/jest --runInBand","build:demo":"npm run build && cd demo && npm run build","test:e2e":"npm run build:demo && cypress run","test:tsd":"tsd","test":"npm run lint && npm run test:tsd && npm run test:unit && npm run test:e2e && echo \\"For tests specific to IE 11, open browser-build/test/index.html in IE 11, and confirm that the tests on that page pass.\\"","lint":"eslint src/parser/index.js src/*.js converter/","compare-performance":"node ./test/benchmark.js"},"bin":{"fhirpath":"bin/fhirpath"},"files":["CHANGELOG.md","bin","fhir-context","src"],"repository":"github:HL7/fhirpath.js","license":"SEE LICENSE in LICENSE.md"}')},6307:(e,t,n)=>{const{Token:i}=n(7931),{Interval:a}=n(5897),r=new a(-1,-2);class o{}class s extends o{constructor(){super()}}class l extends s{constructor(){super()}}class c extends l{constructor(){super()}}class u extends c{constructor(){super()}}class m extends c{constructor(e){super(),this.parentCtx=null,this.symbol=e}getChild(e){return null}getSymbol(){return this.symbol}getParent(){return this.parentCtx}getPayload(){return this.symbol}getSourceInterval(){if(null===this.symbol)return r;const e=this.symbol.tokenIndex;return new a(e,e)}getChildCount(){return 0}accept(e){return e.visitTerminal(this)}getText(){return this.symbol.text}toString(){return this.symbol.type===i.EOF?"<EOF>":this.symbol.text}}class d{walk(e,t){if(t instanceof u||void 0!==t.isErrorNode&&t.isErrorNode())e.visitErrorNode(t);else if(t instanceof c)e.visitTerminal(t);else{this.enterRule(e,t);for(let n=0;n<t.getChildCount();n++){const i=t.getChild(n);this.walk(e,i)}this.exitRule(e,t)}}enterRule(e,t){const n=t.getRuleContext();e.enterEveryRule(n),n.enterRule(e)}exitRule(e,t){const n=t.getRuleContext();n.exitRule(e),e.exitEveryRule(n)}}d.DEFAULT=new d,e.exports={RuleNode:class extends l{constructor(){super()}getRuleContext(){throw new Error("missing interface implementation")}},ErrorNode:u,TerminalNode:c,ErrorNodeImpl:class extends m{constructor(e){super(e)}isErrorNode(){return!0}accept(e){return e.visitErrorNode(this)}},TerminalNodeImpl:m,ParseTreeListener:class{visitTerminal(e){}visitErrorNode(e){}enterEveryRule(e){}exitEveryRule(e){}},ParseTreeVisitor:class{visit(e){return Array.isArray(e)?e.map((function(e){return e.accept(this)}),this):e.accept(this)}visitChildren(e){return e.children?this.visit(e.children):null}visitTerminal(e){}visitErrorNode(e){}},ParseTreeWalker:d,INVALID_INTERVAL:r}},6394:(e,t,n)=>{const{version:i}=n(6304),a=n(4996),r=n(38);n(403);const o=n(787);let s={},l=n(9970),c=n(7184),u=n(2690),m=n(101),d=n(7892),f=n(3580),p=n(6668),g=n(2791),h=n(566),y=n(2460),C=n(4838),S=n(6001),b=n(3717),E=n(3076);const x=n(1231),{FP_Date:v,FP_DateTime:R,FP_Time:_,FP_Quantity:M,FP_Type:I,ResourceNode:D,TypeInfo:T}=x;let k=D.makeResNode;const P=n(269),O=n(4060);function L(e){return e.replace(/(^'|'$)/g,"").replace(/\\(u\d{4}|.)/g,(function(e,t){switch(e){case"\\r":return"\r";case"\\n":return"\n";case"\\t":return"\t";case"\\f":return"\f";default:return t.length>1?String.fromCharCode("0x"+t.slice(1)):t}}))}function A(e){return e.replace(/(^`|`$)/g,"")}function N(e,t,n,i){if("Expr"===n)return function(t){const n=r.arraify(t);let a={...e,$this:n};return e.definedVars&&(a.definedVars={...e.definedVars}),s.doEval(a,n,i)};if("AnyAtRoot"===n){const t=e.$this||e.dataRoot;let n={...e,$this:t};return e.definedVars&&(n.definedVars={...e.definedVars}),s.doEval(n,t,i)}if("Identifier"===n){if("TermExpression"===i.type)return i.text;throw new Error("Expected identifier node, got "+JSON.stringify(i))}if("TypeSpecifier"===n)return s.TypeSpecifier(e,t,i);let a;if("AnySingletonAtRoot"===n){const t=e.$this||e.dataRoot;let n={...e,$this:t};e.definedVars&&(n.definedVars={...e.definedVars}),a=s.doEval(n,t,i)}else{let r={...e};if(e.definedVars&&(r.definedVars={...e.definedVars}),a=s.doEval(r,t,i),"Any"===n)return a;if(Array.isArray(n)){if(0===a.length)return[];n=n[0]}}return a instanceof Promise?a.then((e=>f.singleton(e,n))):f.singleton(a,n)}function w(e){return null==e||r.isEmpty(e)}function U(e,t,n,i){var a=s.invocationTable[t];if(a&&a.fn){var o=i?i.length:0;if(2!==o)throw new Error("Infix invoke should have arity 2");var l=a.arity[o];if(l){for(var c=[],u=0;u<o;u++){var m=l[u],d=i[u];c.push(N(e,n,m,d))}if(a.nullable&&c.some(w))return[];if(c.some((e=>e instanceof Promise)))return Promise.all(c).then((t=>{var n=a.fn.apply(e,t);return r.arraify(n)}));var f=a.fn.apply(e,c);return r.arraify(f)}return console.log(t+" wrong arity: got "+o),[]}throw new Error("Not impl "+t)}function B(e){return a.parse(e)}function q(e,t,n,i,a){o.reset();let l=r.arraify(e).map((e=>e?.__path__?k(e,e.__path__.parentResNode,e.__path__.path,null,e.__path__.fhirNodeDataType):e?.resourceType?k(e,null,null,null):e)),c={dataRoot:l,processedVars:{ucum:"http://unitsofmeasure.org",context:l},processedUserVarNames:new Set,vars:n||{},model:i};a.traceFn&&(c.customTraceFn=a.traceFn),a.userInvocationTable&&(c.userInvocationTable=a.userInvocationTable),c.defaultScoreExts=["http://hl7.org/fhir/StructureDefinition/ordinalValue","http://hl7.org/fhir/StructureDefinition/itemWeight","http://hl7.org/fhir/StructureDefinition/questionnaire-ordinalValue"],a.async&&(c.async=a.async),a.terminologyUrl&&(c.processedVars.terminologies=new P(a.terminologyUrl)),c.processedVars.factory=O;const u=s.doEval(c,l,t.children[0]);return u instanceof Promise?u.then((e=>F(e,a))):"always"===a.async?Promise.resolve(F(u,a)):F(u,a)}function F(e,t){return e.reduce(((e,n)=>{let i,a,o;return n instanceof D&&(i=n.path,a=n.fhirNodeDataType,o=n.parentResNode),(n=r.valData(n))instanceof I&&t.resolveInternalTypes&&(n=n.toString()),null!=n&&(i&&"object"==typeof n&&!n.__path__&&Object.defineProperty(n,"__path__",{value:{path:i,fhirNodeDataType:a,parentResNode:o}}),e.push(n)),e}),[])}function V(e,t,n){const i=(n={resolveInternalTypes:!0,...n}).userInvocationTable;if(i&&(n.userInvocationTable=Object.keys(i).reduce(((e,t)=>(i[t].internalStructures?e[t]=i[t]:e[t]={...i[t],fn:(...e)=>i[t].fn.apply(this,e.map((e=>Array.isArray(e)?e.map((e=>r.valData(e))):e)))},e)),{})),"object"==typeof e){const i=B(e.expression);return function(a,r){if(e.base){let n=t.pathsDefinedElsewhere[e.base]||e.base;const i=t&&t.path2Type[n];n="BackboneElement"===i||"Element"===i?n:i||n,a=k(a,null,n,null,i)}return T.model=t,q(a,i,r,t,n)}}{const i=B(e);return function(e,a){return T.model=t,q(e,i,a,t,n)}}}s.invocationTable={memberOf:{fn:b.memberOf,arity:{1:["String"]}},empty:{fn:l.emptyFn},not:{fn:l.notFn},exists:{fn:l.existsMacro,arity:{0:[],1:["Expr"]}},all:{fn:l.allMacro,arity:{1:["Expr"]}},allTrue:{fn:l.allTrueFn},anyTrue:{fn:l.anyTrueFn},allFalse:{fn:l.allFalseFn},anyFalse:{fn:l.anyFalseFn},subsetOf:{fn:l.subsetOfFn,arity:{1:["AnyAtRoot"]}},supersetOf:{fn:l.supersetOfFn,arity:{1:["AnyAtRoot"]}},isDistinct:{fn:l.isDistinctFn},distinct:{fn:c.distinctFn},count:{fn:u.countFn},where:{fn:c.whereMacro,arity:{1:["Expr"]}},extension:{fn:c.extension,arity:{1:["String"]}},select:{fn:c.selectMacro,arity:{1:["Expr"]}},aggregate:{fn:u.aggregateMacro,arity:{1:["Expr"],2:["Expr","AnyAtRoot"]}},sum:{fn:u.sumFn},min:{fn:u.minFn},max:{fn:u.maxFn},avg:{fn:u.avgFn},weight:{fn:m.weight},ordinal:{fn:m.weight},single:{fn:c.singleFn},first:{fn:c.firstFn},last:{fn:c.lastFn},type:{fn:x.typeFn,arity:{0:[]}},ofType:{fn:c.ofTypeFn,arity:{1:["TypeSpecifier"]}},is:{fn:x.isFn,arity:{1:["TypeSpecifier"]}},as:{fn:x.asFn,arity:{1:["TypeSpecifier"]}},tail:{fn:c.tailFn},take:{fn:c.takeFn,arity:{1:["Integer"]}},skip:{fn:c.skipFn,arity:{1:["Integer"]}},combine:{fn:d.combineFn,arity:{1:["AnyAtRoot"]}},union:{fn:d.union,arity:{1:["AnyAtRoot"]}},intersect:{fn:d.intersect,arity:{1:["AnyAtRoot"]}},exclude:{fn:d.exclude,arity:{1:["AnyAtRoot"]}},iif:{fn:f.iifMacro,arity:{2:["Expr","Expr"],3:["Expr","Expr","Expr"]}},trace:{fn:f.traceFn,arity:{1:["String"],2:["String","Expr"]}},defineVariable:{fn:f.defineVariable,arity:{1:["String"],2:["String","Expr"]}},toInteger:{fn:f.toInteger},toDecimal:{fn:f.toDecimal},toString:{fn:f.toString},toDate:{fn:f.toDate},toDateTime:{fn:f.toDateTime},toTime:{fn:f.toTime},toBoolean:{fn:f.toBoolean},toQuantity:{fn:f.toQuantity,arity:{0:[],1:["String"]}},hasValue:{fn:f.hasValueFn},getValue:{fn:f.getValueFn},convertsToBoolean:{fn:f.createConvertsToFn(f.toBoolean,"boolean")},convertsToInteger:{fn:f.createConvertsToFn(f.toInteger,"number")},convertsToDecimal:{fn:f.createConvertsToFn(f.toDecimal,"number")},convertsToString:{fn:f.createConvertsToFn(f.toString,"string")},convertsToDate:{fn:f.createConvertsToFn(f.toDate,v)},convertsToDateTime:{fn:f.createConvertsToFn(f.toDateTime,R)},convertsToTime:{fn:f.createConvertsToFn(f.toTime,_)},convertsToQuantity:{fn:f.createConvertsToFn(f.toQuantity,M)},indexOf:{fn:y.indexOf,arity:{1:["String"]}},substring:{fn:y.substring,arity:{1:["Integer"],2:["Integer","Integer"]}},startsWith:{fn:y.startsWith,arity:{1:["String"]}},endsWith:{fn:y.endsWith,arity:{1:["String"]}},contains:{fn:y.containsFn,arity:{1:["String"]}},upper:{fn:y.upper},lower:{fn:y.lower},replace:{fn:y.replace,arity:{2:["String","String"]}},matches:{fn:y.matches,arity:{1:["String"]}},replaceMatches:{fn:y.replaceMatches,arity:{2:["String","String"]}},length:{fn:y.length},toChars:{fn:y.toChars},join:{fn:y.joinFn,arity:{0:[],1:["String"]}},split:{fn:y.splitFn,arity:{1:["String"]}},trim:{fn:y.trimFn},encode:{fn:y.encodeFn,arity:{1:["String"]}},decode:{fn:y.decodeFn,arity:{1:["String"]}},abs:{fn:h.abs},ceiling:{fn:h.ceiling},exp:{fn:h.exp},floor:{fn:h.floor},ln:{fn:h.ln},log:{fn:h.log,arity:{1:["Number"]},nullable:!0},power:{fn:h.power,arity:{1:["Number"]},nullable:!0},round:{fn:h.round,arity:{0:[],1:["Number"]}},sqrt:{fn:h.sqrt},truncate:{fn:h.truncate},now:{fn:S.now},today:{fn:S.today},timeOfDay:{fn:S.timeOfDay},repeat:{fn:c.repeatMacro,arity:{1:["Expr"]}},children:{fn:C.children},descendants:{fn:C.descendants},"|":{fn:d.union,arity:{2:["Any","Any"]}},"=":{fn:p.equal,arity:{2:["Any","Any"]},nullable:!0},"!=":{fn:p.unequal,arity:{2:["Any","Any"]},nullable:!0},"~":{fn:p.equival,arity:{2:["Any","Any"]}},"!~":{fn:p.unequival,arity:{2:["Any","Any"]}},"<":{fn:p.lt,arity:{2:["Any","Any"]},nullable:!0},">":{fn:p.gt,arity:{2:["Any","Any"]},nullable:!0},"<=":{fn:p.lte,arity:{2:["Any","Any"]},nullable:!0},">=":{fn:p.gte,arity:{2:["Any","Any"]},nullable:!0},containsOp:{fn:g.contains,arity:{2:["Any","Any"]}},inOp:{fn:g.in,arity:{2:["Any","Any"]}},isOp:{fn:x.isFn,arity:{2:["Any","TypeSpecifier"]}},asOp:{fn:x.asFn,arity:{2:["Any","TypeSpecifier"]}},"&":{fn:h.amp,arity:{2:["String","String"]}},"+":{fn:h.plus,arity:{2:["Any","Any"]},nullable:!0},"-":{fn:h.minus,arity:{2:["Any","Any"]},nullable:!0},"*":{fn:h.mul,arity:{2:["Any","Any"]},nullable:!0},"/":{fn:h.div,arity:{2:["Any","Any"]},nullable:!0},mod:{fn:h.mod,arity:{2:["Number","Number"]},nullable:!0},div:{fn:h.intdiv,arity:{2:["Number","Number"]},nullable:!0},or:{fn:E.orOp,arity:{2:[["Boolean"],["Boolean"]]}},and:{fn:E.andOp,arity:{2:[["Boolean"],["Boolean"]]}},xor:{fn:E.xorOp,arity:{2:[["Boolean"],["Boolean"]]}},implies:{fn:E.impliesOp,arity:{2:[["Boolean"],["Boolean"]]}}},s.InvocationExpression=function(e,t,n){return n.children.reduce((function(t,n){return s.doEval(e,t,n)}),t)},s.TermExpression=function(e,t,n){return t&&(t=t.map((e=>e instanceof Object&&e.resourceType?k(e,null,e.resourceType,null,e.resourceType):e))),s.doEval(e,t,n.children[0])},s.PolarityExpression=function(e,t,n){var i=n.terminalNodeText[0],a=s.doEval(e,t,n.children[0]);if(1!==a.length)throw new Error("Unary "+i+" can only be applied to an individual number or Quantity.");if(a[0]instanceof M)"-"===i&&(a[0]=new M(-a[0].value,a[0].unit));else{if("number"!=typeof a[0]||isNaN(a[0]))throw new Error("Unary "+i+" can only be applied to a number or Quantity.");"-"===i&&(a[0]=-a[0])}return a},s.TypeSpecifier=function(e,t,n){let i,a;const r=n.text.split(".").map((e=>e.replace(/(^`|`$)/g,"")));switch(r.length){case 2:[i,a]=r;break;case 1:[a]=r;break;default:throw new Error("Expected TypeSpecifier node, got "+JSON.stringify(n))}const o=new T({namespace:i,name:a});if(!o.isValid())throw new Error('"'+o+'" cannot be resolved to a valid type identifier');return o},s.ExternalConstantTerm=function(e,t,n){let i;const a=n.children[0];let r;if(i=2===a.terminalNodeText.length?L(a.terminalNodeText[1]):A(a.children[0].text),i in e.vars&&!e.processedUserVarNames.has(i))r=e.vars[i],r=Array.isArray(r)?r.map((e=>e?.__path__?k(e,e.__path__.parentResNode,e.__path__.path,null,e.__path__.fhirNodeDataType):e?.resourceType?k(e,null,null,null):e)):r?.__path__?k(r,r.__path__.parentResNode,r.__path__.path,null,r.__path__.fhirNodeDataType):r?.resourceType?k(r,null,null,null):r,e.processedVars[i]=r,e.processedUserVarNames.add(i);else if(i in e.processedVars)r=e.processedVars[i];else{if(!e.definedVars||!(i in e.definedVars))throw new Error("Attempting to access an undefined environment variable: "+i);r=e.definedVars[i]}return null==r?[]:r instanceof Array?r:[r]},s.LiteralTerm=function(e,t,n){var i=n.children[0];return i?s.doEval(e,t,i):[n.text]},s.StringLiteral=function(e,t,n){return[L(n.text)]},s.BooleanLiteral=function(e,t,n){return"true"===n.text?[!0]:[!1]},s.QuantityLiteral=function(e,t,n){var i=n.children[0],a=Number(i.terminalNodeText[0]),r=i.children[0],o=r.terminalNodeText[0];return!o&&r.children&&(o=r.children[0].terminalNodeText[0]),[new M(a,o)]},s.DateTimeLiteral=function(e,t,n){var i=n.text.slice(1);return[new R(i)]},s.TimeLiteral=function(e,t,n){var i=n.text.slice(1);return[new _(i)]},s.NumberLiteral=function(e,t,n){return[Number(n.text)]},s.Identifier=function(e,t,n){return[A(n.text)]},s.InvocationTerm=function(e,t,n){return s.doEval(e,t,n.children[0])},s.MemberInvocation=function(e,t,n){const i=s.doEval(e,t,n.children[0])[0],a=e.model;return t?t.reduce((function(e,t){return t=k(t,null,t.__path__?.path,null,t.__path__?.fhirNodeDataType),t.data?.resourceType===i?e.push(t):r.pushFn(e,r.makeChildResNodes(t,i,a)),e}),[]):[]},s.IndexerExpression=function(e,t,n){const i=n.children[0],a=n.children[1];var o=s.doEval(e,t,i),l=s.doEval(e,t,a);if(r.isEmpty(l))return[];var c=parseInt(l[0]);return o&&r.isSome(c)&&o.length>c&&c>=0?[o[c]]:[]},s.Functn=function(e,t,n){return n.children.map((function(n){return s.doEval(e,t,n)}))},s.realizeParams=function(e,t,n){return n&&n[0]&&n[0].children?n[0].children.map((function(n){return s.doEval(e,t,n)})):[]},s.FunctionInvocation=function(e,t,n){var i=s.doEval(e,t,n.children[0]);const a=i[0];return i.shift(),function(e,t,n,i){var a,o=e.userInvocationTable&&Object.prototype.hasOwnProperty.call(e.userInvocationTable,t)&&e.userInvocationTable?.[t]||s.invocationTable[t]||1===n.length&&n[0]?.invocationTable[t];if(o){if(o.arity){var l=i?i.length:0,c=o.arity[l];if(c){for(var u=[],m=0;m<l;m++){var d=c[m],f=i[m];u.push(N(e,n,d,f))}return u.unshift(n),o.nullable&&u.some(w)?[]:u.some((e=>e instanceof Promise))?Promise.all(u).then((t=>(a=o.fn.apply(e,t),r.resolveAndArraify(a)))):(a=o.fn.apply(e,u),r.resolveAndArraify(a))}return console.log(t+" wrong arity: got "+l),[]}if(i)throw new Error(t+" expects no params");return a=o.fn.call(e,n),r.resolveAndArraify(a)}throw new Error("Not implemented: "+t)}(e,a,t,i&&i[0]&&i[0].children)},s.ParamList=function(e,t,n){return n},s.UnionExpression=function(e,t,n){return U(e,"|",t,n.children)},s.ThisInvocation=function(e){return e.$this},s.TotalInvocation=function(e){return r.arraify(e.$total)},s.IndexInvocation=function(e){return r.arraify(e.$index)},s.OpExpression=function(e,t,n){return U(e,n.terminalNodeText[0],t,n.children)},s.AliasOpExpression=function(e){return function(t,n,i){var a=i.terminalNodeText[0],r=e[a];if(!r)throw new Error("Do not know how to alias "+a+" by "+JSON.stringify(e));return U(t,r,n,i.children)}},s.NullLiteral=function(){return[]},s.ParenthesizedTerm=function(e,t,n){return s.doEval(e,t,n.children[0])},s.evalTable={BooleanLiteral:s.BooleanLiteral,EqualityExpression:s.OpExpression,FunctionInvocation:s.FunctionInvocation,Functn:s.Functn,Identifier:s.Identifier,IndexerExpression:s.IndexerExpression,InequalityExpression:s.OpExpression,InvocationExpression:s.InvocationExpression,AdditiveExpression:s.OpExpression,MultiplicativeExpression:s.OpExpression,TypeExpression:s.AliasOpExpression({is:"isOp",as:"asOp"}),MembershipExpression:s.AliasOpExpression({contains:"containsOp",in:"inOp"}),NullLiteral:s.NullLiteral,EntireExpression:s.InvocationTerm,InvocationTerm:s.InvocationTerm,LiteralTerm:s.LiteralTerm,MemberInvocation:s.MemberInvocation,NumberLiteral:s.NumberLiteral,ParamList:s.ParamList,ParenthesizedTerm:s.ParenthesizedTerm,StringLiteral:s.StringLiteral,TermExpression:s.TermExpression,ThisInvocation:s.ThisInvocation,TotalInvocation:s.TotalInvocation,IndexInvocation:s.IndexInvocation,UnionExpression:s.UnionExpression,OrExpression:s.OpExpression,ImpliesExpression:s.OpExpression,AndExpression:s.OpExpression,XorExpression:s.OpExpression},s.doEval=function(e,t,n){return t instanceof Promise?t.then((t=>s.doEvalSync(e,t,n))):s.doEvalSync(e,t,n)},s.doEvalSync=function(e,t,n){const i=s.evalTable[n.type]||s[n.type];if(i)return i.call(s,e,t,n);throw new Error("No "+n.type+" evaluator ")},e.exports={version:i,parse:B,compile:V,evaluate:function(e,t,n,i,a){return V(t,i,a)(e,n)},resolveInternalTypes:function e(t){if(Array.isArray(t))for(let n=0,i=t.length;n<i;++n)t[n]=e(t[n]);else if(t instanceof I)t=t.toString();else if("object"==typeof t)for(let n of Object.keys(t))t[n]=e(t[n]);return t},types:function(e){return r.arraify(e).map((e=>{const t=T.fromValue(e?.__path__?new D(e,e.__path__?.parentResNode,e.__path__?.path,null,e.__path__?.fhirNodeDataType):e);return`${t.namespace}.${t.name}`}))},ucumUtils:n(8629).lG.getInstance(),util:r}},6636:(e,t,n)=>{t.ATN=n(7601),t.ATNDeserializer=n(1950),t.LexerATNSimulator=n(3883),t.ParserATNSimulator=n(1972),t.PredictionMode=n(9520)},6668:(e,t,n)=>{const i=n(38),{deepEqual:a}=n(7071),r=n(1231),o=r.FP_Type,s=r.FP_DateTime;var l={};function c(e,t){return i.isEmpty(e)||i.isEmpty(t)?[]:a(e,t)}function u(e,t){return i.isEmpty(e)&&i.isEmpty(t)?[!0]:i.isEmpty(e)||i.isEmpty(t)?[]:a(e,t,{fuzzy:!0})}function m(e,t){if(i.assertOnlyOne(e,"Singleton was expected"),i.assertOnlyOne(t,"Singleton was expected"),e=i.valDataConverted(e[0]),t=i.valDataConverted(t[0]),null!=e&&null!=t){let n=e instanceof s?s:e.constructor,a=t instanceof s?s:t.constructor;n!==a&&i.raiseError('Type of "'+e+'" ('+n.name+') did not match type of "'+t+'" ('+a.name+")","InequalityExpression")}return[e,t]}l.equal=function(e,t){return c(e,t)},l.unequal=function(e,t){var n=c(e,t);return void 0===n?void 0:!n},l.equival=function(e,t){return u(e,t)},l.unequival=function(e,t){return!u(e,t)},l.lt=function(e,t){const[n,i]=m(e,t);if(null==n||null==i)return[];if(n instanceof o){const e=n.compare(i);return null===e?[]:e<0}return n<i},l.gt=function(e,t){const[n,i]=m(e,t);if(null==n||null==i)return[];if(n instanceof o){const e=n.compare(i);return null===e?[]:e>0}return n>i},l.lte=function(e,t){const[n,i]=m(e,t);if(null==n||null==i)return[];if(n instanceof o){const e=n.compare(i);return null===e?[]:e<=0}return n<=i},l.gte=function(e,t){const[n,i]=m(e,t);if(null==n||null==i)return[];if(n instanceof o){const e=n.compare(i);return null===e?[]:e>=0}return n>=i},e.exports=l},6898:(e,t,n)=>{const i=n(8629).lG.getInstance(),{roundToMaxPrecision:a}=n(2864),{valDataConverted:r}=n(38),{FP_Type:o,FP_Quantity:s}=n(1231);function l(e){if(null===(e=r(e)))return null;if("number"==typeof e)return a(e);if(e instanceof Date)return e.toISOString();if(e instanceof s){const t=s._yearMonthConversionFactor[e.unit];if(t)return"_!yearMonth!_:"+t*e.value;{const t=s.toUcumQuantity(e.value,e.unit),n=i.getSpecifiedUnit(t.unit).unit;return"_!"+n.property_+"!_:"+n.magnitude_*t.value}}return e instanceof o?e.toString():"object"==typeof e?Array.isArray(e)?e.map(l):Object.keys(e).sort().reduce(((t,n)=>{const i=e[n];return t[n]=l(i),t}),{}):e}e.exports=function(e){return JSON.stringify(l(e))}},7071:(e,t,n)=>{const{FP_Type:i,FP_Quantity:a}=n(1231);var r=n(38),o=n(2864),s=Array.prototype.slice,l=Object.keys,c=function(e){return"[object Arguments]"==Object.prototype.toString.call(e)};function u(e){return"string"==typeof e||e instanceof String}function m(e){return!isNaN(parseFloat(e))&&isFinite(e)}function d(e){return e.toUpperCase().replace(/\s+/," ")}function f(e){return null==e}e.exports={deepEqual:function e(t,n,p){if(p||(p={}),(t=r.valDataConverted(t))===(n=r.valDataConverted(n)))return!0;if(p.fuzzy){if(u(t)&&u(n))return d(t)==d(n);if(m(t)&&m(n))return o.isEquivalent(t,n)}else if("number"==typeof t&&"number"==typeof n)return o.isEqual(t,n);if(t instanceof Date&&n instanceof Date)return t.getTime()===n.getTime();if(!t||!n||"object"!=typeof t&&"object"!=typeof n)return t===n;var g=t instanceof i,h=n instanceof i;if(g&&h)return p.fuzzy?t.equivalentTo(n):t.equals(n);if(g||h){let e=!1;return"number"==typeof t&&(t=new a(t,"'1'"),e=!0),"number"==typeof n&&(n=new a(n,"'1'"),e=!0),!!e&&(p.fuzzy?t.equivalentTo(n):t.equals(n))}return function(t,n,i){var a,r;if(f(t)||f(n))return!1;if(t.prototype!==n.prototype)return!1;if(c(t)||c(n))return e(t=c(t)?s.call(t):t,n=c(n)?s.call(n):n,i);try{var o=l(t),u=l(n)}catch(e){return!1}if(o.length!=u.length)return!1;for(o.sort(),u.sort(),a=o.length-1;a>=0;a--)if(o[a]!=u[a])return!1;if(1===o.length)return e(t[r=o[0]],n[r],i);for(a=o.length-1;a>=0;a--)if(!e(t[r=o[a]],n[r],i))return!1;return typeof t==typeof n}(t,n,p)},maxCollSizeForDeepEqual:6}},7084:e=>{e.exports=JSON.parse('{"license":"The following data (prefixes and units) was generated by the UCUM LHC code from the UCUM data and selected LOINC combinations of UCUM units.  The license for the UCUM LHC code (demo and library code as well as the combined units) is located at https://github.com/lhncbc/ucum-lhc/blob/LICENSE.md.","prefixes":{"config":["code_","ciCode_","name_","printSymbol_","value_","exp_"],"data":[["E","EX","exa","E",1000000000000000000,"18"],["G","GA","giga","G",1000000000,"9"],["Gi","GIB","gibi","Gi",1073741824,null],["Ki","KIB","kibi","Ki",1024,null],["M","MA","mega","M",1000000,"6"],["Mi","MIB","mebi","Mi",1048576,null],["P","PT","peta","P",1000000000000000,"15"],["T","TR","tera","T",1000000000000,"12"],["Ti","TIB","tebi","Ti",1099511627776,null],["Y","YA","yotta","Y",1e+24,"24"],["Z","ZA","zetta","Z",1e+21,"21"],["a","A","atto","a",1e-18,"-18"],["c","C","centi","c",0.01,"-2"],["d","D","deci","d",0.1,"-1"],["da","DA","deka","da",10,"1"],["f","F","femto","f",1e-15,"-15"],["h","H","hecto","h",100,"2"],["k","K","kilo","k",1000,"3"],["m","M","milli","m",0.001,"-3"],["n","N","nano","n",1e-9,"-9"],["p","P","pico","p",1e-12,"-12"],["u","U","micro","μ",0.000001,"-6"],["y","YO","yocto","y",1e-24,"-24"],["z","ZO","zepto","z",1e-21,"-21"]]},"units":{"config":["isBase_","name_","csCode_","ciCode_","property_","magnitude_",["dim_","dimVec_"],"printSymbol_","class_","isMetric_","variable_","cnv_","cnvPfx_","isSpecial_","isArbitrary_","moleExp_","synonyms_","source_","loincProperty_","category_","guidance_","csUnitString_","ciUnitString_","baseFactorStr_","baseFactor_","defError_"],"data":[[true,"meter","m","M","length",1,[1,0,0,0,0,0,0],"m",null,false,"L",null,1,false,false,0,"meters; metres; distance","UCUM","Len","Clinical","unit of length = 1.09361 yards",null,null,null,null,false],[true,"second - time","s","S","time",1,[0,1,0,0,0,0,0],"s",null,false,"T",null,1,false,false,0,"seconds","UCUM","Time","Clinical","",null,null,null,null,false],[true,"gram","g","G","mass",1,[0,0,1,0,0,0,0],"g",null,false,"M",null,1,false,false,0,"grams; gm","UCUM","Mass","Clinical","",null,null,null,null,false],[true,"radian","rad","RAD","plane angle",1,[0,0,0,1,0,0,0],"rad",null,false,"A",null,1,false,false,0,"radians","UCUM","Angle","Clinical","unit of angular measure where 1 radian = 1/2π turn =  57.296 degrees. ",null,null,null,null,false],[true,"degree Kelvin","K","K","temperature",1,[0,0,0,0,1,0,0],"K",null,false,"C",null,1,false,false,0,"Kelvin; degrees","UCUM","Temp","Clinical","absolute, thermodynamic temperature scale ",null,null,null,null,false],[true,"coulomb","C","C","electric charge",1,[0,0,0,0,0,1,0],"C",null,false,"Q",null,1,false,false,0,"coulombs","UCUM","","Clinical","defined as amount of 1 electron charge = 6.2415093×10^18 e, and equivalent to 1 Ampere-second",null,null,null,null,false],[true,"candela","cd","CD","luminous intensity",1,[0,0,0,0,0,0,1],"cd",null,false,"F",null,1,false,false,0,"candelas","UCUM","","Clinical","SI base unit of luminous intensity",null,null,null,null,false],[false,"the number ten for arbitrary powers","10*","10*","number",10,[0,0,0,0,0,0,0],"10","dimless",false,null,null,1,false,false,0,"10^; 10 to the arbitrary powers","UCUM","Num","Clinical","10* by itself is the same as 10, but users can add digits after the *. For example, 10*3 = 1000.","1","1","10",10,false],[false,"the number ten for arbitrary powers","10^","10^","number",10,[0,0,0,0,0,0,0],"10","dimless",false,null,null,1,false,false,0,"10*; 10 to the arbitrary power","UCUM","Num","Clinical","10* by itself is the same as 10, but users can add digits after the *. For example, 10*3 = 1000.","1","1","10",10,false],[false,"the number pi","[pi]","[PI]","number",3.141592653589793,[0,0,0,0,0,0,0],"π","dimless",false,null,null,1,false,false,0,"π","UCUM","","Constant","a mathematical constant; the ratio of a circle\'s circumference to its diameter ≈ 3.14159","1","1","3.1415926535897932384626433832795028841971693993751058209749445923",3.141592653589793,false],[false,"","%","%","fraction",0.01,[0,0,0,0,0,0,0],"%","dimless",false,null,null,1,false,false,0,"percents","UCUM","FR; NFR; MFR; CFR; SFR Rto; etc. ","Clinical","","10*-2","10*-2","1",1,false],[false,"parts per thousand","[ppth]","[PPTH]","fraction",0.001,[0,0,0,0,0,0,0],"ppth","dimless",false,null,null,1,false,false,0,"ppth; 10^-3","UCUM","MCnc; MCnt","Clinical","[ppth] is often used in solution concentrations as 1 g/L or 1 g/kg.\\n\\nCan be ambigous and would be better if the metric units was used directly. ","10*-3","10*-3","1",1,false],[false,"parts per million","[ppm]","[PPM]","fraction",0.000001,[0,0,0,0,0,0,0],"ppm","dimless",false,null,null,1,false,false,0,"ppm; 10^-6","UCUM","MCnt; MCnc; SFr","Clinical","[ppm] is often used in solution concentrations as 1 mg/L  or 1 mg/kg. Also used to express mole fractions as 1 mmol/mol.\\n\\n[ppm] is also used in nuclear magnetic resonance (NMR) to represent chemical shift - the difference of a measured frequency in parts per million from the reference frequency.\\n\\nCan be ambigous and would be better if the metric units was used directly. ","10*-6","10*-6","1",1,false],[false,"parts per billion","[ppb]","[PPB]","fraction",1e-9,[0,0,0,0,0,0,0],"ppb","dimless",false,null,null,1,false,false,0,"ppb; 10^-9","UCUM","MCnt; MCnc; SFr","Clinical","[ppb] is often used in solution concentrations as 1 ug/L  or 1 ug/kg. Also used to express mole fractions as 1 umol/mol.\\n\\nCan be ambigous and would be better if the metric units was used directly. ","10*-9","10*-9","1",1,false],[false,"parts per trillion","[pptr]","[PPTR]","fraction",1e-12,[0,0,0,0,0,0,0],"pptr","dimless",false,null,null,1,false,false,0,"pptr; 10^-12","UCUM","MCnt; MCnc; SFr","Clinical","[pptr] is often used in solution concentrations as 1 ng/L or 1 ng/kg. Also used to express mole fractions as 1 nmol/mol.\\n\\nCan be ambigous and would be better if the metric units was used directly. ","10*-12","10*-12","1",1,false],[false,"mole","mol","MOL","amount of substance",6.0221367e+23,[0,0,0,0,0,0,0],"mol","si",true,null,null,1,false,false,1,"moles","UCUM","Sub","Clinical","Measure the number of molecules ","10*23","10*23","6.0221367",6.0221367,false],[false,"steradian - solid angle","sr","SR","solid angle",1,[0,0,0,2,0,0,0],"sr","si",true,null,null,1,false,false,0,"square radian; rad2; rad^2","UCUM","Angle","Clinical","unit of solid angle in three-dimensional geometry analagous to radian; used in photometry which measures the perceived brightness of object by human eye (e.g. radiant intensity = watt/steradian)","rad2","RAD2","1",1,false],[false,"hertz","Hz","HZ","frequency",1,[0,-1,0,0,0,0,0],"Hz","si",true,null,null,1,false,false,0,"Herz; frequency; frequencies","UCUM","Freq; Num","Clinical","equal to one cycle per second","s-1","S-1","1",1,false],[false,"newton","N","N","force",1000,[1,-2,1,0,0,0,0],"N","si",true,null,null,1,false,false,0,"Newtons","UCUM","Force","Clinical","unit of force with base units kg.m/s2","kg.m/s2","KG.M/S2","1",1,false],[false,"pascal","Pa","PAL","pressure",1000,[-1,-2,1,0,0,0,0],"Pa","si",true,null,null,1,false,false,0,"pascals","UCUM","Pres","Clinical","standard unit of pressure equal to 1 newton per square meter (N/m2)","N/m2","N/M2","1",1,false],[false,"joule","J","J","energy",1000,[2,-2,1,0,0,0,0],"J","si",true,null,null,1,false,false,0,"joules","UCUM","Enrg","Clinical","unit of energy defined as the work required to move an object 1 m with a force of 1 N (N.m) or an electric charge of 1 C through 1 V (C.V), or to produce 1 W for 1 s (W.s) ","N.m","N.M","1",1,false],[false,"watt","W","W","power",1000,[2,-3,1,0,0,0,0],"W","si",true,null,null,1,false,false,0,"watts","UCUM","EngRat","Clinical","unit of power equal to 1 Joule per second (J/s) =  kg⋅m2⋅s−3","J/s","J/S","1",1,false],[false,"Ampere","A","A","electric current",1,[0,-1,0,0,0,1,0],"A","si",true,null,null,1,false,false,0,"Amperes","UCUM","ElpotRat","Clinical","unit of electric current equal to flow rate of electrons equal to 6.2415×10^18 elementary charges moving past a boundary in one second or 1 Coulomb/second","C/s","C/S","1",1,false],[false,"volt","V","V","electric potential",1000,[2,-2,1,0,0,-1,0],"V","si",true,null,null,1,false,false,0,"volts","UCUM","Elpot","Clinical","unit of electric potential (voltage) = 1 Joule per Coulomb (J/C)","J/C","J/C","1",1,false],[false,"farad","F","F","electric capacitance",0.001,[-2,2,-1,0,0,2,0],"F","si",true,null,null,1,false,false,0,"farads; electric capacitance","UCUM","","Clinical","CGS unit of electric capacitance with base units C/V (Coulomb per Volt)","C/V","C/V","1",1,false],[false,"ohm","Ohm","OHM","electric resistance",1000,[2,-1,1,0,0,-2,0],"Ω","si",true,null,null,1,false,false,0,"Ω; resistance; ohms","UCUM","","Clinical","unit of electrical resistance with units of Volt per Ampere","V/A","V/A","1",1,false],[false,"siemens","S","SIE","electric conductance",0.001,[-2,1,-1,0,0,2,0],"S","si",true,null,null,1,false,false,0,"Reciprocal ohm; mho; Ω−1; conductance","UCUM","","Clinical","unit of electric conductance (the inverse of electrical resistance) equal to ohm^-1","Ohm-1","OHM-1","1",1,false],[false,"weber","Wb","WB","magnetic flux",1000,[2,-1,1,0,0,-1,0],"Wb","si",true,null,null,1,false,false,0,"magnetic flux; webers","UCUM","","Clinical","unit of magnetic flux equal to Volt second","V.s","V.S","1",1,false],[false,"degree Celsius","Cel","CEL","temperature",1,[0,0,0,0,1,0,0],"°C","si",true,null,"Cel",1,true,false,0,"°C; degrees","UCUM","Temp","Clinical","","K",null,null,1,false],[false,"tesla","T","T","magnetic flux density",1000,[0,-1,1,0,0,-1,0],"T","si",true,null,null,1,false,false,0,"Teslas; magnetic field","UCUM","","Clinical","SI unit of magnetic field strength for magnetic field B equal to 1 Weber/square meter =  1 kg/(s2*A)","Wb/m2","WB/M2","1",1,false],[false,"henry","H","H","inductance",1000,[2,0,1,0,0,-2,0],"H","si",true,null,null,1,false,false,0,"henries; inductance","UCUM","","Clinical","unit of electrical inductance; usually expressed in millihenrys (mH) or microhenrys (uH).","Wb/A","WB/A","1",1,false],[false,"lumen","lm","LM","luminous flux",1,[0,0,0,2,0,0,1],"lm","si",true,null,null,1,false,false,0,"luminous flux; lumens","UCUM","","Clinical","unit of luminous flux defined as 1 lm = 1 cd⋅sr (candela times sphere)","cd.sr","CD.SR","1",1,false],[false,"lux","lx","LX","illuminance",1,[-2,0,0,2,0,0,1],"lx","si",true,null,null,1,false,false,0,"illuminance; luxes","UCUM","","Clinical","unit of illuminance equal to one lumen per square meter. ","lm/m2","LM/M2","1",1,false],[false,"becquerel","Bq","BQ","radioactivity",1,[0,-1,0,0,0,0,0],"Bq","si",true,null,null,1,false,false,0,"activity; radiation; becquerels","UCUM","","Clinical","measure of the atomic radiation rate with units s^-1","s-1","S-1","1",1,false],[false,"gray","Gy","GY","energy dose",1,[2,-2,0,0,0,0,0],"Gy","si",true,null,null,1,false,false,0,"absorbed doses; ionizing radiation doses; kerma; grays","UCUM","EngCnt","Clinical","unit of ionizing radiation dose with base units of 1 joule of radiation energy per kilogram of matter","J/kg","J/KG","1",1,false],[false,"sievert","Sv","SV","dose equivalent",1,[2,-2,0,0,0,0,0],"Sv","si",true,null,null,1,false,false,0,"sieverts; radiation dose quantities; equivalent doses; effective dose; operational dose; committed dose","UCUM","","Clinical","SI unit for radiation dose equivalent equal to 1 Joule/kilogram.","J/kg","J/KG","1",1,false],[false,"degree - plane angle","deg","DEG","plane angle",0.017453292519943295,[0,0,0,1,0,0,0],"°","iso1000",false,null,null,1,false,false,0,"°; degree of arc; arc degree; arcdegree; angle","UCUM","Angle","Clinical","one degree is equivalent to π/180 radians.","[pi].rad/360","[PI].RAD/360","2",2,false],[false,"gon","gon","GON","plane angle",0.015707963267948967,[0,0,0,1,0,0,0],"□<sup>g</sup>","iso1000",false,null,null,1,false,false,0,"gon (grade); gons","UCUM","Angle","Nonclinical","unit of plane angle measurement equal to 1/400 circle","deg","DEG","0.9",0.9,false],[false,"arc minute","\'","\'","plane angle",0.0002908882086657216,[0,0,0,1,0,0,0],"\'","iso1000",false,null,null,1,false,false,0,"arcminutes; arcmin; arc minutes; arc mins","UCUM","Angle","Clinical","equal to 1/60 degree; used in optometry and opthamology (e.g. visual acuity tests)","deg/60","DEG/60","1",1,false],[false,"arc second","\'\'","\'\'","plane angle",0.00000484813681109536,[0,0,0,1,0,0,0],"\'\'","iso1000",false,null,null,1,false,false,0,"arcseconds; arcsecs","UCUM","Angle","Clinical","equal to 1/60 arcminute = 1/3600 degree; used in optometry and opthamology (e.g. visual acuity tests)","\'/60","\'/60","1",1,false],[false,"Liters","l","L","volume",0.001,[3,0,0,0,0,0,0],"l","iso1000",true,null,null,1,false,false,0,"cubic decimeters; decimeters cubed; decimetres; dm3; dm^3; litres; liters, LT ","UCUM","Vol","Clinical","Because lower case \\"l\\" can be read as the number \\"1\\", though this is a valid UCUM units. UCUM strongly reccomends using  \\"L\\"","dm3","DM3","1",1,false],[false,"Liters","L","L","volume",0.001,[3,0,0,0,0,0,0],"L","iso1000",true,null,null,1,false,false,0,"cubic decimeters; decimeters cubed; decimetres; dm3; dm^3; litres; liters, LT ","UCUM","Vol","Clinical","Because lower case \\"l\\" can be read as the number \\"1\\", though this is a valid UCUM units. UCUM strongly reccomends using  \\"L\\"","l",null,"1",1,false],[false,"are","ar","AR","area",100,[2,0,0,0,0,0,0],"a","iso1000",true,null,null,1,false,false,0,"100 m2; 100 m^2; 100 square meter; meters squared; metres","UCUM","Area","Clinical","metric base unit for area defined as 100 m^2","m2","M2","100",100,false],[false,"minute","min","MIN","time",60,[0,1,0,0,0,0,0],"min","iso1000",false,null,null,1,false,false,0,"minutes","UCUM","Time","Clinical","","s","S","60",60,false],[false,"hour","h","HR","time",3600,[0,1,0,0,0,0,0],"h","iso1000",false,null,null,1,false,false,0,"hours; hrs; age","UCUM","Time","Clinical","","min","MIN","60",60,false],[false,"day","d","D","time",86400,[0,1,0,0,0,0,0],"d","iso1000",false,null,null,1,false,false,0,"days; age; dy; 24 hours; 24 hrs","UCUM","Time","Clinical","","h","HR","24",24,false],[false,"tropical year","a_t","ANN_T","time",31556925.216,[0,1,0,0,0,0,0],"a<sub>t</sub>","iso1000",false,null,null,1,false,false,0,"solar years; a tropical; years","UCUM","Time","Clinical","has an average of 365.242181 days but is constantly changing.","d","D","365.24219",365.24219,false],[false,"mean Julian year","a_j","ANN_J","time",31557600,[0,1,0,0,0,0,0],"a<sub>j</sub>","iso1000",false,null,null,1,false,false,0,"mean Julian yr; a julian; years","UCUM","Time","Clinical","has an average of 365.25 days, and in everyday use, has been replaced by the Gregorian year. However, this unit is used in astronomy to calculate light year. ","d","D","365.25",365.25,false],[false,"mean Gregorian year","a_g","ANN_G","time",31556952,[0,1,0,0,0,0,0],"a<sub>g</sub>","iso1000",false,null,null,1,false,false,0,"mean Gregorian yr; a gregorian; years","UCUM","Time","Clinical","has an average of 365.2425 days and is the most internationally used civil calendar.","d","D","365.2425",365.2425,false],[false,"year","a","ANN","time",31557600,[0,1,0,0,0,0,0],"a","iso1000",false,null,null,1,false,false,0,"years; a; yr, yrs; annum","UCUM","Time","Clinical","","a_j","ANN_J","1",1,false],[false,"week","wk","WK","time",604800,[0,1,0,0,0,0,0],"wk","iso1000",false,null,null,1,false,false,0,"weeks; wks","UCUM","Time","Clinical","","d","D","7",7,false],[false,"synodal month","mo_s","MO_S","time",2551442.976,[0,1,0,0,0,0,0],"mo<sub>s</sub>","iso1000",false,null,null,1,false,false,0,"Moon; synodic month; lunar month; mo-s; mo s; months; moons","UCUM","Time","Nonclinical","has an average of 29.53 days per month, unit used in astronomy","d","D","29.53059",29.53059,false],[false,"mean Julian month","mo_j","MO_J","time",2629800,[0,1,0,0,0,0,0],"mo<sub>j</sub>","iso1000",false,null,null,1,false,false,0,"mo-julian; mo Julian; months","UCUM","Time","Clinical","has an average of 30.435 days per month","a_j/12","ANN_J/12","1",1,false],[false,"mean Gregorian month","mo_g","MO_G","time",2629746,[0,1,0,0,0,0,0],"mo<sub>g</sub>","iso1000",false,null,null,1,false,false,0,"months; month-gregorian; mo-gregorian","UCUM","Time","Clinical","has an average 30.436875 days per month and is from the most internationally used civil calendar.","a_g/12","ANN_G/12","1",1,false],[false,"month","mo","MO","time",2629800,[0,1,0,0,0,0,0],"mo","iso1000",false,null,null,1,false,false,0,"months; duration","UCUM","Time","Clinical","based on Julian calendar which has an average of 30.435 days per month (this unit is used in astronomy but not in everyday life - see mo_g)","mo_j","MO_J","1",1,false],[false,"metric ton","t","TNE","mass",1000000,[0,0,1,0,0,0,0],"t","iso1000",true,null,null,1,false,false,0,"tonnes; megagrams; tons","UCUM","Mass","Nonclinical","equal to 1000 kg used in the US (recognized by NIST as metric ton), and internationally (recognized as tonne)","kg","KG","1e3",1000,false],[false,"bar","bar","BAR","pressure",100000000,[-1,-2,1,0,0,0,0],"bar","iso1000",true,null,null,1,false,false,0,"bars","UCUM","Pres","Nonclinical","unit of pressure equal to 10^5 Pascals, primarily used by meteorologists and in weather forecasting","Pa","PAL","1e5",100000,false],[false,"unified atomic mass unit","u","AMU","mass",1.6605402e-24,[0,0,1,0,0,0,0],"u","iso1000",true,null,null,1,false,false,0,"unified atomic mass units; amu; Dalton; Da","UCUM","Mass","Clinical","the mass of 1/12 of an unbound Carbon-12 atom nuclide equal to 1.6606x10^-27 kg ","g","G","1.6605402e-24",1.6605402e-24,false],[false,"astronomic unit","AU","ASU","length",149597870691,[1,0,0,0,0,0,0],"AU","iso1000",false,null,null,1,false,false,0,"AU; units","UCUM","Len","Clinical","unit of length used in astronomy for measuring distance in Solar system","Mm","MAM","149597.870691",149597.870691,false],[false,"parsec","pc","PRS","length",30856780000000000,[1,0,0,0,0,0,0],"pc","iso1000",true,null,null,1,false,false,0,"parsecs","UCUM","Len","Clinical","unit of length equal to 3.26 light years, and used to measure large distances to objects outside our Solar System","m","M","3.085678e16",30856780000000000,false],[false,"velocity of light in a vacuum","[c]","[C]","velocity",299792458,[1,-1,0,0,0,0,0],"<i>c</i>","const",true,null,null,1,false,false,0,"speed of light","UCUM","Vel","Constant","equal to 299792458 m/s (approximately 3 x 10^8 m/s)","m/s","M/S","299792458",299792458,false],[false,"Planck constant","[h]","[H]","action",6.6260755e-31,[2,-1,1,0,0,0,0],"<i>h</i>","const",true,null,null,1,false,false,0,"Planck\'s constant","UCUM","","Constant","constant = 6.62607004 × 10-34 m2.kg/s; defined as quantum of action","J.s","J.S","6.6260755e-34",6.6260755e-34,false],[false,"Boltzmann constant","[k]","[K]","(unclassified)",1.380658e-20,[2,-2,1,0,-1,0,0],"<i>k</i>","const",true,null,null,1,false,false,0,"k; kB","UCUM","","Constant","physical constant relating energy at the individual particle level with temperature = 1.38064852 ×10^−23 J/K","J/K","J/K","1.380658e-23",1.380658e-23,false],[false,"permittivity of vacuum - electric","[eps_0]","[EPS_0]","electric permittivity",8.854187817000001e-15,[-3,2,-1,0,0,2,0],"<i>ε<sub><r>0</r></sub></i>","const",true,null,null,1,false,false,0,"ε0; Electric Constant; vacuum permittivity; permittivity of free space ","UCUM","","Constant","approximately equal to 8.854 × 10^−12 F/m (farads per meter)","F/m","F/M","8.854187817e-12",8.854187817e-12,false],[false,"permeability of vacuum - magnetic","[mu_0]","[MU_0]","magnetic permeability",0.0012566370614359172,[1,0,1,0,0,-2,0],"<i>μ<sub><r>0</r></sub></i>","const",true,null,null,1,false,false,0,"μ0; vacuum permeability; permeability of free space; magnetic constant","UCUM","","Constant","equal to 4π×10^−7 N/A2 (Newtons per square ampere) ≈ 1.2566×10^−6 H/m (Henry per meter)","N/A2","4.[PI].10*-7.N/A2","1",0.0000012566370614359173,false],[false,"elementary charge","[e]","[E]","electric charge",1.60217733e-19,[0,0,0,0,0,1,0],"<i>e</i>","const",true,null,null,1,false,false,0,"e; q; electric charges","UCUM","","Constant","the magnitude of the electric charge carried by a single electron or proton ≈ 1.60217×10^-19 Coulombs","C","C","1.60217733e-19",1.60217733e-19,false],[false,"electronvolt","eV","EV","energy",1.60217733e-16,[2,-2,1,0,0,0,0],"eV","iso1000",true,null,null,1,false,false,0,"Electron Volts; electronvolts","UCUM","Eng","Clinical","unit of kinetic energy = 1 V * 1.602×10^−19 C = 1.6×10−19 Joules","[e].V","[E].V","1",1,false],[false,"electron mass","[m_e]","[M_E]","mass",9.1093897e-28,[0,0,1,0,0,0,0],"<i>m<sub><r>e</r></sub></i>","const",true,null,null,1,false,false,0,"electron rest mass; me","UCUM","Mass","Constant","approximately equal to 9.10938356 × 10-31 kg; defined as the mass of a stationary electron","g","g","9.1093897e-28",9.1093897e-28,false],[false,"proton mass","[m_p]","[M_P]","mass",1.6726231e-24,[0,0,1,0,0,0,0],"<i>m<sub><r>p</r></sub></i>","const",true,null,null,1,false,false,0,"mp; masses","UCUM","Mass","Constant","approximately equal to 1.672622×10−27 kg","g","g","1.6726231e-24",1.6726231e-24,false],[false,"Newtonian constant of gravitation","[G]","[GC]","(unclassified)",6.67259e-14,[3,-2,-1,0,0,0,0],"<i>G</i>","const",true,null,null,1,false,false,0,"G; gravitational constant; Newton\'s constant","UCUM","","Constant","gravitational constant = 6.674×10−11 N⋅m2/kg2","m3.kg-1.s-2","M3.KG-1.S-2","6.67259e-11",6.67259e-11,false],[false,"standard acceleration of free fall","[g]","[G]","acceleration",9.80665,[1,-2,0,0,0,0,0],"<i>g<sub>n</sub></i>","const",true,null,null,1,false,false,0,"standard gravity; g; ɡ0; ɡn","UCUM","Accel","Constant","defined by standard = 9.80665 m/s2","m/s2","M/S2","980665e-5",9.80665,false],[false,"Torr","Torr","Torr","pressure",133322,[-1,-2,1,0,0,0,0],"Torr","const",false,null,null,1,false,false,0,"torrs","UCUM","Pres","Clinical","1 torr = 1 mmHg; unit used to measure blood pressure","Pa","PAL","133.322",133.322,false],[false,"standard atmosphere","atm","ATM","pressure",101325000,[-1,-2,1,0,0,0,0],"atm","const",false,null,null,1,false,false,0,"reference pressure; atmos; std atmosphere","UCUM","Pres","Clinical","defined as being precisely equal to 101,325 Pa","Pa","PAL","101325",101325,false],[false,"light-year","[ly]","[LY]","length",9460730472580800,[1,0,0,0,0,0,0],"l.y.","const",true,null,null,1,false,false,0,"light years; ly","UCUM","Len","Constant","unit of astronomal distance = 5.88×10^12 mi","[c].a_j","[C].ANN_J","1",1,false],[false,"gram-force","gf","GF","force",9.80665,[1,-2,1,0,0,0,0],"gf","const",true,null,null,1,false,false,0,"Newtons; gram forces","UCUM","Force","Clinical","May be specific to unit related to cardiac output","g.[g]","G.[G]","1",1,false],[false,"Kayser","Ky","KY","lineic number",100,[-1,0,0,0,0,0,0],"K","cgs",true,null,null,1,false,false,0,"wavenumbers; kaysers","UCUM","InvLen","Clinical","unit of wavelength equal to cm^-1","cm-1","CM-1","1",1,false],[false,"Gal","Gal","GL","acceleration",0.01,[1,-2,0,0,0,0,0],"Gal","cgs",true,null,null,1,false,false,0,"galileos; Gals","UCUM","Accel","Clinical","unit of acceleration used in gravimetry; equivalent to cm/s2 ","cm/s2","CM/S2","1",1,false],[false,"dyne","dyn","DYN","force",0.01,[1,-2,1,0,0,0,0],"dyn","cgs",true,null,null,1,false,false,0,"dynes","UCUM","Force","Clinical","unit of force equal to 10^-5 Newtons","g.cm/s2","G.CM/S2","1",1,false],[false,"erg","erg","ERG","energy",0.0001,[2,-2,1,0,0,0,0],"erg","cgs",true,null,null,1,false,false,0,"10^-7 Joules, 10-7 Joules; 100 nJ; 100 nanoJoules; 1 dyne cm; 1 g.cm2/s2","UCUM","Eng","Clinical","unit of energy = 1 dyne centimeter = 10^-7 Joules","dyn.cm","DYN.CM","1",1,false],[false,"Poise","P","P","dynamic viscosity",100.00000000000001,[-1,-1,1,0,0,0,0],"P","cgs",true,null,null,1,false,false,0,"dynamic viscosity; poises","UCUM","Visc","Clinical","unit of dynamic viscosity where 1 Poise = 1/10 Pascal second","dyn.s/cm2","DYN.S/CM2","1",1,false],[false,"Biot","Bi","BI","electric current",10,[0,-1,0,0,0,1,0],"Bi","cgs",true,null,null,1,false,false,0,"Bi; abamperes; abA","UCUM","ElpotRat","Clinical","equal to 10 amperes","A","A","10",10,false],[false,"Stokes","St","ST","kinematic viscosity",0.00009999999999999999,[2,-1,0,0,0,0,0],"St","cgs",true,null,null,1,false,false,0,"kinematic viscosity","UCUM","Visc","Clinical","unit of kimematic viscosity with units cm2/s","cm2/s","CM2/S","1",1,false],[false,"Maxwell","Mx","MX","flux of magnetic induction",0.00001,[2,-1,1,0,0,-1,0],"Mx","cgs",true,null,null,1,false,false,0,"magnetix flux; Maxwells","UCUM","","Clinical","unit of magnetic flux","Wb","WB","1e-8",1e-8,false],[false,"Gauss","G","GS","magnetic flux density",0.1,[0,-1,1,0,0,-1,0],"Gs","cgs",true,null,null,1,false,false,0,"magnetic fields; magnetic flux density; induction; B","UCUM","magnetic","Clinical","CGS unit of magnetic flux density, known as magnetic field B; defined as one maxwell unit per square centimeter (see Oersted for CGS unit for H field)","T","T","1e-4",0.0001,false],[false,"Oersted","Oe","OE","magnetic field intensity",79.57747154594767,[-1,-1,0,0,0,1,0],"Oe","cgs",true,null,null,1,false,false,0,"H magnetic B field; Oersteds","UCUM","","Clinical","CGS unit of the auxiliary magnetic field H defined as 1 dyne per unit pole = 1000/4π amperes per meter (see Gauss for CGS unit for B field)","A/m","/[PI].A/M","250",79.57747154594767,false],[false,"Gilbert","Gb","GB","magnetic tension",0.7957747154594768,[0,-1,0,0,0,1,0],"Gb","cgs",true,null,null,1,false,false,0,"Gi; magnetomotive force; Gilberts","UCUM","","Clinical","unit of magnetomotive force (magnetic potential)","Oe.cm","OE.CM","1",1,false],[false,"stilb","sb","SB","lum. intensity density",10000,[-2,0,0,0,0,0,1],"sb","cgs",true,null,null,1,false,false,0,"stilbs","UCUM","","Obsolete","unit of luminance; equal to and replaced by unit candela per square centimeter (cd/cm2)","cd/cm2","CD/CM2","1",1,false],[false,"Lambert","Lmb","LMB","brightness",3183.098861837907,[-2,0,0,0,0,0,1],"L","cgs",true,null,null,1,false,false,0,"luminance; lamberts","UCUM","","Clinical","unit of luminance defined as 1 lambert = 1/ π candela per square meter","cd/cm2/[pi]","CD/CM2/[PI]","1",1,false],[false,"phot","ph","PHT","illuminance",0.0001,[-2,0,0,2,0,0,1],"ph","cgs",true,null,null,1,false,false,0,"phots","UCUM","","Clinical","CGS photometric unit of illuminance, or luminous flux through an area equal to 10000 lumens per square meter = 10000 lux","lx","LX","1e-4",0.0001,false],[false,"Curie","Ci","CI","radioactivity",37000000000,[0,-1,0,0,0,0,0],"Ci","cgs",true,null,null,1,false,false,0,"curies","UCUM","","Obsolete","unit for measuring atomic disintegration rate; replaced by the Bequerel (Bq) unit","Bq","BQ","37e9",37000000000,false],[false,"Roentgen","R","ROE","ion dose",2.58e-7,[0,0,-1,0,0,1,0],"R","cgs",true,null,null,1,false,false,0,"röntgen; Roentgens","UCUM","","Clinical","unit of exposure of X-rays and gamma rays in air; unit used primarily in the US but strongly discouraged by NIST","C/kg","C/KG","2.58e-4",0.000258,false],[false,"radiation absorbed dose","RAD","[RAD]","energy dose",0.01,[2,-2,0,0,0,0,0],"RAD","cgs",true,null,null,1,false,false,0,"doses","UCUM","","Clinical","unit of radiation absorbed dose used primarily in the US with base units 100 ergs per gram of material. Also see the SI unit Gray (Gy).","erg/g","ERG/G","100",100,false],[false,"radiation equivalent man","REM","[REM]","dose equivalent",0.01,[2,-2,0,0,0,0,0],"REM","cgs",true,null,null,1,false,false,0,"Roentgen Equivalent in Man; rems; dose equivalents","UCUM","","Clinical","unit of equivalent dose which measures the effect of radiation on humans equal to 0.01 sievert. Used primarily in the US. Also see SI unit Sievert (Sv)","RAD","[RAD]","1",1,false],[false,"inch","[in_i]","[IN_I]","length",0.025400000000000002,[1,0,0,0,0,0,0],"in","intcust",false,null,null,1,false,false,0,"inches; in; international inch; body height","UCUM","Len","Clinical","standard unit for inch in the US and internationally","cm","CM","254e-2",2.54,false],[false,"foot","[ft_i]","[FT_I]","length",0.3048,[1,0,0,0,0,0,0],"ft","intcust",false,null,null,1,false,false,0,"ft; fts; foot; international foot; feet; international feet; height","UCUM","Len","Clinical","unit used in the US and internationally","[in_i]","[IN_I]","12",12,false],[false,"yard","[yd_i]","[YD_I]","length",0.9144000000000001,[1,0,0,0,0,0,0],"yd","intcust",false,null,null,1,false,false,0,"international yards; yds; distance","UCUM","Len","Clinical","standard unit used in the US and internationally","[ft_i]","[FT_I]","3",3,false],[false,"mile","[mi_i]","[MI_I]","length",1609.344,[1,0,0,0,0,0,0],"mi","intcust",false,null,null,1,false,false,0,"international miles; mi I; statute mile","UCUM","Len","Clinical","standard unit used in the US and internationally","[ft_i]","[FT_I]","5280",5280,false],[false,"fathom","[fth_i]","[FTH_I]","depth of water",1.8288000000000002,[1,0,0,0,0,0,0],"fth","intcust",false,null,null,1,false,false,0,"international fathoms","UCUM","Len","Nonclinical","unit used in the US and internationally to measure depth of water; same length as the US fathom","[ft_i]","[FT_I]","6",6,false],[false,"nautical mile","[nmi_i]","[NMI_I]","length",1852,[1,0,0,0,0,0,0],"n.mi","intcust",false,null,null,1,false,false,0,"nautical mile; nautical miles; international nautical mile; international nautical miles; nm; n.m.; nmi","UCUM","Len","Nonclinical","standard unit used in the US and internationally","m","M","1852",1852,false],[false,"knot","[kn_i]","[KN_I]","velocity",0.5144444444444445,[1,-1,0,0,0,0,0],"knot","intcust",false,null,null,1,false,false,0,"kn; kt; international knots","UCUM","Vel","Nonclinical","defined as equal to one nautical mile (1.852 km) per hour","[nmi_i]/h","[NMI_I]/H","1",1,false],[false,"square inch","[sin_i]","[SIN_I]","area",0.0006451600000000001,[2,0,0,0,0,0,0],null,"intcust",false,null,null,1,false,false,0,"in2; in^2; inches squared; sq inch; inches squared; international","UCUM","Area","Clinical","standard unit used in the US and internationally","[in_i]2","[IN_I]2","1",1,false],[false,"square foot","[sft_i]","[SFT_I]","area",0.09290304,[2,0,0,0,0,0,0],null,"intcust",false,null,null,1,false,false,0,"ft2; ft^2; ft squared; sq ft; feet; international","UCUM","Area","Clinical","standard unit used in the US and internationally","[ft_i]2","[FT_I]2","1",1,false],[false,"square yard","[syd_i]","[SYD_I]","area",0.8361273600000002,[2,0,0,0,0,0,0],null,"intcust",false,null,null,1,false,false,0,"yd2; yd^2; sq. yds; yards squared; international","UCUM","Area","Clinical","standard unit used in the US and internationally","[yd_i]2","[YD_I]2","1",1,false],[false,"cubic inch","[cin_i]","[CIN_I]","volume",0.000016387064000000006,[3,0,0,0,0,0,0],null,"intcust",false,null,null,1,false,false,0,"in3; in^3; in*3; inches^3; inches*3; cu. in; cu in; cubic inches; inches cubed; cin","UCUM","Vol","Clinical","standard unit used in the US and internationally","[in_i]3","[IN_I]3","1",1,false],[false,"cubic foot","[cft_i]","[CFT_I]","volume",0.028316846592000004,[3,0,0,0,0,0,0],null,"intcust",false,null,null,1,false,false,0,"ft3; ft^3; ft*3; cu. ft; cubic feet; cubed; [ft_i]3; international","UCUM","Vol","Clinical","","[ft_i]3","[FT_I]3","1",1,false],[false,"cubic yard","[cyd_i]","[CYD_I]","volume",0.7645548579840002,[3,0,0,0,0,0,0],"cu.yd","intcust",false,null,null,1,false,false,0,"cubic yards; cubic yds; cu yards; CYs; yards^3; yd^3; yds^3; yd3; yds3","UCUM","Vol","Nonclinical","standard unit used in the US and internationally","[yd_i]3","[YD_I]3","1",1,false],[false,"board foot","[bf_i]","[BF_I]","volume",0.0023597372160000006,[3,0,0,0,0,0,0],null,"intcust",false,null,null,1,false,false,0,"BDFT; FBM; BF; board feet; international","UCUM","Vol","Nonclinical","unit of volume used to measure lumber","[in_i]3","[IN_I]3","144",144,false],[false,"cord","[cr_i]","[CR_I]","volume",3.6245563637760005,[3,0,0,0,0,0,0],null,"intcust",false,null,null,1,false,false,0,"crd I; international cords","UCUM","Vol","Nonclinical","unit of measure of dry volume used to measure firewood equal 128 ft3","[ft_i]3","[FT_I]3","128",128,false],[false,"mil","[mil_i]","[MIL_I]","length",0.000025400000000000004,[1,0,0,0,0,0,0],"mil","intcust",false,null,null,1,false,false,0,"thou, thousandth; mils; international","UCUM","Len","Clinical","equal to 0.001 international inch","[in_i]","[IN_I]","1e-3",0.001,false],[false,"circular mil","[cml_i]","[CML_I]","area",5.067074790974979e-10,[2,0,0,0,0,0,0],"circ.mil","intcust",false,null,null,1,false,false,0,"circular mils; cml I; international","UCUM","Area","Clinical","","[pi]/4.[mil_i]2","[PI]/4.[MIL_I]2","1",1,false],[false,"hand","[hd_i]","[HD_I]","height of horses",0.10160000000000001,[1,0,0,0,0,0,0],"hd","intcust",false,null,null,1,false,false,0,"hands; international","UCUM","Len","Nonclinical","used to measure horse height","[in_i]","[IN_I]","4",4,false],[false,"foot - US","[ft_us]","[FT_US]","length",0.3048006096012192,[1,0,0,0,0,0,0],"ft<sub>us</sub>","us-lengths",false,null,null,1,false,false,0,"US foot; foot US; us ft; ft us; height; visual distance; feet","UCUM","Len","Obsolete","Better to use [ft_i] which refers to the length used worldwide, including in the US;  [ft_us] may be confused with land survey units. ","m/3937","M/3937","1200",1200,false],[false,"yard - US","[yd_us]","[YD_US]","length",0.9144018288036575,[1,0,0,0,0,0,0],null,"us-lengths",false,null,null,1,false,false,0,"US yards; us yds; distance","UCUM","Len; Nrat","Obsolete","Better to use [yd_i] which refers to the length used worldwide, including in the US; [yd_us] refers to unit used in land surveys in the US","[ft_us]","[FT_US]","3",3,false],[false,"inch - US","[in_us]","[IN_US]","length",0.0254000508001016,[1,0,0,0,0,0,0],null,"us-lengths",false,null,null,1,false,false,0,"US inches; in us; us in; inch US","UCUM","Len","Obsolete","Better to use [in_i] which refers to the length used worldwide, including in the US","[ft_us]/12","[FT_US]/12","1",1,false],[false,"rod - US","[rd_us]","[RD_US]","length",5.029210058420117,[1,0,0,0,0,0,0],null,"us-lengths",false,null,null,1,false,false,0,"US rod; US rods; rd US; US rd","UCUM","Len","Obsolete","","[ft_us]","[FT_US]","16.5",16.5,false],[false,"Gunter\'s chain - US","[ch_us]","[CH_US]","length",20.116840233680467,[1,0,0,0,0,0,0],null,"us-lengths",false,null,null,1,false,false,0,"surveyor\'s chain; Surveyor\'s chain USA; Gunter’s measurement; surveyor’s measurement; Gunter\'s Chain USA","UCUM","Len","Obsolete","historical unit used for land survey used only in the US","[rd_us]","[RD_US]","4",4,false],[false,"link for Gunter\'s chain - US","[lk_us]","[LK_US]","length",0.20116840233680466,[1,0,0,0,0,0,0],null,"us-lengths",false,null,null,1,false,false,0,"Links for Gunter\'s Chain USA","UCUM","Len","Obsolete","","[ch_us]/100","[CH_US]/100","1",1,false],[false,"Ramden\'s chain - US","[rch_us]","[RCH_US]","length",30.480060960121918,[1,0,0,0,0,0,0],null,"us-lengths",false,null,null,1,false,false,0,"Ramsden\'s chain; engineer\'s chains","UCUM","Len","Obsolete","distance measuring device used for land survey","[ft_us]","[FT_US]","100",100,false],[false,"link for Ramden\'s chain - US","[rlk_us]","[RLK_US]","length",0.3048006096012192,[1,0,0,0,0,0,0],null,"us-lengths",false,null,null,1,false,false,0,"links for Ramsden\'s chain","UCUM","Len","Obsolete","","[rch_us]/100","[RCH_US]/100","1",1,false],[false,"fathom - US","[fth_us]","[FTH_US]","length",1.828803657607315,[1,0,0,0,0,0,0],null,"us-lengths",false,null,null,1,false,false,0,"US fathoms; fathom USA; fth us","UCUM","Len","Obsolete","same length as the international fathom - better to use international fathom ([fth_i])","[ft_us]","[FT_US]","6",6,false],[false,"furlong - US","[fur_us]","[FUR_US]","length",201.16840233680466,[1,0,0,0,0,0,0],null,"us-lengths",false,null,null,1,false,false,0,"US furlongs; fur us","UCUM","Len","Nonclinical","distance unit in horse racing","[rd_us]","[RD_US]","40",40,false],[false,"mile - US","[mi_us]","[MI_US]","length",1609.3472186944373,[1,0,0,0,0,0,0],null,"us-lengths",false,null,null,1,false,false,0,"U.S. Survey Miles; US statute miles; survey mi; US mi; distance","UCUM","Len","Nonclinical","Better to use [mi_i] which refers to the length used worldwide, including in the US","[fur_us]","[FUR_US]","8",8,false],[false,"acre - US","[acr_us]","[ACR_US]","area",4046.872609874252,[2,0,0,0,0,0,0],null,"us-lengths",false,null,null,1,false,false,0,"Acre USA Survey; Acre USA; survey acres","UCUM","Area","Nonclinical","an older unit based on pre 1959 US statute lengths that is still sometimes used in the US only for land survey purposes. ","[rd_us]2","[RD_US]2","160",160,false],[false,"square rod - US","[srd_us]","[SRD_US]","area",25.292953811714074,[2,0,0,0,0,0,0],null,"us-lengths",false,null,null,1,false,false,0,"rod2; rod^2; sq. rod; rods squared","UCUM","Area","Nonclinical","Used only in the US to measure land area, based on US statute land survey length units","[rd_us]2","[RD_US]2","1",1,false],[false,"square mile - US","[smi_us]","[SMI_US]","area",2589998.470319521,[2,0,0,0,0,0,0],null,"us-lengths",false,null,null,1,false,false,0,"mi2; mi^2; sq mi; miles squared","UCUM","Area","Nonclinical","historical unit used only in the US for land survey purposes (based on the US survey mile), not the internationally recognized [mi_i]","[mi_us]2","[MI_US]2","1",1,false],[false,"section","[sct]","[SCT]","area",2589998.470319521,[2,0,0,0,0,0,0],null,"us-lengths",false,null,null,1,false,false,0,"sct; sections","UCUM","Area","Nonclinical","tract of land approximately equal to 1 mile square containing 640 acres","[mi_us]2","[MI_US]2","1",1,false],[false,"township","[twp]","[TWP]","area",93239944.93150276,[2,0,0,0,0,0,0],null,"us-lengths",false,null,null,1,false,false,0,"twp; townships","UCUM","Area","Nonclinical","land measurement equal to 6 mile square","[sct]","[SCT]","36",36,false],[false,"mil - US","[mil_us]","[MIL_US]","length",0.0000254000508001016,[1,0,0,0,0,0,0],null,"us-lengths",false,null,null,1,false,false,0,"thou, thousandth; mils","UCUM","Len","Obsolete","better to use [mil_i] which is based on the internationally recognized inch","[in_us]","[IN_US]","1e-3",0.001,false],[false,"inch - British","[in_br]","[IN_BR]","length",0.025399980000000003,[1,0,0,0,0,0,0],null,"brit-length",false,null,null,1,false,false,0,"imperial inches; imp in; br in; british inches","UCUM","Len","Obsolete","","cm","CM","2.539998",2.539998,false],[false,"foot - British","[ft_br]","[FT_BR]","length",0.30479976000000003,[1,0,0,0,0,0,0],null,"brit-length",false,null,null,1,false,false,0,"British Foot; Imperial Foot; feet; imp fts; br fts","UCUM","Len","Obsolete","","[in_br]","[IN_BR]","12",12,false],[false,"rod - British","[rd_br]","[RD_BR]","length",5.02919604,[1,0,0,0,0,0,0],null,"brit-length",false,null,null,1,false,false,0,"British rods; br rd","UCUM","Len","Obsolete","","[ft_br]","[FT_BR]","16.5",16.5,false],[false,"Gunter\'s chain - British","[ch_br]","[CH_BR]","length",20.11678416,[1,0,0,0,0,0,0],null,"brit-length",false,null,null,1,false,false,0,"Gunter\'s Chain British; Gunters Chain British; Surveyor\'s Chain British","UCUM","Len","Obsolete","historical unit used for land survey used only in Great Britain","[rd_br]","[RD_BR]","4",4,false],[false,"link for Gunter\'s chain - British","[lk_br]","[LK_BR]","length",0.2011678416,[1,0,0,0,0,0,0],null,"brit-length",false,null,null,1,false,false,0,"Links for Gunter\'s Chain British","UCUM","Len","Obsolete","","[ch_br]/100","[CH_BR]/100","1",1,false],[false,"fathom - British","[fth_br]","[FTH_BR]","length",1.82879856,[1,0,0,0,0,0,0],null,"brit-length",false,null,null,1,false,false,0,"British fathoms; imperial fathoms; br fth; imp fth","UCUM","Len","Obsolete","","[ft_br]","[FT_BR]","6",6,false],[false,"pace - British","[pc_br]","[PC_BR]","length",0.7619994000000001,[1,0,0,0,0,0,0],null,"brit-length",false,null,null,1,false,false,0,"British paces; br pc","UCUM","Len","Nonclinical","traditional unit of length equal to 152.4 centimeters, or 1.52 meter. ","[ft_br]","[FT_BR]","2.5",2.5,false],[false,"yard - British","[yd_br]","[YD_BR]","length",0.91439928,[1,0,0,0,0,0,0],null,"brit-length",false,null,null,1,false,false,0,"British yards; Br yds; distance","UCUM","Len","Obsolete","","[ft_br]","[FT_BR]","3",3,false],[false,"mile - British","[mi_br]","[MI_BR]","length",1609.3427328000002,[1,0,0,0,0,0,0],null,"brit-length",false,null,null,1,false,false,0,"imperial miles; British miles; English statute miles; imp mi, br mi","UCUM","Len","Obsolete","","[ft_br]","[FT_BR]","5280",5280,false],[false,"nautical mile - British","[nmi_br]","[NMI_BR]","length",1853.1825408000002,[1,0,0,0,0,0,0],null,"brit-length",false,null,null,1,false,false,0,"British nautical miles; Imperial nautical miles; Admiralty miles; n.m. br; imp nm","UCUM","Len","Obsolete","","[ft_br]","[FT_BR]","6080",6080,false],[false,"knot - British","[kn_br]","[KN_BR]","velocity",0.5147729280000001,[1,-1,0,0,0,0,0],null,"brit-length",false,null,null,1,false,false,0,"British knots; kn br; kt","UCUM","Vel","Obsolete","based on obsolete British nautical mile ","[nmi_br]/h","[NMI_BR]/H","1",1,false],[false,"acre","[acr_br]","[ACR_BR]","area",4046.850049400269,[2,0,0,0,0,0,0],null,"brit-length",false,null,null,1,false,false,0,"Imperial acres; British; a; ac; ar; acr","UCUM","Area","Nonclinical","the standard unit for acre used in the US and internationally","[yd_br]2","[YD_BR]2","4840",4840,false],[false,"gallon - US","[gal_us]","[GAL_US]","fluid volume",0.0037854117840000014,[3,0,0,0,0,0,0],null,"us-volumes",false,null,null,1,false,false,0,"US gallons; US liquid gallon; gal us; Queen Anne\'s wine gallon","UCUM","Vol","Nonclinical","only gallon unit used in the US; [gal_us] is only used in some other countries in South American and Africa to measure gasoline volume","[in_i]3","[IN_I]3","231",231,false],[false,"barrel - US","[bbl_us]","[BBL_US]","fluid volume",0.15898729492800007,[3,0,0,0,0,0,0],null,"us-volumes",false,null,null,1,false,false,0,"bbl","UCUM","Vol","Nonclinical","[bbl_us] is the standard unit for oil barrel, which is a unit only used in the US to measure the volume oil. ","[gal_us]","[GAL_US]","42",42,false],[false,"quart - US","[qt_us]","[QT_US]","fluid volume",0.0009463529460000004,[3,0,0,0,0,0,0],null,"us-volumes",false,null,null,1,false,false,0,"US quarts; us qts","UCUM","Vol","Clinical","Used only in the US","[gal_us]/4","[GAL_US]/4","1",1,false],[false,"pint - US","[pt_us]","[PT_US]","fluid volume",0.0004731764730000002,[3,0,0,0,0,0,0],null,"us-volumes",false,null,null,1,false,false,0,"US pints; pint US; liquid pint; pt us; us pt","UCUM","Vol","Clinical","Used only in the US","[qt_us]/2","[QT_US]/2","1",1,false],[false,"gill - US","[gil_us]","[GIL_US]","fluid volume",0.00011829411825000005,[3,0,0,0,0,0,0],null,"us-volumes",false,null,null,1,false,false,0,"US gills; gil us","UCUM","Vol","Nonclinical","only used in the context of alcohol volume in the US","[pt_us]/4","[PT_US]/4","1",1,false],[false,"fluid ounce - US","[foz_us]","[FOZ_US]","fluid volume",0.00002957352956250001,[3,0,0,0,0,0,0],"oz fl","us-volumes",false,null,null,1,false,false,0,"US fluid ounces; fl ozs; FO; fl. oz.; foz us","UCUM","Vol","Clinical","unit used only in the US","[gil_us]/4","[GIL_US]/4","1",1,false],[false,"fluid dram - US","[fdr_us]","[FDR_US]","fluid volume",0.0000036966911953125014,[3,0,0,0,0,0,0],null,"us-volumes",false,null,null,1,false,false,0,"US fluid drams; fdr us","UCUM","Vol","Nonclinical","equal to 1/8 US fluid ounce = 3.69 mL; used informally to mean small amount of liquor, especially Scotch whiskey","[foz_us]/8","[FOZ_US]/8","1",1,false],[false,"minim - US","[min_us]","[MIN_US]","fluid volume",6.161151992187503e-8,[3,0,0,0,0,0,0],null,"us-volumes",false,null,null,1,false,false,0,"min US; US min; ♏ US","UCUM","Vol","Obsolete","","[fdr_us]/60","[FDR_US]/60","1",1,false],[false,"cord - US","[crd_us]","[CRD_US]","fluid volume",3.6245563637760005,[3,0,0,0,0,0,0],null,"us-volumes",false,null,null,1,false,false,0,"US cord; US cords; crd us; us crd","UCUM","Vol","Nonclinical","unit of measure of dry volume used to measure firewood equal 128 ft3 (the same as international cord [cr_i])","[ft_i]3","[FT_I]3","128",128,false],[false,"bushel - US","[bu_us]","[BU_US]","dry volume",0.035239070166880014,[3,0,0,0,0,0,0],null,"us-volumes",false,null,null,1,false,false,0,"US bushels; US bsh; US bu","UCUM","Vol","Obsolete","Historical unit of dry volume that is rarely used today","[in_i]3","[IN_I]3","2150.42",2150.42,false],[false,"gallon - historical","[gal_wi]","[GAL_WI]","dry volume",0.004404883770860002,[3,0,0,0,0,0,0],null,"us-volumes",false,null,null,1,false,false,0,"Corn Gallon British; Dry Gallon US; Gallons Historical; Grain Gallon British; Winchester Corn Gallon; historical winchester gallons; wi gal","UCUM","Vol","Obsolete","historical unit of dry volume no longer used","[bu_us]/8","[BU_US]/8","1",1,false],[false,"peck - US","[pk_us]","[PK_US]","dry volume",0.008809767541720004,[3,0,0,0,0,0,0],null,"us-volumes",false,null,null,1,false,false,0,"US pecks; US pk","UCUM","Vol","Nonclinical","unit of dry volume rarely used today (can be used to measure volume of apples)","[bu_us]/4","[BU_US]/4","1",1,false],[false,"dry quart - US","[dqt_us]","[DQT_US]","dry volume",0.0011012209427150004,[3,0,0,0,0,0,0],null,"us-volumes",false,null,null,1,false,false,0,"dry quarts; dry quart US; US dry quart; dry qt; us dry qt; dqt; dqt us","UCUM","Vol","Nonclinical","historical unit of dry volume only in the US, but is rarely used today","[pk_us]/8","[PK_US]/8","1",1,false],[false,"dry pint - US","[dpt_us]","[DPT_US]","dry volume",0.0005506104713575002,[3,0,0,0,0,0,0],null,"us-volumes",false,null,null,1,false,false,0,"dry pints; dry pint US; US dry pint; dry pt; dpt; dpt us","UCUM","Vol","Nonclinical","historical unit of dry volume only in the US, but is rarely used today","[dqt_us]/2","[DQT_US]/2","1",1,false],[false,"tablespoon - US","[tbs_us]","[TBS_US]","volume",0.000014786764781250006,[3,0,0,0,0,0,0],null,"us-volumes",false,null,null,1,false,false,0,"Tbs; tbsp; tbs us; US tablespoons","UCUM","Vol","Clinical","unit defined as 0.5 US fluid ounces or 3 teaspoons - used only in the US. See [tbs_m] for the unit used internationally and in the US for nutrional labelling. ","[foz_us]/2","[FOZ_US]/2","1",1,false],[false,"teaspoon - US","[tsp_us]","[TSP_US]","volume",0.000004928921593750002,[3,0,0,0,0,0,0],null,"us-volumes",false,null,null,1,false,false,0,"tsp; t; US teaspoons","UCUM","Vol","Nonclinical","unit defined as 1/6 US fluid ounces - used only in the US. See [tsp_m] for the unit used internationally and in the US for nutrional labelling. ","[tbs_us]/3","[TBS_US]/3","1",1,false],[false,"cup - US customary","[cup_us]","[CUP_US]","volume",0.0002365882365000001,[3,0,0,0,0,0,0],null,"us-volumes",false,null,null,1,false,false,0,"cup us; us cups","UCUM","Vol","Nonclinical","Unit defined as 1/2 US pint or 16 US tablespoons ≈ 236.59 mL, which is not the standard unit defined by the FDA of 240 mL - see [cup_m] (metric cup)","[tbs_us]","[TBS_US]","16",16,false],[false,"fluid ounce - metric","[foz_m]","[FOZ_M]","fluid volume",0.000029999999999999997,[3,0,0,0,0,0,0],"oz fl","us-volumes",false,null,null,1,false,false,0,"metric fluid ounces; fozs m; fl ozs m","UCUM","Vol","Clinical","unit used only in the US for nutritional labelling, as set by the FDA","mL","ML","30",30,false],[false,"cup - US legal","[cup_m]","[CUP_M]","volume",0.00023999999999999998,[3,0,0,0,0,0,0],null,"us-volumes",false,null,null,1,false,false,0,"cup m; metric cups","UCUM","Vol","Clinical","standard unit equal to 240 mL used in the US for nutritional labelling, as defined by the FDA. Note that this is different from the US customary cup (236.59 mL) and the metric cup used in Commonwealth nations (250 mL).","mL","ML","240",240,false],[false,"teaspoon - metric","[tsp_m]","[TSP_M]","volume",0.0000049999999999999996,[3,0,0,0,0,0,0],null,"us-volumes",false,null,null,1,false,false,0,"tsp; t; metric teaspoons","UCUM","Vol","Clinical","standard unit used in the US and internationally","mL","mL","5",5,false],[false,"tablespoon - metric","[tbs_m]","[TBS_M]","volume",0.000014999999999999999,[3,0,0,0,0,0,0],null,"us-volumes",false,null,null,1,false,false,0,"metric tablespoons; Tbs; tbsp; T; tbs m","UCUM","Vol","Clinical","standard unit used in the US and internationally","mL","mL","15",15,false],[false,"gallon- British","[gal_br]","[GAL_BR]","volume",0.004546090000000001,[3,0,0,0,0,0,0],null,"brit-volumes",false,null,null,1,false,false,0,"imperial gallons, UK gallons; British gallons; br gal; imp gal","UCUM","Vol","Nonclinical","Used only in Great Britain and other Commonwealth countries","l","L","4.54609",4.54609,false],[false,"peck - British","[pk_br]","[PK_BR]","volume",0.009092180000000002,[3,0,0,0,0,0,0],null,"brit-volumes",false,null,null,1,false,false,0,"imperial pecks; British pecks; br pk; imp pk","UCUM","Vol","Nonclinical","unit of dry volume rarely used today (can be used to measure volume of apples)","[gal_br]","[GAL_BR]","2",2,false],[false,"bushel - British","[bu_br]","[BU_BR]","volume",0.03636872000000001,[3,0,0,0,0,0,0],null,"brit-volumes",false,null,null,1,false,false,0,"British bushels; imperial; br bsh; br bu; imp","UCUM","Vol","Obsolete","Historical unit of dry volume that is rarely used today","[pk_br]","[PK_BR]","4",4,false],[false,"quart - British","[qt_br]","[QT_BR]","volume",0.0011365225000000002,[3,0,0,0,0,0,0],null,"brit-volumes",false,null,null,1,false,false,0,"British quarts; imperial quarts; br qts","UCUM","Vol","Clinical","Used only in Great Britain and other Commonwealth countries","[gal_br]/4","[GAL_BR]/4","1",1,false],[false,"pint - British","[pt_br]","[PT_BR]","volume",0.0005682612500000001,[3,0,0,0,0,0,0],null,"brit-volumes",false,null,null,1,false,false,0,"British pints; imperial pints; pt br; br pt; imp pt; pt imp","UCUM","Vol","Clinical","Used only in Great Britain and other Commonwealth countries","[qt_br]/2","[QT_BR]/2","1",1,false],[false,"gill - British","[gil_br]","[GIL_BR]","volume",0.00014206531250000003,[3,0,0,0,0,0,0],null,"brit-volumes",false,null,null,1,false,false,0,"imperial gills; British gills; imp gill, br gill","UCUM","Vol","Nonclinical","only used in the context of alcohol volume in Great Britain","[pt_br]/4","[PT_BR]/4","1",1,false],[false,"fluid ounce - British","[foz_br]","[FOZ_BR]","volume",0.000028413062500000005,[3,0,0,0,0,0,0],null,"brit-volumes",false,null,null,1,false,false,0,"British fluid ounces; Imperial fluid ounces; br fozs; imp fozs; br fl ozs","UCUM","Vol","Clinical","Used only in Great Britain and other Commonwealth countries","[gil_br]/5","[GIL_BR]/5","1",1,false],[false,"fluid dram - British","[fdr_br]","[FDR_BR]","volume",0.0000035516328125000006,[3,0,0,0,0,0,0],null,"brit-volumes",false,null,null,1,false,false,0,"British fluid drams; fdr br","UCUM","Vol","Nonclinical","equal to 1/8 Imperial fluid ounce = 3.55 mL; used informally to mean small amount of liquor, especially Scotch whiskey","[foz_br]/8","[FOZ_BR]/8","1",1,false],[false,"minim - British","[min_br]","[MIN_BR]","volume",5.919388020833334e-8,[3,0,0,0,0,0,0],null,"brit-volumes",false,null,null,1,false,false,0,"min br; br min; ♏ br","UCUM","Vol","Obsolete","","[fdr_br]/60","[FDR_BR]/60","1",1,false],[false,"grain","[gr]","[GR]","mass",0.06479891,[0,0,1,0,0,0,0],null,"avoirdupois",false,null,null,1,false,false,0,"gr; grains","UCUM","Mass","Nonclinical","an apothecary measure of mass rarely used today","mg","MG","64.79891",64.79891,false],[false,"pound","[lb_av]","[LB_AV]","mass",453.59237,[0,0,1,0,0,0,0],"lb","avoirdupois",false,null,null,1,false,false,0,"avoirdupois pounds, international pounds; av lbs; pounds","UCUM","Mass","Clinical","standard unit used in the US and internationally","[gr]","[GR]","7000",7000,false],[false,"pound force - US","[lbf_av]","[LBF_AV]","force",4448.2216152605,[1,-2,1,0,0,0,0],"lbf","const",false,null,null,1,false,false,0,"lbfs; US lbf; US pound forces","UCUM","Force","Clinical","only rarely needed in health care - see [lb_av] which is the more common unit to express weight","[lb_av].[g]","[LB_AV].[G]","1",1,false],[false,"ounce","[oz_av]","[OZ_AV]","mass",28.349523125,[0,0,1,0,0,0,0],"oz","avoirdupois",false,null,null,1,false,false,0,"ounces; international ounces; avoirdupois ounces; av ozs","UCUM","Mass","Clinical","standard unit used in the US and internationally","[lb_av]/16","[LB_AV]/16","1",1,false],[false,"Dram mass unit","[dr_av]","[DR_AV]","mass",1.7718451953125,[0,0,1,0,0,0,0],null,"avoirdupois",false,null,null,1,false,false,0,"Dram; drams avoirdupois; avoidupois dram; international dram","UCUM","Mass","Clinical","unit from the avoirdupois system, which is used in the US and internationally","[oz_av]/16","[OZ_AV]/16","1",1,false],[false,"short hundredweight","[scwt_av]","[SCWT_AV]","mass",45359.237,[0,0,1,0,0,0,0],null,"avoirdupois",false,null,null,1,false,false,0,"hundredweights; s cwt; scwt; avoirdupois","UCUM","Mass","Nonclinical","Used only in the US to equal 100 pounds","[lb_av]","[LB_AV]","100",100,false],[false,"long hundredweight","[lcwt_av]","[LCWT_AV]","mass",50802.345440000005,[0,0,1,0,0,0,0],null,"avoirdupois",false,null,null,1,false,false,0,"imperial hundredweights; imp cwt; lcwt; avoirdupois","UCUM","Mass","Obsolete","","[lb_av]","[LB_AV]","112",112,false],[false,"short ton - US","[ston_av]","[STON_AV]","mass",907184.74,[0,0,1,0,0,0,0],null,"avoirdupois",false,null,null,1,false,false,0,"ton; US tons; avoirdupois tons","UCUM","Mass","Clinical","Used only in the US","[scwt_av]","[SCWT_AV]","20",20,false],[false,"long ton - British","[lton_av]","[LTON_AV]","mass",1016046.9088000001,[0,0,1,0,0,0,0],null,"avoirdupois",false,null,null,1,false,false,0,"imperial tons; weight tons; British long tons; long ton avoirdupois","UCUM","Mass","Nonclinical","Used only in Great Britain and other Commonwealth countries","[lcwt_av]","[LCWT_AV]","20",20,false],[false,"stone - British","[stone_av]","[STONE_AV]","mass",6350.293180000001,[0,0,1,0,0,0,0],null,"avoirdupois",false,null,null,1,false,false,0,"British stones; avoirdupois","UCUM","Mass","Nonclinical","Used primarily in the UK and Ireland to measure body weight","[lb_av]","[LB_AV]","14",14,false],[false,"pennyweight - troy","[pwt_tr]","[PWT_TR]","mass",1.5551738400000001,[0,0,1,0,0,0,0],null,"troy",false,null,null,1,false,false,0,"dwt; denarius weights","UCUM","Mass","Obsolete","historical unit used to measure mass and cost of precious metals","[gr]","[GR]","24",24,false],[false,"ounce - troy","[oz_tr]","[OZ_TR]","mass",31.103476800000003,[0,0,1,0,0,0,0],null,"troy",false,null,null,1,false,false,0,"troy ounces; tr ozs","UCUM","Mass","Nonclinical","unit of mass for precious metals and gemstones only","[pwt_tr]","[PWT_TR]","20",20,false],[false,"pound - troy","[lb_tr]","[LB_TR]","mass",373.2417216,[0,0,1,0,0,0,0],null,"troy",false,null,null,1,false,false,0,"troy pounds; tr lbs","UCUM","Mass","Nonclinical","only used for weighing precious metals","[oz_tr]","[OZ_TR]","12",12,false],[false,"scruple","[sc_ap]","[SC_AP]","mass",1.2959782,[0,0,1,0,0,0,0],null,"apoth",false,null,null,1,false,false,0,"scruples; sc ap","UCUM","Mass","Obsolete","","[gr]","[GR]","20",20,false],[false,"dram - apothecary","[dr_ap]","[DR_AP]","mass",3.8879346,[0,0,1,0,0,0,0],null,"apoth",false,null,null,1,false,false,0,"ʒ; drachm; apothecaries drams; dr ap; dram ap","UCUM","Mass","Nonclinical","unit still used in the US occasionally to measure amount of drugs in pharmacies","[sc_ap]","[SC_AP]","3",3,false],[false,"ounce - apothecary","[oz_ap]","[OZ_AP]","mass",31.1034768,[0,0,1,0,0,0,0],null,"apoth",false,null,null,1,false,false,0,"apothecary ounces; oz ap; ap ozs; ozs ap","UCUM","Mass","Obsolete","","[dr_ap]","[DR_AP]","8",8,false],[false,"pound - apothecary","[lb_ap]","[LB_AP]","mass",373.2417216,[0,0,1,0,0,0,0],null,"apoth",false,null,null,1,false,false,0,"apothecary pounds; apothecaries pounds; ap lb; lb ap; ap lbs; lbs ap","UCUM","Mass","Obsolete","","[oz_ap]","[OZ_AP]","12",12,false],[false,"ounce - metric","[oz_m]","[OZ_M]","mass",28,[0,0,1,0,0,0,0],null,"apoth",false,null,null,1,false,false,0,"metric ounces; m ozs","UCUM","Mass","Clinical","see [oz_av] (the avoirdupois ounce) for the standard ounce used internationally; [oz_m] is equal to 28 grams and is based on the apothecaries\' system of mass units which is used in some US pharmacies. ","g","g","28",28,false],[false,"line","[lne]","[LNE]","length",0.002116666666666667,[1,0,0,0,0,0,0],null,"typeset",false,null,null,1,false,false,0,"British lines; br L; L; l","UCUM","Len","Obsolete","","[in_i]/12","[IN_I]/12","1",1,false],[false,"point (typography)","[pnt]","[PNT]","length",0.0003527777777777778,[1,0,0,0,0,0,0],null,"typeset",false,null,null,1,false,false,0,"DTP points; desktop publishing point; pt; pnt","UCUM","Len","Nonclinical","typography unit for typesetter\'s length","[lne]/6","[LNE]/6","1",1,false],[false,"pica (typography)","[pca]","[PCA]","length",0.004233333333333334,[1,0,0,0,0,0,0],null,"typeset",false,null,null,1,false,false,0,"picas","UCUM","Len","Nonclinical","typography unit for typesetter\'s length","[pnt]","[PNT]","12",12,false],[false,"Printer\'s point (typography)","[pnt_pr]","[PNT_PR]","length",0.00035145980000000004,[1,0,0,0,0,0,0],null,"typeset",false,null,null,1,false,false,0,"pnt pr","UCUM","Len","Nonclinical","typography unit for typesetter\'s length","[in_i]","[IN_I]","0.013837",0.013837,false],[false,"Printer\'s pica  (typography)","[pca_pr]","[PCA_PR]","length",0.004217517600000001,[1,0,0,0,0,0,0],null,"typeset",false,null,null,1,false,false,0,"pca pr; Printer\'s picas","UCUM","Len","Nonclinical","typography unit for typesetter\'s length","[pnt_pr]","[PNT_PR]","12",12,false],[false,"pied","[pied]","[PIED]","length",0.3248,[1,0,0,0,0,0,0],null,"typeset",false,null,null,1,false,false,0,"pieds du roi; Paris foot; royal; French; feet","UCUM","Len","Obsolete","","cm","CM","32.48",32.48,false],[false,"pouce","[pouce]","[POUCE]","length",0.027066666666666666,[1,0,0,0,0,0,0],null,"typeset",false,null,null,1,false,false,0,"historical French inches; French royal inches","UCUM","Len","Obsolete","","[pied]/12","[PIED]/12","1",1,false],[false,"ligne","[ligne]","[LIGNE]","length",0.0022555555555555554,[1,0,0,0,0,0,0],null,"typeset",false,null,null,1,false,false,0,"Paris lines; lignes","UCUM","Len","Obsolete","","[pouce]/12","[POUCE]/12","1",1,false],[false,"didot","[didot]","[DIDOT]","length",0.0003759259259259259,[1,0,0,0,0,0,0],null,"typeset",false,null,null,1,false,false,0,"Didot point; dd; Didots Point; didots; points","UCUM","Len","Obsolete","typography unit for typesetter\'s length","[ligne]/6","[LIGNE]/6","1",1,false],[false,"cicero","[cicero]","[CICERO]","length",0.004511111111111111,[1,0,0,0,0,0,0],null,"typeset",false,null,null,1,false,false,0,"Didot\'s pica; ciceros; picas","UCUM","Len","Obsolete","typography unit for typesetter\'s length","[didot]","[DIDOT]","12",12,false],[false,"degrees Fahrenheit","[degF]","[DEGF]","temperature",0.5555555555555556,[0,0,0,0,1,0,0],"°F","heat",false,null,"degF",1,true,false,0,"°F; deg F","UCUM","Temp","Clinical","","K",null,null,0.5555555555555556,false],[false,"degrees Rankine","[degR]","[degR]","temperature",0.5555555555555556,[0,0,0,0,1,0,0],"°R","heat",false,null,null,1,false,false,0,"°R; °Ra; Rankine","UCUM","Temp","Obsolete","Replaced by Kelvin","K/9","K/9","5",5,false],[false,"degrees Réaumur","[degRe]","[degRe]","temperature",1.25,[0,0,0,0,1,0,0],"°Ré","heat",false,null,"degRe",1,true,false,0,"°Ré, °Re, °r; Réaumur; degree Reaumur; Reaumur","UCUM","Temp","Obsolete","replaced by Celsius","K",null,null,1.25,false],[false,"calorie at 15°C","cal_[15]","CAL_[15]","energy",4185.8,[2,-2,1,0,0,0,0],"cal<sub>15°C</sub>","heat",true,null,null,1,false,false,0,"calorie 15 C; cals 15 C; calories at 15 C","UCUM","Enrg","Nonclinical","equal to 4.1855 joules; calorie most often used in engineering","J","J","4.18580",4.1858,false],[false,"calorie at 20°C","cal_[20]","CAL_[20]","energy",4181.9,[2,-2,1,0,0,0,0],"cal<sub>20°C</sub>","heat",true,null,null,1,false,false,0,"calorie 20 C; cal 20 C; calories at 20 C","UCUM","Enrg","Clinical","equal to 4.18190  joules. ","J","J","4.18190",4.1819,false],[false,"mean calorie","cal_m","CAL_M","energy",4190.0199999999995,[2,-2,1,0,0,0,0],"cal<sub>m</sub>","heat",true,null,null,1,false,false,0,"mean cals; mean calories","UCUM","Enrg","Clinical","equal to 4.19002 joules. ","J","J","4.19002",4.19002,false],[false,"international table calorie","cal_IT","CAL_IT","energy",4186.8,[2,-2,1,0,0,0,0],"cal<sub>IT</sub>","heat",true,null,null,1,false,false,0,"calories IT; IT cals; international steam table calories","UCUM","Enrg","Nonclinical","used in engineering steam tables and defined as 1/860 international watt-hour; equal to 4.1868 joules","J","J","4.1868",4.1868,false],[false,"thermochemical calorie","cal_th","CAL_TH","energy",4184,[2,-2,1,0,0,0,0],"cal<sub>th</sub>","heat",true,null,null,1,false,false,0,"thermochemical calories; th cals","UCUM","Enrg","Clinical","equal to 4.184 joules; used as the unit in medicine and biochemistry (equal to cal)","J","J","4.184",4.184,false],[false,"calorie","cal","CAL","energy",4184,[2,-2,1,0,0,0,0],"cal","heat",true,null,null,1,false,false,0,"gram calories; small calories","UCUM","Enrg","Clinical","equal to 4.184 joules (the same value as the thermochemical calorie, which is the most common calorie used in medicine and biochemistry)","cal_th","CAL_TH","1",1,false],[false,"nutrition label Calories","[Cal]","[CAL]","energy",4184000,[2,-2,1,0,0,0,0],"Cal","heat",false,null,null,1,false,false,0,"food calories; Cal; kcal","UCUM","Eng","Clinical","","kcal_th","KCAL_TH","1",1,false],[false,"British thermal unit at 39°F","[Btu_39]","[BTU_39]","energy",1059670,[2,-2,1,0,0,0,0],"Btu<sub>39°F</sub>","heat",false,null,null,1,false,false,0,"BTU 39F; BTU 39 F; B.T.U. 39 F; B.Th.U. 39 F; BThU 39 F; British thermal units","UCUM","Eng","Nonclinical","equal to 1.05967 kJ; used as a measure of power in the electric power, steam generation, heating, and air conditioning industries","kJ","kJ","1.05967",1.05967,false],[false,"British thermal unit at 59°F","[Btu_59]","[BTU_59]","energy",1054800,[2,-2,1,0,0,0,0],"Btu<sub>59°F</sub>","heat",false,null,null,1,false,false,0,"BTU 59 F; BTU 59F; B.T.U. 59 F; B.Th.U. 59 F; BThU 59F; British thermal units","UCUM","Eng","Nonclinical","equal to  1.05480 kJ; used as a measure of power in the electric power, steam generation, heating, and air conditioning industries","kJ","kJ","1.05480",1.0548,false],[false,"British thermal unit at 60°F","[Btu_60]","[BTU_60]","energy",1054680,[2,-2,1,0,0,0,0],"Btu<sub>60°F</sub>","heat",false,null,null,1,false,false,0,"BTU 60 F; BTU 60F; B.T.U. 60 F; B.Th.U. 60 F; BThU 60 F; British thermal units 60 F","UCUM","Eng","Nonclinical","equal to 1.05468 kJ; used as a measure of power in the electric power, steam generation, heating, and air conditioning industries","kJ","kJ","1.05468",1.05468,false],[false,"mean British thermal unit","[Btu_m]","[BTU_M]","energy",1055870,[2,-2,1,0,0,0,0],"Btu<sub>m</sub>","heat",false,null,null,1,false,false,0,"BTU mean; B.T.U. mean; B.Th.U. mean; BThU mean; British thermal units mean; ","UCUM","Eng","Nonclinical","equal to 1.05587 kJ; used as a measure of power in the electric power, steam generation, heating, and air conditioning industries","kJ","kJ","1.05587",1.05587,false],[false,"international table British thermal unit","[Btu_IT]","[BTU_IT]","energy",1055055.85262,[2,-2,1,0,0,0,0],"Btu<sub>IT</sub>","heat",false,null,null,1,false,false,0,"BTU IT; B.T.U. IT; B.Th.U. IT; BThU IT; British thermal units IT","UCUM","Eng","Nonclinical","equal to 1.055 kJ; used as a measure of power in the electric power, steam generation, heating, and air conditioning industries","kJ","kJ","1.05505585262",1.05505585262,false],[false,"thermochemical British thermal unit","[Btu_th]","[BTU_TH]","energy",1054350,[2,-2,1,0,0,0,0],"Btu<sub>th</sub>","heat",false,null,null,1,false,false,0,"BTU Th; B.T.U. Th; B.Th.U. Th; BThU Th; thermochemical British thermal units","UCUM","Eng","Nonclinical","equal to 1.054350 kJ; used as a measure of power in the electric power, steam generation, heating, and air conditioning industries","kJ","kJ","1.054350",1.05435,false],[false,"British thermal unit","[Btu]","[BTU]","energy",1054350,[2,-2,1,0,0,0,0],"btu","heat",false,null,null,1,false,false,0,"BTU; B.T.U. ; B.Th.U.; BThU; British thermal units","UCUM","Eng","Nonclinical","equal to the thermochemical British thermal unit equal to 1.054350 kJ; used as a measure of power in the electric power, steam generation, heating, and air conditioning industries","[Btu_th]","[BTU_TH]","1",1,false],[false,"horsepower - mechanical","[HP]","[HP]","power",745699.8715822703,[2,-3,1,0,0,0,0],null,"heat",false,null,null,1,false,false,0,"imperial horsepowers","UCUM","EngRat","Nonclinical","refers to mechanical horsepower, which is unit used to measure engine power primarily in the US. ","[ft_i].[lbf_av]/s","[FT_I].[LBF_AV]/S","550",550,false],[false,"tex","tex","TEX","linear mass density (of textile thread)",0.001,[-1,0,1,0,0,0,0],"tex","heat",true,null,null,1,false,false,0,"linear mass density; texes","UCUM","","Clinical","unit of linear mass density for fibers equal to gram per 1000 meters","g/km","G/KM","1",1,false],[false,"Denier (linear mass density)","[den]","[DEN]","linear mass density (of textile thread)",0.0001111111111111111,[-1,0,1,0,0,0,0],"den","heat",false,null,null,1,false,false,0,"den; deniers","UCUM","","Nonclinical","equal to the mass in grams per 9000 meters of the fiber (1 denier = 1 strand of silk)","g/9/km","G/9/KM","1",1,false],[false,"meter of water column","m[H2O]","M[H2O]","pressure",9806650,[-1,-2,1,0,0,0,0],"m HO<sub><r>2</r></sub>","clinical",true,null,null,1,false,false,0,"mH2O; m H2O; meters of water column; metres; pressure","UCUM","Pres","Clinical","","kPa","KPAL","980665e-5",9.80665,false],[false,"meter of mercury column","m[Hg]","M[HG]","pressure",133322000,[-1,-2,1,0,0,0,0],"m Hg","clinical",true,null,null,1,false,false,0,"mHg; m Hg; meters of mercury column; metres; pressure","UCUM","Pres","Clinical","","kPa","KPAL","133.3220",133.322,false],[false,"inch of water column","[in_i\'H2O]","[IN_I\'H2O]","pressure",249088.91000000003,[-1,-2,1,0,0,0,0],"in HO<sub><r>2</r></sub>","clinical",false,null,null,1,false,false,0,"inches WC; inAq; in H2O; inch of water gauge; iwg; pressure","UCUM","Pres","Clinical","unit of pressure, especially in respiratory and ventilation care","m[H2O].[in_i]/m","M[H2O].[IN_I]/M","1",1,false],[false,"inch of mercury column","[in_i\'Hg]","[IN_I\'HG]","pressure",3386378.8000000003,[-1,-2,1,0,0,0,0],"in Hg","clinical",false,null,null,1,false,false,0,"inHg; in Hg; pressure; inches","UCUM","Pres","Clinical","unit of pressure used in US to measure barometric pressure and occasionally blood pressure (see mm[Hg] for unit used internationally)","m[Hg].[in_i]/m","M[HG].[IN_I]/M","1",1,false],[false,"peripheral vascular resistance unit","[PRU]","[PRU]","fluid resistance",133322000000,[-4,-1,1,0,0,0,0],"P.R.U.","clinical",false,null,null,1,false,false,0,"peripheral vascular resistance units; peripheral resistance unit; peripheral resistance units; PRU","UCUM","FldResist","Clinical","used to assess blood flow in the capillaries; equal to 1 mmH.min/mL = 133.3 Pa·min/mL","mm[Hg].s/ml","MM[HG].S/ML","1",1,false],[false,"Wood unit","[wood\'U]","[WOOD\'U]","fluid resistance",7999320000,[-4,-1,1,0,0,0,0],"Wood U.","clinical",false,null,null,1,false,false,0,"hybrid reference units; HRU; mmHg.min/L; vascular resistance","UCUM","Pres","Clinical","simplified unit of measurement for for measuring pulmonary vascular resistance that uses pressure; equal to mmHg.min/L","mm[Hg].min/L","MM[HG].MIN/L","1",1,false],[false,"diopter (lens)","[diop]","[DIOP]","refraction of a lens",1,[1,0,0,0,0,0,0],"dpt","clinical",false,null,"inv",1,false,false,0,"diopters; diop; dioptre; dpt; refractive power","UCUM","InvLen","Clinical","unit of optical power of lens represented by inverse meters (m^-1)","m","/M","1",1,false],[false,"prism diopter (magnifying power)","[p\'diop]","[P\'DIOP]","refraction of a prism",1,[0,0,0,1,0,0,0],"PD","clinical",false,null,"tanTimes100",1,true,false,0,"diopters; dioptres; p diops; pdiop; dpt; pdptr; Δ; cm/m; centimeter per meter; centimetre; metre","UCUM","Angle","Clinical","unit for prism correction in eyeglass prescriptions","rad",null,null,1,false],[false,"percent of slope","%[slope]","%[SLOPE]","slope",0.017453292519943295,[0,0,0,1,0,0,0],"%","clinical",false,null,"100tan",1,true,false,0,"% slope; %slope; percents slopes","UCUM","VelFr; ElpotRatFr; VelRtoFr; AccelFr","Clinical","","deg",null,null,1,false],[false,"mesh","[mesh_i]","[MESH_I]","lineic number",0.025400000000000002,[1,0,0,0,0,0,0],null,"clinical",false,null,"inv",1,false,false,0,"meshes","UCUM","NLen (lineic number)","Clinical","traditional unit of length defined as the number of strands or particles per inch","[in_i]","/[IN_I]","1",1,false],[false,"French (catheter gauge) ","[Ch]","[CH]","gauge of catheters",0.0003333333333333333,[1,0,0,0,0,0,0],"Ch","clinical",false,null,null,1,false,false,0,"Charrières, French scales; French gauges; Fr, Fg, Ga, FR, Ch","UCUM","Len; Circ; Diam","Clinical","","mm/3","MM/3","1",1,false],[false,"drop - metric (1/20 mL)","[drp]","[DRP]","volume",5e-8,[3,0,0,0,0,0,0],"drp","clinical",false,null,null,1,false,false,0,"drop dosing units; metric drops; gtt","UCUM","Vol","Clinical","standard unit used in the US and internationally for clinical medicine but note that although [drp] is defined as 1/20 milliliter, in practice, drop sizes will vary due to external factors","ml/20","ML/20","1",1,false],[false,"Hounsfield unit","[hnsf\'U]","[HNSF\'U]","x-ray attenuation",1,[0,0,0,0,0,0,0],"HF","clinical",false,null,null,1,false,false,0,"HU; units","UCUM","","Clinical","used to measure X-ray attenuation, especially in CT scans.","1","1","1",1,false],[false,"Metabolic Equivalent of Task ","[MET]","[MET]","metabolic cost of physical activity",5.833333333333334e-11,[3,-1,-1,0,0,0,0],"MET","clinical",false,null,null,1,false,false,0,"metabolic equivalents","UCUM","RelEngRat","Clinical","unit used to measure rate of energy expenditure per power in treadmill and other functional tests","mL/min/kg","ML/MIN/KG","3.5",3.5,false],[false,"homeopathic potency of decimal series (retired)","[hp\'_X]","[HP\'_X]","homeopathic potency (retired)",1,[0,0,0,0,0,0,0],"X","clinical",false,null,"hpX",1,true,false,0,null,"UCUM",null,null,null,"1",null,null,1,false],[false,"homeopathic potency of centesimal series (retired)","[hp\'_C]","[HP\'_C]","homeopathic potency (retired)",1,[0,0,0,0,0,0,0],"C","clinical",false,null,"hpC",1,true,false,0,null,"UCUM",null,null,null,"1",null,null,1,false],[false,"homeopathic potency of millesimal series (retired)","[hp\'_M]","[HP\'_M]","homeopathic potency (retired)",1,[0,0,0,0,0,0,0],"M","clinical",false,null,"hpM",1,true,false,0,null,"UCUM",null,null,null,"1",null,null,1,false],[false,"homeopathic potency of quintamillesimal series (retired)","[hp\'_Q]","[HP\'_Q]","homeopathic potency (retired)",1,[0,0,0,0,0,0,0],"Q","clinical",false,null,"hpQ",1,true,false,0,null,"UCUM",null,null,null,"1",null,null,1,false],[false,"homeopathic potency of decimal hahnemannian series","[hp_X]","[HP_X]","homeopathic potency (Hahnemann)",1,[0,0,0,0,0,0,0],"X","clinical",false,null,null,1,false,true,0,null,"UCUM",null,null,null,"1","1","1",1,false],[false,"homeopathic potency of centesimal hahnemannian series","[hp_C]","[HP_C]","homeopathic potency (Hahnemann)",1,[0,0,0,0,0,0,0],"C","clinical",false,null,null,1,false,true,0,null,"UCUM",null,null,null,"1","1","1",1,false],[false,"homeopathic potency of millesimal hahnemannian series","[hp_M]","[HP_M]","homeopathic potency (Hahnemann)",1,[0,0,0,0,0,0,0],"M","clinical",false,null,null,1,false,true,0,null,"UCUM",null,null,null,"1","1","1",1,false],[false,"homeopathic potency of quintamillesimal hahnemannian series","[hp_Q]","[HP_Q]","homeopathic potency (Hahnemann)",1,[0,0,0,0,0,0,0],"Q","clinical",false,null,null,1,false,true,0,null,"UCUM",null,null,null,"1","1","1",1,false],[false,"homeopathic potency of decimal korsakovian series","[kp_X]","[KP_X]","homeopathic potency (Korsakov)",1,[0,0,0,0,0,0,0],"X","clinical",false,null,null,1,false,true,0,null,"UCUM",null,null,null,"1","1","1",1,false],[false,"homeopathic potency of centesimal korsakovian series","[kp_C]","[KP_C]","homeopathic potency (Korsakov)",1,[0,0,0,0,0,0,0],"C","clinical",false,null,null,1,false,true,0,null,"UCUM",null,null,null,"1","1","1",1,false],[false,"homeopathic potency of millesimal korsakovian series","[kp_M]","[KP_M]","homeopathic potency (Korsakov)",1,[0,0,0,0,0,0,0],"M","clinical",false,null,null,1,false,true,0,null,"UCUM",null,null,null,"1","1","1",1,false],[false,"homeopathic potency of quintamillesimal korsakovian series","[kp_Q]","[KP_Q]","homeopathic potency (Korsakov)",1,[0,0,0,0,0,0,0],"Q","clinical",false,null,null,1,false,true,0,null,"UCUM",null,null,null,"1","1","1",1,false],[false,"equivalent","eq","EQ","amount of substance",6.0221367e+23,[0,0,0,0,0,0,0],"eq","chemical",true,null,null,1,false,false,1,"equivalents","UCUM","Sub","Clinical","equivalence equals moles per valence","mol","MOL","1",1,false],[false,"osmole","osm","OSM","amount of substance (dissolved particles)",6.0221367e+23,[0,0,0,0,0,0,0],"osm","chemical",true,null,null,1,false,false,1,"osmoles; osmols","UCUM","Osmol","Clinical","the number of moles of solute that contribute to the osmotic pressure of a solution","mol","MOL","1",1,false],[false,"pH","[pH]","[PH]","acidity",6.0221366999999994e+26,[-3,0,0,0,0,0,0],"pH","chemical",false,null,"pH",1,true,false,0,"pH scale","UCUM","LogCnc","Clinical","Log concentration of H+","mol/l",null,null,1,false],[false,"gram percent","g%","G%","mass concentration",10000,[-3,0,1,0,0,0,0],"g%","chemical",true,null,null,1,false,false,0,"gram %; gram%; grams per deciliter; g/dL; gm per dL; gram percents","UCUM","MCnc","Clinical","equivalent to unit gram per deciliter (g/dL), a unit often used in medical tests to represent solution concentrations","g/dl","G/DL","1",1,false],[false,"Svedberg unit","[S]","[S]","sedimentation coefficient",1e-13,[0,1,0,0,0,0,0],"S","chemical",false,null,null,1,false,false,0,"Sv; 10^-13 seconds; 100 fs; 100 femtoseconds","UCUM","Time","Clinical","unit of time used in measuring particle\'s sedimentation rate, usually after centrifugation. ","s","10*-13.S","1",1e-13,false],[false,"high power field (microscope)","[HPF]","[HPF]","view area in microscope",1,[0,0,0,0,0,0,0],"HPF","chemical",false,null,null,1,false,false,0,"HPF","UCUM","Area","Clinical","area visible under the maximum magnification power of the objective in microscopy (usually 400x)\\n","1","1","1",1,false],[false,"low power field (microscope)","[LPF]","[LPF]","view area in microscope",1,[0,0,0,0,0,0,0],"LPF","chemical",false,null,null,1,false,false,0,"LPF; fields","UCUM","Area","Clinical","area visible under the low magnification of the objective in microscopy (usually 100 x)\\n","1","1","100",100,false],[false,"katal","kat","KAT","catalytic activity",6.0221367e+23,[0,-1,0,0,0,0,0],"kat","chemical",true,null,null,1,false,false,1,"mol/secs; moles per second; mol*sec-1; mol*s-1; mol.s-1; katals; catalytic activity; enzymatic; enzyme units; activities","UCUM","CAct","Clinical","kat is a unit of catalytic activity with base units = mol/s. Rarely used because its units are too large to practically express catalytic activity. See enzyme unit [U] which is the standard unit for catalytic activity.","mol/s","MOL/S","1",1,false],[false,"enzyme unit","U","U","catalytic activity",10036894500000000,[0,-1,0,0,0,0,0],"U","chemical",true,null,null,1,false,false,1,"micromoles per minute; umol/min; umol per minute; umol min-1; enzymatic activity; enzyme activity","UCUM","CAct","Clinical","1 U is the standard enzyme unit which equals 1 micromole substrate catalyzed per minute (1 umol/min)","umol/min","UMOL/MIN","1",1,false],[false,"international unit - arbitrary","[iU]","[IU]","arbitrary",1,[0,0,0,0,0,0,0],"IU","chemical",true,null,null,1,false,true,0,"international units; IE; F2","UCUM","Arb","Clinical","International units (IU) are analyte and reference specimen  specific arbitrary units (held at WHO)","1","1","1",1,false],[false,"international unit - arbitrary","[IU]","[IU]","arbitrary",1,[0,0,0,0,0,0,0],"i.U.","chemical",true,null,null,1,false,true,0,"international units; IE; F2","UCUM","Arb","Clinical","International units (IU) are analyte and reference specimen  specific arbitrary units (held at WHO)","[iU]","[IU]","1",1,false],[false,"arbitary unit","[arb\'U]","[ARB\'U]","arbitrary",1,[0,0,0,0,0,0,0],"arb. U","chemical",false,null,null,1,false,true,0,"arbitary units; arb units; arbU","UCUM","Arb","Clinical","relative unit of measurement to show the ratio of test measurement to reference measurement","1","1","1",1,false],[false,"United States Pharmacopeia unit","[USP\'U]","[USP\'U]","arbitrary",1,[0,0,0,0,0,0,0],"U.S.P.","chemical",false,null,null,1,false,true,0,"USP U; USP\'U","UCUM","Arb","Clinical","a dose unit to express potency of drugs and vitamins defined by the United States Pharmacopoeia; usually 1 USP = 1 IU","1","1","1",1,false],[false,"GPL unit","[GPL\'U]","[GPL\'U]","biologic activity of anticardiolipin IgG",1,[0,0,0,0,0,0,0],null,"chemical",false,null,null,1,false,true,0,"GPL Units; GPL U; IgG anticardiolipin units; IgG Phospholipid","UCUM","ACnc; AMass","Clinical","Units for an antiphospholipid test","1","1","1",1,false],[false,"MPL unit","[MPL\'U]","[MPL\'U]","biologic activity of anticardiolipin IgM",1,[0,0,0,0,0,0,0],null,"chemical",false,null,null,1,false,true,0,"MPL units; MPL U; MPL\'U; IgM anticardiolipin units; IgM Phospholipid Units ","UCUM","ACnc","Clinical","units for antiphospholipid test","1","1","1",1,false],[false,"APL unit","[APL\'U]","[APL\'U]","biologic activity of anticardiolipin IgA",1,[0,0,0,0,0,0,0],null,"chemical",false,null,null,1,false,true,0,"APL units; APL U; IgA anticardiolipin; IgA Phospholipid; biologic activity of","UCUM","AMass; ACnc","Clinical","Units for an anti phospholipid syndrome test","1","1","1",1,false],[false,"Bethesda unit","[beth\'U]","[BETH\'U]","biologic activity of factor VIII inhibitor",1,[0,0,0,0,0,0,0],null,"chemical",false,null,null,1,false,true,0,"BU","UCUM","ACnc","Clinical","measures of blood coagulation inhibitior for many blood factors","1","1","1",1,false],[false,"anti factor Xa unit","[anti\'Xa\'U]","[ANTI\'XA\'U]","biologic activity of factor Xa inhibitor (heparin)",1,[0,0,0,0,0,0,0],null,"chemical",false,null,null,1,false,true,0,"units","UCUM","ACnc","Clinical","[anti\'Xa\'U] unit is equivalent to and can be converted to IU/mL. ","1","1","1",1,false],[false,"Todd unit","[todd\'U]","[TODD\'U]","biologic activity antistreptolysin O",1,[0,0,0,0,0,0,0],null,"chemical",false,null,null,1,false,true,0,"units","UCUM","InvThres; RtoThres","Clinical","the unit for the results of the testing for antistreptolysin O (ASO)","1","1","1",1,false],[false,"Dye unit","[dye\'U]","[DYE\'U]","biologic activity of amylase",1,[0,0,0,0,0,0,0],null,"chemical",false,null,null,1,false,true,0,"units","UCUM","CCnc","Obsolete","equivalent to the Somogyi unit, which is an enzyme unit for amylase but better to use U, the standard enzyme unit for measuring catalytic activity","1","1","1",1,false],[false,"Somogyi unit","[smgy\'U]","[SMGY\'U]","biologic activity of amylase",1,[0,0,0,0,0,0,0],null,"chemical",false,null,null,1,false,true,0,"Somogyi units; smgy U","UCUM","CAct","Clinical","measures the enzymatic activity of amylase in blood serum - better to use base units mg/mL ","1","1","1",1,false],[false,"Bodansky unit","[bdsk\'U]","[BDSK\'U]","biologic activity of phosphatase",1,[0,0,0,0,0,0,0],null,"chemical",false,null,null,1,false,true,0,"","UCUM","ACnc","Obsolete","Enzyme unit specific to alkaline phosphatase - better to use standard enzyme unit of U","1","1","1",1,false],[false,"King-Armstrong unit","[ka\'U]","[KA\'U]","biologic activity of phosphatase",1,[0,0,0,0,0,0,0],null,"chemical",false,null,null,1,false,true,0,"King-Armstrong Units; King units","UCUM","AMass","Obsolete","enzyme units for acid phosphatase - better to use enzyme unit [U]","1","1","1",1,false],[false,"Kunkel unit","[knk\'U]","[KNK\'U]","arbitrary biologic activity",1,[0,0,0,0,0,0,0],null,"chemical",false,null,null,1,false,true,0,null,"UCUM",null,null,null,"1","1","1",1,false],[false,"Mac Lagan unit","[mclg\'U]","[MCLG\'U]","arbitrary biologic activity",1,[0,0,0,0,0,0,0],null,"chemical",false,null,null,1,false,true,0,"galactose index; galactose tolerance test; thymol turbidity test unit; mclg U; units; indexes","UCUM","ACnc","Obsolete","unit for liver tests - previously used in thymol turbidity tests for liver disease diagnoses, and now is sometimes referred to in the oral galactose tolerance test","1","1","1",1,false],[false,"tuberculin unit","[tb\'U]","[TB\'U]","biologic activity of tuberculin",1,[0,0,0,0,0,0,0],null,"chemical",false,null,null,1,false,true,0,"TU; units","UCUM","Arb","Clinical","amount of tuberculin antigen -usually in reference to a TB skin test ","1","1","1",1,false],[false,"50% cell culture infectious dose","[CCID_50]","[CCID_50]","biologic activity (infectivity) of an infectious agent preparation",1,[0,0,0,0,0,0,0],"CCID<sub>50</sub>","chemical",false,null,null,1,false,true,0,"CCID50; 50% cell culture infective doses","UCUM","NumThres","Clinical","","1","1","1",1,false],[false,"50% tissue culture infectious dose","[TCID_50]","[TCID_50]","biologic activity (infectivity) of an infectious agent preparation",1,[0,0,0,0,0,0,0],"TCID<sub>50</sub>","chemical",false,null,null,1,false,true,0,"TCID50; 50% tissue culture infective dose","UCUM","NumThres","Clinical","","1","1","1",1,false],[false,"50% embryo infectious dose","[EID_50]","[EID_50]","biologic activity (infectivity) of an infectious agent preparation",1,[0,0,0,0,0,0,0],"EID<sub>50</sub>","chemical",false,null,null,1,false,true,0,"EID50; 50% embryo infective doses; EID50 Egg Infective Dosage","UCUM","thresNum","Clinical","","1","1","1",1,false],[false,"plaque forming units","[PFU]","[PFU]","amount of an infectious agent",1,[0,0,0,0,0,0,0],"PFU","chemical",false,null,null,1,false,true,0,"PFU","UCUM","ACnc","Clinical","tests usually report unit as number of PFU per unit volume","1","1","1",1,false],[false,"focus forming units (cells)","[FFU]","[FFU]","amount of an infectious agent",1,[0,0,0,0,0,0,0],"FFU","chemical",false,null,null,1,false,true,0,"FFU","UCUM","EntNum","Clinical","","1","1","1",1,false],[false,"colony forming units","[CFU]","[CFU]","amount of a proliferating organism",1,[0,0,0,0,0,0,0],"CFU","chemical",false,null,null,1,false,true,0,"CFU","UCUM","Num","Clinical","","1","1","1",1,false],[false,"index of reactivity (allergen)","[IR]","[IR]","amount of an allergen callibrated through in-vivo testing using the Stallergenes® method.",1,[0,0,0,0,0,0,0],"IR","chemical",false,null,null,1,false,true,0,"IR; indexes","UCUM","Acnc","Clinical","amount of an allergen callibrated through in-vivo testing using the Stallergenes method. Usually reported in tests as IR/mL","1","1","1",1,false],[false,"bioequivalent allergen unit","[BAU]","[BAU]","amount of an allergen callibrated through in-vivo testing based on the ID50EAL method of (intradermal dilution for 50mm sum of erythema diameters",1,[0,0,0,0,0,0,0],"BAU","chemical",false,null,null,1,false,true,0,"BAU; Bioequivalent Allergy Units; bioequivalent allergen units","UCUM","Arb","Clinical","","1","1","1",1,false],[false,"allergy unit","[AU]","[AU]","procedure defined amount of an allergen using some reference standard",1,[0,0,0,0,0,0,0],"AU","chemical",false,null,null,1,false,true,0,"allergy units; allergen units; AU","UCUM","Arb","Clinical","Most standard test allergy units are reported as [IU] or as %. ","1","1","1",1,false],[false,"allergen unit for Ambrosia artemisiifolia","[Amb\'a\'1\'U]","[AMB\'A\'1\'U]","procedure defined amount of the major allergen of ragweed.",1,[0,0,0,0,0,0,0],"Amb a 1 U","chemical",false,null,null,1,false,true,0,"Amb a 1 unit; Antigen E; AgE U; allergen units","UCUM","Arb","Clinical","Amb a 1 is the major allergen in short ragweed, and can be converted Bioequivalent allergen units (BAU) where 350 Amb a 1 U/mL = 100,000 BAU/mL","1","1","1",1,false],[false,"protein nitrogen unit (allergen testing)","[PNU]","[PNU]","procedure defined amount of a protein substance",1,[0,0,0,0,0,0,0],"PNU","chemical",false,null,null,1,false,true,0,"protein nitrogen units; PNU","UCUM","Mass","Clinical","defined as 0.01 ug of phosphotungstic acid-precipitable protein nitrogen. Being replaced by bioequivalent allergy units (BAU).","1","1","1",1,false],[false,"Limit of flocculation","[Lf]","[LF]","procedure defined amount of an antigen substance",1,[0,0,0,0,0,0,0],"Lf","chemical",false,null,null,1,false,true,0,"Lf doses","UCUM","Arb","Clinical","the antigen content  forming 1:1 ratio against 1 unit of antitoxin","1","1","1",1,false],[false,"D-antigen unit (polio)","[D\'ag\'U]","[D\'AG\'U]","procedure defined amount of a poliomyelitis d-antigen substance",1,[0,0,0,0,0,0,0],null,"chemical",false,null,null,1,false,true,0,"DAgU; units","UCUM","Acnc","Clinical","unit of potency of poliovirus vaccine used for poliomyelitis prevention reported as D antigen units/mL. The unit is poliovirus type-specific.","1","1","1",1,false],[false,"fibrinogen equivalent units","[FEU]","[FEU]","amount of fibrinogen broken down into the measured d-dimers",1,[0,0,0,0,0,0,0],null,"chemical",false,null,null,1,false,true,0,"FEU","UCUM","MCnc","Clinical","Note both the FEU and DDU units are used to report D-dimer measurements. 1 DDU = 1/2 FFU","1","1","1",1,false],[false,"ELISA unit","[ELU]","[ELU]","arbitrary ELISA unit",1,[0,0,0,0,0,0,0],null,"chemical",false,null,null,1,false,true,0,"Enzyme-Linked Immunosorbent Assay Units; ELU; EL. U","UCUM","ACnc","Clinical","","1","1","1",1,false],[false,"Ehrlich units (urobilinogen)","[EU]","[EU]","Ehrlich unit",1,[0,0,0,0,0,0,0],null,"chemical",false,null,null,1,false,true,0,"EU/dL; mg{urobilinogen}/dL","UCUM","ACnc","Clinical","","1","1","1",1,false],[false,"neper","Np","NEP","level",1,[0,0,0,0,0,0,0],"Np","levels",true,null,"ln",1,true,false,0,"nepers","UCUM","LogRto","Clinical","logarithmic unit for ratios of measurements of physical field and power quantities, such as gain and loss of electronic signals","1",null,null,1,false],[false,"bel","B","B","level",1,[0,0,0,0,0,0,0],"B","levels",true,null,"lg",1,true,false,0,"bels","UCUM","LogRto","Clinical","Logarithm of the ratio of power- or field-type quantities; usually expressed in decibels ","1",null,null,1,false],[false,"bel sound pressure","B[SPL]","B[SPL]","pressure level",0.019999999999999997,[-1,-2,1,0,0,0,0],"B(SPL)","levels",true,null,"lgTimes2",1,true,false,0,"bel SPL; B SPL; sound pressure bels","UCUM","LogRto","Clinical","used to measure sound level in acoustics","Pa",null,null,0.000019999999999999998,false],[false,"bel volt","B[V]","B[V]","electric potential level",1000,[2,-2,1,0,0,-1,0],"B(V)","levels",true,null,"lgTimes2",1,true,false,0,"bel V; B V; volts bels","UCUM","LogRtoElp","Clinical","used to express power gain in electrical circuits","V",null,null,1,false],[false,"bel millivolt","B[mV]","B[MV]","electric potential level",1,[2,-2,1,0,0,-1,0],"B(mV)","levels",true,null,"lgTimes2",1,true,false,0,"bel mV; B mV; millivolt bels; 10^-3V bels; 10*-3V ","UCUM","LogRtoElp","Clinical","used to express power gain in electrical circuits","mV",null,null,1,false],[false,"bel microvolt","B[uV]","B[UV]","electric potential level",0.001,[2,-2,1,0,0,-1,0],"B(μV)","levels",true,null,"lgTimes2",1,true,false,0,"bel uV; B uV; microvolts bels; 10^-6V bel; 10*-6V bel","UCUM","LogRto","Clinical","used to express power gain in electrical circuits","uV",null,null,1,false],[false,"bel 10 nanovolt","B[10.nV]","B[10.NV]","electric potential level",0.000010000000000000003,[2,-2,1,0,0,-1,0],"B(10 nV)","levels",true,null,"lgTimes2",1,true,false,0,"bel 10 nV; B 10 nV; 10 nanovolts bels","UCUM","LogRtoElp","Clinical","used to express power gain in electrical circuits","nV",null,null,10,false],[false,"bel watt","B[W]","B[W]","power level",1000,[2,-3,1,0,0,0,0],"B(W)","levels",true,null,"lg",1,true,false,0,"bel W; b W; b Watt; Watts bels","UCUM","LogRto","Clinical","used to express power","W",null,null,1,false],[false,"bel kilowatt","B[kW]","B[KW]","power level",1000000,[2,-3,1,0,0,0,0],"B(kW)","levels",true,null,"lg",1,true,false,0,"bel kW; B kW; kilowatt bel; kW bel; kW B","UCUM","LogRto","Clinical","used to express power","kW",null,null,1,false],[false,"stere","st","STR","volume",1,[3,0,0,0,0,0,0],"st","misc",true,null,null,1,false,false,0,"stère; m3; cubic meter; m^3; meters cubed; metre","UCUM","Vol","Nonclinical","equal to one cubic meter, usually used for measuring firewood","m3","M3","1",1,false],[false,"Ångström","Ao","AO","length",1.0000000000000002e-10,[1,0,0,0,0,0,0],"Å","misc",false,null,null,1,false,false,0,"Å; Angstroms; Ao; Ångströms","UCUM","Len","Clinical","equal to 10^-10 meters; used to express wave lengths and atom scaled differences ","nm","NM","0.1",0.1,false],[false,"barn","b","BRN","action area",1.0000000000000001e-28,[2,0,0,0,0,0,0],"b","misc",false,null,null,1,false,false,0,"barns","UCUM","Area","Clinical","used in high-energy physics to express cross-sectional areas","fm2","FM2","100",100,false],[false,"technical atmosphere","att","ATT","pressure",98066500,[-1,-2,1,0,0,0,0],"at","misc",false,null,null,1,false,false,0,"at; tech atm; tech atmosphere; kgf/cm2; atms; atmospheres","UCUM","Pres","Obsolete","non-SI unit of pressure equal to one kilogram-force per square centimeter","kgf/cm2","KGF/CM2","1",1,false],[false,"mho","mho","MHO","electric conductance",0.001,[-2,1,-1,0,0,2,0],"mho","misc",true,null,null,1,false,false,0,"siemens; ohm reciprocals; Ω^−1; Ω-1 ","UCUM","","Obsolete","unit of electric conductance (the inverse of electrical resistance) equal to ohm^-1","S","S","1",1,false],[false,"pound per square inch","[psi]","[PSI]","pressure",6894757.293168359,[-1,-2,1,0,0,0,0],"psi","misc",false,null,null,1,false,false,0,"psi; lb/in2; lb per in2","UCUM","Pres","Clinical","","[lbf_av]/[in_i]2","[LBF_AV]/[IN_I]2","1",1,false],[false,"circle - plane angle","circ","CIRC","plane angle",6.283185307179586,[0,0,0,1,0,0,0],"circ","misc",false,null,null,1,false,false,0,"angles; circles","UCUM","Angle","Clinical","","[pi].rad","[PI].RAD","2",2,false],[false,"spere - solid angle","sph","SPH","solid angle",12.566370614359172,[0,0,0,2,0,0,0],"sph","misc",false,null,null,1,false,false,0,"speres","UCUM","Angle","Clinical","equal to the solid angle of an entire sphere = 4πsr (sr = steradian) ","[pi].sr","[PI].SR","4",4,false],[false,"metric carat","[car_m]","[CAR_M]","mass",0.2,[0,0,1,0,0,0,0],"ct<sub>m</sub>","misc",false,null,null,1,false,false,0,"carats; ct; car m","UCUM","Mass","Nonclinical","unit of mass for gemstones","g","G","2e-1",0.2,false],[false,"carat of gold alloys","[car_Au]","[CAR_AU]","mass fraction",0.041666666666666664,[0,0,0,0,0,0,0],"ct<sub><r>Au</r></sub>","misc",false,null,null,1,false,false,0,"karats; k; kt; car au; carats","UCUM","MFr","Nonclinical","unit of purity for gold alloys","/24","/24","1",1,false],[false,"Smoot","[smoot]","[SMOOT]","length",1.7018000000000002,[1,0,0,0,0,0,0],null,"misc",false,null,null,1,false,false,0,"","UCUM","Len","Nonclinical","prank unit of length from MIT","[in_i]","[IN_I]","67",67,false],[false,"meter per square seconds per square root of hertz","[m/s2/Hz^(1/2)]","[M/S2/HZ^(1/2)]","amplitude spectral density",1,[2,-3,0,0,0,0,0],null,"misc",false,null,"sqrt",1,true,false,0,"m/s2/(Hz^.5); m/s2/(Hz^(1/2)); m per s2 per Hz^1/2","UCUM","","Constant","measures amplitude spectral density, and is equal to the square root of power spectral density\\n ","m2/s4/Hz",null,null,1,false],[false,"bit - logarithmic","bit_s","BIT_S","amount of information",1,[0,0,0,0,0,0,0],"bit<sub>s</sub>","infotech",false,null,"ld",1,true,false,0,"bit-s; bit s; bit logarithmic","UCUM","LogA","Nonclinical","defined as the log base 2 of the number of distinct signals; cannot practically be used to express more than 1000 bits\\n\\nIn information theory, the definition of the amount of self-information and information entropy is often expressed with the binary logarithm (log base 2)","1",null,null,1,false],[false,"bit","bit","BIT","amount of information",1,[0,0,0,0,0,0,0],"bit","infotech",true,null,null,1,false,false,0,"bits","UCUM","","Nonclinical","dimensionless information unit of 1 used in computing and digital communications","1","1","1",1,false],[false,"byte","By","BY","amount of information",8,[0,0,0,0,0,0,0],"B","infotech",true,null,null,1,false,false,0,"bytes","UCUM","","Nonclinical","equal to 8 bits","bit","bit","8",8,false],[false,"baud","Bd","BD","signal transmission rate",1,[0,1,0,0,0,0,0],"Bd","infotech",true,null,"inv",1,false,false,0,"Bd; bauds","UCUM","Freq","Nonclinical","unit to express rate in symbols per second or pulses per second. ","s","/s","1",1,false],[false,"per twelve hour","/(12.h)","1/(12.HR)","",0.000023148148148148147,[0,-1,0,0,0,0,0],"/h",null,false,null,null,1,false,false,0,"per 12 hours; 12hrs; 12 hrs; /12hrs","LOINC","Rat","Clinical","",null,null,null,null,false],[false,"per arbitrary unit","/[arb\'U]","1/[ARB\'U]","",1,[0,0,0,0,0,0,0],"/arb/ U",null,false,null,null,1,false,true,0,"/arbU","LOINC","InvA ","Clinical","",null,null,null,null,false],[false,"per high power field","/[HPF]","1/[HPF]","",1,[0,0,0,0,0,0,0],"/HPF",null,false,null,null,1,false,false,0,"/HPF; per HPF","LOINC","Naric","Clinical","",null,null,null,null,false],[false,"per international unit","/[IU]","1/[IU]","",1,[0,0,0,0,0,0,0],"/i/U.",null,false,null,null,1,false,true,0,"international units; /IU; per IU","LOINC","InvA","Clinical","International units (IU) are analyte and reference specimen  specific arbitrary units (held at WHO)",null,null,null,null,false],[false,"per low power field","/[LPF]","1/[LPF]","",1,[0,0,0,0,0,0,0],"/LPF",null,false,null,null,1,false,false,0,"/LPF; per LPF","LOINC","Naric","Clinical","",null,null,null,null,false],[false,"per 10 billion  ","/10*10","1/(10*10)","",1e-10,[0,0,0,0,0,0,0],"/10<sup>10</sup>",null,false,null,null,1,false,false,0,"/10^10; per 10*10","LOINC","NFr","Clinical","used for counting entities, e.g. blood cells; usually these kinds of terms have numerators such as moles or milligrams, and counting that amount per the number in the denominator",null,null,null,null,false],[false,"per trillion ","/10*12","1/(10*12)","",1e-12,[0,0,0,0,0,0,0],"/10<sup>12</sup>",null,false,null,null,1,false,false,0,"/10^12; per 10*12","LOINC","NFr","Clinical","used for counting entities, e.g. blood cells; usually these kinds of terms have numerators such as moles or milligrams, and counting that amount per the number in the denominator",null,null,null,null,false],[false,"per thousand","/10*3","1/(10*3)","",0.001,[0,0,0,0,0,0,0],"/10<sup>3</sup>",null,false,null,null,1,false,false,0,"/10^3; per 10*3","LOINC","NFr","Clinical","used for counting entities, e.g. blood cells; usually these kinds of terms have numerators such as moles or milligrams, and counting that amount per the number in the denominator",null,null,null,null,false],[false,"per million","/10*6","1/(10*6)","",0.000001,[0,0,0,0,0,0,0],"/10<sup>6</sup>",null,false,null,null,1,false,false,0,"/10^6; per 10*6;","LOINC","NFr","Clinical","used for counting entities, e.g. blood cells; usually these kinds of terms have numerators such as moles or milligrams, and counting that amount per the number in the denominator",null,null,null,null,false],[false,"per billion","/10*9","1/(10*9)","",1e-9,[0,0,0,0,0,0,0],"/10<sup>9</sup>",null,false,null,null,1,false,false,0,"/10^9; per 10*9","LOINC","NFr","Clinical","used for counting entities, e.g. blood cells; usually these kinds of terms have numerators such as moles or milligrams, and counting that amount per the number in the denominator",null,null,null,null,false],[false,"per 100","/100","1/100","",0.01,[0,0,0,0,0,0,0],null,null,false,null,null,1,false,false,0,"per hundred; 10^2; 10*2","LOINC","NFr","Clinical","used for counting entities, e.g. blood cells; usually these kinds of terms have numerators such as moles or milligrams, and counting that amount per the number in the denominator",null,null,null,null,false],[false,"per 100 cells","/100{cells}","1/100","",0.01,[0,0,0,0,0,0,0],null,null,false,null,null,1,false,false,0,"/100 cells; /100cells; per hundred","LOINC","EntMass; EntNum; NFr","Clinical","",null,null,null,null,false],[false,"per 100 neutrophils","/100{neutrophils}","1/100","",0.01,[0,0,0,0,0,0,0],null,null,false,null,null,1,false,false,0,"/100 neutrophils; /100neutrophils; per hundred","LOINC","EntMass; EntNum; NFr","Clinical","",null,null,null,null,false],[false,"per 100 spermatozoa","/100{spermatozoa}","1/100","",0.01,[0,0,0,0,0,0,0],null,null,false,null,null,1,false,false,0,"/100 spermatozoa; /100spermatozoa; per hundred","LOINC","NFr","Clinical","",null,null,null,null,false],[false,"per 100 white blood cells","/100{WBCs}","1/100","",0.01,[0,0,0,0,0,0,0],null,null,false,null,null,1,false,false,0,"/100 WBCs; /100WBCs; per hundred","LOINC","Ratio; NFr","Clinical","",null,null,null,null,false],[false,"per year","/a","1/ANN","",3.168808781402895e-8,[0,-1,0,0,0,0,0],"/a",null,false,null,null,1,false,false,0,"/Years; /yrs; yearly","LOINC","NRat","Clinical","",null,null,null,null,false],[false,"per centimeter of water","/cm[H2O]","1/CM[H2O]","",0.000010197162129779282,[1,2,-1,0,0,0,0],"/cm HO<sub><r>2</r></sub>",null,false,null,null,1,false,false,0,"/cmH2O; /cm H2O; centimeters; centimetres","LOINC","InvPress","Clinical","",null,null,null,null,false],[false,"per day","/d","1/D","",0.000011574074074074073,[0,-1,0,0,0,0,0],"/d",null,false,null,null,1,false,false,0,"/dy; per day","LOINC","NRat","Clinical","",null,null,null,null,false],[false,"per deciliter","/dL","1/DL","",10000,[-3,0,0,0,0,0,0],"/dL",null,false,null,null,1,false,false,0,"per dL; /deciliter; decilitre","LOINC","NCnc","Clinical","",null,null,null,null,false],[false,"per gram","/g","1/G","",1,[0,0,-1,0,0,0,0],"/g",null,false,null,null,1,false,false,0,"/gm; /gram; per g","LOINC","NCnt","Clinical","",null,null,null,null,false],[false,"per hour","/h","1/HR","",0.0002777777777777778,[0,-1,0,0,0,0,0],"/h",null,false,null,null,1,false,false,0,"/hr; /hour; per hr","LOINC","NRat","Clinical","",null,null,null,null,false],[false,"per kilogram","/kg","1/KG","",0.001,[0,0,-1,0,0,0,0],"/kg",null,false,null,null,1,false,false,0,"per kg; per kilogram","LOINC","NCnt","Clinical","",null,null,null,null,false],[false,"per liter","/L","1/L","",1000,[-3,0,0,0,0,0,0],"/L",null,false,null,null,1,false,false,0,"/liter; litre","LOINC","NCnc","Clinical","",null,null,null,null,false],[false,"per square meter","/m2","1/M2","",1,[-2,0,0,0,0,0,0],"/m<sup>2</sup>",null,false,null,null,1,false,false,0,"/m^2; /m*2; /sq. m; per square meter; meter squared; metre","LOINC","Naric","Clinical","",null,null,null,null,false],[false,"per cubic meter","/m3","1/M3","",1,[-3,0,0,0,0,0,0],"/m<sup>3</sup>",null,false,null,null,1,false,false,0,"/m^3; /m*3; /cu. m; per cubic meter; meter cubed; per m3; metre","LOINC","NCncn","Clinical","",null,null,null,null,false],[false,"per milligram","/mg","1/MG","",1000,[0,0,-1,0,0,0,0],"/mg",null,false,null,null,1,false,false,0,"/milligram; per mg","LOINC","NCnt","Clinical","",null,null,null,null,false],[false,"per minute","/min","1/MIN","",0.016666666666666666,[0,-1,0,0,0,0,0],"/min",null,false,null,null,1,false,false,0,"/minute; per mins; breaths beats per minute","LOINC","NRat","Clinical","",null,null,null,null,false],[false,"per milliliter","/mL","1/ML","",1000000,[-3,0,0,0,0,0,0],"/mL",null,false,null,null,1,false,false,0,"/milliliter; per mL; millilitre","LOINC","NCncn","Clinical","",null,null,null,null,false],[false,"per millimeter","/mm","1/MM","",1000,[-1,0,0,0,0,0,0],"/mm",null,false,null,null,1,false,false,0,"/millimeter; per mm; millimetre","LOINC","InvLen","Clinical","",null,null,null,null,false],[false,"per month","/mo","1/MO","",3.802570537683474e-7,[0,-1,0,0,0,0,0],"/mo",null,false,null,null,1,false,false,0,"/month; per mo; monthly; month","LOINC","NRat","Clinical","",null,null,null,null,false],[false,"per second","/s","1/S","",1,[0,-1,0,0,0,0,0],"/s",null,false,null,null,1,false,false,0,"/second; /sec; per sec; frequency; Hertz; Herz; Hz; becquerels; Bq; s-1; s^-1","LOINC","NRat","Clinical","",null,null,null,null,false],[false,"per enzyme unit","/U","1/U","",9.963241120049633e-17,[0,1,0,0,0,0,0],"/U",null,false,null,null,1,false,false,-1,"/enzyme units; per U","LOINC","InvC; NCat","Clinical","1 U is the standard enzyme unit which equals 1 micromole substrate catalyzed per minute (1 umol/min)",null,null,null,null,false],[false,"per microliter","/uL","1/UL","",999999999.9999999,[-3,0,0,0,0,0,0],"/μL",null,false,null,null,1,false,false,0,"/microliter; microlitre; /mcl; per uL","LOINC","ACnc","Clinical","",null,null,null,null,false],[false,"per week","/wk","1/WK","",0.0000016534391534391535,[0,-1,0,0,0,0,0],"/wk",null,false,null,null,1,false,false,0,"/week; per wk; weekly, weeks","LOINC","NRat","Clinical","",null,null,null,null,false],[false,"APL unit per milliliter","[APL\'U]/mL","[APL\'U]/ML","biologic activity of anticardiolipin IgA",1000000,[-3,0,0,0,0,0,0],"/mL","chemical",false,null,null,1,false,true,0,"APL/mL; APL\'U/mL; APL U/mL; APL/milliliter; IgA anticardiolipin units per milliliter; IgA Phospholipid Units; millilitre; biologic activity of","LOINC","ACnc","Clinical","Units for an anti phospholipid syndrome test","1","1","1",1,false],[false,"arbitrary unit per milliliter","[arb\'U]/mL","[ARB\'U]/ML","arbitrary",1000000,[-3,0,0,0,0,0,0],"(arb. U)/mL","chemical",false,null,null,1,false,true,0,"arb\'U/mL; arbU/mL; arb U/mL; arbitrary units per milliliter; millilitre","LOINC","ACnc","Clinical","relative unit of measurement to show the ratio of test measurement to reference measurement","1","1","1",1,false],[false,"colony forming units per liter","[CFU]/L","[CFU]/L","amount of a proliferating organism",1000,[-3,0,0,0,0,0,0],"CFU/L","chemical",false,null,null,1,false,true,0,"CFU per Liter; CFU/L","LOINC","NCnc","Clinical","","1","1","1",1,false],[false,"colony forming units per milliliter","[CFU]/mL","[CFU]/ML","amount of a proliferating organism",1000000,[-3,0,0,0,0,0,0],"CFU/mL","chemical",false,null,null,1,false,true,0,"CFU per mL; CFU/mL","LOINC","NCnc","Clinical","","1","1","1",1,false],[false,"foot per foot - US","[ft_us]/[ft_us]","[FT_US]/[FT_US]","length",1,[0,0,0,0,0,0,0],"(ft<sub>us</sub>)/(ft<sub>us</sub>)","us-lengths",false,null,null,1,false,false,0,"ft/ft; ft per ft; feet per feet; visual acuity","","LenRto","Clinical","distance ratio to measure 20:20 vision","m/3937","M/3937","1200",1200,false],[false,"GPL unit per milliliter","[GPL\'U]/mL","[GPL\'U]/ML","biologic activity of anticardiolipin IgG",1000000,[-3,0,0,0,0,0,0],"/mL","chemical",false,null,null,1,false,true,0,"GPL U/mL; GPL\'U/mL; GPL/mL; GPL U per mL; IgG Phospholipid Units per milliliters; IgG anticardiolipin units; millilitres ","LOINC","ACnc; AMass","Clinical","Units for an antiphospholipid test","1","1","1",1,false],[false,"international unit per 2 hour","[IU]/(2.h)","[IU]/(2.HR)","arbitrary",0.0001388888888888889,[0,-1,0,0,0,0,0],"(i.U.)/h","chemical",true,null,null,1,false,true,0,"IU/2hrs; IU/2 hours; IU per 2 hrs; international units per 2 hours","LOINC","ARat","Clinical","International units (IU) are analyte and reference specimen  specific arbitrary units (held at WHO)","[iU]","[IU]","1",1,false],[false,"international unit per 24 hour","[IU]/(24.h)","[IU]/(24.HR)","arbitrary",0.000011574074074074073,[0,-1,0,0,0,0,0],"(i.U.)/h","chemical",true,null,null,1,false,true,0,"IU/24hr; IU/24 hours; IU per 24 hrs; international units per 24 hours","LOINC","ARat","Clinical","International units (IU) are analyte and reference specimen  specific arbitrary units (held at WHO)","[iU]","[IU]","1",1,false],[false,"international unit per day","[IU]/d","[IU]/D","arbitrary",0.000011574074074074073,[0,-1,0,0,0,0,0],"(i.U.)/d","chemical",true,null,null,1,false,true,0,"IU/dy; IU/days; IU per dys; international units per day","LOINC","ARat","Clinical","International units (IU) are analyte and reference specimen  specific arbitrary units (held at WHO)","[iU]","[IU]","1",1,false],[false,"international unit per deciliter","[IU]/dL","[IU]/DL","arbitrary",10000,[-3,0,0,0,0,0,0],"(i.U.)/dL","chemical",true,null,null,1,false,true,0,"IU/dL; IU per dL; international units per deciliters; decilitres","LOINC","ACnc","Clinical","International units (IU) are analyte and reference specimen  specific arbitrary units (held at WHO)","[iU]","[IU]","1",1,false],[false,"international unit per gram","[IU]/g","[IU]/G","arbitrary",1,[0,0,-1,0,0,0,0],"(i.U.)/g","chemical",true,null,null,1,false,true,0,"IU/gm; IU/gram; IU per gm; IU per g; international units per gram","LOINC","ACnt","Clinical","International units (IU) are analyte and reference specimen  specific arbitrary units (held at WHO)","[iU]","[IU]","1",1,false],[false,"international unit per hour","[IU]/h","[IU]/HR","arbitrary",0.0002777777777777778,[0,-1,0,0,0,0,0],"(i.U.)/h","chemical",true,null,null,1,false,true,0,"IU/hrs; IU per hours; international units per hour","LOINC","ARat","Clinical","International units (IU) are analyte and reference specimen  specific arbitrary units (held at WHO)","[iU]","[IU]","1",1,false],[false,"international unit per kilogram","[IU]/kg","[IU]/KG","arbitrary",0.001,[0,0,-1,0,0,0,0],"(i.U.)/kg","chemical",true,null,null,1,false,true,0,"IU/kg; IU/kilogram; IU per kg; units","LOINC","ACnt","Clinical","International units (IU) are analyte and reference specimen  specific arbitrary units (held at WHO)","[iU]","[IU]","1",1,false],[false,"international unit per kilogram per day","[IU]/kg/d","([IU]/KG)/D","arbitrary",1.1574074074074074e-8,[0,-1,-1,0,0,0,0],"((i.U.)/kg)/d","chemical",true,null,null,1,false,true,0,"IU/kg/dy; IU/kg/day; IU/kilogram/day; IU per kg per day; units","LOINC","ACntRat","Clinical","International units (IU) are analyte and reference specimen  specific arbitrary units (held at WHO)","[iU]","[IU]","1",1,false],[false,"international unit per liter","[IU]/L","[IU]/L","arbitrary",1000,[-3,0,0,0,0,0,0],"(i.U.)/L","chemical",true,null,null,1,false,true,0,"IU/L; IU/liter; IU per liter; units; litre","LOINC","ACnc","Clinical","International units (IU) are analyte and reference specimen  specific arbitrary units (held at WHO)","[iU]","[IU]","1",1,false],[false,"international unit per minute","[IU]/min","[IU]/MIN","arbitrary",0.016666666666666666,[0,-1,0,0,0,0,0],"(i.U.)/min","chemical",true,null,null,1,false,true,0,"IU/min; IU/minute; IU per minute; international units","LOINC","ARat","Clinical","International units (IU) are analyte and reference specimen  specific arbitrary units (held at WHO)","[iU]","[IU]","1",1,false],[false,"international unit per milliliter","[IU]/mL","[IU]/ML","arbitrary",1000000,[-3,0,0,0,0,0,0],"(i.U.)/mL","chemical",true,null,null,1,false,true,0,"IU/mL; IU per mL; international units per milliliter; millilitre","LOINC","ACnc","Clinical","International units (IU) are analyte and reference specimen  specific arbitrary units (held at WHO)","[iU]","[IU]","1",1,false],[false,"MPL unit per milliliter","[MPL\'U]/mL","[MPL\'U]/ML","biologic activity of anticardiolipin IgM",1000000,[-3,0,0,0,0,0,0],"/mL","chemical",false,null,null,1,false,true,0,"MPL/mL; MPL U/mL; MPL\'U/mL; IgM anticardiolipin units; IgM Phospholipid Units; millilitre ","LOINC","ACnc","Clinical","units for antiphospholipid test\\n","1","1","1",1,false],[false,"number per high power field","{#}/[HPF]","{#}/[HPF]","",1,[0,0,0,0,0,0,0],"/HPF",null,false,null,null,1,false,false,0,"#/HPF; # per HPF; number/HPF; numbers per high power field","LOINC","Naric","Clinical","",null,null,null,null,false],[false,"number per low power field","{#}/[LPF]","{#}/[LPF]","",1,[0,0,0,0,0,0,0],"/LPF",null,false,null,null,1,false,false,0,"#/LPF; # per LPF; number/LPF; numbers per low power field","LOINC","Naric","Clinical","",null,null,null,null,false],[false,"IgA antiphosphatidylserine unit ","{APS\'U}","{APS\'U}","",1,[0,0,0,0,0,0,0],null,null,false,null,null,1,false,false,0,"APS Unit; Phosphatidylserine Antibody IgA Units","LOINC","ACnc","Clinical","unit for antiphospholipid test",null,null,null,null,false],[false,"EIA index","{EIA_index}","{EIA_index}","",1,[0,0,0,0,0,0,0],null,null,false,null,null,1,false,false,0,"enzyme immunoassay index","LOINC","ACnc","Clinical","",null,null,null,null,false],[false,"kaolin clotting time","{KCT\'U}","{KCT\'U}","",1,[0,0,0,0,0,0,0],null,null,false,null,null,1,false,false,0,"KCT","LOINC","Time","Clinical","sensitive test to detect lupus anticoagulants; measured in seconds",null,null,null,null,false],[false,"IgM antiphosphatidylserine unit","{MPS\'U}","{MPS\'U}","",1,[0,0,0,0,0,0,0],null,null,false,null,null,1,false,false,0,"Phosphatidylserine Antibody IgM Measurement ","LOINC","ACnc","Clinical","",null,null,null,null,false],[false,"trillion per liter","10*12/L","(10*12)/L","number",1000000000000000,[-3,0,0,0,0,0,0],"(10<sup>12</sup>)/L","dimless",false,null,null,1,false,false,0,"10^12/L; 10*12 per Liter; trillion per liter; litre","LOINC","NCncn","Clinical","","1","1","10",10,false],[false,"10^3 (used for cell count)","10*3","10*3","number",1000,[0,0,0,0,0,0,0],"10<sup>3</sup>","dimless",false,null,null,1,false,false,0,"10^3; thousand","LOINC","Num","Clinical","usually used for counting entities (e.g. blood cells) per volume","1","1","10",10,false],[false,"thousand per liter","10*3/L","(10*3)/L","number",1000000,[-3,0,0,0,0,0,0],"(10<sup>3</sup>)/L","dimless",false,null,null,1,false,false,0,"10^3/L; 10*3 per liter; litre","LOINC","NCncn","Clinical","","1","1","10",10,false],[false,"thousand per milliliter","10*3/mL","(10*3)/ML","number",1000000000,[-3,0,0,0,0,0,0],"(10<sup>3</sup>)/mL","dimless",false,null,null,1,false,false,0,"10^3/mL; 10*3 per mL; thousand per milliliter; millilitre","LOINC","NCncn","Clinical","","1","1","10",10,false],[false,"thousand per microliter","10*3/uL","(10*3)/UL","number",999999999999.9999,[-3,0,0,0,0,0,0],"(10<sup>3</sup>)/μL","dimless",false,null,null,1,false,false,0,"10^3/uL; 10*3 per uL; thousand per microliter; microlitre","LOINC","NCncn","Clinical","","1","1","10",10,false],[false,"10 thousand per microliter","10*4/uL","(10*4)/UL","number",10000000000000,[-3,0,0,0,0,0,0],"(10<sup>4</sup>)/μL","dimless",false,null,null,1,false,false,0,"10^4/uL; 10*4 per uL; microlitre","LOINC","NCncn","Clinical","","1","1","10",10,false],[false,"10^5 ","10*5","10*5","number",100000,[0,0,0,0,0,0,0],"10<sup>5</sup>","dimless",false,null,null,1,false,false,0,"one hundred thousand","LOINC","Num","Clinical","","1","1","10",10,false],[false,"10^6","10*6","10*6","number",1000000,[0,0,0,0,0,0,0],"10<sup>6</sup>","dimless",false,null,null,1,false,false,0,"","LOINC","Num","Clinical","","1","1","10",10,false],[false,"million colony forming unit per liter","10*6.[CFU]/L","((10*6).[CFU])/L","number",1000000000,[-3,0,0,0,0,0,0],"((10<sup>6</sup>).CFU)/L","dimless",false,null,null,1,false,true,0,"10*6 CFU/L; 10^6 CFU/L; 10^6CFU; 10^6 CFU per liter; million colony forming units; litre","LOINC","ACnc","Clinical","","1","1","10",10,false],[false,"million international unit","10*6.[IU]","(10*6).[IU]","number",1000000,[0,0,0,0,0,0,0],"(10<sup>6</sup>).(i.U.)","dimless",false,null,null,1,false,true,0,"10*6 IU; 10^6 IU; international units","LOINC","arb","Clinical","International units (IU) are analyte and reference specimen  specific arbitrary units (held at WHO)","1","1","10",10,false],[false,"million per 24 hour","10*6/(24.h)","(10*6)/(24.HR)","number",11.574074074074074,[0,-1,0,0,0,0,0],"(10<sup>6</sup>)/h","dimless",false,null,null,1,false,false,0,"10*6/24hrs; 10^6/24 hrs; 10*6 per 24 hrs; 10^6 per 24 hours","LOINC","NRat","Clinical","","1","1","10",10,false],[false,"million per kilogram","10*6/kg","(10*6)/KG","number",1000,[0,0,-1,0,0,0,0],"(10<sup>6</sup>)/kg","dimless",false,null,null,1,false,false,0,"10^6/kg; 10*6 per kg; 10*6 per kilogram; millions","LOINC","NCnt","Clinical","","1","1","10",10,false],[false,"million per liter","10*6/L","(10*6)/L","number",1000000000,[-3,0,0,0,0,0,0],"(10<sup>6</sup>)/L","dimless",false,null,null,1,false,false,0,"10^6/L; 10*6 per Liter; 10^6 per Liter; litre","LOINC","NCncn","Clinical","","1","1","10",10,false],[false,"million per milliliter","10*6/mL","(10*6)/ML","number",1000000000000,[-3,0,0,0,0,0,0],"(10<sup>6</sup>)/mL","dimless",false,null,null,1,false,false,0,"10^6/mL; 10*6 per mL; 10*6 per milliliter; millilitre","LOINC","NCncn","Clinical","","1","1","10",10,false],[false,"million per microliter","10*6/uL","(10*6)/UL","number",1000000000000000,[-3,0,0,0,0,0,0],"(10<sup>6</sup>)/μL","dimless",false,null,null,1,false,false,0,"10^6/uL; 10^6 per uL; 10^6/mcl; 10^6 per mcl; 10^6 per microliter; microlitre","LOINC","NCncn","Clinical","","1","1","10",10,false],[false,"10^8","10*8","10*8","number",100000000,[0,0,0,0,0,0,0],"10<sup>8</sup>","dimless",false,null,null,1,false,false,0,"100 million; one hundred million; 10^8","LOINC","Num","Clinical","","1","1","10",10,false],[false,"billion per liter","10*9/L","(10*9)/L","number",1000000000000,[-3,0,0,0,0,0,0],"(10<sup>9</sup>)/L","dimless",false,null,null,1,false,false,0,"10^9/L; 10*9 per Liter; litre","LOINC","NCncn","Clinical","","1","1","10",10,false],[false,"billion per milliliter","10*9/mL","(10*9)/ML","number",1000000000000000,[-3,0,0,0,0,0,0],"(10<sup>9</sup>)/mL","dimless",false,null,null,1,false,false,0,"10^9/mL; 10*9 per mL; 10^9 per mL; 10*9 per milliliter; millilitre","LOINC","NCncn","Clinical","","1","1","10",10,false],[false,"billion per microliter","10*9/uL","(10*9)/UL","number",1000000000000000000,[-3,0,0,0,0,0,0],"(10<sup>9</sup>)/μL","dimless",false,null,null,1,false,false,0,"10^9/uL; 10^9 per uL; 10^9/mcl; 10^9 per mcl; 10*9 per uL; 10*9 per mcl; 10*9/mcl; 10^9 per microliter; microlitre","LOINC","NCncn","Clinical","","1","1","10",10,false],[false,"10 liter per minute per square meter","10.L/(min.m2)","(10.L)/(MIN.M2)","",0.00016666666666666666,[1,-1,0,0,0,0,0],"L/(min.(m<sup>2</sup>))",null,false,null,null,1,false,false,0,"10 liters per minutes per square meter; 10 L per min per m2; m^2; 10 L/(min*m2); 10L/(min*m^2); litres; sq. meter; metre; meters squared","LOINC","ArVRat","Clinical","",null,null,null,null,false],[false,"10 liter per minute","10.L/min","(10.L)/MIN","",0.00016666666666666666,[3,-1,0,0,0,0,0],"L/min",null,false,null,null,1,false,false,0,"10 liters per minute; 10 L per min; 10L; 10 L/min; litre","LOINC","VRat","Clinical","",null,null,null,null,false],[false,"10 micronewton second per centimeter to the fifth power per square meter","10.uN.s/(cm5.m2)","((10.UN).S)/(CM5.M2)","",100000000,[-6,-1,1,0,0,0,0],"(μN.s)/(cm<sup>5</sup>).(m<sup>2</sup>)",null,false,null,null,1,false,false,0,"dyne seconds per centimeter5 and square meter; dyn.s/(cm5.m2); dyn.s/cm5/m2; cm^5; m^2","LOINC","","Clinical","unit to measure systemic vascular resistance per body surface area",null,null,null,null,false],[false,"24 hour","24.h","24.HR","",86400,[0,1,0,0,0,0,0],"h",null,false,null,null,1,false,false,0,"24hrs; 24 hrs; 24 hours; days; dy","LOINC","Time","Clinical","",null,null,null,null,false],[false,"ampere per meter","A/m","A/M","electric current",1,[-1,-1,0,0,0,1,0],"A/m","si",true,null,null,1,false,false,0,"A/m; amp/meter; magnetic field strength; H; B; amperes per meter; metre","LOINC","","Clinical","unit of magnetic field strength","C/s","C/S","1",1,false],[false,"centigram","cg","CG","mass",0.01,[0,0,1,0,0,0,0],"cg",null,false,"M",null,1,false,false,0,"centigrams; cg; cgm","LOINC","Mass","Clinical","",null,null,null,null,false],[false,"centiliter","cL","CL","volume",0.00001,[3,0,0,0,0,0,0],"cL","iso1000",true,null,null,1,false,false,0,"centiliters; centilitres","LOINC","Vol","Clinical","","l",null,"1",1,false],[false,"centimeter","cm","CM","length",0.01,[1,0,0,0,0,0,0],"cm",null,false,"L",null,1,false,false,0,"centimeters; centimetres","LOINC","Len","Clinical","",null,null,null,null,false],[false,"centimeter of water","cm[H2O]","CM[H2O]","pressure",98066.5,[-1,-2,1,0,0,0,0],"cm HO<sub><r>2</r></sub>","clinical",true,null,null,1,false,false,0,"cm H2O; cmH2O; centimetres; pressure","LOINC","Pres","Clinical","unit of pressure mostly applies to blood pressure","kPa","KPAL","980665e-5",9.80665,false],[false,"centimeter of water per liter per second","cm[H2O]/L/s","(CM[H2O]/L)/S","pressure",98066500,[-4,-3,1,0,0,0,0],"((cm HO<sub><r>2</r></sub>)/L)/s","clinical",true,null,null,1,false,false,0,"cm[H2O]/(L/s); cm[H2O].s/L; cm H2O/L/sec; cmH2O/L/sec; cmH2O/Liter; cmH2O per L per secs; centimeters of water per liters per second; centimetres; litres; cm[H2O]/(L/s)","LOINC","PresRat","Clinical","unit used to measure mean pulmonary resistance","kPa","KPAL","980665e-5",9.80665,false],[false,"centimeter of water per second per meter","cm[H2O]/s/m","(CM[H2O]/S)/M","pressure",98066.5,[-2,-3,1,0,0,0,0],"((cm HO<sub><r>2</r></sub>)/s)/m","clinical",true,null,null,1,false,false,0,"cm[H2O]/(s.m); cm H2O/s/m; cmH2O; cmH2O/sec/m; cmH2O per secs per meters; centimeters of water per seconds per meter; centimetres; metre","LOINC","PresRat","Clinical","unit used to measure pulmonary pressure time product","kPa","KPAL","980665e-5",9.80665,false],[false,"centimeter of mercury","cm[Hg]","CM[HG]","pressure",1333220,[-1,-2,1,0,0,0,0],"cm Hg","clinical",true,null,null,1,false,false,0,"centimeters of mercury; centimetres; cmHg; cm Hg","LOINC","Pres","Clinical","unit of pressure where 1 cmHg = 10 torr","kPa","KPAL","133.3220",133.322,false],[false,"square centimeter","cm2","CM2","length",0.0001,[2,0,0,0,0,0,0],"cm<sup>2</sup>",null,false,"L",null,1,false,false,0,"cm^2; sq cm; centimeters squared; square centimeters; centimetre; area","LOINC","Area","Clinical","",null,null,null,null,false],[false,"square centimeter per second","cm2/s","CM2/S","length",0.0001,[2,-1,0,0,0,0,0],"(cm<sup>2</sup>)/s",null,false,"L",null,1,false,false,0,"cm^2/sec; square centimeters per second; sq cm per sec; cm2; centimeters squared; centimetres","LOINC","AreaRat","Clinical","",null,null,null,null,false],[false,"centipoise","cP","CP","dynamic viscosity",1.0000000000000002,[-1,-1,1,0,0,0,0],"cP","cgs",true,null,null,1,false,false,0,"cps; centiposes","LOINC","Visc","Clinical","unit of dynamic viscosity in the CGS system with base units: 10^−3 Pa.s = 1 mPa·.s (1 millipascal second)","dyn.s/cm2","DYN.S/CM2","1",1,false],[false,"centistoke","cSt","CST","kinematic viscosity",0.000001,[2,-1,0,0,0,0,0],"cSt","cgs",true,null,null,1,false,false,0,"centistokes","LOINC","Visc","Clinical","unit for kinematic viscosity with base units of mm^2/s (square millimeter per second)","cm2/s","CM2/S","1",1,false],[false,"dekaliter per minute","daL/min","DAL/MIN","volume",0.00016666666666666666,[3,-1,0,0,0,0,0],"daL/min","iso1000",true,null,null,1,false,false,0,"dekalitres; dekaliters per minute; per min","LOINC","VRat","Clinical","","l",null,"1",1,false],[false,"dekaliter per minute per square meter","daL/min/m2","(DAL/MIN)/M2","volume",0.00016666666666666666,[1,-1,0,0,0,0,0],"(daL/min)/(m<sup>2</sup>)","iso1000",true,null,null,1,false,false,0,"daL/min/m^2; daL/minute/m2; sq. meter; dekaliters per minutes per square meter; meter squared; dekalitres; metre","LOINC","ArVRat","Clinical","The area usually is the body surface area used to normalize cardiovascular measures for patient\'s size","l",null,"1",1,false],[false,"decibel","dB","DB","level",1,[0,0,0,0,0,0,0],"dB","levels",true,null,"lg",0.1,true,false,0,"decibels","LOINC","LogRto","Clinical","unit most commonly used in acoustics as unit of sound pressure level. (also see B[SPL] or bel sound pressure level). ","1",null,null,1,false],[false,"degree per second","deg/s","DEG/S","plane angle",0.017453292519943295,[0,-1,0,1,0,0,0],"°/s","iso1000",false,null,null,1,false,false,0,"deg/sec; deg per sec; °/sec; twist rate; angular speed; rotational speed","LOINC","ARat","Clinical","unit of angular (rotational) speed used to express turning rate","[pi].rad/360","[PI].RAD/360","2",2,false],[false,"decigram","dg","DG","mass",0.1,[0,0,1,0,0,0,0],"dg",null,false,"M",null,1,false,false,0,"decigrams; dgm; 0.1 grams; 1/10 gm","LOINC","Mass","Clinical","equal to 1/10 gram",null,null,null,null,false],[false,"deciliter","dL","DL","volume",0.0001,[3,0,0,0,0,0,0],"dL","iso1000",true,null,null,1,false,false,0,"deciliters; decilitres; 0.1 liters; 1/10 L","LOINC","Vol","Clinical","equal to 1/10 liter","l",null,"1",1,false],[false,"decimeter","dm","DM","length",0.1,[1,0,0,0,0,0,0],"dm",null,false,"L",null,1,false,false,0,"decimeters; decimetres; 0.1 meters; 1/10 m; 10 cm; centimeters","LOINC","Len","Clinical","equal to 1/10 meter or 10 centimeters",null,null,null,null,false],[false,"square decimeter per square second","dm2/s2","DM2/S2","length",0.010000000000000002,[2,-2,0,0,0,0,0],"(dm<sup>2</sup>)/(s<sup>2</sup>)",null,false,"L",null,1,false,false,0,"dm2 per s2; dm^2/s^2; decimeters squared per second squared; sq dm; sq sec","LOINC","EngMass (massic energy)","Clinical","units for energy per unit mass or Joules per kilogram (J/kg = kg.m2/s2/kg = m2/s2) ",null,null,null,null,false],[false,"dyne second per centimeter per square meter","dyn.s/(cm.m2)","(DYN.S)/(CM.M2)","force",1,[-2,-1,1,0,0,0,0],"(dyn.s)/(cm.(m<sup>2</sup>))","cgs",true,null,null,1,false,false,0,"(dyn*s)/(cm*m2); (dyn*s)/(cm*m^2); dyn s per cm per m2; m^2; dyne seconds per centimeters per square meter; centimetres; sq. meter; squared","LOINC","","Clinical","","g.cm/s2","G.CM/S2","1",1,false],[false,"dyne second per centimeter","dyn.s/cm","(DYN.S)/CM","force",1,[0,-1,1,0,0,0,0],"(dyn.s)/cm","cgs",true,null,null,1,false,false,0,"(dyn*s)/cm; dyn sec per cm; seconds; centimetre; dyne seconds","LOINC","","Clinical","","g.cm/s2","G.CM/S2","1",1,false],[false,"equivalent per liter","eq/L","EQ/L","amount of substance",6.0221366999999994e+26,[-3,0,0,0,0,0,0],"eq/L","chemical",true,null,null,1,false,false,1,"eq/liter; eq/litre; eqs; equivalents per liter; litre","LOINC","SCnc","Clinical","equivalence equals moles per valence","mol","MOL","1",1,false],[false,"equivalent per milliliter","eq/mL","EQ/ML","amount of substance",6.0221367e+29,[-3,0,0,0,0,0,0],"eq/mL","chemical",true,null,null,1,false,false,1,"equivalent/milliliter; equivalents per milliliter; eq per mL; millilitre","LOINC","SCnc","Clinical","equivalence equals moles per valence","mol","MOL","1",1,false],[false,"equivalent per millimole","eq/mmol","EQ/MMOL","amount of substance",1000,[0,0,0,0,0,0,0],"eq/mmol","chemical",true,null,null,1,false,false,0,"equivalent/millimole; equivalents per millimole; eq per mmol","LOINC","SRto","Clinical","equivalence equals moles per valence","mol","MOL","1",1,false],[false,"equivalent per micromole","eq/umol","EQ/UMOL","amount of substance",1000000,[0,0,0,0,0,0,0],"eq/μmol","chemical",true,null,null,1,false,false,0,"equivalent/micromole; equivalents per micromole; eq per umol","LOINC","SRto","Clinical","equivalence equals moles per valence","mol","MOL","1",1,false],[false,"femtogram","fg","FG","mass",1e-15,[0,0,1,0,0,0,0],"fg",null,false,"M",null,1,false,false,0,"fg; fgm; femtograms; weight","LOINC","Mass","Clinical","equal to 10^-15 grams",null,null,null,null,false],[false,"femtoliter","fL","FL","volume",1e-18,[3,0,0,0,0,0,0],"fL","iso1000",true,null,null,1,false,false,0,"femtolitres; femtoliters","LOINC","Vol; EntVol","Clinical","equal to 10^-15 liters","l",null,"1",1,false],[false,"femtometer","fm","FM","length",1e-15,[1,0,0,0,0,0,0],"fm",null,false,"L",null,1,false,false,0,"femtometres; femtometers","LOINC","Len","Clinical","equal to 10^-15 meters",null,null,null,null,false],[false,"femtomole","fmol","FMOL","amount of substance",602213670,[0,0,0,0,0,0,0],"fmol","si",true,null,null,1,false,false,1,"femtomoles","LOINC","EntSub","Clinical","equal to 10^-15 moles","10*23","10*23","6.0221367",6.0221367,false],[false,"femtomole per gram","fmol/g","FMOL/G","amount of substance",602213670,[0,0,-1,0,0,0,0],"fmol/g","si",true,null,null,1,false,false,1,"femtomoles; fmol/gm; fmol per gm","LOINC","SCnt","Clinical","","10*23","10*23","6.0221367",6.0221367,false],[false,"femtomole per liter","fmol/L","FMOL/L","amount of substance",602213670000,[-3,0,0,0,0,0,0],"fmol/L","si",true,null,null,1,false,false,1,"femtomoles; fmol per liter; litre","LOINC","SCnc","Clinical","","10*23","10*23","6.0221367",6.0221367,false],[false,"femtomole per milligram","fmol/mg","FMOL/MG","amount of substance",602213670000,[0,0,-1,0,0,0,0],"fmol/mg","si",true,null,null,1,false,false,1,"fmol per mg; femtomoles","LOINC","SCnt","Clinical","","10*23","10*23","6.0221367",6.0221367,false],[false,"femtomole per milliliter","fmol/mL","FMOL/ML","amount of substance",602213670000000,[-3,0,0,0,0,0,0],"fmol/mL","si",true,null,null,1,false,false,1,"femtomoles; millilitre; fmol per mL; fmol per milliliter","LOINC","SCnc","Clinical","","10*23","10*23","6.0221367",6.0221367,false],[false,"gram meter","g.m","G.M","mass",1,[1,0,1,0,0,0,0],"g.m",null,false,"M",null,1,false,false,0,"g*m; gxm; meters; metres","LOINC","Enrg","Clinical","Unit for measuring stroke work (heart work)",null,null,null,null,false],[false,"gram per 100 gram","g/(100.g)","G/(100.G)","mass",0.01,[0,0,0,0,0,0,0],"g/g",null,false,"M",null,1,false,false,0,"g/100 gm; 100gm; grams per 100 grams; gm per 100 gm","LOINC","MCnt","Clinical","",null,null,null,null,false],[false,"gram per 12 hour","g/(12.h)","G/(12.HR)","mass",0.000023148148148148147,[0,-1,1,0,0,0,0],"g/h",null,false,"M",null,1,false,false,0,"gm/12hrs; 12 hrs; gm per 12 hrs; 12hrs; grams per 12 hours","LOINC","MRat","Clinical","",null,null,null,null,false],[false,"gram per 24 hour","g/(24.h)","G/(24.HR)","mass",0.000011574074074074073,[0,-1,1,0,0,0,0],"g/h",null,false,"M",null,1,false,false,0,"gm/24hrs; gm/24 hrs; gm per 24 hrs; 24hrs; grams per 24 hours; gm/dy; gm per dy; grams per day","LOINC","MRat","Clinical","",null,null,null,null,false],[false,"gram per 3 days","g/(3.d)","G/(3.D)","mass",0.000003858024691358025,[0,-1,1,0,0,0,0],"g/d",null,false,"M",null,1,false,false,0,"gm/3dy; gm/3 dy; gm per 3 days; grams","LOINC","MRat","Clinical","",null,null,null,null,false],[false,"gram per 4 hour","g/(4.h)","G/(4.HR)","mass",0.00006944444444444444,[0,-1,1,0,0,0,0],"g/h",null,false,"M",null,1,false,false,0,"gm/4hrs; gm/4 hrs; gm per 4 hrs; 4hrs; grams per 4 hours","LOINC","MRat","Clinical","",null,null,null,null,false],[false,"gram per 48 hour","g/(48.h)","G/(48.HR)","mass",0.000005787037037037037,[0,-1,1,0,0,0,0],"g/h",null,false,"M",null,1,false,false,0,"gm/48hrs; gm/48 hrs; gm per 48 hrs; 48hrs; grams per 48 hours","LOINC","MRat","Clinical","",null,null,null,null,false],[false,"gram per 5 hour","g/(5.h)","G/(5.HR)","mass",0.00005555555555555556,[0,-1,1,0,0,0,0],"g/h",null,false,"M",null,1,false,false,0,"gm/5hrs; gm/5 hrs; gm per 5 hrs; 5hrs; grams per 5 hours","LOINC","MRat","Clinical","",null,null,null,null,false],[false,"gram per 6 hour","g/(6.h)","G/(6.HR)","mass",0.000046296296296296294,[0,-1,1,0,0,0,0],"g/h",null,false,"M",null,1,false,false,0,"gm/6hrs; gm/6 hrs; gm per 6 hrs; 6hrs; grams per 6 hours","LOINC","MRat","Clinical","",null,null,null,null,false],[false,"gram per 72 hour","g/(72.h)","G/(72.HR)","mass",0.000003858024691358025,[0,-1,1,0,0,0,0],"g/h",null,false,"M",null,1,false,false,0,"gm/72hrs; gm/72 hrs; gm per 72 hrs; 72hrs; grams per 72 hours","LOINC","MRat","Clinical","",null,null,null,null,false],[false,"gram per cubic centimeter","g/cm3","G/CM3","mass",999999.9999999999,[-3,0,1,0,0,0,0],"g/(cm<sup>3</sup>)",null,false,"M",null,1,false,false,0,"g/cm^3; gm per cm3; g per cm^3; grams per centimeter cubed; cu. cm; centimetre; g/mL; gram per milliliter; millilitre","LOINC","MCnc","Clinical","g/cm3 = g/mL",null,null,null,null,false],[false,"gram per day","g/d","G/D","mass",0.000011574074074074073,[0,-1,1,0,0,0,0],"g/d",null,false,"M",null,1,false,false,0,"gm/dy; gm per dy; grams per day; gm/24hrs; gm/24 hrs; gm per 24 hrs; 24hrs; grams per 24 hours; serving","LOINC","MRat","Clinical","",null,null,null,null,false],[false,"gram per deciliter","g/dL","G/DL","mass",10000,[-3,0,1,0,0,0,0],"g/dL",null,false,"M",null,1,false,false,0,"gm/dL; gm per dL; grams per deciliter; decilitre","LOINC","MCnc","Clinical","",null,null,null,null,false],[false,"gram per gram","g/g","G/G","mass",1,[0,0,0,0,0,0,0],"g/g",null,false,"M",null,1,false,false,0,"gm; grams","LOINC","MRto ","Clinical","",null,null,null,null,false],[false,"gram per hour","g/h","G/HR","mass",0.0002777777777777778,[0,-1,1,0,0,0,0],"g/h",null,false,"M",null,1,false,false,0,"gm/hr; gm per hr; grams; intake; output","LOINC","MRat","Clinical","",null,null,null,null,false],[false,"gram per hour per square meter","g/h/m2","(G/HR)/M2","mass",0.0002777777777777778,[-2,-1,1,0,0,0,0],"(g/h)/(m<sup>2</sup>)",null,false,"M",null,1,false,false,0,"gm/hr/m2; gm/h/m2; /m^2; sq. m; g per hr per m2; grams per hours per square meter; meter squared; metre","LOINC","ArMRat","Clinical","",null,null,null,null,false],[false,"gram per kilogram","g/kg ","G/KG","mass",0.001,[0,0,0,0,0,0,0],"g/kg",null,false,"M",null,1,false,false,0,"g per kg; gram per kilograms","LOINC","MCnt","Clinical","",null,null,null,null,false],[false,"gram per kilogram per 8 hour ","g/kg/(8.h)","(G/KG)/(8.HR)","mass",3.472222222222222e-8,[0,-1,0,0,0,0,0],"(g/kg)/h",null,false,"M",null,1,false,false,0,"g/(8.kg.h); gm/kg/8hrs; 8 hrs; g per kg per 8 hrs; 8hrs; grams per kilograms per 8 hours; shift","LOINC","MCntRat; RelMRat","Clinical","unit often used to describe mass in grams of protein consumed in a 8 hours, divided by the subject\'s body weight in kilograms. Also used to measure mass dose rate per body mass",null,null,null,null,false],[false,"gram per kilogram per day","g/kg/d","(G/KG)/D","mass",1.1574074074074074e-8,[0,-1,0,0,0,0,0],"(g/kg)/d",null,false,"M",null,1,false,false,0,"g/(kg.d); gm/kg/dy; gm per kg per dy; grams per kilograms per day","LOINC","RelMRat","Clinical","unit often used to describe mass in grams of protein consumed in a day, divided by the subject\'s body weight in kilograms. Also used to measure mass dose rate per body mass",null,null,null,null,false],[false,"gram per kilogram per hour","g/kg/h","(G/KG)/HR","mass",2.7777777777777776e-7,[0,-1,0,0,0,0,0],"(g/kg)/h",null,false,"M",null,1,false,false,0,"g/(kg.h); g/kg/hr; g per kg per hrs; grams per kilograms per hour","LOINC","MCntRat; RelMRat","Clinical","unit used to measure mass dose rate per body mass",null,null,null,null,false],[false,"gram per kilogram per minute","g/kg/min","(G/KG)/MIN","mass",0.000016666666666666667,[0,-1,0,0,0,0,0],"(g/kg)/min",null,false,"M",null,1,false,false,0,"g/(kg.min); g/kg/min; g per kg per min; grams per kilograms per minute","LOINC","MCntRat; RelMRat","Clinical","unit used to measure mass dose rate per body mass",null,null,null,null,false],[false,"gram per liter","g/L","G/L","mass",1000,[-3,0,1,0,0,0,0],"g/L",null,false,"M",null,1,false,false,0,"gm per liter; g/liter; grams per liter; litre","LOINC","MCnc","Clinical","",null,null,null,null,false],[false,"gram per square meter","g/m2","G/M2","mass",1,[-2,0,1,0,0,0,0],"g/(m<sup>2</sup>)",null,false,"M",null,1,false,false,0,"g/m^2; gram/square meter; g/sq m; g per m2; g per m^2; grams per square meter; meters squared; metre","LOINC","ArMass","Clinical","Tests measure myocardial mass (heart ventricle system) per body surface area; unit used to measure mass dose per body surface area",null,null,null,null,false],[false,"gram per milligram","g/mg","G/MG","mass",1000,[0,0,0,0,0,0,0],"g/mg",null,false,"M",null,1,false,false,0,"g per mg; grams per milligram","LOINC","MCnt; MRto","Clinical","",null,null,null,null,false],[false,"gram per minute","g/min","G/MIN","mass",0.016666666666666666,[0,-1,1,0,0,0,0],"g/min",null,false,"M",null,1,false,false,0,"g per min; grams per minute; gram/minute","LOINC","MRat","Clinical","",null,null,null,null,false],[false,"gram per milliliter","g/mL","G/ML","mass",1000000,[-3,0,1,0,0,0,0],"g/mL",null,false,"M",null,1,false,false,0,"g per mL; grams per milliliter; millilitre","LOINC","MCnc","Clinical","",null,null,null,null,false],[false,"gram per millimole","g/mmol","G/MMOL","mass",1.6605401866749388e-21,[0,0,1,0,0,0,0],"g/mmol",null,false,"M",null,1,false,false,-1,"grams per millimole; g per mmol","LOINC","Ratio","Clinical","",null,null,null,null,false],[false,"joule per liter","J/L","J/L","energy",1000000,[-1,-2,1,0,0,0,0],"J/L","si",true,null,null,1,false,false,0,"joules per liter; litre; J per L","LOINC","EngCnc","Clinical","","N.m","N.M","1",1,false],[false,"degree Kelvin per Watt","K/W","K/W","temperature",0.001,[-2,3,-1,0,1,0,0],"K/W",null,false,"C",null,1,false,false,0,"degree Kelvin/Watt; K per W; thermal ohm; thermal resistance; degrees","LOINC","TempEngRat","Clinical","unit for absolute thermal resistance equal to the reciprocal of thermal conductance. Unit used for tests to measure work of breathing",null,null,null,null,false],[false,"kilo international unit per liter","k[IU]/L","K[IU]/L","arbitrary",1000000,[-3,0,0,0,0,0,0],"(ki.U.)/L","chemical",true,null,null,1,false,true,0,"kIU/L; kIU per L; kIU per liter; kilo international units; litre; allergens; allergy units","LOINC","ACnc","Clinical","IgE has an WHO reference standard so IgE allergen testing can be reported as k[IU]/L","[iU]","[IU]","1",1,false],[false,"kilo international unit per milliliter","k[IU]/mL","K[IU]/ML","arbitrary",1000000000,[-3,0,0,0,0,0,0],"(ki.U.)/mL","chemical",true,null,null,1,false,true,0,"kIU/mL; kIU per mL; kIU per milliliter; kilo international units; millilitre; allergens; allergy units","LOINC","ACnc","Clinical","IgE has an WHO reference standard so IgE allergen testing can be reported as k[IU]/mL","[iU]","[IU]","1",1,false],[false,"katal per kilogram","kat/kg","KAT/KG","catalytic activity",602213670000000000000,[0,-1,-1,0,0,0,0],"kat/kg","chemical",true,null,null,1,false,false,1,"kat per kg; katals per kilogram; mol/s/kg; moles per seconds per kilogram","LOINC","CCnt","Clinical","kat is a unit of catalytic activity with base units = mol/s. Rarely used because its units are too large to practically express catalytic activity. See enzyme unit [U] which is the standard unit for catalytic activity.","mol/s","MOL/S","1",1,false],[false,"katal per liter","kat/L","KAT/L","catalytic activity",6.0221366999999994e+26,[-3,-1,0,0,0,0,0],"kat/L","chemical",true,null,null,1,false,false,1,"kat per L; katals per liter; litre; mol/s/L; moles per seconds per liter","LOINC","CCnc","Clinical","kat is a unit of catalytic activity with base units = mol/s. Rarely used because its units are too large to practically express catalytic activity. See enzyme unit [U] which is the standard unit for catalytic activity.","mol/s","MOL/S","1",1,false],[false,"kilocalorie","kcal","KCAL","energy",4184000,[2,-2,1,0,0,0,0],"kcal","heat",true,null,null,1,false,false,0,"kilogram calories; large calories; food calories; kcals","LOINC","EngRat","Clinical","It is equal to 1000 calories (equal to 4.184 kJ). But in practical usage, kcal refers to food calories which excludes caloric content in fiber and other constitutes that is not digestible by humans. Also see nutrition label Calories ([Cal])","cal_th","CAL_TH","1",1,false],[false,"kilocalorie per 24 hour","kcal/(24.h)","KCAL/(24.HR)","energy",48.425925925925924,[2,-3,1,0,0,0,0],"kcal/h","heat",true,null,null,1,false,false,0,"kcal/24hrs; kcal/24 hrs; kcal per 24hrs; kilocalories per 24 hours; kilojoules; kJ/24hr; kJ/(24.h); kJ/dy; kilojoules per days; intake; calories burned; metabolic rate; food calories","","EngRat","Clinical","","cal_th","CAL_TH","1",1,false],[false,"kilocalorie per ounce","kcal/[oz_av]","KCAL/[OZ_AV]","energy",147586.25679704445,[2,-2,0,0,0,0,0],"kcal/oz","heat",true,null,null,1,false,false,0,"kcal/oz; kcal per ozs; large calories per ounces; food calories; servings; international","LOINC","EngCnt","Clinical","used in nutrition to represent calorie of food","cal_th","CAL_TH","1",1,false],[false,"kilocalorie per day","kcal/d","KCAL/D","energy",48.425925925925924,[2,-3,1,0,0,0,0],"kcal/d","heat",true,null,null,1,false,false,0,"kcal/dy; kcal per day; kilocalories per days; kilojoules; kJ/dy; kilojoules per days; intake; calories burned; metabolic rate; food calories","LOINC","EngRat","Clinical","unit in nutrition for food intake (measured in calories) in a day","cal_th","CAL_TH","1",1,false],[false,"kilocalorie per hour","kcal/h","KCAL/HR","energy",1162.2222222222222,[2,-3,1,0,0,0,0],"kcal/h","heat",true,null,null,1,false,false,0,"kcal/hrs; kcals per hr; intake; kilocalories per hours; kilojoules","LOINC","EngRat","Clinical","used in nutrition to represent caloric requirement or consumption","cal_th","CAL_TH","1",1,false],[false,"kilocalorie per kilogram per 24 hour","kcal/kg/(24.h)","(KCAL/KG)/(24.HR)","energy",0.04842592592592593,[2,-3,0,0,0,0,0],"(kcal/kg)/h","heat",true,null,null,1,false,false,0,"kcal/kg/24hrs; 24 hrs; kcal per kg per 24hrs; kilocalories per kilograms per 24 hours; kilojoules","LOINC","EngCntRat","Clinical","used in nutrition to represent caloric requirement per day based on subject\'s body weight in kilograms","cal_th","CAL_TH","1",1,false],[false,"kilogram","kg","KG","mass",1000,[0,0,1,0,0,0,0],"kg",null,false,"M",null,1,false,false,0,"kilograms; kgs","LOINC","Mass","Clinical","",null,null,null,null,false],[false,"kilogram meter per second","kg.m/s","(KG.M)/S","mass",1000,[1,-1,1,0,0,0,0],"(kg.m)/s",null,false,"M",null,1,false,false,0,"kg*m/s; kg.m per sec; kg*m per sec; p; momentum","LOINC","","Clinical","unit for momentum =  mass times velocity",null,null,null,null,false],[false,"kilogram per second per square meter","kg/(s.m2)","KG/(S.M2)","mass",1000,[-2,-1,1,0,0,0,0],"kg/(s.(m<sup>2</sup>))",null,false,"M",null,1,false,false,0,"kg/(s*m2); kg/(s*m^2); kg per s per m2; per sec; per m^2; kilograms per seconds per square meter; meter squared; metre","LOINC","ArMRat","Clinical","",null,null,null,null,false],[false,"kilogram per hour","kg/h","KG/HR","mass",0.2777777777777778,[0,-1,1,0,0,0,0],"kg/h",null,false,"M",null,1,false,false,0,"kg/hr; kg per hr; kilograms per hour","LOINC","MRat","Clinical","",null,null,null,null,false],[false,"kilogram per liter","kg/L","KG/L","mass",1000000,[-3,0,1,0,0,0,0],"kg/L",null,false,"M",null,1,false,false,0,"kg per liter; litre; kilograms","LOINC","MCnc","Clinical","",null,null,null,null,false],[false,"kilogram per square meter","kg/m2","KG/M2","mass",1000,[-2,0,1,0,0,0,0],"kg/(m<sup>2</sup>)",null,false,"M",null,1,false,false,0,"kg/m^2; kg/sq. m; kg per m2; per m^2; per sq. m; kilograms; meter squared; metre; BMI","LOINC","Ratio","Clinical","units for body mass index (BMI)",null,null,null,null,false],[false,"kilogram per cubic meter","kg/m3","KG/M3","mass",1000,[-3,0,1,0,0,0,0],"kg/(m<sup>3</sup>)",null,false,"M",null,1,false,false,0,"kg/m^3; kg/cu. m; kg per m3; per m^3; per cu. m; kilograms; meters cubed; metre","LOINC","MCnc","Clinical","",null,null,null,null,false],[false,"kilogram per minute","kg/min","KG/MIN","mass",16.666666666666668,[0,-1,1,0,0,0,0],"kg/min",null,false,"M",null,1,false,false,0,"kilogram/minute; kg per min; kilograms per minute","LOINC","MRat","Clinical","",null,null,null,null,false],[false,"kilogram per mole","kg/mol","KG/MOL","mass",1.6605401866749388e-21,[0,0,1,0,0,0,0],"kg/mol",null,false,"M",null,1,false,false,-1,"kilogram/mole; kg per mol; kilograms per mole","LOINC","SCnt","Clinical","",null,null,null,null,false],[false,"kilogram per second","kg/s","KG/S","mass",1000,[0,-1,1,0,0,0,0],"kg/s",null,false,"M",null,1,false,false,0,"kg/sec; kilogram/second; kg per sec; kilograms; second","LOINC","MRat","Clinical","",null,null,null,null,false],[false,"kiloliter","kL","KL","volume",1,[3,0,0,0,0,0,0],"kL","iso1000",true,null,null,1,false,false,0,"kiloliters; kilolitres; m3; m^3; meters cubed; metre","LOINC","Vol","Clinical","","l",null,"1",1,false],[false,"kilometer","km","KM","length",1000,[1,0,0,0,0,0,0],"km",null,false,"L",null,1,false,false,0,"kilometers; kilometres; distance","LOINC","Len","Clinical","",null,null,null,null,false],[false,"kilopascal","kPa","KPAL","pressure",1000000,[-1,-2,1,0,0,0,0],"kPa","si",true,null,null,1,false,false,0,"kilopascals; pressure","LOINC","Pres; PPresDiff","Clinical","","N/m2","N/M2","1",1,false],[false,"kilosecond","ks","KS","time",1000,[0,1,0,0,0,0,0],"ks",null,false,"T",null,1,false,false,0,"kiloseconds; ksec","LOINC","Time","Clinical","",null,null,null,null,false],[false,"kilo enzyme unit","kU","KU","catalytic activity",10036894500000000000,[0,-1,0,0,0,0,0],"kU","chemical",true,null,null,1,false,false,1,"units; mmol/min; millimoles per minute","LOINC","CAct","Clinical","1 U is the standard enzyme unit which equals 1 micromole substrate catalyzed per minute (1 umol/min); 1 kU = 1 mmol/min","umol/min","UMOL/MIN","1",1,false],[false,"kilo enzyme unit per gram","kU/g","KU/G","catalytic activity",10036894500000000000,[0,-1,-1,0,0,0,0],"kU/g","chemical",true,null,null,1,false,false,1,"units per grams; kU per gm","LOINC","CCnt","Clinical","1 U is the standard enzyme unit which equals 1 micromole substrate catalyzed per minute (1 umol/min); 1 kU = 1 mmol/min","umol/min","UMOL/MIN","1",1,false],[false,"kilo enzyme unit per liter","kU/L","KU/L","catalytic activity",1.00368945e+22,[-3,-1,0,0,0,0,0],"kU/L","chemical",true,null,null,1,false,false,1,"units per liter; litre; enzymatic activity; enzyme activity per volume; activities","LOINC","ACnc; CCnc","Clinical","1 U is the standard enzyme unit which equals 1 micromole substrate catalyzed per minute (1 umol/min); 1 kU = 1 mmol/min","umol/min","UMOL/MIN","1",1,false],[false,"kilo enzyme unit per milliliter","kU/mL","KU/ML","catalytic activity",1.00368945e+25,[-3,-1,0,0,0,0,0],"kU/mL","chemical",true,null,null,1,false,false,1,"kU per mL; units per milliliter; millilitre; enzymatic activity per volume; enzyme activities","LOINC","CCnc","Clinical","1 U is the standard enzyme unit which equals 1 micromole substrate catalyzed per minute (1 umol/min); 1 kU = 1 mmol/min","umol/min","UMOL/MIN","1",1,false],[false,"Liters per 24 hour","L/(24.h)","L/(24.HR)","volume",1.1574074074074074e-8,[3,-1,0,0,0,0,0],"L/h","iso1000",true,null,null,1,false,false,0,"L/24hrs; L/24 hrs; L per 24hrs; liters per 24 hours; day; dy; litres; volume flow rate","LOINC","VRat","Clinical","","l",null,"1",1,false],[false,"Liters per 8 hour","L/(8.h)","L/(8.HR)","volume",3.472222222222222e-8,[3,-1,0,0,0,0,0],"L/h","iso1000",true,null,null,1,false,false,0,"L/8hrs; L/8 hrs; L per 8hrs; liters per 8 hours; litres; volume flow rate; shift","LOINC","VRat","Clinical","","l",null,"1",1,false],[false,"Liters per minute per square meter","L/(min.m2) ","L/(MIN.M2)","volume",0.000016666666666666667,[1,-1,0,0,0,0,0],"L/(min.(m<sup>2</sup>))","iso1000",true,null,null,1,false,false,0,"L/(min.m2); L/min/m^2; L/min/sq. meter; L per min per m2; m^2; liters per minutes per square meter; meter squared; litres; metre ","LOINC","ArVRat","Clinical","unit for tests that measure cardiac output per body surface area (cardiac index)","l",null,"1",1,false],[false,"Liters per day","L/d","L/D","volume",1.1574074074074074e-8,[3,-1,0,0,0,0,0],"L/d","iso1000",true,null,null,1,false,false,0,"L/dy; L per day; 24hrs; 24 hrs; 24 hours; liters; litres","LOINC","VRat","Clinical","","l",null,"1",1,false],[false,"Liters per hour","L/h","L/HR","volume",2.7777777777777776e-7,[3,-1,0,0,0,0,0],"L/h","iso1000",true,null,null,1,false,false,0,"L/hr; L per hr; litres","LOINC","VRat","Clinical","","l",null,"1",1,false],[false,"Liters per kilogram","L/kg","L/KG","volume",0.000001,[3,0,-1,0,0,0,0],"L/kg","iso1000",true,null,null,1,false,false,0,"L per kg; litre","LOINC","VCnt","Clinical","","l",null,"1",1,false],[false,"Liters per liter","L/L","L/L","volume",1,[0,0,0,0,0,0,0],"L/L","iso1000",true,null,null,1,false,false,0,"L per L; liter/liter; litre","LOINC","VFr","Clinical","","l",null,"1",1,false],[false,"Liters per minute","L/min","L/MIN","volume",0.000016666666666666667,[3,-1,0,0,0,0,0],"L/min","iso1000",true,null,null,1,false,false,0,"liters per minute; litre","LOINC","VRat","Clinical","","l",null,"1",1,false],[false,"Liters per minute per square meter","L/min/m2","(L/MIN)/M2","volume",0.000016666666666666667,[1,-1,0,0,0,0,0],"(L/min)/(m<sup>2</sup>)","iso1000",true,null,null,1,false,false,0,"L/(min.m2); L/min/m^2; L/min/sq. meter; L per min per m2; m^2; liters per minutes per square meter; meter squared; litres; metre ","","ArVRat","Clinical","unit for tests that measure cardiac output per body surface area (cardiac index)","l",null,"1",1,false],[false,"Liters per second","L/s","L/S","volume",0.001,[3,-1,0,0,0,0,0],"L/s","iso1000",true,null,null,1,false,false,0,"L per sec; litres","LOINC","VRat","Clinical","unit used often to measure gas flow and peak expiratory flow","l",null,"1",1,false],[false,"Liters per second per square second","L/s/s2","(L/S)/S2","volume",0.001,[3,-3,0,0,0,0,0],"(L/s)/(s<sup>2</sup>)","iso1000",true,null,null,1,false,false,0,"L/s/s^2; L/sec/sec2; L/sec/sec^2; L/sec/sq. sec; L per s per s2; L per sec per sec2; s^2; sec^2; liters per seconds per square second; second squared; litres ","LOINC","ArVRat","Clinical","unit for tests that measure cardiac output/body surface area","l",null,"1",1,false],[false,"lumen square meter","lm.m2","LM.M2","luminous flux",1,[2,0,0,2,0,0,1],"lm.(m<sup>2</sup>)","si",true,null,null,1,false,false,0,"lm*m2; lm*m^2; lumen meters squared; lumen sq. meters; metres","LOINC","","Clinical","","cd.sr","CD.SR","1",1,false],[false,"meter per second","m/s","M/S","length",1,[1,-1,0,0,0,0,0],"m/s",null,false,"L",null,1,false,false,0,"meter/second; m per sec; meters per second; metres; velocity; speed","LOINC","Vel","Clinical","unit of velocity",null,null,null,null,false],[false,"meter per square second","m/s2","M/S2","length",1,[1,-2,0,0,0,0,0],"m/(s<sup>2</sup>)",null,false,"L",null,1,false,false,0,"m/s^2; m/sq. sec; m per s2; per s^2; meters per square second; second squared; sq second; metres; acceleration","LOINC","Accel","Clinical","unit of acceleration",null,null,null,null,false],[false,"milli international unit per liter","m[IU]/L","M[IU]/L","arbitrary",1,[-3,0,0,0,0,0,0],"(mi.U.)/L","chemical",true,null,null,1,false,true,0,"mIU/L; m IU/L; mIU per liter; units; litre","LOINC","ACnc","Clinical","International units (IU) are analyte and reference specimen  specific arbitrary units (held at WHO)","[iU]","[IU]","1",1,false],[false,"milli  international unit per milliliter","m[IU]/mL","M[IU]/ML","arbitrary",1000.0000000000001,[-3,0,0,0,0,0,0],"(mi.U.)/mL","chemical",true,null,null,1,false,true,0,"mIU/mL; m IU/mL; mIU per mL; milli international units per milliliter; millilitre","LOINC","ACnc","Clinical","International units (IU) are analyte and reference specimen  specific arbitrary units (held at WHO)","[iU]","[IU]","1",1,false],[false,"square meter","m2","M2","length",1,[2,0,0,0,0,0,0],"m<sup>2</sup>",null,false,"L",null,1,false,false,0,"m^2; sq m; square meters; meters squared; metres","LOINC","Area","Clinical","unit often used to represent body surface area",null,null,null,null,false],[false,"square meter per second","m2/s","M2/S","length",1,[2,-1,0,0,0,0,0],"(m<sup>2</sup>)/s",null,false,"L",null,1,false,false,0,"m^2/sec; m2 per sec; m^2 per sec; sq m/sec; meters squared/seconds; sq m per sec; meters squared; metres","LOINC","ArRat","Clinical","",null,null,null,null,false],[false,"cubic meter per second","m3/s","M3/S","length",1,[3,-1,0,0,0,0,0],"(m<sup>3</sup>)/s",null,false,"L",null,1,false,false,0,"m^3/sec; m3 per sec; m^3 per sec; cu m/sec; cubic meters per seconds; meters cubed; metres","LOINC","VRat","Clinical","",null,null,null,null,false],[false,"milliampere","mA","MA","electric current",0.001,[0,-1,0,0,0,1,0],"mA","si",true,null,null,1,false,false,0,"mamp; milliamperes","LOINC","ElpotRat","Clinical","unit of electric current","C/s","C/S","1",1,false],[false,"millibar","mbar","MBAR","pressure",100000,[-1,-2,1,0,0,0,0],"mbar","iso1000",true,null,null,1,false,false,0,"millibars","LOINC","Pres","Clinical","unit of pressure","Pa","PAL","1e5",100000,false],[false,"millibar second per liter","mbar.s/L","(MBAR.S)/L","pressure",100000000,[-4,-1,1,0,0,0,0],"(mbar.s)/L","iso1000",true,null,null,1,false,false,0,"mbar*s/L; mbar.s per L; mbar*s per L; millibar seconds per liter; millibar second per litre","LOINC","","Clinical","unit to measure expiratory resistance","Pa","PAL","1e5",100000,false],[false,"millibar per liter per second","mbar/L/s","(MBAR/L)/S","pressure",100000000,[-4,-3,1,0,0,0,0],"(mbar/L)/s","iso1000",true,null,null,1,false,false,0,"mbar/(L.s); mbar/L/sec; mbar/liter/second; mbar per L per sec; mbar per liter per second; millibars per liters per seconds; litres","LOINC","PresCncRat","Clinical","unit to measure expiratory resistance","Pa","PAL","1e5",100000,false],[false,"milliequivalent","meq","MEQ","amount of substance",602213670000000000000,[0,0,0,0,0,0,0],"meq","chemical",true,null,null,1,false,false,1,"milliequivalents; meqs","LOINC","Sub","Clinical","equivalence equals moles per valence","mol","MOL","1",1,false],[false,"milliequivalent per 2 hour","meq/(2.h)","MEQ/(2.HR)","amount of substance",83640787500000000,[0,-1,0,0,0,0,0],"meq/h","chemical",true,null,null,1,false,false,1,"meq/2hrs; meq/2 hrs; meq per 2 hrs; milliequivalents per 2 hours","LOINC","SRat","Clinical","equivalence equals moles per valence","mol","MOL","1",1,false],[false,"milliequivalent per 24 hour","meq/(24.h)","MEQ/(24.HR)","amount of substance",6970065625000000,[0,-1,0,0,0,0,0],"meq/h","chemical",true,null,null,1,false,false,1,"meq/24hrs; meq/24 hrs; meq per 24 hrs; milliequivalents per 24 hours","LOINC","SRat","Clinical","equivalence equals moles per valence","mol","MOL","1",1,false],[false,"milliequivalent per 8 hour","meq/(8.h)","MEQ/(8.HR)","amount of substance",20910196875000000,[0,-1,0,0,0,0,0],"meq/h","chemical",true,null,null,1,false,false,1,"meq/8hrs; meq/8 hrs; meq per 8 hrs; milliequivalents per 8 hours; shift","LOINC","SRat","Clinical","equivalence equals moles per valence","mol","MOL","1",1,false],[false,"milliequivalent per day","meq/d","MEQ/D","amount of substance",6970065625000000,[0,-1,0,0,0,0,0],"meq/d","chemical",true,null,null,1,false,false,1,"meq/dy; meq per day; milliquivalents per days; meq/24hrs; meq/24 hrs; meq per 24 hrs; milliequivalents per 24 hours","LOINC","SRat","Clinical","equivalence equals moles per valence","mol","MOL","1",1,false],[false,"milliequivalent per deciliter","meq/dL","MEQ/DL","amount of substance",6.022136699999999e+24,[-3,0,0,0,0,0,0],"meq/dL","chemical",true,null,null,1,false,false,1,"meq per dL; milliequivalents per deciliter; decilitre","LOINC","SCnc","Clinical","equivalence equals moles per valence","mol","MOL","1",1,false],[false,"milliequivalent per gram","meq/g","MEQ/G","amount of substance",602213670000000000000,[0,0,-1,0,0,0,0],"meq/g","chemical",true,null,null,1,false,false,1,"mgq/gm; meq per gm; milliequivalents per gram","LOINC","MCnt","Clinical","equivalence equals moles per valence","mol","MOL","1",1,false],[false,"milliequivalent per hour","meq/h","MEQ/HR","amount of substance",167281575000000000,[0,-1,0,0,0,0,0],"meq/h","chemical",true,null,null,1,false,false,1,"meq/hrs; meq per hrs; milliequivalents per hour","LOINC","SRat","Clinical","equivalence equals moles per valence","mol","MOL","1",1,false],[false,"milliequivalent per kilogram","meq/kg","MEQ/KG","amount of substance",602213670000000000,[0,0,-1,0,0,0,0],"meq/kg","chemical",true,null,null,1,false,false,1,"meq per kg; milliequivalents per kilogram","LOINC","SCnt","Clinical","equivalence equals moles per valence; used to measure dose per patient body mass","mol","MOL","1",1,false],[false,"milliequivalent per kilogram per hour","meq/kg/h","(MEQ/KG)/HR","amount of substance",167281575000000,[0,-1,-1,0,0,0,0],"(meq/kg)/h","chemical",true,null,null,1,false,false,1,"meq/(kg.h); meq/kg/hr; meq per kg per hr; milliequivalents per kilograms per hour","LOINC","SCntRat","Clinical","equivalence equals moles per valence; unit used to measure dose rate per patient body mass","mol","MOL","1",1,false],[false,"milliequivalent per liter","meq/L","MEQ/L","amount of substance",6.0221367e+23,[-3,0,0,0,0,0,0],"meq/L","chemical",true,null,null,1,false,false,1,"milliequivalents per liter; litre; meq per l; acidity","LOINC","SCnc","Clinical","equivalence equals moles per valence","mol","MOL","1",1,false],[false,"milliequivalent per square meter","meq/m2","MEQ/M2","amount of substance",602213670000000000000,[-2,0,0,0,0,0,0],"meq/(m<sup>2</sup>)","chemical",true,null,null,1,false,false,1,"meq/m^2; meq/sq. m; milliequivalents per square meter; meter squared; metre","LOINC","ArSub","Clinical","equivalence equals moles per valence; note that the use of m2 in clinical units ofter refers to body surface area","mol","MOL","1",1,false],[false,"milliequivalent per minute","meq/min","MEQ/MIN","amount of substance",10036894500000000000,[0,-1,0,0,0,0,0],"meq/min","chemical",true,null,null,1,false,false,1,"meq per min; milliequivalents per minute","LOINC","SRat","Clinical","equivalence equals moles per valence","mol","MOL","1",1,false],[false,"milliequivalent per milliliter","meq/mL","MEQ/ML","amount of substance",6.0221367e+26,[-3,0,0,0,0,0,0],"meq/mL","chemical",true,null,null,1,false,false,1,"meq per mL; milliequivalents per milliliter; millilitre","LOINC","SCnc","Clinical","equivalence equals moles per valence","mol","MOL","1",1,false],[false,"milligram","mg","MG","mass",0.001,[0,0,1,0,0,0,0],"mg",null,false,"M",null,1,false,false,0,"milligrams","LOINC","Mass","Clinical","",null,null,null,null,false],[false,"milligram per 10 hour","mg/(10.h)","MG/(10.HR)","mass",2.7777777777777777e-8,[0,-1,1,0,0,0,0],"mg/h",null,false,"M",null,1,false,false,0,"mg/10hrs; mg/10 hrs; mg per 10 hrs; milligrams per 10 hours","LOINC","MRat","Clinical","",null,null,null,null,false],[false,"milligram per 12 hour","mg/(12.h)","MG/(12.HR)","mass",2.3148148148148148e-8,[0,-1,1,0,0,0,0],"mg/h",null,false,"M",null,1,false,false,0,"mg/12hrs; mg/12 hrs; per 12 hrs; 12hrs; milligrams per 12 hours","LOINC","MRat","Clinical","units used for tests in urine",null,null,null,null,false],[false,"milligram per 2 hour","mg/(2.h)","MG/(2.HR)","mass",1.3888888888888888e-7,[0,-1,1,0,0,0,0],"mg/h",null,false,"M",null,1,false,false,0,"mg/2hrs; mg/2 hrs; mg per 2 hrs; 2hrs; milligrams per 2 hours","LOINC","MRat","Clinical","units used for tests in urine",null,null,null,null,false],[false,"milligram per 24 hour","mg/(24.h)","MG/(24.HR)","mass",1.1574074074074074e-8,[0,-1,1,0,0,0,0],"mg/h",null,false,"M",null,1,false,false,0,"mg/24hrs; mg/24 hrs; milligrams per 24 hours; mg/kg/dy; mg per kg per day; milligrams per kilograms per days","LOINC","MRat","Clinical","",null,null,null,null,false],[false,"milligram per 6 hour","mg/(6.h)","MG/(6.HR)","mass",4.6296296296296295e-8,[0,-1,1,0,0,0,0],"mg/h",null,false,"M",null,1,false,false,0,"mg/6hrs; mg/6 hrs; mg per 6 hrs; 6hrs; milligrams per 6 hours","LOINC","MRat","Clinical","",null,null,null,null,false],[false,"milligram per 72 hour","mg/(72.h)","MG/(72.HR)","mass",3.858024691358025e-9,[0,-1,1,0,0,0,0],"mg/h",null,false,"M",null,1,false,false,0,"mg/72hrs; mg/72 hrs; 72 hrs; 72hrs; milligrams per 72 hours","LOINC","MRat","Clinical","",null,null,null,null,false],[false,"milligram per 8 hour","mg/(8.h)","MG/(8.HR)","mass",3.472222222222222e-8,[0,-1,1,0,0,0,0],"mg/h",null,false,"M",null,1,false,false,0,"mg/8hrs; mg/8 hrs; milligrams per 8 hours; shift","LOINC","MRat","Clinical","",null,null,null,null,false],[false,"milligram per day","mg/d","MG/D","mass",1.1574074074074074e-8,[0,-1,1,0,0,0,0],"mg/d",null,false,"M",null,1,false,false,0,"mg/24hrs; mg/24 hrs; milligrams per 24 hours; mg/dy; mg per day; milligrams","LOINC","MRat","Clinical","",null,null,null,null,false],[false,"milligram per deciliter","mg/dL","MG/DL","mass",10,[-3,0,1,0,0,0,0],"mg/dL",null,false,"M",null,1,false,false,0,"mg per dL; milligrams per deciliter; decilitre","LOINC","MCnc","Clinical","",null,null,null,null,false],[false,"milligram per gram","mg/g","MG/G","mass",0.001,[0,0,0,0,0,0,0],"mg/g",null,false,"M",null,1,false,false,0,"mg per gm; milligrams per gram","LOINC","MCnt; MRto","Clinical","",null,null,null,null,false],[false,"milligram per hour","mg/h","MG/HR","mass",2.7777777777777776e-7,[0,-1,1,0,0,0,0],"mg/h",null,false,"M",null,1,false,false,0,"mg/hr; mg per hr; milligrams","LOINC","MRat","Clinical","",null,null,null,null,false],[false,"milligram per kilogram","mg/kg","MG/KG","mass",0.000001,[0,0,0,0,0,0,0],"mg/kg",null,false,"M",null,1,false,false,0,"mg per kg; milligrams per kilograms","LOINC","MCnt","Clinical","",null,null,null,null,false],[false,"milligram per kilogram per 8 hour","mg/kg/(8.h)","(MG/KG)/(8.HR)","mass",3.472222222222222e-11,[0,-1,0,0,0,0,0],"(mg/kg)/h",null,false,"M",null,1,false,false,0,"mg/(8.h.kg); mg/kg/8hrs; mg/kg/8 hrs; mg per kg per 8hrs; 8 hrs; milligrams per kilograms per 8 hours; shift","LOINC","RelMRat; MCntRat","Clinical","unit used to measure mass dose rate per patient body mass",null,null,null,null,false],[false,"milligram per kilogram per day","mg/kg/d","(MG/KG)/D","mass",1.1574074074074074e-11,[0,-1,0,0,0,0,0],"(mg/kg)/d",null,false,"M",null,1,false,false,0,"mg/(kg.d); mg/(kg.24.h)mg/kg/dy; mg per kg per day; milligrams per kilograms per days; mg/kg/(24.h); mg/kg/24hrs; 24 hrs; 24 hours","LOINC","RelMRat ","Clinical","unit used to measure mass dose rate per patient body mass",null,null,null,null,false],[false,"milligram per kilogram per hour","mg/kg/h","(MG/KG)/HR","mass",2.7777777777777777e-10,[0,-1,0,0,0,0,0],"(mg/kg)/h",null,false,"M",null,1,false,false,0,"mg/(kg.h); mg/kg/hr; mg per kg per hr; milligrams per kilograms per hour","LOINC","RelMRat; MCntRat","Clinical","unit used to measure mass dose rate per patient body mass",null,null,null,null,false],[false,"milligram per kilogram per minute","mg/kg/min","(MG/KG)/MIN","mass",1.6666666666666667e-8,[0,-1,0,0,0,0,0],"(mg/kg)/min",null,false,"M",null,1,false,false,0,"mg/(kg.min); mg per kg per min; milligrams per kilograms per minute","LOINC","RelMRat; MCntRat","Clinical","unit used to measure mass dose rate per patient body mass",null,null,null,null,false],[false,"milligram per liter","mg/L","MG/L","mass",1,[-3,0,1,0,0,0,0],"mg/L",null,false,"M",null,1,false,false,0,"mg per l; milligrams per liter; litre","LOINC","MCnc","Clinical","",null,null,null,null,false],[false,"milligram per square meter","mg/m2","MG/M2","mass",0.001,[-2,0,1,0,0,0,0],"mg/(m<sup>2</sup>)",null,false,"M",null,1,false,false,0,"mg/m^2; mg/sq. m; mg per m2; mg per m^2; mg per sq. milligrams; meter squared; metre","LOINC","ArMass","Clinical","",null,null,null,null,false],[false,"milligram per cubic meter","mg/m3","MG/M3","mass",0.001,[-3,0,1,0,0,0,0],"mg/(m<sup>3</sup>)",null,false,"M",null,1,false,false,0,"mg/m^3; mg/cu. m; mg per m3; milligrams per cubic meter; meter cubed; metre","LOINC","MCnc","Clinical","",null,null,null,null,false],[false,"milligram per milligram","mg/mg","MG/MG","mass",1,[0,0,0,0,0,0,0],"mg/mg",null,false,"M",null,1,false,false,0,"mg per mg; milligrams; milligram/milligram","LOINC","MRto","Clinical","",null,null,null,null,false],[false,"milligram per minute","mg/min","MG/MIN","mass",0.000016666666666666667,[0,-1,1,0,0,0,0],"mg/min",null,false,"M",null,1,false,false,0,"mg per min; milligrams per minutes; milligram/minute","LOINC","MRat","Clinical","",null,null,null,null,false],[false,"milligram per milliliter","mg/mL","MG/ML","mass",1000.0000000000001,[-3,0,1,0,0,0,0],"mg/mL",null,false,"M",null,1,false,false,0,"mg per mL; milligrams per milliliters; millilitre","LOINC","MCnc","Clinical","",null,null,null,null,false],[false,"milligram per millimole","mg/mmol","MG/MMOL","mass",1.660540186674939e-24,[0,0,1,0,0,0,0],"mg/mmol",null,false,"M",null,1,false,false,-1,"mg per mmol; milligrams per millimole; ","LOINC","Ratio","Clinical","",null,null,null,null,false],[false,"milligram per week","mg/wk","MG/WK","mass",1.6534391534391535e-9,[0,-1,1,0,0,0,0],"mg/wk",null,false,"M",null,1,false,false,0,"mg/week; mg per wk; milligrams per weeks; milligram/week","LOINC","Mrat","Clinical","",null,null,null,null,false],[false,"milliliter","mL","ML","volume",0.000001,[3,0,0,0,0,0,0],"mL","iso1000",true,null,null,1,false,false,0,"milliliters; millilitres","LOINC","Vol","Clinical","","l",null,"1",1,false],[false,"milliliter per 10 hour","mL/(10.h)","ML/(10.HR)","volume",2.7777777777777777e-11,[3,-1,0,0,0,0,0],"mL/h","iso1000",true,null,null,1,false,false,0,"ml/10hrs; ml/10 hrs; mL per 10hrs; 10 hrs; milliliters per 10 hours; millilitres","LOINC","VRat","Clinical","","l",null,"1",1,false],[false,"milliliter per 12 hour","mL/(12.h)","ML/(12.HR)","volume",2.3148148148148147e-11,[3,-1,0,0,0,0,0],"mL/h","iso1000",true,null,null,1,false,false,0,"ml/12hrs; ml/12 hrs; mL per 12hrs; 12 hrs; milliliters per 12 hours; millilitres","LOINC","VRat","Clinical","","l",null,"1",1,false],[false,"milliliter per 2 hour","mL/(2.h)","ML/(2.HR)","volume",1.3888888888888888e-10,[3,-1,0,0,0,0,0],"mL/h","iso1000",true,null,null,1,false,false,0,"ml/2hrs; ml/2 hrs; mL per 2hrs; 2 hrs; milliliters per 2 hours; millilitres ","LOINC","VRat","Clinical","","l",null,"1",1,false],[false,"milliliter per 24 hour","mL/(24.h)","ML/(24.HR)","volume",1.1574074074074074e-11,[3,-1,0,0,0,0,0],"mL/h","iso1000",true,null,null,1,false,false,0,"ml/24hrs; ml/24 hrs; mL per 24hrs; 24 hrs; milliliters per 24 hours; millilitres; ml/dy; /day; ml per dy; days; fluid outputs; fluid inputs; flow rate","LOINC","VRat","Clinical","","l",null,"1",1,false],[false,"milliliter per 4 hour","mL/(4.h)","ML/(4.HR)","volume",6.944444444444444e-11,[3,-1,0,0,0,0,0],"mL/h","iso1000",true,null,null,1,false,false,0,"ml/4hrs; ml/4 hrs; mL per 4hrs; 4 hrs; milliliters per 4 hours; millilitres","LOINC","VRat","Clinical","","l",null,"1",1,false],[false,"milliliter per 5 hour","mL/(5.h)","ML/(5.HR)","volume",5.5555555555555553e-11,[3,-1,0,0,0,0,0],"mL/h","iso1000",true,null,null,1,false,false,0,"ml/5hrs; ml/5 hrs; mL per 5hrs; 5 hrs; milliliters per 5 hours; millilitres","LOINC","VRat","Clinical","","l",null,"1",1,false],[false,"milliliter per 6 hour","mL/(6.h)","ML/(6.HR)","volume",4.6296296296296294e-11,[3,-1,0,0,0,0,0],"mL/h","iso1000",true,null,null,1,false,false,0,"ml/6hrs; ml/6 hrs; mL per 6hrs; 6 hrs; milliliters per 6 hours; millilitres","LOINC","VRat","Clinical","","l",null,"1",1,false],[false,"milliliter per 72 hour","mL/(72.h)","ML/(72.HR)","volume",3.8580246913580245e-12,[3,-1,0,0,0,0,0],"mL/h","iso1000",true,null,null,1,false,false,0,"ml/72hrs; ml/72 hrs; mL per 72hrs; 72 hrs; milliliters per 72 hours; millilitres","LOINC","VRat","Clinical","","l",null,"1",1,false],[false,"milliliter per 8 hour","mL/(8.h)","ML/(8.HR)","volume",3.472222222222222e-11,[3,-1,0,0,0,0,0],"mL/h","iso1000",true,null,null,1,false,false,0,"ml/8hrs; ml/8 hrs; mL per 8hrs; 8 hrs; milliliters per 8 hours; millilitres; shift","LOINC","VRat","Clinical","","l",null,"1",1,false],[false,"milliliter per 8 hour per kilogram","mL/(8.h)/kg","(ML/(8.HR))/KG","volume",3.472222222222222e-14,[3,-1,-1,0,0,0,0],"(mL/h)/kg","iso1000",true,null,null,1,false,false,0,"mL/kg/(8.h); ml/8h/kg; ml/8 h/kg; ml/8hr/kg; ml/8 hr/kgr; mL per 8h per kg; 8 h; 8hr; 8 hr; milliliters per 8 hours per kilogram; millilitres; shift","LOINC","VRatCnt","Clinical","unit used to measure renal excretion volume rate per body mass","l",null,"1",1,false],[false,"milliliter per square inch (international)","mL/[sin_i]","ML/[SIN_I]","volume",0.0015500031000061998,[1,0,0,0,0,0,0],"mL","iso1000",true,null,null,1,false,false,0,"mL/sin; mL/in2; mL/in^2; mL per sin; in2; in^2; sq. in; milliliters per square inch; inch squared","LOINC","ArVol","Clinical","","l",null,"1",1,false],[false,"milliliter per centimeter of water","mL/cm[H2O]","ML/CM[H2O]","volume",1.0197162129779282e-11,[4,2,-1,0,0,0,0],"mL/(cm HO<sub><r>2</r></sub>)","iso1000",true,null,null,1,false,false,0,"milliliters per centimeter of water; millilitre per centimetre of water; millilitres per centimetre of water; mL/cmH2O; mL/cm H2O; mL per cmH2O; mL per cm H2O","LOINC","Compli","Clinical","unit used to measure dynamic lung compliance","l",null,"1",1,false],[false,"milliliter per day","mL/d","ML/D","volume",1.1574074074074074e-11,[3,-1,0,0,0,0,0],"mL/d","iso1000",true,null,null,1,false,false,0,"ml/day; ml per day; milliliters per day; 24 hours; 24hrs; millilitre;","LOINC","VRat","Clinical","usually used to measure fluid output or input; flow rate","l",null,"1",1,false],[false,"milliliter per deciliter","mL/dL","ML/DL","volume",0.009999999999999998,[0,0,0,0,0,0,0],"mL/dL","iso1000",true,null,null,1,false,false,0,"mL per dL; millilitres; decilitre; milliliters","LOINC","VFr; VFrDiff","Clinical","","l",null,"1",1,false],[false,"milliliter per hour","mL/h","ML/HR","volume",2.7777777777777777e-10,[3,-1,0,0,0,0,0],"mL/h","iso1000",true,null,null,1,false,false,0,"mL/hr; mL per hr; milliliters per hour; millilitres; fluid intake; fluid output","LOINC","VRat","Clinical","","l",null,"1",1,false],[false,"milliliter per kilogram","mL/kg","ML/KG","volume",9.999999999999999e-10,[3,0,-1,0,0,0,0],"mL/kg","iso1000",true,null,null,1,false,false,0,"mL per kg; milliliters per kilogram; millilitres","LOINC","VCnt","Clinical","","l",null,"1",1,false],[false,"milliliter per kilogram per 8 hour","mL/kg/(8.h)","(ML/KG)/(8.HR)","volume",3.472222222222222e-14,[3,-1,-1,0,0,0,0],"(mL/kg)/h","iso1000",true,null,null,1,false,false,0,"mL/(8.h.kg); mL/kg/8hrs; mL/kg/8 hrs; mL per kg per 8hrs; 8 hrs; milliliters per kilograms per 8 hours; millilitres; shift","LOINC","VCntRat; RelEngRat","Clinical","unit used to measure renal excretion volume rate per body mass","l",null,"1",1,false],[false,"milliliter per kilogram per day","mL/kg/d","(ML/KG)/D","volume",1.1574074074074072e-14,[3,-1,-1,0,0,0,0],"(mL/kg)/d","iso1000",true,null,null,1,false,false,0,"mL/(kg.d); mL/kg/dy; mL per kg per day; milliliters per kilograms per day; mg/kg/24hrs; 24 hrs; per 24 hours millilitres","LOINC","VCntRat; RelEngRat","Clinical","unit used to measure renal excretion volume rate per body mass","l",null,"1",1,false],[false,"milliliter per kilogram per hour","mL/kg/h","(ML/KG)/HR","volume",2.7777777777777774e-13,[3,-1,-1,0,0,0,0],"(mL/kg)/h","iso1000",true,null,null,1,false,false,0,"mL/(kg.h); mL/kg/hr; mL per kg per hr; milliliters per kilograms per hour; millilitres","LOINC","VCntRat; RelEngRat","Clinical","unit used to measure renal excretion volume rate per body mass","l",null,"1",1,false],[false,"milliliter per kilogram per minute","mL/kg/min","(ML/KG)/MIN","volume",1.6666666666666664e-11,[3,-1,-1,0,0,0,0],"(mL/kg)/min","iso1000",true,null,null,1,false,false,0,"mL/(kg.min); mL/kg/dy; mL per kg per day; milliliters per kilograms per day; millilitres","LOINC","RelEngRat","Clinical","used for tests that measure activity metabolic rate compared to standard resting metabolic rate ","l",null,"1",1,false],[false,"milliliter per square meter","mL/m2","ML/M2","volume",0.000001,[1,0,0,0,0,0,0],"mL/(m<sup>2</sup>)","iso1000",true,null,null,1,false,false,0,"mL/m^2; mL/sq. meter; mL per m2; m^2; sq. meter; milliliters per square meter; millilitres; meter squared","LOINC","ArVol","Clinical","used for tests that relate to heart work - e.g. ventricular stroke volume; atrial volume per body surface area","l",null,"1",1,false],[false,"milliliter per millibar","mL/mbar","ML/MBAR","volume",1e-11,[4,2,-1,0,0,0,0],"mL/mbar","iso1000",true,null,null,1,false,false,0,"mL per mbar; milliliters per millibar; millilitres","LOINC","","Clinical","unit used to measure dynamic lung compliance","l",null,"1",1,false],[false,"milliliter per minute","mL/min","ML/MIN","volume",1.6666666666666667e-8,[3,-1,0,0,0,0,0],"mL/min","iso1000",true,null,null,1,false,false,0,"mL per min; milliliters; millilitres","LOINC","VRat","Clinical","","l",null,"1",1,false],[false,"milliliter per minute per square meter","mL/min/m2","(ML/MIN)/M2","volume",1.6666666666666667e-8,[1,-1,0,0,0,0,0],"(mL/min)/(m<sup>2</sup>)","iso1000",true,null,null,1,false,false,0,"ml/min/m^2; ml/min/sq. meter; mL per min per m2; m^2; sq. meter; milliliters per minutes per square meter; millilitres; metre; meter squared","LOINC","ArVRat","Clinical","unit used to measure volume per body surface area; oxygen consumption index","l",null,"1",1,false],[false,"milliliter per millimeter","mL/mm","ML/MM","volume",0.001,[2,0,0,0,0,0,0],"mL/mm","iso1000",true,null,null,1,false,false,0,"mL per mm; milliliters per millimeter; millilitres; millimetre","LOINC","Lineic Volume","Clinical","","l",null,"1",1,false],[false,"milliliter per second","mL/s","ML/S","volume",0.000001,[3,-1,0,0,0,0,0],"mL/s","iso1000",true,null,null,1,false,false,0,"ml/sec; mL per sec; milliliters per second; millilitres","LOINC","Vel; VelRat; VRat","Clinical","","l",null,"1",1,false],[false,"millimeter","mm","MM","length",0.001,[1,0,0,0,0,0,0],"mm",null,false,"L",null,1,false,false,0,"millimeters; millimetres; height; length; diameter; thickness; axis; curvature; size","LOINC","Len","Clinical","",null,null,null,null,false],[false,"millimeter per hour","mm/h","MM/HR","length",2.7777777777777776e-7,[1,-1,0,0,0,0,0],"mm/h",null,false,"L",null,1,false,false,0,"mm/hr; mm per hr; millimeters per hour; millimetres","LOINC","Vel","Clinical","unit to measure sedimentation rate",null,null,null,null,false],[false,"millimeter per minute","mm/min","MM/MIN","length",0.000016666666666666667,[1,-1,0,0,0,0,0],"mm/min",null,false,"L",null,1,false,false,0,"mm per min; millimeters per minute; millimetres","LOINC","Vel","Clinical","",null,null,null,null,false],[false,"millimeter of water","mm[H2O]","MM[H2O]","pressure",9806.65,[-1,-2,1,0,0,0,0],"mm HO<sub><r>2</r></sub>","clinical",true,null,null,1,false,false,0,"mmH2O; mm H2O; millimeters of water; millimetres","LOINC","Pres","Clinical","","kPa","KPAL","980665e-5",9.80665,false],[false,"millimeter of mercury","mm[Hg]","MM[HG]","pressure",133322,[-1,-2,1,0,0,0,0],"mm Hg","clinical",true,null,null,1,false,false,0,"mmHg; mm Hg; millimeters of mercury; millimetres","LOINC","Pres; PPres; Ratio","Clinical","1 mm[Hg] = 1 torr; unit to measure blood pressure","kPa","KPAL","133.3220",133.322,false],[false,"square millimeter","mm2","MM2","length",0.000001,[2,0,0,0,0,0,0],"mm<sup>2</sup>",null,false,"L",null,1,false,false,0,"mm^2; sq. mm.; sq. millimeters; millimeters squared; millimetres","LOINC","Area","Clinical","",null,null,null,null,false],[false,"millimole","mmol","MMOL","amount of substance",602213670000000000000,[0,0,0,0,0,0,0],"mmol","si",true,null,null,1,false,false,1,"millimoles","LOINC","Sub","Clinical","","10*23","10*23","6.0221367",6.0221367,false],[false,"millimole per 12 hour","mmol/(12.h)","MMOL/(12.HR)","amount of substance",13940131250000000,[0,-1,0,0,0,0,0],"mmol/h","si",true,null,null,1,false,false,1,"mmol/12hrs; mmol/12 hrs; mmol per 12 hrs; 12hrs; millimoles per 12 hours","LOINC","SRat","Clinical","unit for tests related to urine","10*23","10*23","6.0221367",6.0221367,false],[false,"millimole per 2 hour","mmol/(2.h)","MMOL/(2.HR)","amount of substance",83640787500000000,[0,-1,0,0,0,0,0],"mmol/h","si",true,null,null,1,false,false,1,"mmol/2hrs; mmol/2 hrs; mmol per 2 hrs; 2hrs; millimoles per 2 hours","LOINC","SRat","Clinical","unit for tests related to urine","10*23","10*23","6.0221367",6.0221367,false],[false,"millimole per 24 hour","mmol/(24.h)","MMOL/(24.HR)","amount of substance",6970065625000000,[0,-1,0,0,0,0,0],"mmol/h","si",true,null,null,1,false,false,1,"mmol/24hrs; mmol/24 hrs; mmol per 24 hrs; 24hrs; millimoles per 24 hours","LOINC","SRat","Clinical","","10*23","10*23","6.0221367",6.0221367,false],[false,"millimole per 5 hour","mmol/(5.h)","MMOL/(5.HR)","amount of substance",33456315000000000,[0,-1,0,0,0,0,0],"mmol/h","si",true,null,null,1,false,false,1,"mmol/5hrs; mmol/5 hrs; mmol per 5 hrs; 5hrs; millimoles per 5 hours","LOINC","SRat","Clinical","unit for tests related to doses","10*23","10*23","6.0221367",6.0221367,false],[false,"millimole per 6 hour","mmol/(6.h)","MMOL/(6.HR)","amount of substance",27880262500000000,[0,-1,0,0,0,0,0],"mmol/h","si",true,null,null,1,false,false,1,"mmol/6hrs; mmol/6 hrs; mmol per 6 hrs; 6hrs; millimoles per 6 hours","LOINC","SRat","Clinical","unit for tests related to urine","10*23","10*23","6.0221367",6.0221367,false],[false,"millimole per 8 hour","mmol/(8.h)","MMOL/(8.HR)","amount of substance",20910196875000000,[0,-1,0,0,0,0,0],"mmol/h","si",true,null,null,1,false,false,1,"mmol/8hrs; mmol/8 hrs; mmol per 8 hrs; 8hrs; millimoles per 8 hours; shift","LOINC","SRat","Clinical","","10*23","10*23","6.0221367",6.0221367,false],[false,"millimole per day","mmol/d","MMOL/D","amount of substance",6970065625000000,[0,-1,0,0,0,0,0],"mmol/d","si",true,null,null,1,false,false,1,"mmol/24hrs; mmol/24 hrs; mmol per 24 hrs; 24hrs; millimoles per 24 hours","LOINC","SRat","Clinical","","10*23","10*23","6.0221367",6.0221367,false],[false,"millimole per deciliter","mmol/dL","MMOL/DL","amount of substance",6.022136699999999e+24,[-3,0,0,0,0,0,0],"mmol/dL","si",true,null,null,1,false,false,1,"mmol per dL; millimoles; decilitre","LOINC","SCnc","Clinical","","10*23","10*23","6.0221367",6.0221367,false],[false,"millimole per gram","mmol/g","MMOL/G","amount of substance",602213670000000000000,[0,0,-1,0,0,0,0],"mmol/g","si",true,null,null,1,false,false,1,"mmol per gram; millimoles","LOINC","SCnt","Clinical","","10*23","10*23","6.0221367",6.0221367,false],[false,"millimole per hour","mmol/h","MMOL/HR","amount of substance",167281575000000000,[0,-1,0,0,0,0,0],"mmol/h","si",true,null,null,1,false,false,1,"mmol/hr; mmol per hr; millimoles per hour","LOINC","SRat","Clinical","unit for tests related to urine","10*23","10*23","6.0221367",6.0221367,false],[false,"millimole per kilogram","mmol/kg","MMOL/KG","amount of substance",602213670000000000,[0,0,-1,0,0,0,0],"mmol/kg","si",true,null,null,1,false,false,1,"mmol per kg; millimoles per kilogram","LOINC","SCnt","Clinical","unit for tests related to stool","10*23","10*23","6.0221367",6.0221367,false],[false,"millimole per kilogram per 8 hour","mmol/kg/(8.h)","(MMOL/KG)/(8.HR)","amount of substance",20910196875000,[0,-1,-1,0,0,0,0],"(mmol/kg)/h","si",true,null,null,1,false,false,1,"mmol/(8.h.kg); mmol/kg/8hrs; mmol/kg/8 hrs; mmol per kg per 8hrs; 8 hrs; millimoles per kilograms per 8 hours; shift","LOINC","CCnt","Clinical","unit used to measure molar dose rate per patient body mass","10*23","10*23","6.0221367",6.0221367,false],[false,"millimole per kilogram per day","mmol/kg/d","(MMOL/KG)/D","amount of substance",6970065625000,[0,-1,-1,0,0,0,0],"(mmol/kg)/d","si",true,null,null,1,false,false,1,"mmol/kg/dy; mmol/kg/day; mmol per kg per dy; millimoles per kilograms per day","LOINC","RelSRat","Clinical","unit used to measure molar dose rate per patient body mass","10*23","10*23","6.0221367",6.0221367,false],[false,"millimole per kilogram per hour","mmol/kg/h","(MMOL/KG)/HR","amount of substance",167281575000000,[0,-1,-1,0,0,0,0],"(mmol/kg)/h","si",true,null,null,1,false,false,1,"mmol/kg/hr; mmol per kg per hr; millimoles per kilograms per hour","LOINC","CCnt","Clinical","unit used to measure molar dose rate per patient body mass","10*23","10*23","6.0221367",6.0221367,false],[false,"millimole per kilogram per minute","mmol/kg/min","(MMOL/KG)/MIN","amount of substance",10036894500000000,[0,-1,-1,0,0,0,0],"(mmol/kg)/min","si",true,null,null,1,false,false,1,"mmol/(kg.min); mmol/kg/min; mmol per kg per min; millimoles per kilograms per minute","LOINC","CCnt","Clinical","unit used to measure molar dose rate per patient body mass; note that the unit for the enzyme unit U = umol/min. mmol/kg/min = kU/kg; ","10*23","10*23","6.0221367",6.0221367,false],[false,"millimole per liter","mmol/L","MMOL/L","amount of substance",6.0221367e+23,[-3,0,0,0,0,0,0],"mmol/L","si",true,null,null,1,false,false,1,"mmol per L; millimoles per liter; litre","LOINC","SCnc","Clinical","unit for tests related to doses","10*23","10*23","6.0221367",6.0221367,false],[false,"millimole per square meter","mmol/m2","MMOL/M2","amount of substance",602213670000000000000,[-2,0,0,0,0,0,0],"mmol/(m<sup>2</sup>)","si",true,null,null,1,false,false,1,"mmol/m^2; mmol/sq. meter; mmol per m2; m^2; sq. meter; millimoles; meter squared; metre","LOINC","ArSub","Clinical","unit used to measure molar dose per patient body surface area","10*23","10*23","6.0221367",6.0221367,false],[false,"millimole per minute","mmol/min","MMOL/MIN","amount of substance",10036894500000000000,[0,-1,0,0,0,0,0],"mmol/min","si",true,null,null,1,false,false,1,"mmol per min; millimoles per minute","LOINC","Srat; CAct","Clinical","unit for the enzyme unit U = umol/min. mmol/min = kU","10*23","10*23","6.0221367",6.0221367,false],[false,"millimole per millimole","mmol/mmol","MMOL/MMOL","amount of substance",1,[0,0,0,0,0,0,0],"mmol/mmol","si",true,null,null,1,false,false,0,"mmol per mmol; millimoles per millimole","LOINC","SRto","Clinical","","10*23","10*23","6.0221367",6.0221367,false],[false,"millimole per mole","mmol/mol","MMOL/MOL","amount of substance",0.001,[0,0,0,0,0,0,0],"mmol/mol","si",true,null,null,1,false,false,0,"mmol per mol; millimoles per mole","LOINC","SRto","Clinical","","10*23","10*23","6.0221367",6.0221367,false],[false,"millimole per second per liter","mmol/s/L","(MMOL/S)/L","amount of substance",6.0221367e+23,[-3,-1,0,0,0,0,0],"(mmol/s)/L","si",true,null,null,1,false,false,1,"mmol/sec/L; mmol per s per L; per sec; millimoles per seconds per liter; litre","LOINC","CCnc ","Clinical","","10*23","10*23","6.0221367",6.0221367,false],[false,"mole per kilogram","mol/kg","MOL/KG","amount of substance",602213670000000000000,[0,0,-1,0,0,0,0],"mol/kg","si",true,null,null,1,false,false,1,"mol per kg; moles; mols","LOINC","SCnt","Clinical","unit for tests related to stool","10*23","10*23","6.0221367",6.0221367,false],[false,"mole per kilogram per second","mol/kg/s","(MOL/KG)/S","amount of substance",602213670000000000000,[0,-1,-1,0,0,0,0],"(mol/kg)/s","si",true,null,null,1,false,false,1,"mol/kg/sec; mol per kg per sec; moles per kilograms per second; mols","LOINC","CCnt","Clinical","unit of catalytic activity (mol/s) per mass (kg)","10*23","10*23","6.0221367",6.0221367,false],[false,"mole per liter","mol/L","MOL/L","amount of substance",6.0221366999999994e+26,[-3,0,0,0,0,0,0],"mol/L","si",true,null,null,1,false,false,1,"mol per L; moles per liter; litre; moles; mols","LOINC","SCnc","Clinical","unit often used in tests measuring oxygen content","10*23","10*23","6.0221367",6.0221367,false],[false,"mole per cubic meter","mol/m3","MOL/M3","amount of substance",6.0221367e+23,[-3,0,0,0,0,0,0],"mol/(m<sup>3</sup>)","si",true,null,null,1,false,false,1,"mol/m^3; mol/cu. m; mol per m3; m^3; cu. meter; mols; moles; meters cubed; metre; mole per kiloliter; kilolitre; mol/kL","LOINC","SCnc","Clinical","","10*23","10*23","6.0221367",6.0221367,false],[false,"mole per milliliter","mol/mL","MOL/ML","amount of substance",6.0221367e+29,[-3,0,0,0,0,0,0],"mol/mL","si",true,null,null,1,false,false,1,"mol per mL; moles; millilitre; mols","LOINC","SCnc","Clinical","","10*23","10*23","6.0221367",6.0221367,false],[false,"mole per mole","mol/mol","MOL/MOL","amount of substance",1,[0,0,0,0,0,0,0],"mol/mol","si",true,null,null,1,false,false,0,"mol per mol; moles per mol; mols","LOINC","SRto","Clinical","","10*23","10*23","6.0221367",6.0221367,false],[false,"mole per second","mol/s","MOL/S","amount of substance",6.0221367e+23,[0,-1,0,0,0,0,0],"mol/s","si",true,null,null,1,false,false,1,"mol per sec; moles per second; mols","LOINC","SRat","Clinical","","10*23","10*23","6.0221367",6.0221367,false],[false,"milliosmole","mosm","MOSM","amount of substance (dissolved particles)",602213670000000000000,[0,0,0,0,0,0,0],"mosm","chemical",true,null,null,1,false,false,1,"milliosmoles","LOINC","Osmol","Clinical","equal to 1/1000 of an osmole","mol","MOL","1",1,false],[false,"milliosmole per kilogram","mosm/kg","MOSM/KG","amount of substance (dissolved particles)",602213670000000000,[0,0,-1,0,0,0,0],"mosm/kg","chemical",true,null,null,1,false,false,1,"mosm per kg; milliosmoles per kilogram","LOINC","Osmol","Clinical","","mol","MOL","1",1,false],[false,"milliosmole per liter","mosm/L","MOSM/L","amount of substance (dissolved particles)",6.0221367e+23,[-3,0,0,0,0,0,0],"mosm/L","chemical",true,null,null,1,false,false,1,"mosm per liter; litre; milliosmoles","LOINC","Osmol","Clinical","","mol","MOL","1",1,false],[false,"millipascal","mPa","MPAL","pressure",1,[-1,-2,1,0,0,0,0],"mPa","si",true,null,null,1,false,false,0,"millipascals","LOINC","Pres","Clinical","unit of pressure","N/m2","N/M2","1",1,false],[false,"millipascal second","mPa.s","MPAL.S","pressure",1,[-1,-1,1,0,0,0,0],"mPa.s","si",true,null,null,1,false,false,0,"mPa*s; millipoise; mP; dynamic viscosity","LOINC","Visc","Clinical","base units for millipoise, a measurement of dynamic viscosity","N/m2","N/M2","1",1,false],[false,"megasecond","Ms","MAS","time",1000000,[0,1,0,0,0,0,0],"Ms",null,false,"T",null,1,false,false,0,"megaseconds","LOINC","Time","Clinical","",null,null,null,null,false],[false,"millisecond","ms","MS","time",0.001,[0,1,0,0,0,0,0],"ms",null,false,"T",null,1,false,false,0,"milliseconds; duration","LOINC","Time","Clinical","",null,null,null,null,false],[false,"milli enzyme unit per gram","mU/g","MU/G","catalytic activity",10036894500000,[0,-1,-1,0,0,0,0],"mU/g","chemical",true,null,null,1,false,false,1,"mU per gm; milli enzyme units per gram; enzyme activity; enzymatic activity per mass","LOINC","CCnt","Clinical","1 U is the standard enzyme unit which equals 1 micromole substrate catalyzed per minute (1 umol/min); 1 mU = 1 nmol/min","umol/min","UMOL/MIN","1",1,false],[false,"milli enzyme unit per liter","mU/L","MU/L","catalytic activity",10036894500000000,[-3,-1,0,0,0,0,0],"mU/L","chemical",true,null,null,1,false,false,1,"mU per liter; litre; milli enzyme units enzymatic activity per volume; enzyme activity","LOINC","CCnc","Clinical","1 U is the standard enzyme unit which equals 1 micromole substrate catalyzed per minute (1 umol/min); 1 mU = 1 nmol/min","umol/min","UMOL/MIN","1",1,false],[false,"milli enzyme unit per milligram","mU/mg","MU/MG","catalytic activity",10036894500000000,[0,-1,-1,0,0,0,0],"mU/mg","chemical",true,null,null,1,false,false,1,"mU per mg; milli enzyme units per milligram","LOINC","CCnt","Clinical","1 U is the standard enzyme unit which equals 1 micromole substrate catalyzed per minute (1 umol/min); 1 mU = 1 nmol/min","umol/min","UMOL/MIN","1",1,false],[false,"milli enzyme unit per milliliter","mU/mL","MU/ML","catalytic activity",10036894500000000000,[-3,-1,0,0,0,0,0],"mU/mL","chemical",true,null,null,1,false,false,1,"mU per mL; milli enzyme units per milliliter; millilitre; enzymatic activity per volume; enzyme activity","LOINC","CCnc","Clinical","1 U is the standard enzyme unit which equals 1 micromole substrate catalyzed per minute (1 umol/min); 1 mU = 1 nmol/min","umol/min","UMOL/MIN","1",1,false],[false,"milli enzyme unit per milliliter per minute","mU/mL/min","(MU/ML)/MIN","catalytic activity",167281575000000000,[-3,-2,0,0,0,0,0],"(mU/mL)/min","chemical",true,null,null,1,false,false,1,"mU per mL per min; mU per milliliters per minute; millilitres; milli enzyme units; enzymatic activity; enzyme activity","LOINC","CCncRat","Clinical","1 U is the standard enzyme unit which equals 1 micromole substrate catalyzed per minute (1 umol/min); 1 mU = 1 nmol/min","umol/min","UMOL/MIN","1",1,false],[false,"millivolt","mV","MV","electric potential",1,[2,-2,1,0,0,-1,0],"mV","si",true,null,null,1,false,false,0,"millivolts","LOINC","Elpot","Clinical","unit of electric potential (voltage)","J/C","J/C","1",1,false],[false,"Newton centimeter","N.cm","N.CM","force",10,[2,-2,1,0,0,0,0],"N.cm","si",true,null,null,1,false,false,0,"N*cm; Ncm; N cm; Newton*centimeters; Newton* centimetres; torque; work","LOINC","","Clinical","as a measurement of work, N.cm = 1/100 Joules;\\nnote that N.m is the standard unit of measurement for torque (although dimensionally equivalent to Joule), and N.cm can also be thought of as a torqe unit","kg.m/s2","KG.M/S2","1",1,false],[false,"Newton second","N.s","N.S","force",1000,[1,-1,1,0,0,0,0],"N.s","si",true,null,null,1,false,false,0,"Newton*seconds; N*s; N s; Ns; impulse; imp","LOINC","","Clinical","standard unit of impulse","kg.m/s2","KG.M/S2","1",1,false],[false,"nanogram","ng","NG","mass",1e-9,[0,0,1,0,0,0,0],"ng",null,false,"M",null,1,false,false,0,"nanograms","LOINC","Mass","Clinical","",null,null,null,null,false],[false,"nanogram per 24 hour","ng/(24.h)","NG/(24.HR)","mass",1.1574074074074075e-14,[0,-1,1,0,0,0,0],"ng/h",null,false,"M",null,1,false,false,0,"ng/24hrs; ng/24 hrs; nanograms per 24 hours","LOINC","MRat","Clinical","",null,null,null,null,false],[false,"nanogram per 8 hour","ng/(8.h)","NG/(8.HR)","mass",3.4722222222222224e-14,[0,-1,1,0,0,0,0],"ng/h",null,false,"M",null,1,false,false,0,"ng/8hrs; ng/8 hrs; nanograms per 8 hours","LOINC","MRat","Clinical","",null,null,null,null,false],[false,"nanogram per million","ng/10*6","NG/(10*6)","mass",1e-15,[0,0,1,0,0,0,0],"ng/(10<sup>6</sup>)",null,false,"M",null,1,false,false,0,"ng/10^6; ng per 10*6; 10^6; nanograms","LOINC","MNum","Clinical","",null,null,null,null,false],[false,"nanogram per day","ng/d","NG/D","mass",1.1574074074074075e-14,[0,-1,1,0,0,0,0],"ng/d",null,false,"M",null,1,false,false,0,"ng/dy; ng per day; nanograms ","LOINC","MRat","Clinical","",null,null,null,null,false],[false,"nanogram per deciliter","ng/dL","NG/DL","mass",0.00001,[-3,0,1,0,0,0,0],"ng/dL",null,false,"M",null,1,false,false,0,"ng per dL; nanograms per deciliter; decilitre","LOINC","MCnc","Clinical","",null,null,null,null,false],[false,"nanogram per gram","ng/g","NG/G","mass",1e-9,[0,0,0,0,0,0,0],"ng/g",null,false,"M",null,1,false,false,0,"ng/gm; ng per gm; nanograms per gram","LOINC","MCnt","Clinical","",null,null,null,null,false],[false,"nanogram per hour","ng/h","NG/HR","mass",2.777777777777778e-13,[0,-1,1,0,0,0,0],"ng/h",null,false,"M",null,1,false,false,0,"ng/hr; ng per hr; nanograms per hour","LOINC","MRat","Clinical","",null,null,null,null,false],[false,"nanogram per kilogram","ng/kg","NG/KG","mass",1e-12,[0,0,0,0,0,0,0],"ng/kg",null,false,"M",null,1,false,false,0,"ng per kg; nanograms per kilogram","LOINC","MCnt","Clinical","",null,null,null,null,false],[false,"nanogram per kilogram per 8 hour","ng/kg/(8.h)","(NG/KG)/(8.HR)","mass",3.472222222222222e-17,[0,-1,0,0,0,0,0],"(ng/kg)/h",null,false,"M",null,1,false,false,0,"ng/(8.h.kg); ng/kg/8hrs; ng/kg/8 hrs; ng per kg per 8hrs; 8 hrs; nanograms per kilograms per 8 hours; shift","LOINC","MRtoRat ","Clinical","unit used to measure mass dose rate per patient body mass",null,null,null,null,false],[false,"nanogram per kilogram per hour","ng/kg/h","(NG/KG)/HR","mass",2.7777777777777775e-16,[0,-1,0,0,0,0,0],"(ng/kg)/h",null,false,"M",null,1,false,false,0,"ng/(kg.h); ng/kg/hr; ng per kg per hr; nanograms per kilograms per hour","LOINC","MRtoRat ","Clinical","unit used to measure mass dose rate per patient body mass",null,null,null,null,false],[false,"nanogram per kilogram per minute","ng/kg/min","(NG/KG)/MIN","mass",1.6666666666666667e-14,[0,-1,0,0,0,0,0],"(ng/kg)/min",null,false,"M",null,1,false,false,0,"ng/(kg.min); ng per kg per min; nanograms per kilograms per minute","LOINC","MRtoRat ","Clinical","unit used to measure mass dose rate per patient body mass",null,null,null,null,false],[false,"nanogram per liter","ng/L","NG/L","mass",0.000001,[-3,0,1,0,0,0,0],"ng/L",null,false,"M",null,1,false,false,0,"ng per L; nanograms per liter; litre","LOINC","MCnc","Clinical","",null,null,null,null,false],[false,"nanogram per square meter","ng/m2","NG/M2","mass",1e-9,[-2,0,1,0,0,0,0],"ng/(m<sup>2</sup>)",null,false,"M",null,1,false,false,0,"ng/m^2; ng/sq. m; ng per m2; m^2; sq. meter; nanograms; meter squared; metre","LOINC","ArMass","Clinical","unit used to measure mass dose per patient body surface area",null,null,null,null,false],[false,"nanogram per milligram","ng/mg","NG/MG","mass",0.000001,[0,0,0,0,0,0,0],"ng/mg",null,false,"M",null,1,false,false,0,"ng per mg; nanograms","LOINC","MCnt","Clinical","",null,null,null,null,false],[false,"nanogram per milligram per hour","ng/mg/h","(NG/MG)/HR","mass",2.7777777777777777e-10,[0,-1,0,0,0,0,0],"(ng/mg)/h",null,false,"M",null,1,false,false,0,"ng/mg/hr; ng per mg per hr; nanograms per milligrams per hour","LOINC","MRtoRat ","Clinical","",null,null,null,null,false],[false,"nanogram per minute","ng/min","NG/MIN","mass",1.6666666666666667e-11,[0,-1,1,0,0,0,0],"ng/min",null,false,"M",null,1,false,false,0,"ng per min; nanograms","LOINC","MRat","Clinical","",null,null,null,null,false],[false,"nanogram per millliiter","ng/mL","NG/ML","mass",0.001,[-3,0,1,0,0,0,0],"ng/mL",null,false,"M",null,1,false,false,0,"ng per mL; nanograms; millilitre","LOINC","MCnc","Clinical","",null,null,null,null,false],[false,"nanogram per milliliter per hour","ng/mL/h","(NG/ML)/HR","mass",2.7777777777777776e-7,[-3,-1,1,0,0,0,0],"(ng/mL)/h",null,false,"M",null,1,false,false,0,"ng/mL/hr; ng per mL per mL; nanograms per milliliter per hour; nanogram per millilitre per hour; nanograms per millilitre per hour; enzymatic activity per volume; enzyme activity per milliliters","LOINC","CCnc","Clinical","tests that measure enzymatic activity",null,null,null,null,false],[false,"nanogram per second","ng/s","NG/S","mass",1e-9,[0,-1,1,0,0,0,0],"ng/s",null,false,"M",null,1,false,false,0,"ng/sec; ng per sec; nanograms per second","LOINC","MRat","Clinical","",null,null,null,null,false],[false,"nanogram per enzyme unit","ng/U","NG/U","mass",9.963241120049634e-26,[0,1,1,0,0,0,0],"ng/U",null,false,"M",null,1,false,false,-1,"ng per U; nanograms per enzyme unit","LOINC","CMass","Clinical","1 U is the standard enzyme unit which equals 1 micromole substrate catalyzed per minute (1 umol/min)",null,null,null,null,false],[false,"nanokatal","nkat","NKAT","catalytic activity",602213670000000,[0,-1,0,0,0,0,0],"nkat","chemical",true,null,null,1,false,false,1,"nanokatals","LOINC","CAct","Clinical","kat is a unit of catalytic activity with base units = mol/s. Rarely used because its units are too large to practically express catalytic activity. See enzyme unit [U] which is the standard unit for catalytic activity.","mol/s","MOL/S","1",1,false],[false,"nanoliter","nL","NL","volume",1.0000000000000002e-12,[3,0,0,0,0,0,0],"nL","iso1000",true,null,null,1,false,false,0,"nanoliters; nanolitres","LOINC","Vol","Clinical","","l",null,"1",1,false],[false,"nanometer","nm","NM","length",1e-9,[1,0,0,0,0,0,0],"nm",null,false,"L",null,1,false,false,0,"nanometers; nanometres","LOINC","Len","Clinical","",null,null,null,null,false],[false,"nanometer per second per liter","nm/s/L","(NM/S)/L","length",0.000001,[-2,-1,0,0,0,0,0],"(nm/s)/L",null,false,"L",null,1,false,false,0,"nm/sec/liter; nm/sec/litre; nm per s per l; nm per sec per l; nanometers per second per liter; nanometre per second per litre; nanometres per second per litre","LOINC","VelCnc","Clinical","",null,null,null,null,false],[false,"nanomole","nmol","NMOL","amount of substance",602213670000000,[0,0,0,0,0,0,0],"nmol","si",true,null,null,1,false,false,1,"nanomoles","LOINC","Sub","Clinical","","10*23","10*23","6.0221367",6.0221367,false],[false,"nanomole per 24 hour","nmol/(24.h)","NMOL/(24.HR)","amount of substance",6970065625,[0,-1,0,0,0,0,0],"nmol/h","si",true,null,null,1,false,false,1,"nmol/24hr; nmol/24 hr; nanomoles per 24 hours; nmol/day; nanomoles per day; nmol per day; nanomole/day; nanomol/day","LOINC","SRat","Clinical","","10*23","10*23","6.0221367",6.0221367,false],[false,"nanomole per day","nmol/d","NMOL/D","amount of substance",6970065625,[0,-1,0,0,0,0,0],"nmol/d","si",true,null,null,1,false,false,1,"nmol/day; nanomoles per day; nmol per day; nanomole/day; nanomol/day; nmol/24hr; nmol/24 hr; nanomoles per 24 hours; ","LOINC","SRat","Clinical","","10*23","10*23","6.0221367",6.0221367,false],[false,"nanomole per deciliter","nmol/dL","NMOL/DL","amount of substance",6022136700000000000,[-3,0,0,0,0,0,0],"nmol/dL","si",true,null,null,1,false,false,1,"nmol per dL; nanomoles per deciliter; nanomole per decilitre; nanomoles per decilitre; nanomole/deciliter; nanomole/decilitre; nanomol/deciliter; nanomol/decilitre","LOINC","SCnc","Clinical","","10*23","10*23","6.0221367",6.0221367,false],[false,"nanomole per gram","nmol/g","NMOL/G","amount of substance",602213670000000,[0,0,-1,0,0,0,0],"nmol/g","si",true,null,null,1,false,false,1,"nmol per gram; nanomoles per gram; nanomole/gram","LOINC","SCnt","Clinical","","10*23","10*23","6.0221367",6.0221367,false],[false,"nanomole per hour per liter","nmol/h/L","(NMOL/HR)/L","amount of substance",167281575000000,[-3,-1,0,0,0,0,0],"(nmol/h)/L","si",true,null,null,1,false,false,1,"nmol/hrs/L; nmol per hrs per L; nanomoles per hours per liter; litre; enzymatic activity per volume; enzyme activities","LOINC","CCnc","Clinical","","10*23","10*23","6.0221367",6.0221367,false],[false,"nanomole per liter","nmol/L","NMOL/L","amount of substance",602213670000000000,[-3,0,0,0,0,0,0],"nmol/L","si",true,null,null,1,false,false,1,"nmol per L; nanomoles per liter; litre","LOINC","SCnc","Clinical","","10*23","10*23","6.0221367",6.0221367,false],[false,"nanomole per milligram","nmol/mg","NMOL/MG","amount of substance",602213670000000000,[0,0,-1,0,0,0,0],"nmol/mg","si",true,null,null,1,false,false,1,"nmol per mg; nanomoles per milligram","LOINC","SCnt","Clinical","","10*23","10*23","6.0221367",6.0221367,false],[false,"nanomole per milligram per hour","nmol/mg/h","(NMOL/MG)/HR","amount of substance",167281575000000,[0,-1,-1,0,0,0,0],"(nmol/mg)/h","si",true,null,null,1,false,false,1,"nmol/mg/hr; nmol per mg per hr; nanomoles per milligrams per hour","LOINC","SCntRat","Clinical","","10*23","10*23","6.0221367",6.0221367,false],[false,"nanomole per milligram of protein","nmol/mg{prot}","NMOL/MG","amount of substance",602213670000000000,[0,0,-1,0,0,0,0],"nmol/mg","si",true,null,null,1,false,false,1,"nanomoles; nmol/mg prot; nmol per mg prot","LOINC","Ratio; CCnt","Clinical","","10*23","10*23","6.0221367",6.0221367,false],[false,"nanomole per minute","nmol/min","NMOL/MIN","amount of substance",10036894500000,[0,-1,0,0,0,0,0],"nmol/min","si",true,null,null,1,false,false,1,"nmol per min; nanomoles per minute; milli enzyme units; enzyme activity per volume; enzymatic activity","LOINC","CCnc","Clinical","unit for the enzyme unit U = umol/min. nmol/min = mU (milli enzyme unit)","10*23","10*23","6.0221367",6.0221367,false],[false,"nanomole per minute per milliliter","nmol/min/mL","(NMOL/MIN)/ML","amount of substance",10036894500000000000,[-3,-1,0,0,0,0,0],"(nmol/min)/mL","si",true,null,null,1,false,false,1,"nmol per min per mL; nanomoles per minutes per milliliter; millilitre; milli enzyme units per volume; enzyme activity; enzymatic activity","LOINC","CCnc","Clinical","unit for the enzyme unit U = umol/min. nmol/mL/min = mU/mL","10*23","10*23","6.0221367",6.0221367,false],[false,"nanomole per milliliter","nmol/mL","NMOL/ML","amount of substance",602213670000000000000,[-3,0,0,0,0,0,0],"nmol/mL","si",true,null,null,1,false,false,1,"nmol per mL; nanomoles per milliliter; millilitre","LOINC","SCnc","Clinical","","10*23","10*23","6.0221367",6.0221367,false],[false,"nanomole per milliliter per hour","nmol/mL/h","(NMOL/ML)/HR","amount of substance",167281575000000000,[-3,-1,0,0,0,0,0],"(nmol/mL)/h","si",true,null,null,1,false,false,1,"nmol/mL/hr; nmol per mL per hr; nanomoles per milliliters per hour; millilitres; milli enzyme units per volume; enzyme activity; enzymatic activity","LOINC","CCnc","Clinical","unit for the enzyme unit U = umol/min.","10*23","10*23","6.0221367",6.0221367,false],[false,"nanomole per milliliter per minute","nmol/mL/min","(NMOL/ML)/MIN","amount of substance",10036894500000000000,[-3,-1,0,0,0,0,0],"(nmol/mL)/min","si",true,null,null,1,false,false,1,"nmol per mL per min; nanomoles per milliliters per min; millilitres; milli enzyme units per volume; enzyme activity; enzymatic activity","LOINC","CCnc","Clinical","unit for the enzyme unit U = umol/min. nmol/mL/min = mU/mL","10*23","10*23","6.0221367",6.0221367,false],[false,"nanomole per millimole","nmol/mmol","NMOL/MMOL","amount of substance",0.000001,[0,0,0,0,0,0,0],"nmol/mmol","si",true,null,null,1,false,false,0,"nmol per mmol; nanomoles per millimole","LOINC","SRto","Clinical","","10*23","10*23","6.0221367",6.0221367,false],[false,"nanomole per millimole of creatinine","nmol/mmol{creat}","NMOL/MMOL","amount of substance",0.000001,[0,0,0,0,0,0,0],"nmol/mmol","si",true,null,null,1,false,false,0,"nanomoles","LOINC","SRto","Clinical","","10*23","10*23","6.0221367",6.0221367,false],[false,"nanomole per mole","nmol/mol","NMOL/MOL","amount of substance",1e-9,[0,0,0,0,0,0,0],"nmol/mol","si",true,null,null,1,false,false,0,"nmol per mole; nanomoles","LOINC","SRto","Clinical","","10*23","10*23","6.0221367",6.0221367,false],[false,"nanomole per nanomole","nmol/nmol","NMOL/NMOL","amount of substance",1,[0,0,0,0,0,0,0],"nmol/nmol","si",true,null,null,1,false,false,0,"nmol per nmol; nanomoles","LOINC","SRto","Clinical","","10*23","10*23","6.0221367",6.0221367,false],[false,"nanomole per second","nmol/s","NMOL/S","amount of substance",602213670000000,[0,-1,0,0,0,0,0],"nmol/s","si",true,null,null,1,false,false,1,"nmol/sec; nmol per sec; nanomoles per sercond; milli enzyme units; enzyme activity; enzymatic activity","LOINC","CCnc","Clinical","unit for the enzyme unit U = umol/min.","10*23","10*23","6.0221367",6.0221367,false],[false,"nanomole per second per liter","nmol/s/L","(NMOL/S)/L","amount of substance",602213670000000000,[-3,-1,0,0,0,0,0],"(nmol/s)/L","si",true,null,null,1,false,false,1,"nmol/sec/L; nmol per s per L; nmol per sec per L; nanomoles per seconds per liter; litre; milli enzyme units per volume; enzyme activity; enzymatic activity","LOINC","CCnc","Clinical","unit for the enzyme unit U = umol/min.","10*23","10*23","6.0221367",6.0221367,false],[false,"nanosecond","ns","NS","time",1e-9,[0,1,0,0,0,0,0],"ns",null,false,"T",null,1,false,false,0,"nanoseconds","LOINC","Time","Clinical","",null,null,null,null,false],[false,"nanoenzyme unit per milliliter","nU/mL","NU/ML","catalytic activity",10036894500000,[-3,-1,0,0,0,0,0],"nU/mL","chemical",true,null,null,1,false,false,1,"nU per mL; nanoenzyme units per milliliter; millilitre; enzymatic activity per volume; enzyme activity","LOINC","CCnc","Clinical","1 U is the standard enzyme unit which equals 1 micromole substrate catalyzed per minute (1 umol/min); 1 fU = pmol/min","umol/min","UMOL/MIN","1",1,false],[false,"Ohm meter","Ohm.m","OHM.M","electric resistance",1000,[3,-1,1,0,0,-2,0],"Ω.m","si",true,null,null,1,false,false,0,"electric resistivity; meters; metres","LOINC","","Clinical","unit of electric resistivity","V/A","V/A","1",1,false],[false,"osmole per kilogram","osm/kg","OSM/KG","amount of substance (dissolved particles)",602213670000000000000,[0,0,-1,0,0,0,0],"osm/kg","chemical",true,null,null,1,false,false,1,"osm per kg; osmoles per kilogram; osmols","LOINC","Osmol","Clinical","","mol","MOL","1",1,false],[false,"osmole per liter","osm/L","OSM/L","amount of substance (dissolved particles)",6.0221366999999994e+26,[-3,0,0,0,0,0,0],"osm/L","chemical",true,null,null,1,false,false,1,"osm per L; osmoles per liter; litre; osmols","LOINC","Osmol","Clinical","","mol","MOL","1",1,false],[false,"picoampere","pA","PA","electric current",1e-12,[0,-1,0,0,0,1,0],"pA","si",true,null,null,1,false,false,0,"picoamperes","LOINC","","Clinical","equal to 10^-12 amperes","C/s","C/S","1",1,false],[false,"picogram","pg","PG","mass",1e-12,[0,0,1,0,0,0,0],"pg",null,false,"M",null,1,false,false,0,"picograms","LOINC","Mass; EntMass","Clinical","",null,null,null,null,false],[false,"picogram per deciliter","pg/dL","PG/DL","mass",9.999999999999999e-9,[-3,0,1,0,0,0,0],"pg/dL",null,false,"M",null,1,false,false,0,"pg per dL; picograms; decilitre","LOINC","MCnc","Clinical","",null,null,null,null,false],[false,"picogram per liter","pg/L","PG/L","mass",1e-9,[-3,0,1,0,0,0,0],"pg/L",null,false,"M",null,1,false,false,0,"pg per L; picograms; litre","LOINC","MCnc","Clinical","",null,null,null,null,false],[false,"picogram per milligram","pg/mg","PG/MG","mass",1e-9,[0,0,0,0,0,0,0],"pg/mg",null,false,"M",null,1,false,false,0,"pg per mg; picograms","LOINC","MCnt","Clinical","",null,null,null,null,false],[false,"picogram per milliliter","pg/mL","PG/ML","mass",0.000001,[-3,0,1,0,0,0,0],"pg/mL",null,false,"M",null,1,false,false,0,"pg per mL; picograms per milliliter; millilitre","LOINC","MCnc","Clinical","",null,null,null,null,false],[false,"picogram per millimeter","pg/mm","PG/MM","mass",1e-9,[-1,0,1,0,0,0,0],"pg/mm",null,false,"M",null,1,false,false,0,"pg per mm; picogram/millimeter; picogram/millimetre; picograms per millimeter; millimetre","LOINC","Lineic Mass","Clinical","",null,null,null,null,false],[false,"picokatal","pkat","PKAT","catalytic activity",602213670000,[0,-1,0,0,0,0,0],"pkat","chemical",true,null,null,1,false,false,1,"pkats; picokatals","LOINC","CAct","Clinical","kat is a unit of catalytic activity with base units = mol/s. Rarely used because its units are too large to practically express catalytic activity. See enzyme unit [U] which is the standard unit for catalytic activity.","mol/s","MOL/S","1",1,false],[false,"picoliter","pL","PL","volume",1e-15,[3,0,0,0,0,0,0],"pL","iso1000",true,null,null,1,false,false,0,"picoliters; picolitres","LOINC","Vol","Clinical","","l",null,"1",1,false],[false,"picometer","pm","PM","length",1e-12,[1,0,0,0,0,0,0],"pm",null,false,"L",null,1,false,false,0,"picometers; picometres","LOINC","Len","Clinical","",null,null,null,null,false],[false,"picomole","pmol","PMOL","amount of substance",602213670000,[0,0,0,0,0,0,0],"pmol","si",true,null,null,1,false,false,1,"picomoles; pmols","LOINC","Sub","Clinical","","10*23","10*23","6.0221367",6.0221367,false],[false,"picomole per 24 hour","pmol/(24.h)","PMOL/(24.HR)","amount of substance",6970065.625,[0,-1,0,0,0,0,0],"pmol/h","si",true,null,null,1,false,false,1,"pmol/24hrs; pmol/24 hrs; pmol per 24 hrs; 24hrs; days; dy; picomoles per 24 hours","LOINC","SRat","Clinical","","10*23","10*23","6.0221367",6.0221367,false],[false,"picomole per day","pmol/d","PMOL/D","amount of substance",6970065.625,[0,-1,0,0,0,0,0],"pmol/d","si",true,null,null,1,false,false,1,"pmol/dy; pmol per day; 24 hours; 24hrs; 24 hrs; picomoles","LOINC","SRat","Clinical","","10*23","10*23","6.0221367",6.0221367,false],[false,"picomole per deciliter","pmol/dL","PMOL/DL","amount of substance",6022136700000000,[-3,0,0,0,0,0,0],"pmol/dL","si",true,null,null,1,false,false,1,"pmol per dL; picomoles per deciliter; decilitre","LOINC","SCnc","Clinical","","10*23","10*23","6.0221367",6.0221367,false],[false,"picomole per gram","pmol/g","PMOL/G","amount of substance",602213670000,[0,0,-1,0,0,0,0],"pmol/g","si",true,null,null,1,false,false,1,"pmol per gm; picomoles per gram; picomole/gram","LOINC","SCnt","Clinical","","10*23","10*23","6.0221367",6.0221367,false],[false,"picomole per hour per milliliter ","pmol/h/mL","(PMOL/HR)/ML","amount of substance",167281575000000,[-3,-1,0,0,0,0,0],"(pmol/h)/mL","si",true,null,null,1,false,false,1,"pmol/hrs/mL; pmol per hrs per mL; picomoles per hour per milliliter; millilitre; micro enzyme units per volume; enzymatic activity; enzyme activity","LOINC","CCnc","Clinical","unit for the enzyme unit U = umol/min. ","10*23","10*23","6.0221367",6.0221367,false],[false,"picomole per liter","pmol/L","PMOL/L","amount of substance",602213670000000,[-3,0,0,0,0,0,0],"pmol/L","si",true,null,null,1,false,false,1,"picomole/liter; pmol per L; picomoles; litre","LOINC","SCnc","Clinical","","10*23","10*23","6.0221367",6.0221367,false],[false,"picomole per minute","pmol/min","PMOL/MIN","amount of substance",10036894500,[0,-1,0,0,0,0,0],"pmol/min","si",true,null,null,1,false,false,1,"picomole/minute; pmol per min; picomoles per minute; micro enzyme units; enzymatic activity; enzyme activity","LOINC","CCnc","Clinical","unit for the enzyme unit U = umol/min. pmol/min = uU (micro enzyme unit)","10*23","10*23","6.0221367",6.0221367,false],[false,"picomole per milliliter","pmol/mL","PMOL/ML","amount of substance",602213670000000000,[-3,0,0,0,0,0,0],"pmol/mL","si",true,null,null,1,false,false,1,"picomole/milliliter; picomole/millilitre; pmol per mL; picomoles; millilitre; picomols; pmols","LOINC","SCnc","Clinical","","10*23","10*23","6.0221367",6.0221367,false],[false,"picomole per micromole","pmol/umol","PMOL/UMOL","amount of substance",0.000001,[0,0,0,0,0,0,0],"pmol/μmol","si",true,null,null,1,false,false,0,"pmol/mcgmol; picomole/micromole; pmol per umol; pmol per mcgmol; picomoles ","LOINC","SRto","Clinical","","10*23","10*23","6.0221367",6.0221367,false],[false,"picosecond","ps","PS","time",1e-12,[0,1,0,0,0,0,0],"ps",null,false,"T",null,1,false,false,0,"picoseconds; psec","LOINC","Time","Clinical","",null,null,null,null,false],[false,"picotesla","pT","PT","magnetic flux density",1e-9,[0,-1,1,0,0,-1,0],"pT","si",true,null,null,1,false,false,0,"picoteslas","LOINC","","Clinical","SI unit of magnetic field strength for magnetic field B","Wb/m2","WB/M2","1",1,false],[false,"enzyme unit per 12 hour","U/(12.h)","U/(12.HR)","catalytic activity",232335520833.33334,[0,-2,0,0,0,0,0],"U/h","chemical",true,null,null,1,false,false,1,"U/12hrs; U/ 12hrs; U per 12 hrs; 12hrs; enzyme units per 12 hours; enzyme activity; enzymatic activity per time; umol per min per 12 hours; micromoles per minute per 12 hours; umol/min/12hr","LOINC","CRat","Clinical","1 U is the standard enzyme unit which equals 1 micromole substrate catalyzed per minute (1 umol/min)","umol/min","UMOL/MIN","1",1,false],[false,"enzyme unit per 2 hour","U/(2.h)","U/(2.HR)","catalytic activity",1394013125000,[0,-2,0,0,0,0,0],"U/h","chemical",true,null,null,1,false,false,1,"U/2hrs; U/ 2hrs; U per 2 hrs; 2hrs; enzyme units per 2 hours; enzyme activity; enzymatic activity per time; umol per minute per 2 hours; micromoles per minute; umol/min/2hr; umol per min per 2hr","LOINC","CRat","Clinical","1 U is the standard enzyme unit which equals 1 micromole substrate catalyzed per minute (1 umol/min)","umol/min","UMOL/MIN","1",1,false],[false,"enzyme unit per 24 hour","U/(24.h)","U/(24.HR)","catalytic activity",116167760416.66667,[0,-2,0,0,0,0,0],"U/h","chemical",true,null,null,1,false,false,1,"U/24hrs; U/ 24hrs; U per 24 hrs; 24hrs; enzyme units per 24 hours; enzyme activity; enzymatic activity per time; micromoles per minute per 24 hours; umol/min/24hr; umol per min per 24hr","LOINC","CRat","Clinical","1 U is the standard enzyme unit which equals 1 micromole substrate catalyzed per minute (1 umol/min)","umol/min","UMOL/MIN","1",1,false],[false,"enzyme unit per 10","U/10","U/10","catalytic activity",1003689450000000,[0,-1,0,0,0,0,0],"U","chemical",true,null,null,1,false,false,1,"enzyme unit/10; U per 10; enzyme units per 10; enzymatic activity; enzyme activity; micromoles per minute; umol/min/10","LOINC","CCnc","Clinical","1 U is the standard enzyme unit which equals 1 micromole substrate catalyzed per minute (1 umol/min)","umol/min","UMOL/MIN","1",1,false],[false,"enzyme unit per 10 billion","U/10*10","U/(10*10)","catalytic activity",1003689.45,[0,-1,0,0,0,0,0],"U/(10<sup>10</sup>)","chemical",true,null,null,1,false,false,1,"U per 10*10; enzyme units per 10*10; U per 10 billion; enzyme units; enzymatic activity; micromoles per minute per 10 billion; umol/min/10*10","LOINC","CCnc","Clinical","1 U is the standard enzyme unit which equals 1 micromole substrate catalyzed per minute (1 umol/min)","umol/min","UMOL/MIN","1",1,false],[false,"enzyme unit per trillion","U/10*12","U/(10*12)","catalytic activity",10036.8945,[0,-1,0,0,0,0,0],"U/(10<sup>12</sup>)","chemical",true,null,null,1,false,false,1,"enzyme unit/10*12; U per 10*12; enzyme units per 10*12; enzyme units per trillion; enzymatic activity; micromoles per minute per trillion; umol/min/10*12; umol per min per 10*12","LOINC","CCnc","Clinical","1 U is the standard enzyme unit which equals 1 micromole substrate catalyzed per minute (1 umol/min)","umol/min","UMOL/MIN","1",1,false],[false,"enzyme unit per million","U/10*6","U/(10*6)","catalytic activity",10036894500,[0,-1,0,0,0,0,0],"U/(10<sup>6</sup>)","chemical",true,null,null,1,false,false,1,"enzyme unit/10*6; U per 10*6; enzyme units per 10*6; enzyme units; enzymatic activity per volume; micromoles per minute per million; umol/min/10*6; umol per min per 10*6","LOINC","CCnc","Clinical","1 U is the standard enzyme unit which equals 1 micromole substrate catalyzed per minute (1 umol/min)","umol/min","UMOL/MIN","1",1,false],[false,"enzyme unit per billion","U/10*9","U/(10*9)","catalytic activity",10036894.5,[0,-1,0,0,0,0,0],"U/(10<sup>9</sup>)","chemical",true,null,null,1,false,false,1,"enzyme unit/10*9; U per 10*9; enzyme units per 10*9; enzymatic activity per volume; micromoles per minute per billion; umol/min/10*9; umol per min per 10*9","LOINC","CCnc","Clinical","1 U is the standard enzyme unit which equals 1 micromole substrate catalyzed per minute (1 umol/min)","umol/min","UMOL/MIN","1",1,false],[false,"enzyme unit per day","U/d","U/D","catalytic activity",116167760416.66667,[0,-2,0,0,0,0,0],"U/d","chemical",true,null,null,1,false,false,1,"U/dy; enzyme units per day; enzyme units; enzyme activity; enzymatic activity per time; micromoles per minute per day; umol/min/day; umol per min per day","LOINC","CRat","Clinical","1 U is the standard enzyme unit which equals 1 micromole substrate catalyzed per minute (1 umol/min)","umol/min","UMOL/MIN","1",1,false],[false,"enzyme unit per deciliter","U/dL","U/DL","catalytic activity",100368945000000000000,[-3,-1,0,0,0,0,0],"U/dL","chemical",true,null,null,1,false,false,1,"U per dL; enzyme units per deciliter; decilitre; micromoles per minute per deciliter; umol/min/dL; umol per min per dL","LOINC","CCnc","Clinical","1 U is the standard enzyme unit which equals 1 micromole substrate catalyzed per minute (1 umol/min)","umol/min","UMOL/MIN","1",1,false],[false,"enzyme unit per gram","U/g","U/G","catalytic activity",10036894500000000,[0,-1,-1,0,0,0,0],"U/g","chemical",true,null,null,1,false,false,1,"U/gm; U per gm; enzyme units per gram; micromoles per minute per gram; umol/min/g; umol per min per g","LOINC","CCnt","Clinical","1 U is the standard enzyme unit which equals 1 micromole substrate catalyzed per minute (1 umol/min)","umol/min","UMOL/MIN","1",1,false],[false,"enzyme unit per hour","U/h","U/HR","catalytic activity",2788026250000,[0,-2,0,0,0,0,0],"U/h","chemical",true,null,null,1,false,false,1,"U/hr; U per hr; enzyme units per hour; micromoles per minute per hour; umol/min/hr; umol per min per hr","LOINC","CRat","Clinical","1 U is the standard enzyme unit which equals 1 micromole substrate catalyzed per minute (1 umol/min)","umol/min","UMOL/MIN","1",1,false],[false,"enzyme unit per liter","U/L","U/L","catalytic activity",10036894500000000000,[-3,-1,0,0,0,0,0],"U/L","chemical",true,null,null,1,false,false,1,"enzyme unit/liter; enzyme unit/litre; U per L; enzyme units per liter; enzyme unit per litre; micromoles per minute per liter; umol/min/L; umol per min per L","LOINC","CCnc","Clinical","1 U is the standard enzyme unit which equals 1 micromole substrate catalyzed per minute (1 umol/min)","umol/min","UMOL/MIN","1",1,false],[false,"enzyme unit per minute","U/min","U/MIN","catalytic activity",167281575000000,[0,-2,0,0,0,0,0],"U/min","chemical",true,null,null,1,false,false,1,"enzyme unit/minute; U per min; enzyme units; umol/min/min; micromoles per minute per minute; micromoles per min per min; umol","LOINC","CRat","Clinical","1 U is the standard enzyme unit which equals 1 micromole substrate catalyzed per minute (1 umol/min)","umol/min","UMOL/MIN","1",1,false],[false,"enzyme unit per milliliter","U/mL","U/ML","catalytic activity",1.00368945e+22,[-3,-1,0,0,0,0,0],"U/mL","chemical",true,null,null,1,false,false,1,"U per mL; enzyme units per milliliter; millilitre; micromoles per minute per milliliter; umol/min/mL; umol per min per mL","LOINC","CCnc","Clinical","1 U is the standard enzyme unit which equals 1 micromole substrate catalyzed per minute (1 umol/min)","umol/min","UMOL/MIN","1",1,false],[false,"enzyme unit per second","U/s","U/S","catalytic activity",10036894500000000,[0,-2,0,0,0,0,0],"U/s","chemical",true,null,null,1,false,false,1,"U/sec; U per second; enzyme units per second; micromoles per minute per second; umol/min/sec; umol per min per sec","LOINC","CRat","Clinical","1 U is the standard enzyme unit which equals 1 micromole substrate catalyzed per minute (1 umol/min)","umol/min","UMOL/MIN","1",1,false],[false,"micro international unit","u[IU]","U[IU]","arbitrary",0.000001,[0,0,0,0,0,0,0],"μi.U.","chemical",true,null,null,1,false,true,0,"uIU; u IU; microinternational units","LOINC","Arb","Clinical","International units (IU) are analyte and reference specimen  specific arbitrary units (held at WHO)","[iU]","[IU]","1",1,false],[false,"micro international unit per liter","u[IU]/L","U[IU]/L","arbitrary",0.001,[-3,0,0,0,0,0,0],"(μi.U.)/L","chemical",true,null,null,1,false,true,0,"uIU/L; u IU/L; uIU per L; microinternational units per liter; litre; ","LOINC","ACnc","Clinical","International units (IU) are analyte and reference specimen  specific arbitrary units (held at WHO)","[iU]","[IU]","1",1,false],[false,"micro international unit per milliliter","u[IU]/mL","U[IU]/ML","arbitrary",1,[-3,0,0,0,0,0,0],"(μi.U.)/mL","chemical",true,null,null,1,false,true,0,"uIU/mL; u IU/mL; uIU per mL; microinternational units per milliliter; millilitre","LOINC","ACnc","Clinical","International units (IU) are analyte and reference specimen  specific arbitrary units (held at WHO)","[iU]","[IU]","1",1,false],[false,"microequivalent","ueq","UEQ","amount of substance",602213670000000000,[0,0,0,0,0,0,0],"μeq","chemical",true,null,null,1,false,false,1,"microequivalents; 10^-6 equivalents; 10-6 equivalents","LOINC","Sub","Clinical","","mol","MOL","1",1,false],[false,"microequivalent per liter","ueq/L","UEQ/L","amount of substance",602213670000000000000,[-3,0,0,0,0,0,0],"μeq/L","chemical",true,null,null,1,false,false,1,"ueq per liter; litre; microequivalents","LOINC","MCnc","Clinical","","mol","MOL","1",1,false],[false,"microequivalent per milliliter","ueq/mL","UEQ/ML","amount of substance",6.0221367000000003e+23,[-3,0,0,0,0,0,0],"μeq/mL","chemical",true,null,null,1,false,false,1,"ueq per milliliter; millilitre; microequivalents","LOINC","MCnc","Clinical","","mol","MOL","1",1,false],[false,"microgram","ug","UG","mass",0.000001,[0,0,1,0,0,0,0],"μg",null,false,"M",null,1,false,false,0,"mcg; micrograms; 10^-6 grams; 10-6 grams","LOINC","Mass","Clinical","",null,null,null,null,false],[false,"microgram per 100 gram","ug/(100.g)","UG/(100.G)","mass",1e-8,[0,0,0,0,0,0,0],"μg/g",null,false,"M",null,1,false,false,0,"ug/100gm; ug/100 gm; mcg; ug per 100g; 100 gm; mcg per 100g; micrograms per 100 grams","LOINC","MCnt","Clinical","",null,null,null,null,false],[false,"microgram per 24 hour","ug/(24.h)","UG/(24.HR)","mass",1.1574074074074074e-11,[0,-1,1,0,0,0,0],"μg/h",null,false,"M",null,1,false,false,0,"ug/24hrs; ug/24 hrs; mcg/24hrs; ug per 24hrs; mcg per 24hrs; 24 hrs; micrograms per 24 hours","LOINC","MRat","Clinical","",null,null,null,null,false],[false,"microgram per 8 hour","ug/(8.h)","UG/(8.HR)","mass",3.472222222222222e-11,[0,-1,1,0,0,0,0],"μg/h",null,false,"M",null,1,false,false,0,"ug/8hrs; ug/8 hrs; mcg/8hrs; ug per 8hrs; mcg per 8hrs; 8 hrs; micrograms per 8 hours; shift","LOINC","MRat","Clinical","",null,null,null,null,false],[false,"microgram per square foot (international)","ug/[sft_i]","UG/[SFT_I]","mass",0.000010763910416709721,[-2,0,1,0,0,0,0],"μg",null,false,"M",null,1,false,false,0,"ug/sft; ug/ft2; ug/ft^2; ug/sq. ft; micrograms; sq. foot; foot squared","LOINC","ArMass","Clinical","",null,null,null,null,false],[false,"microgram per day","ug/d","UG/D","mass",1.1574074074074074e-11,[0,-1,1,0,0,0,0],"μg/d",null,false,"M",null,1,false,false,0,"ug/dy; mcg/dy; ug per day; mcg; micrograms per day","LOINC","MRat","Clinical","",null,null,null,null,false],[false,"microgram per deciliter","ug/dL","UG/DL","mass",0.009999999999999998,[-3,0,1,0,0,0,0],"μg/dL",null,false,"M",null,1,false,false,0,"ug per dL; mcg/dl; mcg per dl; micrograms per deciliter; decilitre","LOINC","MCnc","Clinical","",null,null,null,null,false],[false,"microgram per gram","ug/g","UG/G","mass",0.000001,[0,0,0,0,0,0,0],"μg/g",null,false,"M",null,1,false,false,0,"ug per gm; mcg/gm; mcg per g; micrograms per gram","LOINC","MCnt","Clinical","",null,null,null,null,false],[false,"microgram per hour","ug/h","UG/HR","mass",2.7777777777777777e-10,[0,-1,1,0,0,0,0],"μg/h",null,false,"M",null,1,false,false,0,"ug/hr; mcg/hr; mcg per hr; ug per hr; ug per hour; micrograms","LOINC","MRat","Clinical","",null,null,null,null,false],[false,"microgram per kilogram","ug/kg","UG/KG","mass",9.999999999999999e-10,[0,0,0,0,0,0,0],"μg/kg",null,false,"M",null,1,false,false,0,"ug per kg; mcg/kg; mcg per kg; micrograms per kilogram","LOINC","MCnt","Clinical","",null,null,null,null,false],[false,"microgram per kilogram per 8 hour","ug/kg/(8.h)","(UG/KG)/(8.HR)","mass",3.472222222222222e-14,[0,-1,0,0,0,0,0],"(μg/kg)/h",null,false,"M",null,1,false,false,0,"ug/kg/8hrs; mcg/kg/8hrs; ug/kg/8 hrs; mcg/kg/8 hrs; ug per kg per 8hrs; 8 hrs; mcg per kg per 8hrs; micrograms per kilograms per 8 hours; shift","LOINC","","Clinical","unit used to measure mass dose rate per patient body mass",null,null,null,null,false],[false,"microgram per kilogram per day","ug/kg/d","(UG/KG)/D","mass",1.1574074074074072e-14,[0,-1,0,0,0,0,0],"(μg/kg)/d",null,false,"M",null,1,false,false,0,"ug/(kg.d); ug/kg/dy; mcg/kg/day; ug per kg per dy; 24 hours; 24hrs; mcg; kilograms; microgram per kilogram and day","LOINC","","Clinical","unit used to measure mass dose rate per patient body mass",null,null,null,null,false],[false,"microgram per kilogram per hour","ug/kg/h","(UG/KG)/HR","mass",2.7777777777777774e-13,[0,-1,0,0,0,0,0],"(μg/kg)/h",null,false,"M",null,1,false,false,0,"ug/(kg.h); ug/kg/hr; mcg/kg/hr; ug per kg per hr; mcg per kg per hr; kilograms","LOINC","","Clinical","unit used to measure mass dose rate per patient body mass",null,null,null,null,false],[false,"microgram per kilogram per minute","ug/kg/min","(UG/KG)/MIN","mass",1.6666666666666664e-11,[0,-1,0,0,0,0,0],"(μg/kg)/min",null,false,"M",null,1,false,false,0,"ug/kg/min; ug/kg/min; mcg/kg/min; ug per kg per min; mcg; micrograms per kilograms per minute ","LOINC","","Clinical","unit used to measure mass dose rate per patient body mass",null,null,null,null,false],[false,"microgram per liter","ug/L","UG/L","mass",0.001,[-3,0,1,0,0,0,0],"μg/L",null,false,"M",null,1,false,false,0,"mcg/L; ug per L; mcg; micrograms per liter; litre ","LOINC","MCnc","Clinical","",null,null,null,null,false],[false,"microgram per liter per 24 hour","ug/L/(24.h)","(UG/L)/(24.HR)","mass",1.1574074074074074e-8,[-3,-1,1,0,0,0,0],"(μg/L)/h",null,false,"M",null,1,false,false,0,"ug/L/24hrs; ug/L/24 hrs; mcg/L/24hrs; ug per L per 24hrs; 24 hrs; day; dy mcg; micrograms per liters per 24 hours; litres","LOINC","","Clinical","unit used to measure mass dose rate per patient body mass",null,null,null,null,false],[false,"microgram per square meter","ug/m2","UG/M2","mass",0.000001,[-2,0,1,0,0,0,0],"μg/(m<sup>2</sup>)",null,false,"M",null,1,false,false,0,"ug/m^2; ug/sq. m; mcg/m2; mcg/m^2; mcg/sq. m; ug per m2; m^2; sq. meter; mcg; micrograms per square meter; meter squared; metre","LOINC","ArMass","Clinical","unit used to measure mass dose per patient body surface area",null,null,null,null,false],[false,"microgram per cubic meter","ug/m3","UG/M3","mass",0.000001,[-3,0,1,0,0,0,0],"μg/(m<sup>3</sup>)",null,false,"M",null,1,false,false,0,"ug/m^3; ug/cu. m; mcg/m3; mcg/m^3; mcg/cu. m; ug per m3; ug per m^3; ug per cu. m; mcg; micrograms per cubic meter; meter cubed; metre","LOINC","MCnc","Clinical","",null,null,null,null,false],[false,"microgram per milligram","ug/mg","UG/MG","mass",0.001,[0,0,0,0,0,0,0],"μg/mg",null,false,"M",null,1,false,false,0,"ug per mg; mcg/mg; mcg per mg; micromilligrams per milligram","LOINC","MCnt","Clinical","",null,null,null,null,false],[false,"microgram per minute","ug/min","UG/MIN","mass",1.6666666666666667e-8,[0,-1,1,0,0,0,0],"μg/min",null,false,"M",null,1,false,false,0,"ug per min; mcg/min; mcg per min; microminutes per minute","LOINC","MRat","Clinical","",null,null,null,null,false],[false,"microgram per milliliter","ug/mL","UG/ML","mass",1,[-3,0,1,0,0,0,0],"μg/mL",null,false,"M",null,1,false,false,0,"ug per mL; mcg/mL; mcg per mL; micrograms per milliliter; millilitre","LOINC","MCnc","Clinical","",null,null,null,null,false],[false,"microgram per millimole","ug/mmol","UG/MMOL","mass",1.660540186674939e-27,[0,0,1,0,0,0,0],"μg/mmol",null,false,"M",null,1,false,false,-1,"ug per mmol; mcg/mmol; mcg per mmol; micrograms per millimole","LOINC","Ratio","Clinical","",null,null,null,null,false],[false,"microgram per nanogram","ug/ng","UG/NG","mass",999.9999999999999,[0,0,0,0,0,0,0],"μg/ng",null,false,"M",null,1,false,false,0,"ug per ng; mcg/ng; mcg per ng; micrograms per nanogram","LOINC","MCnt","Clinical","",null,null,null,null,false],[false,"microkatal","ukat","UKAT","catalytic activity",602213670000000000,[0,-1,0,0,0,0,0],"μkat","chemical",true,null,null,1,false,false,1,"microkatals; ukats","LOINC","CAct","Clinical","kat is a unit of catalytic activity with base units = mol/s. Rarely used because its units are too large to practically express catalytic activity. See enzyme unit [U] which is the standard unit for catalytic activity.","mol/s","MOL/S","1",1,false],[false,"microliter","uL","UL","volume",1e-9,[3,0,0,0,0,0,0],"μL","iso1000",true,null,null,1,false,false,0,"microliters; microlitres; mcl","LOINC","Vol","Clinical","","l",null,"1",1,false],[false,"microliter per 2 hour","uL/(2.h)","UL/(2.HR)","volume",1.388888888888889e-13,[3,-1,0,0,0,0,0],"μL/h","iso1000",true,null,null,1,false,false,0,"uL/2hrs; uL/2 hrs; mcg/2hr; mcg per 2hr; uL per 2hr; uL per 2 hrs; microliters per 2 hours; microlitres ","LOINC","VRat","Clinical","","l",null,"1",1,false],[false,"microliter per hour","uL/h","UL/HR","volume",2.777777777777778e-13,[3,-1,0,0,0,0,0],"μL/h","iso1000",true,null,null,1,false,false,0,"uL/hr; mcg/hr; mcg per hr; uL per hr; microliters per hour; microlitres","LOINC","VRat","Clinical","","l",null,"1",1,false],[false,"micrometer","um","UM","length",0.000001,[1,0,0,0,0,0,0],"μm",null,false,"L",null,1,false,false,0,"micrometers; micrometres; μm; microns","LOINC","Len","Clinical","Unit of length that is usually used in tests related to the eye",null,null,null,null,false],[false,"microns per second","um/s","UM/S","length",0.000001,[1,-1,0,0,0,0,0],"μm/s",null,false,"L",null,1,false,false,0,"um/sec; micron/second; microns/second; um per sec; micrometers per second; micrometres","LOINC","Vel","Clinical","",null,null,null,null,false],[false,"micromole","umol","UMOL","amount of substance",602213670000000000,[0,0,0,0,0,0,0],"μmol","si",true,null,null,1,false,false,1,"micromoles; umols","LOINC","Sub","Clinical","","10*23","10*23","6.0221367",6.0221367,false],[false,"micromole per 2 hour","umol/(2.h)","UMOL/(2.HR)","amount of substance",83640787500000,[0,-1,0,0,0,0,0],"μmol/h","si",true,null,null,1,false,false,1,"umol/2hrs; umol/2 hrs; umol per 2 hrs; 2hrs; micromoles per 2 hours","LOINC","SRat","Clinical","","10*23","10*23","6.0221367",6.0221367,false],[false,"micromole per 24 hour","umol/(24.h)","UMOL/(24.HR)","amount of substance",6970065625000,[0,-1,0,0,0,0,0],"μmol/h","si",true,null,null,1,false,false,1,"umol/24hrs; umol/24 hrs; umol per 24 hrs; per 24hrs; micromoles per 24 hours","LOINC","SRat","Clinical","","10*23","10*23","6.0221367",6.0221367,false],[false,"micromole per 8 hour","umol/(8.h)","UMOL/(8.HR)","amount of substance",20910196875000,[0,-1,0,0,0,0,0],"μmol/h","si",true,null,null,1,false,false,1,"umol/8hr; umol/8 hr; umol per 8 hr; umol per 8hr; umols per 8hr; umol per 8 hours; micromoles per 8 hours; shift","LOINC","SRat","Clinical","","10*23","10*23","6.0221367",6.0221367,false],[false,"micromole per day","umol/d","UMOL/D","amount of substance",6970065625000,[0,-1,0,0,0,0,0],"μmol/d","si",true,null,null,1,false,false,1,"umol/day; umol per day; umols per day; umol per days; micromoles per days; umol/24hr; umol/24 hr; umol per 24 hr; umol per 24hr; umols per 24hr; umol per 24 hours; micromoles per 24 hours","LOINC","SRat","Clinical","","10*23","10*23","6.0221367",6.0221367,false],[false,"micromole per deciliter","umol/dL","UMOL/DL","amount of substance",6.0221367e+21,[-3,0,0,0,0,0,0],"μmol/dL","si",true,null,null,1,false,false,1,"micromole/deciliter; micromole/decilitre; umol per dL; micromoles per deciliters; micromole per decilitres","LOINC","SCnc","Clinical","","10*23","10*23","6.0221367",6.0221367,false],[false,"micromole per gram","umol/g","UMOL/G","amount of substance",602213670000000000,[0,0,-1,0,0,0,0],"μmol/g","si",true,null,null,1,false,false,1,"micromole/gram; umol per g; micromoles per gram","LOINC","SCnt; Ratio","Clinical","","10*23","10*23","6.0221367",6.0221367,false],[false,"micromole per hour","umol/h","UMOL/HR","amount of substance",167281575000000,[0,-1,0,0,0,0,0],"μmol/h","si",true,null,null,1,false,false,1,"umol/hr; umol per hr; umol per hour; micromoles per hours","LOINC","SRat","Clinical","","10*23","10*23","6.0221367",6.0221367,false],[false,"micromole per kilogram","umol/kg","UMOL/KG","amount of substance",602213670000000,[0,0,-1,0,0,0,0],"μmol/kg","si",true,null,null,1,false,false,1,"umol per kg; micromoles per kilogram","LOINC","SCnt","Clinical","","10*23","10*23","6.0221367",6.0221367,false],[false,"micromole per liter","umol/L","UMOL/L","amount of substance",602213670000000000000,[-3,0,0,0,0,0,0],"μmol/L","si",true,null,null,1,false,false,1,"micromole/liter; micromole/litre; umol per liter; micromoles per liter; litre","LOINC","SCnc","Clinical","","10*23","10*23","6.0221367",6.0221367,false],[false,"micromole per liter per hour","umol/L/h","(UMOL/L)/HR","amount of substance",167281575000000000,[-3,-1,0,0,0,0,0],"(μmol/L)/h","si",true,null,null,1,false,false,1,"umol/liter/hr; umol/litre/hr; umol per L per hr; umol per liter per hour; micromoles per liters per hour; litre","LOINC","CCnc","Clinical","unit for the enzyme unit U = umol/min; umol/L/h is a derived unit of enzyme units","10*23","10*23","6.0221367",6.0221367,false],[false,"micromole per milligram","umol/mg","UMOL/MG","amount of substance",602213670000000000000,[0,0,-1,0,0,0,0],"μmol/mg","si",true,null,null,1,false,false,1,"micromole/milligram; umol per mg; micromoles per milligram","LOINC","SCnt","Clinical","","10*23","10*23","6.0221367",6.0221367,false],[false,"micromole per minute","umol/min","UMOL/MIN","amount of substance",10036894500000000,[0,-1,0,0,0,0,0],"μmol/min","si",true,null,null,1,false,false,1,"micromole/minute; umol per min; micromoles per minute; enzyme units","LOINC","CAct","Clinical","unit for the enzyme unit U = umol/min","10*23","10*23","6.0221367",6.0221367,false],[false,"micromole per minute per gram","umol/min/g","(UMOL/MIN)/G","amount of substance",10036894500000000,[0,-1,-1,0,0,0,0],"(μmol/min)/g","si",true,null,null,1,false,false,1,"umol/min/gm; umol per min per gm; micromoles per minutes per gram; U/g; enzyme units","LOINC","CCnt","Clinical","unit for the enzyme unit U = umol/min. umol/min/g = U/g","10*23","10*23","6.0221367",6.0221367,false],[false,"micromole per minute per liter","umol/min/L","(UMOL/MIN)/L","amount of substance",10036894500000000000,[-3,-1,0,0,0,0,0],"(μmol/min)/L","si",true,null,null,1,false,false,1,"umol/min/liter; umol/minute/liter; micromoles per minutes per liter; litre; enzyme units; U/L","LOINC","CCnc","Clinical","unit for the enzyme unit U = umol/min. umol/min/L = U/L","10*23","10*23","6.0221367",6.0221367,false],[false,"micromole per milliliter","umol/mL","UMOL/ML","amount of substance",6.0221367000000003e+23,[-3,0,0,0,0,0,0],"μmol/mL","si",true,null,null,1,false,false,1,"umol per mL; micromoles per milliliter; millilitre","LOINC","SCnc","Clinical","","10*23","10*23","6.0221367",6.0221367,false],[false,"micromole per milliliter per minute","umol/mL/min","(UMOL/ML)/MIN","amount of substance",1.00368945e+22,[-3,-1,0,0,0,0,0],"(μmol/mL)/min","si",true,null,null,1,false,false,1,"umol per mL per min; micromoles per milliliters per minute; millilitres","LOINC","CCnc","Clinical","unit for the enzyme unit U = umol/min. umol/mL/min = U/mL","10*23","10*23","6.0221367",6.0221367,false],[false,"micromole per millimole","umol/mmol","UMOL/MMOL","amount of substance",0.001,[0,0,0,0,0,0,0],"μmol/mmol","si",true,null,null,1,false,false,0,"umol per mmol; micromoles per millimole","LOINC","SRto","Clinical","","10*23","10*23","6.0221367",6.0221367,false],[false,"micromole per mole","umol/mol","UMOL/MOL","amount of substance",0.000001,[0,0,0,0,0,0,0],"μmol/mol","si",true,null,null,1,false,false,0,"umol per mol; micromoles per mole","LOINC","SRto","Clinical","","10*23","10*23","6.0221367",6.0221367,false],[false,"micromole per micromole","umol/umol","UMOL/UMOL","amount of substance",1,[0,0,0,0,0,0,0],"μmol/μmol","si",true,null,null,1,false,false,0,"umol per umol; micromoles per micromole","LOINC","Srto; SFr; EntSRto","Clinical","","10*23","10*23","6.0221367",6.0221367,false],[false,"microOhm","uOhm","UOHM","electric resistance",0.001,[2,-1,1,0,0,-2,0],"μΩ","si",true,null,null,1,false,false,0,"microOhms; µΩ","LOINC","","Clinical","unit of electric resistance","V/A","V/A","1",1,false],[false,"microsecond","us","US","time",0.000001,[0,1,0,0,0,0,0],"μs",null,false,"T",null,1,false,false,0,"microseconds","LOINC","Time","Clinical","",null,null,null,null,false],[false,"micro enzyme unit per gram","uU/g","UU/G","catalytic activity",10036894500,[0,-1,-1,0,0,0,0],"μU/g","chemical",true,null,null,1,false,false,1,"uU per gm; micro enzyme units per gram; micro enzymatic activity per mass; enzyme activity","LOINC","CCnt","Clinical","1 U is the standard enzyme unit which equals 1 micromole substrate catalyzed per minute (1 umol/min); 1 uU = 1pmol/min","umol/min","UMOL/MIN","1",1,false],[false,"micro enzyme unit per liter","uU/L","UU/L","catalytic activity",10036894500000,[-3,-1,0,0,0,0,0],"μU/L","chemical",true,null,null,1,false,false,1,"uU per L; micro enzyme units per liter; litre; enzymatic activity per volume; enzyme activity ","LOINC","CCnc","Clinical","1 U is the standard enzyme unit which equals 1 micromole substrate catalyzed per minute (1 umol/min); 1 uU = 1pmol/min","umol/min","UMOL/MIN","1",1,false],[false,"micro enzyme unit per milliliter","uU/mL","UU/ML","catalytic activity",10036894500000000,[-3,-1,0,0,0,0,0],"μU/mL","chemical",true,null,null,1,false,false,1,"uU per mL; micro enzyme units per milliliter; millilitre; enzymatic activity per volume; enzyme activity","LOINC","CCnc","Clinical","1 U is the standard enzyme unit which equals 1 micromole substrate catalyzed per minute (1 umol/min); 1 uU = 1pmol/min","umol/min","UMOL/MIN","1",1,false],[false,"microvolt","uV","UV","electric potential",0.001,[2,-2,1,0,0,-1,0],"μV","si",true,null,null,1,false,false,0,"microvolts","LOINC","Elpot","Clinical","unit of electric potential (voltage)","J/C","J/C","1",1,false]]}}')},7184:(e,t,n)=>{const i=n(38),{TypeInfo:a,ResourceNode:r}=n(1231),o=n(6898),{deepEqual:s,maxCollSizeForDeepEqual:l}=n(7071);var c={};function u(e,t,n){const i=e.filter((e=>{const n=o(e),i=!t[n];return i&&(t[n]=!0),i}));return n.push.apply(n,i),i}c.whereMacro=function(e,t){return!1===e||e?i.flatten(e.map(((e,n)=>{this.$index=n;const i=t(e);return i instanceof Promise?i.then((t=>t[0]?e:[])):i[0]?e:[]}))):[]},c.extension=function(e,t){return!1!==e&&!e||!t?[]:i.flatten(e.map(((e,n)=>{this.$index=n;const i=e&&(e.data&&e.data.extension||e._data&&e._data.extension);return i?i.filter((e=>e.url===t)).map((t=>r.makeResNode(t,e,"Extension",null,"Extension"))):[]})))},c.selectMacro=function(e,t){return!1===e||e?i.flatten(e.map(((e,n)=>(this.$index=n,t(e))))):[]},c.repeatMacro=function(e,t,n=[],i={}){if(!1!==e&&!e)return[];let a=[].concat(...e.map((e=>t(e))));return a.some((e=>e instanceof Promise))?Promise.all(a).then((e=>(e=[].concat(...e)).length?c.repeatMacro(u(e,i,n),t,n,i):n)):a.length?c.repeatMacro(u(a,i,n),t,n,i):n},c.singleFn=function(e){if(1===e.length)return e;if(0===e.length)return[];throw new Error("Expected single")},c.firstFn=function(e){return e[0]},c.lastFn=function(e){return e[e.length-1]},c.tailFn=function(e){return e.slice(1,e.length)},c.takeFn=function(e,t){return e.slice(0,t)},c.skipFn=function(e,t){return e.slice(t,e.length)},c.ofTypeFn=function(e,t){return e.filter((e=>a.fromValue(e).is(t)))},c.distinctFn=function(e){let t=[];if(e.length>0)if(e.length>l){let n={};for(let i=0,a=e.length;i<a;++i){let a=e[i],r=o(a);n[r]||(t.push(a),n[r]=!0)}}else{e=e.concat().reverse();do{let n=e.pop();t.push(n),e=e.filter((e=>!s(n,e)))}while(e.length)}return t},e.exports=c},7210:(e,t,n)=>{const i=n(3687),a=n(6307),r=a.INVALID_INTERVAL,o=a.TerminalNode,s=a.TerminalNodeImpl,l=a.ErrorNodeImpl,c=n(5897).Interval;class u extends i{constructor(e,t){super(e=e||null,t=t||null),this.ruleIndex=-1,this.children=null,this.start=null,this.stop=null,this.exception=null}copyFrom(e){this.parentCtx=e.parentCtx,this.invokingState=e.invokingState,this.children=null,this.start=e.start,this.stop=e.stop,e.children&&(this.children=[],e.children.map((function(e){e instanceof l&&(this.children.push(e),e.parentCtx=this)}),this))}enterRule(e){}exitRule(e){}addChild(e){return null===this.children&&(this.children=[]),this.children.push(e),e}removeLastChild(){null!==this.children&&this.children.pop()}addTokenNode(e){const t=new s(e);return this.addChild(t),t.parentCtx=this,t}addErrorNode(e){const t=new l(e);return this.addChild(t),t.parentCtx=this,t}getChild(e,t){if(t=t||null,null===this.children||e<0||e>=this.children.length)return null;if(null===t)return this.children[e];for(let n=0;n<this.children.length;n++){const i=this.children[n];if(i instanceof t){if(0===e)return i;e-=1}}return null}getToken(e,t){if(null===this.children||t<0||t>=this.children.length)return null;for(let n=0;n<this.children.length;n++){const i=this.children[n];if(i instanceof o&&i.symbol.type===e){if(0===t)return i;t-=1}}return null}getTokens(e){if(null===this.children)return[];{const t=[];for(let n=0;n<this.children.length;n++){const i=this.children[n];i instanceof o&&i.symbol.type===e&&t.push(i)}return t}}getTypedRuleContext(e,t){return this.getChild(t,e)}getTypedRuleContexts(e){if(null===this.children)return[];{const t=[];for(let n=0;n<this.children.length;n++){const i=this.children[n];i instanceof e&&t.push(i)}return t}}getChildCount(){return null===this.children?0:this.children.length}getSourceInterval(){return null===this.start||null===this.stop?r:new c(this.start.tokenIndex,this.stop.tokenIndex)}}i.EMPTY=new u,e.exports=u},7377:(e,t,n)=>{const{Token:i}=n(7931),{IntervalSet:a}=n(5897),{Predicate:r,PrecedencePredicate:o}=n(4339);class s{constructor(e){if(null==e)throw"target cannot be null.";this.target=e,this.isEpsilon=!1,this.label=null}}s.EPSILON=1,s.RANGE=2,s.RULE=3,s.PREDICATE=4,s.ATOM=5,s.ACTION=6,s.SET=7,s.NOT_SET=8,s.WILDCARD=9,s.PRECEDENCE=10,s.serializationNames=["INVALID","EPSILON","RANGE","RULE","PREDICATE","ATOM","ACTION","SET","NOT_SET","WILDCARD","PRECEDENCE"],s.serializationTypes={EpsilonTransition:s.EPSILON,RangeTransition:s.RANGE,RuleTransition:s.RULE,PredicateTransition:s.PREDICATE,AtomTransition:s.ATOM,ActionTransition:s.ACTION,SetTransition:s.SET,NotSetTransition:s.NOT_SET,WildcardTransition:s.WILDCARD,PrecedencePredicateTransition:s.PRECEDENCE};class l extends s{constructor(e){super(e)}}class c extends s{constructor(e,t){super(e),this.serializationType=s.SET,null!=t?this.label=t:(this.label=new a,this.label.addOne(i.INVALID_TYPE))}matches(e,t,n){return this.label.contains(e)}toString(){return this.label.toString()}}e.exports={Transition:s,AtomTransition:class extends s{constructor(e,t){super(e),this.label_=t,this.label=this.makeLabel(),this.serializationType=s.ATOM}makeLabel(){const e=new a;return e.addOne(this.label_),e}matches(e,t,n){return this.label_===e}toString(){return this.label_}},SetTransition:c,NotSetTransition:class extends c{constructor(e,t){super(e,t),this.serializationType=s.NOT_SET}matches(e,t,n){return e>=t&&e<=n&&!super.matches(e,t,n)}toString(){return"~"+super.toString()}},RuleTransition:class extends s{constructor(e,t,n,i){super(e),this.ruleIndex=t,this.precedence=n,this.followState=i,this.serializationType=s.RULE,this.isEpsilon=!0}matches(e,t,n){return!1}},ActionTransition:class extends s{constructor(e,t,n,i){super(e),this.serializationType=s.ACTION,this.ruleIndex=t,this.actionIndex=void 0===n?-1:n,this.isCtxDependent=void 0!==i&&i,this.isEpsilon=!0}matches(e,t,n){return!1}toString(){return"action_"+this.ruleIndex+":"+this.actionIndex}},EpsilonTransition:class extends s{constructor(e,t){super(e),this.serializationType=s.EPSILON,this.isEpsilon=!0,this.outermostPrecedenceReturn=t}matches(e,t,n){return!1}toString(){return"epsilon"}},RangeTransition:class extends s{constructor(e,t,n){super(e),this.serializationType=s.RANGE,this.start=t,this.stop=n,this.label=this.makeLabel()}makeLabel(){const e=new a;return e.addRange(this.start,this.stop),e}matches(e,t,n){return e>=this.start&&e<=this.stop}toString(){return"'"+String.fromCharCode(this.start)+"'..'"+String.fromCharCode(this.stop)+"'"}},WildcardTransition:class extends s{constructor(e){super(e),this.serializationType=s.WILDCARD}matches(e,t,n){return e>=t&&e<=n}toString(){return"."}},PredicateTransition:class extends l{constructor(e,t,n,i){super(e),this.serializationType=s.PREDICATE,this.ruleIndex=t,this.predIndex=n,this.isCtxDependent=i,this.isEpsilon=!0}matches(e,t,n){return!1}getPredicate(){return new r(this.ruleIndex,this.predIndex,this.isCtxDependent)}toString(){return"pred_"+this.ruleIndex+":"+this.predIndex}},PrecedencePredicateTransition:class extends l{constructor(e,t){super(e),this.serializationType=s.PRECEDENCE,this.precedence=t,this.isEpsilon=!0}matches(e,t,n){return!1}getPredicate(){return new o(this.precedence)}toString(){return this.precedence+" >= _p"}},AbstractPredicateTransition:l}},7535:e=>{e.exports=JSON.parse('{"Account":"DomainResource","ActivityDefinition":"DomainResource","Address":"Element","AdverseEvent":"DomainResource","Age":"Quantity","AllergyIntolerance":"DomainResource","Annotation":"Element","Appointment":"DomainResource","AppointmentResponse":"DomainResource","Attachment":"Element","AuditEvent":"DomainResource","BackboneElement":"Element","Basic":"DomainResource","Binary":"Resource","BiologicallyDerivedProduct":"DomainResource","BodyStructure":"DomainResource","Bundle":"Resource","CapabilityStatement":"DomainResource","CarePlan":"DomainResource","CareTeam":"DomainResource","CatalogEntry":"DomainResource","ChargeItem":"DomainResource","ChargeItemDefinition":"DomainResource","Claim":"DomainResource","ClaimResponse":"DomainResource","ClinicalImpression":"DomainResource","CodeSystem":"DomainResource","CodeableConcept":"Element","Coding":"Element","Communication":"DomainResource","CommunicationRequest":"DomainResource","CompartmentDefinition":"DomainResource","Composition":"DomainResource","ConceptMap":"DomainResource","Condition":"DomainResource","Consent":"DomainResource","ContactDetail":"Element","ContactPoint":"Element","Contract":"DomainResource","Contributor":"Element","Count":"Quantity","Coverage":"DomainResource","CoverageEligibilityRequest":"DomainResource","CoverageEligibilityResponse":"DomainResource","DataRequirement":"Element","DetectedIssue":"DomainResource","Device":"DomainResource","DeviceDefinition":"DomainResource","DeviceMetric":"DomainResource","DeviceRequest":"DomainResource","DeviceUseStatement":"DomainResource","DiagnosticReport":"DomainResource","Distance":"Quantity","DocumentManifest":"DomainResource","DocumentReference":"DomainResource","DomainResource":"Resource","Dosage":"BackboneElement","Duration":"Quantity","EffectEvidenceSynthesis":"DomainResource","ElementDefinition":"BackboneElement","Encounter":"DomainResource","Endpoint":"DomainResource","EnrollmentRequest":"DomainResource","EnrollmentResponse":"DomainResource","EpisodeOfCare":"DomainResource","EventDefinition":"DomainResource","Evidence":"DomainResource","EvidenceVariable":"DomainResource","ExampleScenario":"DomainResource","ExplanationOfBenefit":"DomainResource","Expression":"Element","Extension":"Element","FamilyMemberHistory":"DomainResource","Flag":"DomainResource","Goal":"DomainResource","GraphDefinition":"DomainResource","Group":"DomainResource","GuidanceResponse":"DomainResource","HealthcareService":"DomainResource","HumanName":"Element","Identifier":"Element","ImagingStudy":"DomainResource","Immunization":"DomainResource","ImmunizationEvaluation":"DomainResource","ImmunizationRecommendation":"DomainResource","ImplementationGuide":"DomainResource","InsurancePlan":"DomainResource","Invoice":"DomainResource","Library":"DomainResource","Linkage":"DomainResource","List":"DomainResource","Location":"DomainResource","MarketingStatus":"BackboneElement","Measure":"DomainResource","MeasureReport":"DomainResource","Media":"DomainResource","Medication":"DomainResource","MedicationAdministration":"DomainResource","MedicationDispense":"DomainResource","MedicationKnowledge":"DomainResource","MedicationRequest":"DomainResource","MedicationStatement":"DomainResource","MedicinalProduct":"DomainResource","MedicinalProductAuthorization":"DomainResource","MedicinalProductContraindication":"DomainResource","MedicinalProductIndication":"DomainResource","MedicinalProductIngredient":"DomainResource","MedicinalProductInteraction":"DomainResource","MedicinalProductManufactured":"DomainResource","MedicinalProductPackaged":"DomainResource","MedicinalProductPharmaceutical":"DomainResource","MedicinalProductUndesirableEffect":"DomainResource","MessageDefinition":"DomainResource","MessageHeader":"DomainResource","Meta":"Element","MolecularSequence":"DomainResource","Money":"Element","MoneyQuantity":"Quantity","NamingSystem":"DomainResource","Narrative":"Element","NutritionOrder":"DomainResource","Observation":"DomainResource","ObservationDefinition":"DomainResource","OperationDefinition":"DomainResource","OperationOutcome":"DomainResource","Organization":"DomainResource","OrganizationAffiliation":"DomainResource","ParameterDefinition":"Element","Parameters":"Resource","Patient":"DomainResource","PaymentNotice":"DomainResource","PaymentReconciliation":"DomainResource","Period":"Element","Person":"DomainResource","PlanDefinition":"DomainResource","Population":"BackboneElement","Practitioner":"DomainResource","PractitionerRole":"DomainResource","Procedure":"DomainResource","ProdCharacteristic":"BackboneElement","ProductShelfLife":"BackboneElement","Provenance":"DomainResource","Quantity":"Element","Questionnaire":"DomainResource","QuestionnaireResponse":"DomainResource","Range":"Element","Ratio":"Element","Reference":"Element","RelatedArtifact":"Element","RelatedPerson":"DomainResource","RequestGroup":"DomainResource","ResearchDefinition":"DomainResource","ResearchElementDefinition":"DomainResource","ResearchStudy":"DomainResource","ResearchSubject":"DomainResource","RiskAssessment":"DomainResource","RiskEvidenceSynthesis":"DomainResource","SampledData":"Element","Schedule":"DomainResource","SearchParameter":"DomainResource","ServiceRequest":"DomainResource","Signature":"Element","SimpleQuantity":"Quantity","Slot":"DomainResource","Specimen":"DomainResource","SpecimenDefinition":"DomainResource","StructureDefinition":"DomainResource","StructureMap":"DomainResource","Subscription":"DomainResource","Substance":"DomainResource","SubstanceAmount":"BackboneElement","SubstanceNucleicAcid":"DomainResource","SubstancePolymer":"DomainResource","SubstanceProtein":"DomainResource","SubstanceReferenceInformation":"DomainResource","SubstanceSourceMaterial":"DomainResource","SubstanceSpecification":"DomainResource","SupplyDelivery":"DomainResource","SupplyRequest":"DomainResource","Task":"DomainResource","TerminologyCapabilities":"DomainResource","TestReport":"DomainResource","TestScript":"DomainResource","Timing":"BackboneElement","TriggerDefinition":"Element","UsageContext":"Element","ValueSet":"DomainResource","VerificationResult":"DomainResource","VisionPrescription":"DomainResource","base64Binary":"Element","boolean":"Element","canonical":"uri","code":"string","date":"Element","dateTime":"Element","decimal":"Element","id":"string","instant":"Element","integer":"Element","markdown":"string","oid":"uri","positiveInt":"integer","string":"Element","time":"Element","unsignedInt":"integer","uri":"Element","url":"uri","uuid":"uri","xhtml":"Element"}')},7601:(e,t,n)=>{const i=n(1743),{IntervalSet:a}=n(5897),{Token:r}=n(7931);class o{constructor(e,t){this.grammarType=e,this.maxTokenType=t,this.states=[],this.decisionToState=[],this.ruleToStartState=[],this.ruleToStopState=null,this.modeNameToStartState={},this.ruleToTokenType=null,this.lexerActions=null,this.modeToStartState=[]}nextTokensInContext(e,t){return new i(this).LOOK(e,null,t)}nextTokensNoContext(e){return null!==e.nextTokenWithinRule||(e.nextTokenWithinRule=this.nextTokensInContext(e,null),e.nextTokenWithinRule.readOnly=!0),e.nextTokenWithinRule}nextTokens(e,t){return void 0===t?this.nextTokensNoContext(e):this.nextTokensInContext(e,t)}addState(e){null!==e&&(e.atn=this,e.stateNumber=this.states.length),this.states.push(e)}removeState(e){this.states[e.stateNumber]=null}defineDecisionState(e){return this.decisionToState.push(e),e.decision=this.decisionToState.length-1,e.decision}getDecisionState(e){return 0===this.decisionToState.length?null:this.decisionToState[e]}getExpectedTokens(e,t){if(e<0||e>=this.states.length)throw"Invalid state number.";const n=this.states[e];let i=this.nextTokens(n);if(!i.contains(r.EPSILON))return i;const o=new a;for(o.addSet(i),o.removeOne(r.EPSILON);null!==t&&t.invokingState>=0&&i.contains(r.EPSILON);){const e=this.states[t.invokingState].transitions[0];i=this.nextTokens(e.followState),o.addSet(i),o.removeOne(r.EPSILON),t=t.parentCtx}return i.contains(r.EPSILON)&&o.addOne(r.EOF),o}}o.INVALID_ALT_NUMBER=0,e.exports=o},7750:(e,t,n)=>{t.o=void 0;var i=function(e){if(e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=a();if(t&&t.has(e))return t.get(e);var n={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var r in e)if(Object.prototype.hasOwnProperty.call(e,r)){var o=i?Object.getOwnPropertyDescriptor(e,r):null;o&&(o.get||o.set)?Object.defineProperty(n,r,o):n[r]=e[r]}return n.default=e,t&&t.set(e,n),n}(n(5413));function a(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return a=function(){return e},e}function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var o=n(4435).Ucum,s=n(5683).Unit,l=n(8314).UnitTables,c=n(984).PrefixTables;class u{constructor(){this.utabs_=l.getInstance(),this.pfxTabs_=c.getInstance(),this.openEmph_=o.openEmph_,this.closeEmph_=o.closeEmph_,this.bracesMsg_="",this.parensFlag_="parens_placeholder",this.pFlagLen_=this.parensFlag_.length,this.braceFlag_="braces_placeholder",this.bFlagLen_=this.braceFlag_.length,this.vcMsgStart_=null,this.vcMsgEnd_=null,this.retMsg_=[],this.parensUnits_=[],this.annotations_=[],this.suggestions=[]}useHTMLInMessages(e){void 0===e||e?(this.openEmph_=o.openEmphHTML_,this.closeEmph_=o.closeEmphHTML_):(this.openEmph_=o.openEmph_,this.closeEmph_=o.closeEmph_)}useBraceMsgForEachString(e){this.bracesMsg_=void 0===e||e?o.bracesMsg_:""}parseString(e,t,n){if(""===(e=e.trim())||null===e)throw new Error("Please specify a unit expression to be validated.");"validate"===t?(this.vcMsgStart_=o.valMsgStart_,this.vcMsgEnd_=o.valMsgEnd_):(this.vcMsgStart_=o.cnvMsgStart_,this.vcMsgEnd_=o.cnvMsgEnd_),this.suggestions_=void 0===n||!1===n?null:[],this.retMsg_=[],this.parensUnits_=[],this.annotations_=[];let a=e,r=[];if(e=this._getAnnotations(e),this.retMsg_.length>0)r[0]=null,r[1]=null;else{this.retMsg_.length;let t=null;for(t in o.specUnits_)for(;-1!==e.indexOf(t);)e=e.replace(t,o.specUnits_[t]);if(e.indexOf(" ")>-1)throw new Error("Blank spaces are not allowed in unit expressions.");r=this._parseTheString(e,a);let n=r[0];(i.isIntegerUnit(n)||"number"==typeof n)&&(n=new s({csCode_:a,ciCode_:a,magnitude_:n,name_:a}),r[0]=n)}return r[2]=this.retMsg_,this.suggestions_&&this.suggestions_.length>0&&(r[3]=this.suggestions_),r}_parseTheString(e,t){let n=null,a=this.retMsg_.length>0,r=this._processParens(e,t);a=r[2];let o=[];if(!a){e=r[0],t=r[1];let n=this._makeUnitsArray(e,t);if(a=n[2],!a){o=n[0],t=n[1];let e=o.length;for(let n=0;n<e;n++){let e=o[n].un;if(i.isIntegerUnit(e))o[n].un=Number(e);else if(e.indexOf(this.parensFlag_)>=0){let i=this._getParensUnit(e,t);a||(a=i[1]),a||(o[n].un=i[0])}else{let i=this._makeUnit(e,t);null===i[0]?a=!0:(o[n].un=i[0],t=i[1])}}}}return a||null!==o[0]&&" "!==o[0]&&void 0!==o[0].un&&null!==o[0].un||0!==this.retMsg_.length||(this.retMsg_.push(`Unit string (${t}) did not contain anything that could be used to create a unit, or else something that is not handled yet by this package.  Sorry`),a=!0),a||(n=this._performUnitArithmetic(o,t)),[n,t]}_getAnnotations(e){let t=e.indexOf("{");for(;t>=0;){let n=e.indexOf("}");if(n<0)this.retMsg_.push("Missing closing brace for annotation starting at "+this.openEmph_+e.substr(t)+this.closeEmph_),t=-1;else{let i=e.substring(t,n+1);if(u.VALID_ANNOTATION_REGEX.test(i)){let n=this.annotations_.length.toString();e=e.replace(i,this.braceFlag_+n+this.braceFlag_),this.annotations_.push(i),t=e.indexOf("{")}else this.retMsg_.push(u.INVALID_ANNOTATION_CHAR_MSG+this.openEmph_+i+this.closeEmph_),t=-1}}if(0==this.retMsg_.length){let t=e.indexOf("}");t>=0&&this.retMsg_.push("Missing opening brace for closing brace found at "+this.openEmph_+e.substring(0,t+1)+this.closeEmph_)}return e}_processParens(e,t){let n=[],i=0,a=!1,r=this.parensUnits_.length,o=0;for(;""!==e&&!a;){let s=0,l=0,c=e.indexOf("(");if(c<0){let t=e.indexOf(")");if(t>=0){let r=`Missing open parenthesis for close parenthesis at ${e.substring(0,t+o)}${this.openEmph_}${e.substr(t,1)}${this.closeEmph_}`;t<e.length-1&&(r+=`${e.substr(t+1)}`),this.retMsg_.push(r),n[i]=e,a=!0}else n[i]=e,e=""}else{s+=1;let u=e.length;c>0&&(n[i++]=e.substr(0,c));let m=0,d=c+1;for(;d<u&&s!=l;d++)"("===e[d]?s+=1:")"===e[d]&&(l+=1);if(s===l){m=d,n[i++]=this.parensFlag_+r.toString()+this.parensFlag_;let s=this._parseTheString(e.substring(c+1,m-1),t);null===s[0]?a=!0:"/"===e[c+1]?(this.retMsg_.push("Unary operator '/' is only allowed at the beginning of the main term, not inside a parenthesis."),a=!0):(t=s[1],this.parensUnits_[r++]=s[0],e=e.substr(m),o=m)}else n.push(t.substr(c)),this.retMsg_.push(`Missing close parenthesis for open parenthesis at ${t.substring(0,c+o)}${this.openEmph_}${t.substr(c,1)}${this.closeEmph_}${t.substr(c+1)}`),a=!0}}return a&&(this.parensUnits_=[]),[n.join(""),t,a]}_makeUnitsArray(e,t){let n=e.match(/([./]|[^./]+)/g),a=!1,r=[],s=/(^[0-9]+)(\[?[a-zA-Z\_0-9a-zA-Z\_]+\]?$)/;if("/"===n[0]?n.unshift("1"):"."===n[0]&&(this.retMsg_.push(`${t} is not a valid UCUM code. The multiplication operator at the beginning of the expression is not valid. A multiplication operator must appear only between two codes.`),a=!0),!a){if(!i.isNumericString(n[0])){let e=n[0].match(s);if(e&&3===e.length&&""!==e[1]&&""!==e[2]&&0!==e[2].indexOf(this.braceFlag_)){let i=e[2];if(!a&&-1!==e[2].indexOf(this.parensFlag_)){let n=this._getParensUnit(e[2],t);e[2]=n[0].csCode_,i=`(${e[2]})`,a=n[1]}a||(this.retMsg_.push(`${e[1]}${i} is not a valid UCUM code.  ${this.vcMsgStart_}${e[1]}.${i}${this.vcMsgEnd_}`),t=t.replace(`${e[1]}${i}`,`${e[1]}.${i}`),n[0]=e[2],n.unshift(e[1],"."))}}if(!a){let e=n.length;r=[{op:"",un:n[0]}];for(let l=1;l<e;l++){let c=n[l++];if(n[l])if(-1!==o.validOps_.indexOf(n[l]))this.retMsg_.push(`${t} is not a valid UCUM code. A unit code is missing between${this.openEmph_}${c}${this.closeEmph_}and${this.openEmph_}${n[l]}${this.closeEmph_}in${this.openEmph_}${c}${n[l]}${this.closeEmph_}.`),l=e,a=!0;else if(i.isNumericString(n[l]))r.push({op:c,un:n[l]});else{let i=n[l].match(s);if(i&&3===i.length&&""!==i[1]&&""!==i[2]&&0!==i[2].indexOf(this.braceFlag_)){let n=i[0];if(a||-1===i[2].indexOf(this.parensFlag_)){let n="("+i[1]+"."+i[2]+")",o=this._processParens(n,t);o[2]?(l=e,a=!0):(this.retMsg_.push(`${i[0]} is not a valid UCUM code.  ${this.vcMsgStart_}${i[1]}.${i[2]}${this.vcMsgEnd_}`),t=t.replace(i[0],n),r.push({op:c,un:o[0]}))}else{let e=this._getParensUnit(i[2],t);if(i[2]=e[0].csCode_,n=`(${i[2]})`,a=e[1],!a){this.retMsg_.push(`${i[1]}${n} is not a valid UCUM code.  ${this.vcMsgStart_}${i[1]}.${n}${this.vcMsgEnd_}`);let e=`(${i[1]}.${n})`;t=t.replace(`${i[1]}${n}`,e);let o=this._processParens(e,t);a=o[2],a||r.push({op:c,un:o[0]})}}}else r.push({op:c,un:n[l]})}else this.retMsg_.push(`${t} is not a valid UCUM code. It is terminated with the operator ${this.openEmph_}${c}${this.closeEmph_}.`),l=e,a=!0}}}return[r,t,a]}_getParensUnit(e,t){let n=!1,a=null,r=e.indexOf(this.parensFlag_),o=null;r>0&&(o=e.substr(0,r-1));let l=e.lastIndexOf(this.parensFlag_),c=null;l+this.pFlagLen_<e.length&&(c=e.substr(l+this.pFlagLen_));let u=e.substring(r+this.pFlagLen_,l);if(!i.isNumericString(u))throw new Error(`Processing error - invalid parens number ${u} found in ${e}.`);if(a=this.parensUnits_[Number(u)],e=i.isIntegerUnit(a)?a:a.csCode_,o)if(i.isNumericString(o)){let t=a.getProperty("magnitude_");t*=Number(o),a.assignVals({magnitude_:t}),e=`${o}.${e}`,this.retMsg_.push(`${o}${e} is not a valid UCUM code.\n`+this.vcMsgStart_+e+this.vcMsgEnd_)}else if(o.indexOf(this.braceFlag_)>=0){let n=this._getAnnoText(o,t);if(n[1]||n[2])throw new Error(`Text found before the parentheses (${o}) included an annotation along with other text for parenthetical unit ${a.csCode_}`);e+=n[0],this.retMsg_.push(`The annotation ${n[0]} before the unit code is invalid.\n`+this.vcMsgStart_+e+this.vcMsgEnd_)}else this.suggestions_?n="succeeded"!==this._getSuggestions(o):(this.retMsg_.push(`${o} preceding the unit code ${e} is invalid.  Unable to make a substitution.`),n=!0);if(c)if(c.indexOf(this.braceFlag_)>=0){let n=this._getAnnoText(c,t);if(n[1]||n[2])throw new Error(`Text found after the parentheses (${c}) included an annotation along with other text for parenthetical unit ${a.csCode_}`);e+=n[0]}else if(i.isNumericString(c)){a=null;let t=`An exponent (${c}) following a parenthesis is invalid as of revision 1.9 of the UCUM Specification.`;e.match(/\d$/)||(e+=c,t+="\n  "+this.vcMsgStart_+e+this.vcMsgEnd_),this.retMsg_.push(t),n=!0}else this.suggestions_?n="succeeded"!==this._getSuggestions(o):(this.retMsg_.push(`Text ${c} following the unit code ${e} is invalid.  Unable to make a substitution.`),n=!0);return n||(a?i.isIntegerUnit(a)?a=new s({csCode_:a,magnitude_:a,name_:a}):a.csCode_=e:a=new s({csCode_:e,magnitude_:1,name_:e})),[a,n]}_getAnnoText(e,t){let n=e.indexOf(this.braceFlag_),a=n>0?e.substring(0,n):null;0!==n&&(e=e.substr(n));let r=e.indexOf(this.braceFlag_,1),o=r+this.bFlagLen_<e.length?e.substr(r+this.bFlagLen_):null,s=e.substring(this.bFlagLen_,r),l=Number(s);if(!i.isNumericString(s)||l>=this.annotations_.length)throw new Error(`Processing Error - invalid annotation index ${s} found in ${e} that was created from ${t}`);return[e=this.annotations_[l],a,o]}_getSuggestions(e){let t=i.getSynonyms(e);if("succeeded"===t.status){let n={};n.msg=`${e} is not a valid UCUM code.  We found possible units that might be what was meant:`,n.invalidUnit=e;let i=t.units.length;n.units=[];for(let e=0;e<i;e++){let i=t.units[e],a=[i.code,i.name,i.guidance];n.units.push(a)}this.suggestions_.push(n)}else this.retMsg_.push(`${e} is not a valid UCUM code.  No alternatives were found.`);return t.status}_makeUnit(e,t){let n=this.utabs_.getUnitByCode(e);if(n)n=n.clone();else if(e.indexOf(this.braceFlag_)>=0){let i=this._getUnitWithAnnotation(e,t);n=i[0],n&&(t=i[1])}else{if(e.indexOf("^")>-1){let t=e.replace("^","*");n=this.utabs_.getUnitByCode(t),n&&(n=n.clone(),n.csCode_=n.csCode_.replace("*","^"),n.ciCode_=n.ciCode_.replace("*","^"))}if(!n){let i="["+e+"]";n=this.utabs_.getUnitByCode(i),n&&(n=n.clone(),t=t.replace(e,i),this.retMsg_.push(`${e} is not a valid unit expression, but ${i} is.\n`+this.vcMsgStart_+`${i} (${n.name_})${this.vcMsgEnd_}`))}if(!n){let i=this.utabs_.getUnitByName(e);if(i&&i.length>0){n=i[0].clone();let a="The UCUM code for "+e+" is "+n.csCode_+".\n"+this.vcMsgStart_+n.csCode_+this.vcMsgEnd_,r=!1;for(let e=0;e<this.retMsg_.length&&!r;e++)r=this.retMsg_[e]===a;r||this.retMsg_.push(a);let o=new RegExp("(^|[./({])("+e+")($|[./)}])"),s=t.match(o);t=t.replace(o,s[1]+n.csCode_+s[3]),e=n.csCode_}}if(!n){let t=null;for(t in o.specUnits_)-1!==e.indexOf(o.specUnits_[t])&&(e=e.replace(o.specUnits_[t],t));n=this.utabs_.getUnitByCode(e),n&&(n=n.clone())}if(!n){let t=e,i=null,a=null,r=null,o=null,s=null,l=null,c=this._isCodeWithExponent(e);if(c&&(e=c[0],a=c[1],i=this.utabs_.getUnitByCode(e)),a&&isNaN(a))n=null,this.retMsg_.push(`${t} is not a valid UCUM code.`);else{if(!i&&(r=e.charAt(0),o=this.pfxTabs_.getPrefixByCode(r),o)){s=o.getValue(),l=o.getExp();let t=r.length;e=e.substr(t),i=this.utabs_.getUnitByCode(e),i||"d"!=r||"a"!=e.substr(0,1)||(r="da",o=this.pfxTabs_.getPrefixByCode(r),s=o.getValue(),e=e.substr(1),i=this.utabs_.getUnitByCode(e)),i&&"LOINC"==i.source_&&(i=null)}if(i){n=i.clone(),n.resetFieldsForDerivedUnit();let e=n.getProperty("dim_"),t=n.getProperty("magnitude_"),c=n.getProperty("name_"),u=n.getProperty("ciCode_"),m=n.getProperty("printSymbol_");if(a){a=parseInt(a);let i=a;e&&(e=e.mul(a)),t=Math.pow(t,a),n.assignVals({magnitude_:t}),o&&l&&(i*=o.getExp(),s=Math.pow(10,i))}o&&(n.cnv_?n.assignVals({cnvPfx_:s}):(t*=s,n.assignVals({magnitude_:t})));let d=n.csCode_;if(o&&(c=o.getName()+c,d=r+d,u=o.getCiCode()+u,m=o.getPrintSymbol()+m,n.assignVals({name_:c,csCode_:d,ciCode_:u,printSymbol_:m})),a){let e=a.toString();n.assignVals({name_:c+"<sup>"+e+"</sup>",csCode_:d+e,ciCode_:u+e,printSymbol_:m+"<sup>"+e+"</sup>"})}}else n=null,this.suggestions_?this._getSuggestions(t):this.retMsg_.push(`${t} is not a valid UCUM code.`)}}}return[n,t]}_getUnitWithAnnotation(e,t){let n=null,a=this._getAnnoText(e,t),r=a[0],o=a[1],l=a[2];this.bracesMsg_&&-1===this.retMsg_.indexOf(this.bracesMsg_)&&this.retMsg_.push(this.bracesMsg_);let c=this.retMsg_.length;if(o||l)if(o&&!l)if(i.isIntegerUnit(o))n=o;else{let e=this._makeUnit(o,t);e[0]?(n=e[0],n.csCode_+=r,t=e[1]):this.retMsg_.push(`Unable to find a unit for ${o} that precedes the annotation ${r}.`)}else if(!o&&l)if(i.isIntegerUnit(l))n=l+r,this.retMsg_.push(`The annotation ${r} before the ``${l} is invalid.\n`+this.vcMsgStart_+n+this.vcMsgEnd_);else{let e=this._makeUnit(l,t);e[0]?(n=e[0],n.csCode_+=r,t=n.csCode_,this.retMsg_.push(`The annotation ${r} before the unit code is invalid.\n`+this.vcMsgStart_+n.csCode_+this.vcMsgEnd_)):this.retMsg_.push(`Unable to find a unit for ${o} that follows the annotation ${r}.`)}else this.retMsg_.push(`Unable to find a unit for ${o}${r}${l}.\nWe are not sure how to interpret text both before and after the annotation.  Sorry`);else{let i="["+r.substring(1,r.length-1)+"]",a=this._makeUnit(i,t);a[0]?(n=e,this.retMsg_.push(`${r} is a valid unit expression, but did you mean ${i} (${a[0].name_})?`)):this.retMsg_.length>c&&this.retMsg_.pop(),n=new s({csCode_:r,ciCode_:r,magnitude_:1,name_:r})}return[n,t]}_performUnitArithmetic(e,t){let n=e[0].un;i.isIntegerUnit(n)&&(n=new s({csCode_:n,ciCode_:n,magnitude_:Number(n),name_:n}));let a=e.length,r=!1;for(let o=1;o<a&&!r;o++){let a=e[o].un;if(i.isIntegerUnit(a)&&(a=new s({csCode_:a,ciCode_:a,magnitude_:Number(a),name_:a})),null===a||"number"!=typeof a&&!a.getProperty){let e=`Unit string (${t}) contains unrecognized element`;a&&(e+=` (${this.openEmph_}${a.toString()}${this.closeEmph_})`),e+="; could not parse full string.  Sorry",this.retMsg_.push(e),r=!0}else try{n="/"===e[o].op?n.divide(a):n.multiplyThese(a)}catch(e){this.retMsg_.unshift(e.message),r=!0,n=null}}return n}_isCodeWithExponent(e){let t=[],n=e.match(/(^[^\-\+]+?)([\-\+\d]+)$/);return n&&n[2]&&""!==n[2]?(t.push(n[1]),t.push(n[2])):t=null,t}}t.o=u,r(u,"INVALID_ANNOTATION_CHAR_MSG","An invalid character was found in the annotation "),r(u,"VALID_ANNOTATION_REGEX",/^\{[!-z|~]*\}$/),u.getInstance=function(){return new u}},7892:(e,t,n)=>{const i={},{distinctFn:a}=n(7184),r=n(6898),{deepEqual:o,maxCollSizeForDeepEqual:s}=n(7071);i.union=function(e,t){return a(e.concat(t))},i.combineFn=function(e,t){return e.concat(t)},i.intersect=function(e,t){let n=[];const i=e.length;let l=t.length;if(i&&l)if(i+l>s){let a={};t.forEach((e=>{const t=r(e);a[t]?l--:a[t]=!0}));for(let t=0;t<i&&l>0;++t){let i=e[t],o=r(i);a[o]&&(n.push(i),a[o]=!1,l--)}}else n=a(e).filter((e=>t.some((t=>o(e,t)))));return n},i.exclude=function(e,t){let n=[];const i=e.length,a=t.length;if(!a)return e;if(i)if(i+a>s){let i={};t.forEach((e=>{const t=r(e);i[t]=!0})),n=e.filter((e=>!i[r(e)]))}else n=e.filter((e=>!t.some((t=>o(e,t)))));return n},e.exports=i},7931:e=>{class t{constructor(){this.source=null,this.type=null,this.channel=null,this.start=null,this.stop=null,this.tokenIndex=null,this.line=null,this.column=null,this._text=null}getTokenSource(){return this.source[0]}getInputStream(){return this.source[1]}get text(){return this._text}set text(e){this._text=e}}t.INVALID_TYPE=0,t.EPSILON=-2,t.MIN_USER_TOKEN_TYPE=1,t.EOF=-1,t.DEFAULT_CHANNEL=0,t.HIDDEN_CHANNEL=1;class n extends t{constructor(e,i,a,r,o){super(),this.source=void 0!==e?e:n.EMPTY_SOURCE,this.type=void 0!==i?i:null,this.channel=void 0!==a?a:t.DEFAULT_CHANNEL,this.start=void 0!==r?r:-1,this.stop=void 0!==o?o:-1,this.tokenIndex=-1,null!==this.source[0]?(this.line=e[0].line,this.column=e[0].column):this.column=-1}clone(){const e=new n(this.source,this.type,this.channel,this.start,this.stop);return e.tokenIndex=this.tokenIndex,e.line=this.line,e.column=this.column,e.text=this.text,e}toString(){let e=this.text;return e=null!==e?e.replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/\t/g,"\\t"):"<no text>","[@"+this.tokenIndex+","+this.start+":"+this.stop+"='"+e+"',<"+this.type+">"+(this.channel>0?",channel="+this.channel:"")+","+this.line+":"+this.column+"]"}get text(){if(null!==this._text)return this._text;const e=this.getInputStream();if(null===e)return null;const t=e.size;return this.start<t&&this.stop<t?e.getText(this.start,this.stop):"<EOF>"}set text(e){this._text=e}}n.EMPTY_SOURCE=[null,null],e.exports={Token:t,CommonToken:n}},8046:(e,t,n)=>{const i=n(3394),a=["悋Ꜫ脳맭䅼㯧瞆","奤Aȃ\b\t\t","\t\t\t","\t\b\t\b\t\t\t\n\t\n\v\t\v","\f\t\f\r\t\r\t\t","\t\t\t\t","\t\t\t","\t\t\t\t","\t\t\t",'\t\t \t !\t!"\t"#',"\t#$\t$%\t%&\t&'\t'(\t()\t)","*\t*+\t+,\t,-\t-.\t./\t/0\t0","1\t12\t23\t34\t45\t56\t67\t7","8\t89\t9:\t:;\t;<\t<=\t=>\t>","?\t?@\t@A\tAB\tBC\tCD\tD","","\b","\b\t\t\t\t\n\n\n\n","\v\v\f\f\r\r\r","","","","","","","","",""," ",' !!!!!"""','"""##$$$$$',"$%%%%%%%&","&&&&&&''((","((())))))*","****++++,,",",,,-------",".......///","/////////0","0000011111","1122222233","3334444445","5555555666","6666677777","7777777788","8888888888","88ƃ\n88ƅ\n88Ƈ\n888Ɗ","\n89999:::::","::::::ƚ\n:\r::ƛ",":ƞ\n::Ơ\n::Ƣ\n::::",":::::ƫ\n:;;Ʈ\n;",";;Ʊ\n;\f;;ƴ\v;<<<","<ƹ\n<\f<<Ƽ\v<<<==","==ǃ\n=\f==ǆ\v===>",">ǋ\n>\r>>ǌ>>>Ǒ\n>\r>>ǒ",">Ǖ\n>??ǘ\n?\r??Ǚ?","?@@@@@Ǣ\n@\f@@ǥ\v","@@@@@@AAAA","Aǰ\nA\fAAǳ\vAAABB","BBǺ\nBCCCCCCD","DǣE\t\v","\r\b\t\n\v\f\r","!#%')+","-/13579;= ?!A","\"C#E$G%I&K'M(O)Q*S+U,W-Y.[/]0_1a2c3e4g5i6k7m8o9q:su;w<y={>}","?@A\f","2;--//C\\aac|2;C\\aac|",'^^bb))\v\f""',"\f\f\n))11^^bbhhppttvv2;CHchȔ","","\t","\v\r","","","","","!","#%","')+","-/","13","57","9;","=?A","CE","GI","KM","OQ","SUW","Y[","]_","ac","eg","ikm","oq","uw","y{","}","","","\t\v","\r","","¡","£¦","¨ª","!­#°%³","'µ)·","+º-½","/À1É","3Í5Ð","7Ô9Ü;Þ","=à?â","AäCé","EïGñ","I÷Kþ","MąOćQČ","SĒUė","WěYĠ","[ħ]Į","_ĺaŀ","cŇeōgŒ","iŘkŠ","mŨoŵ","qƋsƏ","uƭwƵ","yƿ{Ǌ}Ǘ","ǝǫ","Ƕǻ","ȁ","0","]","_\b","-\n/","\f,","1","f","kx","o","qf"," ( ","¡¢~¢","£¤>¤¥","?¥¦§",">§¨©","@©ª«","@«¬?¬ ","­®k®¯u",'¯"°±c',"±²u²$³","´?´&µ¶","¶(·¸","#¸¹?¹*","º»#»¼","¼,½¾k","¾¿p¿.","ÀÁeÁÂqÂ","ÃpÃÄvÄÅ","cÅÆkÆÇ","pÇÈuÈ0","ÉÊcÊËp","ËÌfÌ2Í","ÎqÎÏtÏ4","ÐÑzÑÒ","qÒÓtÓ6","ÔÕkÕÖo","Ö×r×ØnØ","ÙkÙÚgÚÛ","uÛ8ÜÝ","*Ý:Þß+","ß<àá}","á>âã","ã@äåvå","ætæçwçè","gèBéê","hêëcëìn","ìíuíîg","îDïð'ð","Fñò&òó","vóôjôõ","kõöuöH","÷ø&øùk","ùúpúûfû","ügüýzýJ","þÿ&ÿĀ","vĀāqāĂv","ĂăcăĄn","ĄLąĆ.Ć","NćĈ{Ĉĉ","gĉĊcĊċ","tċPČčo","čĎqĎďp","ďĐvĐđjđ","RĒēyēĔ","gĔĕgĕĖ","mĖTėĘf","ĘęcęĚ{","ĚVěĜjĜ","ĝqĝĞwĞğ","tğXĠġ","oġĢkĢģp","ģĤwĤĥv","ĥĦgĦZħ","ĨuĨĩgĩĪ","eĪīqīĬ","pĬĭfĭ\\","Įįoįİk","İınıĲnĲ","ĳkĳĴuĴĵ","gĵĶeĶķ","qķĸpĸĹf","Ĺ^ĺĻ{","ĻļgļĽcĽ","ľtľĿuĿ`","ŀŁoŁł","qłŃpŃńv","ńŅjŅņu","ņbŇňyň","ŉgŉŊgŊŋ","mŋŌuŌd","ōŎfŎŏc","ŏŐ{Őőu","őfŒœjœ","ŔqŔŕwŕŖ","tŖŗuŗh","ŘřořŚk","ŚśpśŜw","ŜŝvŝŞgŞ","şuşjŠš","ušŢgŢţ","eţŤqŤťp","ťŦfŦŧu","ŧlŨũoũ","ŪkŪūnūŬ","nŬŭkŭŮ","uŮůgůŰe","ŰűqűŲp","ŲųfųŴuŴ","nŵŶBŶŷ","\tŷŸ\tŸŹ\t","ŹƆ\tźŻ/","Żż\tżƄ\t","Žž/žſ\tſ","Ƃ\tƀƁVƁƃ","s:ƂƀƂƃ","ƃƅƄŽ","ƄƅƅƇ","ƆźƆƇ","ƇƉƈƊ","\\ƉƈƉƊ","ƊpƋƌ","BƌƍVƍƎs:","ƎrƏƐ\tƐ","ơ\tƑƒ<ƒƓ","\tƓƟ\tƔƕ","<ƕƖ\tƖƝ\t","Ɨƙ0Ƙƚ\t","ƙƘƚƛ","ƛƙƛƜ","ƜƞƝƗ","ƝƞƞƠ","ƟƔƟƠ","ƠƢơƑ","ơƢƢƪ","ƣƫ\\Ƥƥ\tƥ","Ʀ\tƦƧ\tƧƨ","<ƨƩ\tƩƫ\t","ƪƣƪƤ","ƪƫƫt","ƬƮ\tƭƬ","ƮƲƯƱ\t","ưƯƱƴ","ƲưƲƳ","ƳvƴƲ","Ƶƺbƶƹ","BƷƹ\nƸƶ","ƸƷƹƼ","ƺƸƺƻ","ƻƽƼƺ","ƽƾbƾx","ƿǄ)ǀǃBǁ","ǃ\nǂǀǂ","ǁǃǆǄ","ǂǄǅǅ","ǇǆǄǇ","ǈ)ǈzǉǋ","\tǊǉǋǌ","ǌǊǌǍ","Ǎǔǎǐ","0ǏǑ\tǐǏ","Ǒǒǒǐ","ǒǓǓǕ","ǔǎǔǕ","Ǖ|ǖǘ\t\b","ǗǖǘǙ","ǙǗǙǚ","ǚǛǛǜ\b?","ǜ~ǝǞ1Ǟ","ǟ,ǟǣǠ","Ǣ\vǡǠǢ","ǥǣǤǣ","ǡǤǦǥ","ǣǦǧ,ǧ","Ǩ1Ǩǩǩ","Ǫ\b@ǪǫǬ","1Ǭǭ1ǭǱ","Ǯǰ\n\tǯǮ","ǰǳǱǯ","ǱǲǲǴ","ǳǱǴǵ\bA","ǵǶǹ^","ǷǺ\t\nǸǺCǹ","ǷǹǸǺ","ǻǼwǼ","ǽDǽǾDǾǿ","DǿȀDȀ","ȁȂ\t\vȂ","ƂƄƆƉƛƝƟ","ơƪƭưƲƸƺǂǄǌǒǔ","ǙǣǱǹ"].join(""),r=(new i.atn.ATNDeserializer).deserialize(a),o=r.decisionToState.map(((e,t)=>new i.dfa.DFA(e,t)));class s extends i.Lexer{static grammarFileName="FHIRPath.g4";static channelNames=["DEFAULT_TOKEN_CHANNEL","HIDDEN"];static modeNames=["DEFAULT_MODE"];static literalNames=[null,"'.'","'['","']'","'+'","'-'","'*'","'/'","'div'","'mod'","'&'","'|'","'<='","'<'","'>'","'>='","'is'","'as'","'='","'~'","'!='","'!~'","'in'","'contains'","'and'","'or'","'xor'","'implies'","'('","')'","'{'","'}'","'true'","'false'","'%'","'$this'","'$index'","'$total'","','","'year'","'month'","'week'","'day'","'hour'","'minute'","'second'","'millisecond'","'years'","'months'","'weeks'","'days'","'hours'","'minutes'","'seconds'","'milliseconds'"];static symbolicNames=[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"DATETIME","TIME","IDENTIFIER","DELIMITEDIDENTIFIER","STRING","NUMBER","WS","COMMENT","LINE_COMMENT"];static ruleNames=["T__0","T__1","T__2","T__3","T__4","T__5","T__6","T__7","T__8","T__9","T__10","T__11","T__12","T__13","T__14","T__15","T__16","T__17","T__18","T__19","T__20","T__21","T__22","T__23","T__24","T__25","T__26","T__27","T__28","T__29","T__30","T__31","T__32","T__33","T__34","T__35","T__36","T__37","T__38","T__39","T__40","T__41","T__42","T__43","T__44","T__45","T__46","T__47","T__48","T__49","T__50","T__51","T__52","T__53","DATETIME","TIME","TIMEFORMAT","IDENTIFIER","DELIMITEDIDENTIFIER","STRING","NUMBER","WS","COMMENT","LINE_COMMENT","ESC","UNICODE","HEX"];constructor(e){super(e),this._interp=new i.atn.LexerATNSimulator(this,r,o,new i.PredictionContextCache)}get atn(){return r}}s.EOF=i.Token.EOF,s.T__0=1,s.T__1=2,s.T__2=3,s.T__3=4,s.T__4=5,s.T__5=6,s.T__6=7,s.T__7=8,s.T__8=9,s.T__9=10,s.T__10=11,s.T__11=12,s.T__12=13,s.T__13=14,s.T__14=15,s.T__15=16,s.T__16=17,s.T__17=18,s.T__18=19,s.T__19=20,s.T__20=21,s.T__21=22,s.T__22=23,s.T__23=24,s.T__24=25,s.T__25=26,s.T__26=27,s.T__27=28,s.T__28=29,s.T__29=30,s.T__30=31,s.T__31=32,s.T__32=33,s.T__33=34,s.T__34=35,s.T__35=36,s.T__36=37,s.T__37=38,s.T__38=39,s.T__39=40,s.T__40=41,s.T__41=42,s.T__42=43,s.T__43=44,s.T__44=45,s.T__45=46,s.T__46=47,s.T__47=48,s.T__48=49,s.T__49=50,s.T__50=51,s.T__51=52,s.T__52=53,s.T__53=54,s.DATETIME=55,s.TIME=56,s.IDENTIFIER=57,s.DELIMITEDIDENTIFIER=58,s.STRING=59,s.NUMBER=60,s.WS=61,s.COMMENT=62,s.LINE_COMMENT=63,e.exports=s},8314:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.UnitTables=void 0;var i=n(4435).Ucum,a=new class{constructor(){this.unitNames_={},this.unitCodes_={},this.codeOrder_=[],this.unitStrings_={},this.unitDimensions_={},this.unitSynonyms_={},this.massDimIndex_=0,this.dimVecIndexToBaseUnit_={}}unitsCount(){return Object.keys(this.unitCodes_).length}addUnit(e){e.name_&&this.addUnitName(e),this.addUnitCode(e),this.addUnitString(e);try{e.dim_.getProperty("dimVec_")&&this.addUnitDimension(e)}catch(e){}if(e.isBase_){const t=e.dim_.dimVec_;let n;for(let e=0,i=t.length;null==n&&e<i;++e)0!=t[e]&&(n=e);this.dimVecIndexToBaseUnit_[n]=e.csCode_}}addUnitName(e){let t=e.name_;if(!t)throw new Error(`UnitTables.addUnitName called for a unit with no name.  Unit code = ${e.csCode_}.`);this.unitNames_[t]?this.unitNames_[t].push(e):this.unitNames_[t]=[e]}addUnitCode(e){let t=e.csCode_;if(!t)throw new Error("UnitTables.addUnitCode called for unit that has no code.");if(this.unitCodes_[t])throw new Error(`UnitTables.addUnitCode called, already contains entry for unit with code = ${t}`);if(this.unitCodes_[t]=e,this.codeOrder_.push(t),"g"==t){let t=e.dim_.dimVec_,n=0;for(;n<t.length&&t[n]<1;n++);this.massDimIndex_=n}}addUnitString(e){let t=null;if(t=1==i.caseSensitive_?e.csUnitString_:e.ciUnitString_,t){let n={mag:e.baseFactorStr_,unit:e};this.unitStrings_[t]?this.unitStrings_[t].push(n):this.unitStrings_[t]=[n]}}addUnitDimension(e){let t=e.dim_.getProperty("dimVec_");if(!t)throw new Error(`UnitTables.addUnitDimension called for a unit with no dimension.  Unit code = ${e.csCode_}.`);this.unitDimensions_[t]?this.unitDimensions_[t].push(e):this.unitDimensions_[t]=[e]}buildUnitSynonyms(){for(let e in this.unitCodes_){let t=this.unitCodes_[e],n=t.synonyms_;if(n){let t=n.split(";");if(""!==t[0]){let n=t.length;for(let i=0;i<n;i++){let n=t[i].trim();this.addSynonymCodes(e,n)}}}this.addSynonymCodes(e,t.name_)}}addSynonymCodes(e,t){let n=t.split(" "),i=n.length;for(let t=0;t<i;t++){let i=n[t];this.unitSynonyms_[i]?-1===this.unitSynonyms_[i].indexOf(e)&&this.unitSynonyms_[i].push(e):this.unitSynonyms_[i]=[e]}}getUnitByCode(e){let t=null;return e&&(t=this.unitCodes_[e]),t}getUnitByName(e){if(null==e)throw new Error("Unable to find unit by name because no name was provided.");let t=e.indexOf(i.codeSep_),n=null;t>=1&&(n=e.substr(t+i.codeSep_.length),e=e.substr(0,t));let a=this.unitNames_[e];if(a){let e=a.length;if(n&&e>1){let t=0;for(;a[t].csCode_!==n&&t<e;t++);a=t<e?[a[t]]:null}}return a}getUnitByString(e){let t=null;return e&&(t=this.unitStrings_[e],void 0===t&&(t=null)),t}getUnitsByDimension(e){let t=null;if(null==e)throw new Error("Unable to find unit by because no dimension vector was provided.");return t=this.unitDimensions_[e],null==t&&console.log(`Unable to find unit with dimension = ${e}`),t}getUnitBySynonym(e){let t={},n=[];try{if(null==e)throw t.status="error",new Error("Unable to find unit by synonym because no synonym was provided.");0===Object.keys(this.unitSynonyms_).length&&this.buildUnitSynonyms();let i=[];if(i=this.unitSynonyms_[e],i){t.status="succeeded";let e=i.length;for(let t=0;t<e;t++)n.push(this.unitCodes_[i[t]]);t.units=n}0===n.length&&(t.status="failed",t.msg=`Unable to find any units with synonym = ${e}`)}catch(e){t.msg=e.message}return t}getAllUnitNames(){return Object.keys(this.unitNames_)}getUnitNamesList(){let e=[],t=Object.keys(this.unitCodes_);t.sort(this.compareCodes);let n=t.length;for(let a=0;a<n;a++)e[a]=t[a]+i.codeSep_+this.unitCodes_[t[a]].name_;return e}getMassDimensionIndex(){return this.massDimIndex_}compareCodes(e,t){return(e=(e=e.replace(/[\[\]]/g,"")).toLowerCase())<(t=(t=t.replace(/[\[\]]/g,"")).toLowerCase())?-1:1}getAllUnitCodes(){return Object.keys(this.unitCodes_)}allUnitsByDef(){let e=[],t=this.codeOrder_.length;for(let n=0;n<t;n++)e.push(this.getUnitByCode(this.codeOrder_[n]));return e}allUnitsByName(e,t){null==t&&(t="|");let n="",i=this.getAllUnitNames(),a=i.length,r=e.length;for(let o=0;o<a;o++){let a=this.getUnitByName(i[o]);for(let i=0;i<a.length;i++){let o=a[i];for(let i=0;i<r;i++)if(i>0&&(n+=t),"dim_"===e[i])null!==o.dim_&&void 0!==o.dim_&&o.dim_.dimVec_ instanceof Array?n+="["+o.dim_.dimVec_.join(",")+"]":n+="";else{let t=o[e[i]];n+="string"==typeof t?t.replace(/[\n\r]/g," "):t}n+="\r\n"}}return n}printUnits(e,t){void 0===e&&(e=!1),void 0===t&&(t="|");let n="",i=this.codeOrder_.length,a="csCode"+t;e&&(a+="ciCode"+t),a+="name"+t,e&&(a+="isBase"+t),a+="magnitude"+t+"dimension"+t+"from unit(s)"+t+"value"+t+"function"+t,e&&(a+="property"+t+"printSymbol"+t+"synonyms"+t+"source"+t+"class"+t+"isMetric"+t+"variable"+t+"isSpecial"+t+"isAbitrary"+t),a+="comment",n=a+"\n";for(let r=0;r<i;r++){let i=this.getUnitByCode(this.codeOrder_[r]);a=this.codeOrder_[r]+t,e&&(a+=i.getProperty("ciCode_")+t),a+=i.getProperty("name_")+t,e&&(i.getProperty("isBase_")?a+="true"+t:a+="false"+t),a+=i.getProperty("magnitude_")+t;let o=i.getProperty("dim_");a+=o?o.dimVec_+t:"null"+t,i.csUnitString_?a+=i.csUnitString_+t+i.baseFactor_+t:a+="null"+t+"null"+t,i.cnv_?a+=i.cnv_+t:a+="null"+t,e&&(a+=i.getProperty("property_")+t+i.getProperty("printSymbol_")+t+i.getProperty("synonyms_")+t+i.getProperty("source_")+t+i.getProperty("class_")+t+i.getProperty("isMetric_")+t+i.getProperty("variable_")+t+i.getProperty("isSpecial_")+t+i.getProperty("isArbitrary_")+t),i.defError_&&(a+="problem parsing this one, deferred to later."),n+=a+"\n"}return n}};const r={getInstance:function(){return a}};t.UnitTables=r},8545:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Prefix=void 0,n(4435),t.Prefix=class{constructor(e){if(void 0===e.code_||null===e.code_||void 0===e.name_||null===e.name_||void 0===e.value_||null===e.value_||void 0===e.exp_)throw new Error("Prefix constructor called missing one or more parameters.  Prefix codes (cs or ci), name, value and exponent must all be specified and all but the exponent must not be null.");this.code_=e.code_,this.ciCode_=e.ciCode_,this.name_=e.name_,this.printSymbol_=e.printSymbol_,"string"==typeof e.value_?this.value_=parseFloat(e.value_):this.value_=e.value_,this.exp_=e.exp_}getValue(){return this.value_}getCode(){return this.code_}getCiCode(){return this.ciCode_}getName(){return this.name_}getPrintSymbol(){return this.printSymbol_}getExp(){return this.exp_}equals(e){return this.code_===e.code_&&this.ciCode_===e.ciCode_&&this.name_===e.name_&&this.printSymbol_===e.printSymbol_&&this.value_===e.value_&&this.exp_===e.exp_}}},8629:(e,t,n)=>{t.lG=void 0,n(4435).Ucum;var i=n(1593).l;t.lG=i,n(8314).UnitTables},8845:e=>{class t{syntaxError(e,t,n,i,a,r){}reportAmbiguity(e,t,n,i,a,r,o){}reportAttemptingFullContext(e,t,n,i,a,r){}reportContextSensitivity(e,t,n,i,a,r){}}class n extends t{constructor(){super()}syntaxError(e,t,n,i,a,r){console.error("line "+n+":"+i+" "+a)}}n.INSTANCE=new n,e.exports={ErrorListener:t,ConsoleErrorListener:n,ProxyErrorListener:class extends t{constructor(e){if(super(),null===e)throw"delegates";return this.delegates=e,this}syntaxError(e,t,n,i,a,r){this.delegates.map((o=>o.syntaxError(e,t,n,i,a,r)))}reportAmbiguity(e,t,n,i,a,r,o){this.delegates.map((s=>s.reportAmbiguity(e,t,n,i,a,r,o)))}reportAttemptingFullContext(e,t,n,i,a,r){this.delegates.map((o=>o.reportAttemptingFullContext(e,t,n,i,a,r)))}reportContextSensitivity(e,t,n,i,a,r){this.delegates.map((o=>o.reportContextSensitivity(e,t,n,i,a,r)))}}}},9191:(e,t,n)=>{const i=n(7601),a=n(4623),{SemanticContext:r}=n(4339),{merge:o}=n(2482);function s(e){return e.hashCodeForConfigSet()}function l(e,t){return e===t||null!==e&&null!==t&&e.equalsForConfigSet(t)}class c{constructor(e){this.configLookup=new a.Set(s,l),this.fullCtx=void 0===e||e,this.readOnly=!1,this.configs=[],this.uniqueAlt=0,this.conflictingAlts=null,this.hasSemanticContext=!1,this.dipsIntoOuterContext=!1,this.cachedHashCode=-1}add(e,t){if(void 0===t&&(t=null),this.readOnly)throw"This set is readonly";e.semanticContext!==r.NONE&&(this.hasSemanticContext=!0),e.reachesIntoOuterContext>0&&(this.dipsIntoOuterContext=!0);const n=this.configLookup.add(e);if(n===e)return this.cachedHashCode=-1,this.configs.push(e),!0;const i=!this.fullCtx,a=o(n.context,e.context,i,t);return n.reachesIntoOuterContext=Math.max(n.reachesIntoOuterContext,e.reachesIntoOuterContext),e.precedenceFilterSuppressed&&(n.precedenceFilterSuppressed=!0),n.context=a,!0}getStates(){const e=new a.Set;for(let t=0;t<this.configs.length;t++)e.add(this.configs[t].state);return e}getPredicates(){const e=[];for(let t=0;t<this.configs.length;t++){const n=this.configs[t].semanticContext;n!==r.NONE&&e.push(n.semanticContext)}return e}optimizeConfigs(e){if(this.readOnly)throw"This set is readonly";if(0!==this.configLookup.length)for(let t=0;t<this.configs.length;t++){const n=this.configs[t];n.context=e.getCachedContext(n.context)}}addAll(e){for(let t=0;t<e.length;t++)this.add(e[t]);return!1}equals(e){return this===e||e instanceof c&&a.equalArrays(this.configs,e.configs)&&this.fullCtx===e.fullCtx&&this.uniqueAlt===e.uniqueAlt&&this.conflictingAlts===e.conflictingAlts&&this.hasSemanticContext===e.hasSemanticContext&&this.dipsIntoOuterContext===e.dipsIntoOuterContext}hashCode(){const e=new a.Hash;return e.update(this.configs),e.finish()}updateHashCode(e){this.readOnly?(-1===this.cachedHashCode&&(this.cachedHashCode=this.hashCode()),e.update(this.cachedHashCode)):e.update(this.hashCode())}isEmpty(){return 0===this.configs.length}contains(e){if(null===this.configLookup)throw"This method is not implemented for readonly sets.";return this.configLookup.contains(e)}containsFast(e){if(null===this.configLookup)throw"This method is not implemented for readonly sets.";return this.configLookup.containsFast(e)}clear(){if(this.readOnly)throw"This set is readonly";this.configs=[],this.cachedHashCode=-1,this.configLookup=new a.Set}setReadonly(e){this.readOnly=e,e&&(this.configLookup=null)}toString(){return a.arrayToString(this.configs)+(this.hasSemanticContext?",hasSemanticContext="+this.hasSemanticContext:"")+(this.uniqueAlt!==i.INVALID_ALT_NUMBER?",uniqueAlt="+this.uniqueAlt:"")+(null!==this.conflictingAlts?",conflictingAlts="+this.conflictingAlts:"")+(this.dipsIntoOuterContext?",dipsIntoOuterContext":"")}get items(){return this.configs}get length(){return this.configs.length}}e.exports={ATNConfigSet:c,OrderedATNConfigSet:class extends c{constructor(){super(),this.configLookup=new a.Set}}}},9300:(e,t,n)=>{var i=n(9856);e.exports=function(e,t){var n=Number(t);return i(e,7*n)}},9474:(e,t,n)=>{var i=n(4825);e.exports=function(e,t){var n=Number(t);return i(e,36e5*n)}},9520:(e,t,n)=>{const{Map:i,BitSet:a,AltDict:r,hashStuff:o}=n(4623),s=n(7601),{RuleStopState:l}=n(976),{ATNConfigSet:c}=n(9191),{ATNConfig:u}=n(2431),{SemanticContext:m}=n(4339),d={SLL:0,LL:1,LL_EXACT_AMBIG_DETECTION:2,hasSLLConflictTerminatingPrediction:function(e,t){if(d.allConfigsInRuleStopStates(t))return!0;if(e===d.SLL&&t.hasSemanticContext){const e=new c;for(let n=0;n<t.items.length;n++){let i=t.items[n];i=new u({semanticContext:m.NONE},i),e.add(i)}t=e}const n=d.getConflictingAltSubsets(t);return d.hasConflictingAltSet(n)&&!d.hasStateAssociatedWithOneAlt(t)},hasConfigInRuleStopState:function(e){for(let t=0;t<e.items.length;t++)if(e.items[t].state instanceof l)return!0;return!1},allConfigsInRuleStopStates:function(e){for(let t=0;t<e.items.length;t++)if(!(e.items[t].state instanceof l))return!1;return!0},resolvesToJustOneViableAlt:function(e){return d.getSingleViableAlt(e)},allSubsetsConflict:function(e){return!d.hasNonConflictingAltSet(e)},hasNonConflictingAltSet:function(e){for(let t=0;t<e.length;t++)if(1===e[t].length)return!0;return!1},hasConflictingAltSet:function(e){for(let t=0;t<e.length;t++)if(e[t].length>1)return!0;return!1},allSubsetsEqual:function(e){let t=null;for(let n=0;n<e.length;n++){const i=e[n];if(null===t)t=i;else if(i!==t)return!1}return!0},getUniqueAlt:function(e){const t=d.getAlts(e);return 1===t.length?t.minValue():s.INVALID_ALT_NUMBER},getAlts:function(e){const t=new a;return e.map((function(e){t.or(e)})),t},getConflictingAltSubsets:function(e){const t=new i;return t.hashFunction=function(e){o(e.state.stateNumber,e.context)},t.equalsFunction=function(e,t){return e.state.stateNumber===t.state.stateNumber&&e.context.equals(t.context)},e.items.map((function(e){let n=t.get(e);null===n&&(n=new a,t.put(e,n)),n.add(e.alt)})),t.getValues()},getStateToAltMap:function(e){const t=new r;return e.items.map((function(e){let n=t.get(e.state);null===n&&(n=new a,t.put(e.state,n)),n.add(e.alt)})),t},hasStateAssociatedWithOneAlt:function(e){const t=d.getStateToAltMap(e).values();for(let e=0;e<t.length;e++)if(1===t[e].length)return!0;return!1},getSingleViableAlt:function(e){let t=null;for(let n=0;n<e.length;n++){const i=e[n].minValue();if(null===t)t=i;else if(t!==i)return s.INVALID_ALT_NUMBER}return t}};e.exports=d},9856:(e,t,n)=>{var i=n(2926);e.exports=function(e,t){var n=i(e),a=Number(t);return n.setDate(n.getDate()+a),n}},9970:(e,t,n)=>{const i=n(38),{whereMacro:a,distinctFn:r}=n(7184),o=n(3580),s=n(6898),{deepEqual:l,maxCollSizeForDeepEqual:c}=n(7071),u={};function m(e,t){const n=e.length,a=t.length;let r=n<=a;if(r)if(n+a>c){const n=t.reduce(((e,t)=>(e[s(t)]=!0,e)),{});r=!e.some((e=>!n[s(e)]))}else for(let n=0,a=e.length;n<a&&r;++n){let a=i.valData(e[n]);r=t.some((e=>l(a,i.valData(e))))}return r}u.emptyFn=i.isEmpty,u.notFn=function(e){let t=o.singleton(e,"Boolean");return"boolean"==typeof t?!t:[]},u.existsMacro=function(e,t){if(t){const n=a.call(this,e,t);return n instanceof Promise?n.then((e=>u.existsMacro(e))):u.existsMacro(n)}return!i.isEmpty(e)},u.allMacro=function(e,t){const n=[];for(let a=0,r=e.length;a<r;++a){this.$index=a;const r=t(e[a]);if(r instanceof Promise)n.push(r);else if(!i.isTrue(r))return[!1]}return n.length?Promise.all(n).then((e=>e.some((e=>!i.isTrue(e)))?[!1]:[!0])):[!0]},u.allTrueFn=function(e){let t=!0;for(let n=0,a=e.length;n<a&&t;++n)t=!0===i.assertType(e[n],["boolean"],"allTrue");return[t]},u.anyTrueFn=function(e){let t=!1;for(let n=0,a=e.length;n<a&&!t;++n)t=!0===i.assertType(e[n],["boolean"],"anyTrue");return[t]},u.allFalseFn=function(e){let t=!0;for(let n=0,a=e.length;n<a&&t;++n)t=!1===i.assertType(e[n],["boolean"],"allFalse");return[t]},u.anyFalseFn=function(e){let t=!1;for(let n=0,a=e.length;n<a&&!t;++n)t=!1===i.assertType(e[n],["boolean"],"anyFalse");return[t]},u.subsetOfFn=function(e,t){return[m(e,t)]},u.supersetOfFn=function(e,t){return[m(t,e)]},u.isDistinctFn=function(e){return[e.length===r(e).length]},e.exports=u}},t={};function n(i){var a=t[i];if(void 0!==a)return a.exports;var r=t[i]={exports:{}};return e[i](r,r.exports,n),r.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var i in t)n.o(t,i)&&!n.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);const i=function(e,t){if("function"==typeof e)return function(){return e(arguments)?t.apply(this,arguments):e=>t(e,...arguments)};switch(e){case 0:case 1:throw new RangeError(`Invalid arity ${e}`);case 2:return function(e,n){return arguments.length>=2?t(e,n):function(n){return t(n,e)}};case 3:return function(e,n,i){return arguments.length>=3?t(e,n,i):function(i){return t(i,e,n)}};case 4:return function(e,n,i,a){return arguments.length>=4?t(e,n,i,a):function(a){return t(a,e,n,i)}};case 5:return function(e,n,i,a,r){return arguments.length>=5?t(e,n,i,a,r):function(r){return t(r,e,n,i,a)}};default:return function(){if(arguments.length>=e)return t.apply(this,arguments);const n=arguments;return function(e){return t(e,...n)}}}},a=e=>e,r=e=>()=>e,o=r(!0),s=r(!1),l=r(void 0),c=l;function u(e,t,n,i,a,r,o,s,l){switch(arguments.length){case 1:return e;case 2:return t(e);case 3:return n(t(e));case 4:return i(n(t(e)));case 5:return a(i(n(t(e))));case 6:return r(a(i(n(t(e)))));case 7:return o(r(a(i(n(t(e))))));case 8:return s(o(r(a(i(n(t(e)))))));case 9:return l(s(o(r(a(i(n(t(e))))))));default:{let e=arguments[0];for(let t=1;t<arguments.length;t++)e=arguments[t](e);return e}}}const m=()=>"3.14.1",d=`effect/GlobalValue/globalStoreId/${m()}`;let f;const p=(e,t)=>(f||(globalThis[d]??=new Map,f=globalThis[d]),f.has(e)||f.set(e,t()),f.get(e)),g=e=>"string"==typeof e,h=e=>"number"==typeof e,y=e=>"boolean"==typeof e,C=e=>"bigint"==typeof e,S=e=>"symbol"==typeof e,b=e=>"function"==typeof e,E=e=>void 0===e,x=e=>void 0!==e,v=e=>null!==e,R=e=>!1,_=e=>"object"==typeof e&&null!==e,M=e=>_(e)||b(e),I=i(2,((e,t)=>M(e)&&t in e)),D=i(2,((e,t)=>I(e,"_tag")&&e._tag===t)),T=e=>null==e,k=e=>null!=e,P=e=>I(e,Symbol.iterator),O=e=>`BUG: ${e} - please report an issue at https://github.com/Effect-TS/effect/issues`;Symbol.iterator;class L{self;called=!1;constructor(e){this.self=e}next(e){return this.called?{value:e,done:!0}:(this.called=!0,{value:this.self,done:!1})}return(e){return{value:e,done:!0}}throw(e){throw e}[Symbol.iterator](){return new L(this.self)}}class A{_state;constructor(e,t,n,i){return T(t)&&T(e)?(t=4294967295*Math.random()>>>0,e=0):T(t)&&(t=e,e=0),T(i)&&T(n)?(i=this._state?this._state[3]:4150755663,n=this._state?this._state[2]:335903614):T(i)&&(i=n,n=0),this._state=new Int32Array([0,0,n>>>0,(1|(i||0))>>>0]),this._next(),N(this._state,this._state[0],this._state[1],e>>>0,t>>>0),this._next(),this}getState(){return[this._state[0],this._state[1],this._state[2],this._state[3]]}setState(e){this._state[0]=e[0],this._state[1]=e[1],this._state[2]=e[2],this._state[3]=1|e[3]}integer(e){return Math.round(this.number()*Number.MAX_SAFE_INTEGER)%e}number(){return(1*(67108863&this._next())*134217728+1*(134217727&this._next()))/9007199254740992}_next(){const e=this._state[0]>>>0,t=this._state[1]>>>0;!function(e,t,n,i,a){let r=32557*(n>>>16)>>>0,o=19605*(65535&n)>>>0,s=32557*(65535&n)>>>0,l=19605*(n>>>16)+((o>>>16)+(r>>>16))>>>0;o=o<<16>>>0,s=s+o>>>0,s>>>0<o>>>0&&(l=l+1>>>0),r=r<<16>>>0,s=s+r>>>0,s>>>0<r>>>0&&(l=l+1>>>0),l=l+Math.imul(n,1481765933)>>>0,l=l+Math.imul(t,a)>>>0,e[0]=l,e[1]=s}(this._state,e,t,0,1284865837),N(this._state,this._state[0],this._state[1],this._state[2],this._state[3]);let n=e>>>18,i=(t>>>18|e<<14)>>>0;n=(n^e)>>>0,i=(i^t)>>>0;const a=(i>>>27|n<<5)>>>0,r=e>>>27;return(a>>>r|a<<((-r>>>0&31)>>>0))>>>0}}function N(e,t,n,i,a){let r=t+i>>>0;const o=n+a>>>0;o>>>0<n>>>0&&(r=r+1|0),e[0]=r,e[1]=o}const w=Symbol.for("effect/Utils/YieldWrap");class U{#e;constructor(e){this.#e=e}[w](){return this.#e}}const B=p("effect/Utils/isStructuralRegion",(()=>({enabled:!1,tester:void 0}))),q=(e=>{const t={[e]:e=>e()};return function(n){return t[e](n)}})("effect_internal_function"),F=p(Symbol.for("effect/Hash/randomHashCache"),(()=>new WeakMap)),V=Symbol.for("effect/Hash"),G=e=>{if(!0===B.enabled)return 0;switch(typeof e){case"number":return K(e);case"bigint":return $(e.toString(10));case"boolean":case"symbol":return $(String(e));case"string":return $(e);case"undefined":return $("undefined");case"function":case"object":return null===e?$("null"):e instanceof Date?G(e.toISOString()):Q(e)?e[V]():z(e);default:throw new Error(`BUG: unhandled typeof ${typeof e} - please report an issue at https://github.com/Effect-TS/effect/issues`)}},z=e=>(F.has(e)||F.set(e,K(Math.floor(Math.random()*Number.MAX_SAFE_INTEGER))),F.get(e)),H=e=>t=>53*t^e,j=e=>3221225471&e|e>>>1&1073741824,Q=e=>I(e,V),K=e=>{if(e!=e||e===1/0)return 0;let t=0|e;for(t!==e&&(t^=4294967295*e);e>4294967295;)t^=e/=4294967295;return j(t)},$=e=>{let t=5381,n=e.length;for(;n;)t=33*t^e.charCodeAt(--n);return j(t)},J=e=>((e,t)=>{let n=12289;for(let i=0;i<t.length;i++)n^=u($(t[i]),H(G(e[t[i]])));return j(n)})(e,Object.keys(e)),W=e=>{let t=6151;for(let n=0;n<e.length;n++)t=u(t,H(G(e[n])));return j(t)},Y=function(){if(1===arguments.length){const e=arguments[0];return function(t){return Object.defineProperty(e,V,{value:()=>t,enumerable:!1}),t}}const e=arguments[0],t=arguments[1];return Object.defineProperty(e,V,{value:()=>t,enumerable:!1}),t},X=Symbol.for("effect/Equal");function Z(){return 1===arguments.length?e=>ee(e,arguments[0]):ee(arguments[0],arguments[1])}function ee(e,t){if(e===t)return!0;const n=typeof e;if(n!==typeof t)return!1;if("object"===n||"function"===n){if(null!==e&&null!==t){if(te(e)&&te(t))return!(G(e)!==G(t)||!e[X](t))||!(!B.enabled||!B.tester)&&B.tester(e,t);if(e instanceof Date&&t instanceof Date)return e.toISOString()===t.toISOString()}if(B.enabled){if(Array.isArray(e)&&Array.isArray(t))return e.length===t.length&&e.every(((e,n)=>ee(e,t[n])));if(Object.getPrototypeOf(e)===Object.prototype&&Object.getPrototypeOf(e)===Object.prototype){const n=Object.keys(e),i=Object.keys(t);if(n.length===i.length){for(const i of n)if(!(i in t)||!ee(e[i],t[i]))return!!B.tester&&B.tester(e,t);return!0}}return!!B.tester&&B.tester(e,t)}}return!(!B.enabled||!B.tester)&&B.tester(e,t)}const te=e=>I(e,X),ne=()=>Z,ie=Symbol.for("nodejs.util.inspect.custom"),ae=e=>{try{if(I(e,"toJSON")&&b(e.toJSON)&&0===e.toJSON.length)return e.toJSON();if(Array.isArray(e))return e.map(ae)}catch(e){return{}}return me(e)},re=e=>JSON.stringify(e,null,2),oe=(e,t=2)=>{if("string"==typeof e)return e;try{return"object"==typeof e?se(e,t):String(e)}catch(t){return String(e)}},se=(e,t)=>{let n=[];const i=JSON.stringify(e,((e,t)=>"object"==typeof t&&null!==t?n.includes(t)?void 0:n.push(t)&&(void 0!==ue.fiberRefs&&ce(t)?t[le](ue.fiberRefs):t):t),t);return n=void 0,i},le=Symbol.for("effect/Inspectable/Redactable"),ce=e=>"object"==typeof e&&null!==e&&le in e,ue=p("effect/Inspectable/redactableState",(()=>({fiberRefs:void 0}))),me=e=>ce(e)&&void 0!==ue.fiberRefs?e[le](ue.fiberRefs):e,de=(e,t)=>{switch(t.length){case 0:return e;case 1:return t[0](e);case 2:return t[1](t[0](e));case 3:return t[2](t[1](t[0](e)));case 4:return t[3](t[2](t[1](t[0](e))));case 5:return t[4](t[3](t[2](t[1](t[0](e)))));case 6:return t[5](t[4](t[3](t[2](t[1](t[0](e))))));case 7:return t[6](t[5](t[4](t[3](t[2](t[1](t[0](e)))))));case 8:return t[7](t[6](t[5](t[4](t[3](t[2](t[1](t[0](e))))))));case 9:return t[8](t[7](t[6](t[5](t[4](t[3](t[2](t[1](t[0](e)))))))));default:{let n=e;for(let e=0,i=t.length;e<i;e++)n=t[e](n);return n}}},fe="Async",pe="Commit",ge="Failure",he="OnFailure",ye="OnSuccess",Ce="OnSuccessAndFailure",Se="Success",be="Sync",Ee="Tag",xe="UpdateRuntimeFlags",ve="While",Re="Iterator",_e="WithRuntime",Me="Yield",Ie="RevertFlags",De=Symbol.for("effect/Effect"),Te=Symbol.for("effect/Stream"),ke=Symbol.for("effect/Sink"),Pe=Symbol.for("effect/Channel"),Oe={_R:e=>e,_E:e=>e,_A:e=>e,_V:m()},Le={[De]:Oe,[Te]:Oe,[ke]:{_A:e=>e,_In:e=>e,_L:e=>e,_E:e=>e,_R:e=>e},[Pe]:{_Env:e=>e,_InErr:e=>e,_InElem:e=>e,_InDone:e=>e,_OutErr:e=>e,_OutElem:e=>e,_OutDone:e=>e},[X](e){return this===e},[V](){return Y(this,z(this))},[Symbol.iterator](){return new L(new U(this))},pipe(){return de(this,arguments)}},Ae={[V](){return Y(this,J(this))},[X](e){const t=Object.keys(this),n=Object.keys(e);if(t.length!==n.length)return!1;for(const n of t)if(!(n in e)||!Z(this[n],e[n]))return!1;return!0}},Ne={...Le,_op:pe},we={...Ne,...Ae},Ue=function(){function e(){}return e.prototype=Ne,e}(),Be=Symbol.for("effect/Option"),qe={...Le,[Be]:{_A:e=>e},[ie](){return this.toJSON()},toString(){return re(this.toJSON())}},Fe=Object.assign(Object.create(qe),{_tag:"Some",_op:"Some",[X](e){return ze(e)&&je(e)&&Z(this.value,e.value)},[V](){return Y(this,H(G(this._tag))(G(this.value)))},toJSON(){return{_id:"Option",_tag:this._tag,value:ae(this.value)}}}),Ve=G("None"),Ge=Object.assign(Object.create(qe),{_tag:"None",_op:"None",[X]:e=>ze(e)&&He(e),[V]:()=>Ve,toJSON(){return{_id:"Option",_tag:this._tag}}}),ze=e=>I(e,Be),He=e=>"None"===e._tag,je=e=>"Some"===e._tag,Qe=Object.create(Ge),Ke=e=>{const t=Object.create(Fe);return t.value=e,t},$e=Symbol.for("effect/Either"),Je={...Le,[$e]:{_R:e=>e},[ie](){return this.toJSON()},toString(){return re(this.toJSON())}},We=Object.assign(Object.create(Je),{_tag:"Right",_op:"Right",[X](e){return Xe(e)&&et(e)&&Z(this.right,e.right)},[V](){return H(G(this._tag))(G(this.right))},toJSON(){return{_id:"Either",_tag:this._tag,right:ae(this.right)}}}),Ye=Object.assign(Object.create(Je),{_tag:"Left",_op:"Left",[X](e){return Xe(e)&&Ze(e)&&Z(this.left,e.left)},[V](){return H(G(this._tag))(G(this.left))},toJSON(){return{_id:"Either",_tag:this._tag,left:ae(this.left)}}}),Xe=e=>I(e,$e),Ze=e=>"Left"===e._tag,et=e=>"Right"===e._tag,tt=e=>{const t=Object.create(We);return t.right=e,t},nt=e=>{const t=Object.create(Ye);return t.left=e,t},it=Xe,at=Ze,rt=et,ot=i(2,((e,{onLeft:t,onRight:n})=>at(e)?nt(t(e.left)):tt(n(e.right)))),st=i(2,((e,t)=>at(e)?nt(t(e.left)):tt(e.right))),lt=i(2,((e,t)=>rt(e)?tt(t(e.right)):nt(e.left))),ct=i(2,((e,{onLeft:t,onRight:n})=>at(e)?t(e.left):n(e.right))),ut=ct({onLeft:a,onRight:a}),mt=i(2,((e,t)=>{if(rt(e))return e.right;throw t(e.left)})),dt=mt((()=>new Error("getOrThrow called on a Left"))),ft=e=>(t,n)=>t===n||e(t,n),pt=i(2,((e,t)=>ft(((n,i)=>e(t(n),t(i)))))),gt=e=>e.length>0,ht=()=>Qe,yt=Ke,Ct=ze,St=He,bt=je,Et=i(2,((e,{onNone:t,onSome:n})=>St(e)?t():n(e.value))),xt=e=>Ze(e)?Qe:Ke(e.right),vt=i(2,((e,t)=>St(e)?t():e.value)),Rt=i(2,((e,t)=>St(e)?t():e)),_t=i(2,((e,t)=>St(e)?yt(t()):e)),Mt=e=>null==e?ht():yt(e),It=vt(l),Dt=i(2,((e,t)=>St(e)?ht():yt(t(e.value)))),Tt=i(2,((e,t)=>St(e)?ht():t(e.value))),kt=i(2,((e,t)=>St(e)?ht():Mt(t(e.value)))),Pt=Tt,Ot=i(2,((e,t)=>Pt(e,(e=>t(e)?Ke(e):Qe)))),Lt=e=>ft(((t,n)=>St(t)?St(n):!St(n)&&e(t.value,n.value))),At=(e=>i(2,((t,n)=>!St(t)&&e(t.value,n))))(ne()),Nt=i(2,((e,t)=>!St(e)&&t(e.value))),wt=i(2,((e,t)=>{let n=0;for(const i of e){const e=t(i,n);if(y(e)){if(e)return yt(i)}else if(bt(e))return e;n++}return ht()}));Symbol.iterator;const Ut=e=>(t,n)=>t===n?0:e(t,n),Bt=Ut(((e,t)=>e<t?-1:1)),qt=i(2,((e,t)=>Ut(((n,i)=>e(t(n),t(i)))))),Ft=e=>i(2,((t,n)=>1===e(t,n))),Vt=(Object.fromEntries,i(3,((e,t,n)=>({...e,[t]:n})))),Gt=(...e)=>e,zt=e=>new Array(e),Ht=i(2,((e,t)=>{const n=Math.max(1,Math.floor(e)),i=new Array(n);for(let e=0;e<n;e++)i[e]=t(e);return i})),jt=e=>Array.isArray(e)?e:Array.from(e),Qt=i(2,((e,{onEmpty:t,onNonEmpty:n})=>Xt(e)?n(an(e),on(e)):t())),Kt=i(2,((e,t)=>[t,...e])),$t=i(2,((e,t)=>[...e,t])),Jt=i(2,((e,t)=>jt(e).concat(jt(t)))),Wt=Array.isArray,Yt=gt,Xt=gt,Zt=(e,t)=>e<0||e>=t.length,en=i(2,((e,t)=>{const n=Math.floor(t);return Zt(n,e)?ht():yt(e[n])})),tn=i(2,((e,t)=>{const n=Math.floor(t);if(Zt(n,e))throw new Error(`Index ${n} out of bounds`);return e[n]})),nn=en(0),an=tn(0),rn=e=>e[e.length-1],on=e=>e.slice(1),sn=i(2,((e,t)=>gn(e,((e,t)=>{let n=0;for(const i of e){if(!t(i,n))break;n++}return n})(e,t)))),ln=i(2,((e,t)=>{const n=jt(e);return n.slice((i=t,a=n,Math.floor(Math.min(Math.max(0,i),a.length))),n.length);var i,a})),cn=wt,un=e=>Array.from(e).reverse(),mn=i(2,((e,t)=>{const n=Array.from(e);return n.sort(t),n})),dn=i(2,((e,t)=>fn(e,t,Gt))),fn=i(3,((e,t,n)=>{const i=jt(e),a=jt(t);if(Xt(i)&&Xt(a)){const e=[n(an(i),an(a))],t=Math.min(i.length,a.length);for(let r=1;r<t;r++)e[r]=n(i[r],a[r]);return e}return[]})),pn=ne(),gn=i(2,((e,t)=>{const n=Array.from(e),i=Math.floor(t);return Xt(n)?i>=1?hn(n,i):[[],n]:[n,[]]})),hn=i(2,((e,t)=>{const n=Math.max(1,Math.floor(t));return n>=e.length?[yn(e),[]]:[Kt(e.slice(1,n),an(e)),e.slice(n)]})),yn=e=>e.slice(),Cn=i(3,((e,t,n)=>{const i=jt(e),a=jt(t);return Xt(i)?Xt(a)?kn(n)(Jt(i,a)):i:a})),Sn=i(2,((e,t)=>Cn(e,t,pn))),bn=(e=>{const t=(e=>i(2,((t,n)=>{for(const i of t)if(e(n,i))return!0;return!1})))(e);return i(2,((e,n)=>jt(e).filter((e=>t(n,e)))))})(pn),En=e=>[e],xn=i(2,((e,t)=>e.map(t))),vn=i(2,((e,t)=>{if((e=>0===e.length)(e))return[];const n=[];for(let i=0;i<e.length;i++){const a=t(e[i],i);for(let e=0;e<a.length;e++)n.push(a[e])}return n})),Rn=vn(a),_n=i(2,((e,t)=>{const n=jt(e),i=[];for(let e=0;e<n.length;e++){const a=t(n[e],e);bt(a)&&i.push(a.value)}return i})),Mn=i(2,((e,t)=>{const n=jt(e),i=[];for(let e=0;e<n.length;e++)t(n[e],e)&&i.push(n[e]);return i})),In=i(3,((e,t,n)=>jt(e).reduce(((e,t,i)=>n(e,t,i)),t))),Dn=(e,t)=>{const n=[];let i,a=e;for(;bt(i=t(a));){const[e,t]=i.value;n.push(e),a=t}return n},Tn=e=>ft(((t,n)=>{if(t.length!==n.length)return!1;for(let i=0;i<t.length;i++)if(!e(t[i],n[i]))return!1;return!0})),kn=i(2,((e,t)=>{const n=jt(e);if(Xt(n)){const e=[an(n)],i=on(n);for(const n of i)e.every((e=>!t(n,e)))&&e.push(n);return e}return[]})),Pn=e=>kn(e,ne()),On=i(2,((e,t)=>jt(e).join(t))),Ln=Symbol.for("effect/Chunk"),An=[],Nn=(e=>ft(((t,n)=>t.length===n.length&&jn(t).every(((t,i)=>e(t,Jn(n,i)))))))(Z),wn={[Ln]:{_A:e=>e},toString(){return re(this.toJSON())},toJSON(){return{_id:"Chunk",values:jn(this).map(ae)}},[ie](){return this.toJSON()},[X](e){return Bn(e)&&Nn(this,e)},[V](){return Y(this,W(jn(this)))},[Symbol.iterator](){switch(this.backing._tag){case"IArray":return this.backing.array[Symbol.iterator]();case"IEmpty":return An[Symbol.iterator]();default:return jn(this)[Symbol.iterator]()}},pipe(){return de(this,arguments)}},Un=e=>{const t=Object.create(wn);switch(t.backing=e,e._tag){case"IEmpty":t.length=0,t.depth=0,t.left=t,t.right=t;break;case"IConcat":t.length=e.left.length+e.right.length,t.depth=1+Math.max(e.left.depth,e.right.depth),t.left=e.left,t.right=e.right;break;case"IArray":t.length=e.array.length,t.depth=0,t.left=qn,t.right=qn;break;case"ISingleton":t.length=1,t.depth=0,t.left=qn,t.right=qn;break;case"ISlice":t.length=e.length,t.depth=e.chunk.depth+1,t.left=qn,t.right=qn}return t},Bn=e=>I(e,Ln),qn=Un({_tag:"IEmpty"}),Fn=()=>qn,Vn=(...e)=>$n(e),Gn=e=>Un({_tag:"ISingleton",a:e}),zn=e=>Bn(e)?e:Kn(jt(e)),Hn=(e,t,n)=>{switch(e.backing._tag){case"IArray":!function(e,t,n,i,a){for(let t=0;t<Math.min(e.length,0+a);t++)n[i+t-0]=e[t]}(e.backing.array,0,t,n,e.length);break;case"IConcat":Hn(e.left,t,n),Hn(e.right,t,n+e.left.length);break;case"ISingleton":t[n]=e.backing.a;break;case"ISlice":{let i=0,a=n;for(;i<e.length;)t[a]=Jn(e,i),i+=1,a+=1;break}}},jn=e=>{switch(e.backing._tag){case"IEmpty":return An;case"IArray":return e.backing.array;default:{const t=new Array(e.length);return Hn(e,t,0),e.backing={_tag:"IArray",array:t},e.left=qn,e.right=qn,e.depth=0,t}}},Qn=e=>{switch(e.backing._tag){case"IEmpty":case"ISingleton":return e;case"IArray":return Un({_tag:"IArray",array:un(e.backing.array)});case"IConcat":return Un({_tag:"IConcat",left:Qn(e.backing.right),right:Qn(e.backing.left)});case"ISlice":return Kn(un(jn(e)))}},Kn=e=>0===e.length?Fn():1===e.length?Gn(e[0]):Un({_tag:"IArray",array:e}),$n=e=>Kn(e),Jn=i(2,((e,t)=>{switch(e.backing._tag){case"IEmpty":throw new Error("Index out of bounds");case"ISingleton":if(0!==t)throw new Error("Index out of bounds");return e.backing.a;case"IArray":if(t>=e.length||t<0)throw new Error("Index out of bounds");return e.backing.array[t];case"IConcat":return t<e.left.length?Jn(e.left,t):Jn(e.right,t-e.left.length);case"ISlice":return Jn(e.backing.chunk,t+e.backing.offset)}})),Wn=i(2,((e,t)=>Zn(e,Gn(t)))),Yn=i(2,((e,t)=>Zn(Gn(t),e))),Xn=i(2,((e,t)=>{if(t<=0)return e;if(t>=e.length)return qn;switch(e.backing._tag){case"ISlice":return Un({_tag:"ISlice",chunk:e.backing.chunk,offset:e.backing.offset+t,length:e.backing.length-t});case"IConcat":return t>e.left.length?Xn(e.right,t-e.left.length):Un({_tag:"IConcat",left:Xn(e.left,t),right:e.right});default:return Un({_tag:"ISlice",chunk:e,offset:t,length:e.length-t})}})),Zn=i(2,((e,t)=>{if("IEmpty"===e.backing._tag)return t;if("IEmpty"===t.backing._tag)return e;const n=t.depth-e.depth;if(Math.abs(n)<=1)return Un({_tag:"IConcat",left:e,right:t});if(n<-1){if(e.left.depth>=e.right.depth){const n=Zn(e.right,t);return Un({_tag:"IConcat",left:e.left,right:n})}{const n=Zn(e.right.right,t);if(n.depth===e.depth-3){const t=Un({_tag:"IConcat",left:e.right.left,right:n});return Un({_tag:"IConcat",left:e.left,right:t})}{const t=Un({_tag:"IConcat",left:e.left,right:e.right.left});return Un({_tag:"IConcat",left:t,right:n})}}}if(t.right.depth>=t.left.depth){const n=Zn(e,t.left);return Un({_tag:"IConcat",left:n,right:t.right})}{const n=Zn(e,t.left.left);if(n.depth===t.depth-3){const e=Un({_tag:"IConcat",left:n,right:t.left.right});return Un({_tag:"IConcat",left:e,right:t.right})}{const e=Un({_tag:"IConcat",left:t.left.right,right:t.right});return Un({_tag:"IConcat",left:n,right:e})}}})),ei=e=>e.length>0,ti=e=>Jn(e,0),ni=ti,ii=e=>Xn(e,1),ai=Math.pow(2,5),ri=ai-1,oi=ai/2,si=ai/4;function li(e,t){return t>>>e&ri}function ci(e){return 1<<e}function ui(e,t){return n=e&t-1,n=(n=(858993459&(n-=n>>1&1431655765))+(n>>2&858993459))+(n>>4)&252645135,127&(n+=n>>8)+(n>>16);var n}function mi(e,t,n,i){let a=i;if(!e){const e=i.length;a=new Array(e);for(let t=0;t<e;++t)a[t]=i[t]}return a[t]=n,a}function di(e,t,n){const i=n.length-1;let a=0,r=0,o=n;if(e)a=r=t;else for(o=new Array(i);a<t;)o[r++]=n[a++];for(++a;a<=i;)o[r++]=n[a++];return e&&(o.length=i),o}class fi{_tag="EmptyNode";modify(e,t,n,i,a,r){const o=n(ht());return St(o)?new fi:(++r.value,new hi(e,i,a,o))}}function pi(e){return D(e,"EmptyNode")}function gi(e,t){return!pi(e)&&t===e.edit}class hi{edit;hash;key;value;_tag="LeafNode";constructor(e,t,n,i){this.edit=e,this.hash=t,this.key=n,this.value=i}modify(e,t,n,i,a,r){if(Z(a,this.key)){const t=n(this.value);return t===this.value?this:St(t)?(--r.value,new fi):gi(this,e)?(this.value=t,this):new hi(e,i,a,t)}const o=n(ht());return St(o)?this:(++r.value,Ei(e,t,this.hash,this,i,new hi(e,i,a,o)))}}class yi{edit;hash;children;_tag="CollisionNode";constructor(e,t,n){this.edit=e,this.hash=t,this.children=n}modify(e,t,n,i,a,r){if(i===this.hash){const t=gi(this,e),i=this.updateCollisionList(t,e,this.hash,this.children,n,a,r);return i===this.children?this:i.length>1?new yi(e,this.hash,i):i[0]}const o=n(ht());return St(o)?this:(++r.value,Ei(e,t,this.hash,this,i,new hi(e,i,a,o)))}updateCollisionList(e,t,n,i,a,r,o){const s=i.length;for(let l=0;l<s;++l){const s=i[l];if("key"in s&&Z(r,s.key)){const c=s.value,u=a(c);return u===c?i:St(u)?(--o.value,di(e,l,i)):mi(e,l,new hi(t,n,r,u),i)}}const l=a(ht());return St(l)?i:(++o.value,mi(e,s,new hi(t,n,r,l),i))}}class Ci{edit;mask;children;_tag="IndexedNode";constructor(e,t,n){this.edit=e,this.mask=t,this.children=n}modify(e,t,n,i,a,r){const o=this.mask,s=this.children,l=li(t,i),c=ci(l),u=ui(o,c),m=o&c,d=gi(this,e);if(!m){const m=(new fi).modify(e,t+5,n,i,a,r);return m?s.length>=oi?function(e,t,n,i,a){const r=[];let o=i,s=0;for(let e=0;o;++e)1&o&&(r[e]=a[s++]),o>>>=1;return r[t]=n,new Si(e,s+1,r)}(e,l,m,o,s):new Ci(e,o|c,function(e,t,n,i){const a=i.length;if(e){let e=a;for(;e>=t;)i[e--]=i[e];return i[t]=n,i}let r=0,o=0;const s=new Array(a+1);for(;r<t;)s[o++]=i[r++];for(s[t]=n;r<a;)s[++o]=i[r++];return s}(d,u,m,s)):this}const f=s[u],p=f.modify(e,t+5,n,i,a,r);if(f===p)return this;let g,h=o;if(pi(p)){if(h&=~c,!h)return new fi;if(s.length<=2&&(pi(y=s[1^u])||"LeafNode"===y._tag||"CollisionNode"===y._tag))return s[1^u];g=di(d,u,s)}else g=mi(d,u,p,s);var y;return d?(this.mask=h,this.children=g,this):new Ci(e,h,g)}}class Si{edit;size;children;_tag="ArrayNode";constructor(e,t,n){this.edit=e,this.size=t,this.children=n}modify(e,t,n,i,a,r){let o=this.size;const s=this.children,l=li(t,i),c=s[l],u=(c||new fi).modify(e,t+5,n,i,a,r);if(c===u)return this;const m=gi(this,e);let d;if(pi(c)&&!pi(u))++o,d=mi(m,l,u,s);else if(!pi(c)&&pi(u)){if(--o,o<=si)return function(e,t,n,i){const a=new Array(t-1);let r=0,o=0;for(let e=0,t=i.length;e<t;++e)if(e!==n){const t=i[e];t&&!pi(t)&&(a[r++]=t,o|=1<<e)}return new Ci(e,o,a)}(e,o,l,s);d=mi(m,l,new fi,s)}else d=mi(m,l,u,s);return m?(this.size=o,this.children=d,this):new Si(e,o,d)}}function bi(e,t,n,i,a,r){if(n===a)return new yi(e,n,[r,i]);const o=li(t,n),s=li(t,a);if(o===s)return t=>new Ci(e,ci(o)|ci(s),[t]);{const t=o<s?[i,r]:[r,i];return new Ci(e,ci(o)|ci(s),t)}}function Ei(e,t,n,i,a,r){let o,s=t;for(;;){const t=bi(e,s,n,i,a,r);if("function"!=typeof t){let e=t;for(;null!=o;)e=o.value(e),o=o.previous;return e}o={value:t,previous:o},s+=5}}const xi="effect/HashMap",vi=Symbol.for(xi),Ri={[vi]:vi,[Symbol.iterator](){return new Mi(this,((e,t)=>[e,t]))},[V](){let e=G(xi);for(const t of this)e^=u(G(t[0]),H(G(t[1])));return Y(this,e)},[X](e){if(Oi(e)){if(e._size!==this._size)return!1;for(const t of this){const n=u(e,Ai(t[0],G(t[0])));if(St(n))return!1;if(!Z(t[1],n.value))return!1}return!0}return!1},toString(){return re(this.toJSON())},toJSON(){return{_id:"HashMap",values:Array.from(this).map(ae)}},[ie](){return this.toJSON()},pipe(){return de(this,arguments)}},_i=(e,t,n,i)=>{const a=Object.create(Ri);return a._editable=e,a._edit=t,a._root=n,a._size=i,a};class Mi{map;f;v;constructor(e,t){this.map=e,this.f=t,this.v=Di(this.map._root,this.f,void 0)}next(){if(St(this.v))return{done:!0,value:void 0};const e=this.v.value;return this.v=Ii(e.cont),{done:!1,value:e.value}}[Symbol.iterator](){return new Mi(this.map,this.f)}}const Ii=e=>e?Ti(e[0],e[1],e[2],e[3],e[4]):ht(),Di=(e,t,n=void 0)=>{switch(e._tag){case"LeafNode":return bt(e.value)?yt({value:t(e.key,e.value.value),cont:n}):Ii(n);case"CollisionNode":case"ArrayNode":case"IndexedNode":{const i=e.children;return Ti(i.length,i,0,t,n)}default:return Ii(n)}},Ti=(e,t,n,i,a)=>{for(;n<e;){const r=t[n++];if(r&&!pi(r))return Di(r,i,[e,t,n,i,a])}return Ii(a)},ki=_i(!1,0,new fi,0),Pi=()=>ki,Oi=e=>I(e,vi),Li=i(2,((e,t)=>Ai(e,t,G(t)))),Ai=i(3,((e,t,n)=>{let i=e._root,a=0;for(;;)switch(i._tag){case"LeafNode":return Z(t,i.key)?i.value:ht();case"CollisionNode":if(n===i.hash){const e=i.children;for(let n=0,i=e.length;n<i;++n){const i=e[n];if("key"in i&&Z(t,i.key))return i.value}}return ht();case"IndexedNode":{const e=ci(li(a,n));if(i.mask&e){i=i.children[ui(i.mask,e)],a+=5;break}return ht()}case"ArrayNode":if(i=i.children[li(a,n)],i){a+=5;break}return ht();default:return ht()}})),Ni=i(2,((e,t)=>bt(Ai(e,t,G(t))))),wi=i(3,((e,t,n)=>Gi(e,t,(()=>yt(n))))),Ui=i(3,((e,t,n)=>e._editable?(e._root=t,e._size=n,e):t===e._root?e:_i(e._editable,e._edit,t,n))),Bi=e=>new Mi(e,(e=>e)),qi=e=>e._size,Fi=e=>_i(!0,e._edit+1,e._root,e._size),Vi=e=>(e._editable=!1,e),Gi=i(3,((e,t,n)=>zi(e,t,G(t),n))),zi=i(4,((e,t,n,i)=>{const a={value:e._size},r=e._root.modify(e._editable?e._edit:NaN,0,i,n,t,a);return u(e,Ui(r,a.value))})),Hi=i(2,((e,t)=>Gi(e,t,ht))),ji=i(2,((e,t)=>Ki(e,Pi(),((e,n,i)=>wi(e,i,t(n,i)))))),Qi=i(2,((e,t)=>Ki(e,void 0,((e,n,i)=>t(n,i))))),Ki=i(3,((e,t,n)=>{const i=e._root;if("LeafNode"===i._tag)return bt(i.value)?n(t,i.value.value,i.key):t;if("EmptyNode"===i._tag)return t;const a=[i.children];let r;for(;r=a.pop();)for(let e=0,i=r.length;e<i;){const i=r[e++];i&&!pi(i)&&("LeafNode"===i._tag?bt(i.value)&&(t=n(t,i.value.value,i.key)):a.push(i.children))}return t})),$i="effect/HashSet",Ji=Symbol.for($i),Wi={[Ji]:Ji,[Symbol.iterator](){return Bi(this._keyMap)},[V](){return Y(this,H(G(this._keyMap))(G($i)))},[X](e){return!!Xi(e)&&qi(this._keyMap)===qi(e._keyMap)&&Z(this._keyMap,e._keyMap)},toString(){return re(this.toJSON())},toJSON(){return{_id:"HashSet",values:Array.from(this).map(ae)}},[ie](){return this.toJSON()},pipe(){return de(this,arguments)}},Yi=e=>{const t=Object.create(Wi);return t._keyMap=e,t},Xi=e=>I(e,Ji),Zi=Yi(Pi()),ea=()=>Zi,ta=i(2,((e,t)=>Ni(e._keyMap,t))),na=e=>Yi(Fi(e._keyMap)),ia=e=>(e._keyMap._editable=!1,e),aa=i(2,((e,t)=>{const n=na(e);return t(n),ia(n)})),ra=i(2,((e,t)=>e._keyMap._editable?(wi(t,!0)(e._keyMap),e):Yi(wi(t,!0)(e._keyMap)))),oa=i(2,((e,t)=>e._keyMap._editable?(Hi(t)(e._keyMap),e):Yi(Hi(t)(e._keyMap)))),sa=i(2,((e,t)=>aa(e,(e=>{for(const n of t)oa(e,n)})))),la=i(2,((e,t)=>aa(ea(),(n=>{ca(e,(e=>ra(n,e)));for(const e of t)ra(n,e)})))),ca=i(2,((e,t)=>Qi(e._keyMap,((e,n)=>t(n))))),ua=ea,ma=(...e)=>{const t=na(ea());for(const n of e)ra(t,n);return ia(t)},da=ta,fa=e=>qi(e._keyMap),pa=ra,ga=oa,ha=sa,ya=la,Ca=i(3,((e,t,n)=>Ki(e._keyMap,t,((e,t,i)=>n(e,i))))),Sa="Die",ba="Empty",Ea="Fail",xa="Interrupt",va="Parallel",Ra="Sequential",_a="effect/Cause",Ma=Symbol.for(_a),Ia={[Ma]:{_E:e=>e},[V](){return u(G(_a),H(G(Fa(this))),Y(this))},[X](e){return Aa(e)&&qa(this,e)},pipe(){return de(this,arguments)},toJSON(){switch(this._tag){case"Empty":return{_id:"Cause",_tag:this._tag};case"Die":return{_id:"Cause",_tag:this._tag,defect:ae(this.defect)};case"Interrupt":return{_id:"Cause",_tag:this._tag,fiberId:this.fiberId.toJSON()};case"Fail":return{_id:"Cause",_tag:this._tag,failure:ae(this.error)};case"Sequential":case"Parallel":return{_id:"Cause",_tag:this._tag,left:ae(this.left),right:ae(this.right)}}},toString(){return Wa(this)},[ie](){return this.toJSON()}},Da=(()=>{const e=Object.create(Ia);return e._tag=ba,e})(),Ta=e=>{const t=Object.create(Ia);return t._tag=Ea,t.error=e,t},ka=e=>{const t=Object.create(Ia);return t._tag=Sa,t.defect=e,t},Pa=e=>{const t=Object.create(Ia);return t._tag=xa,t.fiberId=e,t},Oa=(e,t)=>{const n=Object.create(Ia);return n._tag=va,n.left=e,n.right=t,n},La=(e,t)=>{const n=Object.create(Ia);return n._tag=Ra,n.left=e,n.right=t,n},Aa=e=>I(e,Ma),Na=e=>Ja(void 0,Ha)(e),wa=e=>{const t=(e=>Ga(e,(e=>e._tag===Ea?yt(e.error):ht())))(e);switch(t._tag){case"None":return tt(e);case"Some":return nt(t.value)}},Ua=e=>Ga(e,(e=>e._tag===xa?yt(e.fiberId):ht())),Ba=e=>Ka(e,{onEmpty:Da,onFail:()=>Da,onDie:ka,onInterrupt:Pa,onSequential:La,onParallel:Oa}),qa=(e,t)=>{let n=Gn(e),i=Gn(t);for(;ei(n)&&ei(i);){const[e,t]=u(ni(n),$a([ua(),Fn()],(([e,t],n)=>{const[i,a]=za(n);return yt([u(e,ya(i)),u(t,Zn(a))])}))),[a,r]=u(ni(i),$a([ua(),Fn()],(([e,t],n)=>{const[i,a]=za(n);return yt([u(e,ya(i)),u(t,Zn(a))])})));if(!Z(e,a))return!1;n=t,i=r}return!0},Fa=e=>Va(Gn(e),Fn()),Va=(e,t)=>{for(;;){const[n,i]=u(e,In([ua(),Fn()],(([e,t],n)=>{const[i,a]=za(n);return[u(e,ya(i)),u(t,Zn(a))]}))),a=fa(n)>0?u(t,Yn(n)):t;if(0===i.length)return Qn(a);e=i,t=a}throw new Error(O("Cause.flattenCauseLoop"))},Ga=i(2,((e,t)=>{const n=[e];for(;n.length>0;){const e=n.pop(),i=t(e);switch(i._tag){case"None":switch(e._tag){case Ra:case va:n.push(e.right),n.push(e.left)}break;case"Some":return i}}return ht()})),za=e=>{let t=e;const n=[];let i=ua(),a=Fn();for(;void 0!==t;)switch(t._tag){case ba:if(0===n.length)return[i,a];t=n.pop();break;case Ea:if(i=pa(i,Vn(t._tag,t.error)),0===n.length)return[i,a];t=n.pop();break;case Sa:if(i=pa(i,Vn(t._tag,t.defect)),0===n.length)return[i,a];t=n.pop();break;case xa:if(i=pa(i,Vn(t._tag,t.fiberId)),0===n.length)return[i,a];t=n.pop();break;case Ra:switch(t.left._tag){case ba:t=t.right;break;case Ra:t=La(t.left.left,La(t.left.right,t.right));break;case va:t=Oa(La(t.left.left,t.right),La(t.left.right,t.right));break;default:a=Yn(a,t.right),t=t.left}break;case va:n.push(t.right),t=t.left}throw new Error(O("Cause.evaluateCauseLoop"))},Ha={emptyCase:o,failCase:s,dieCase:s,interruptCase:o,sequentialCase:(e,t,n)=>t&&n,parallelCase:(e,t,n)=>t&&n},ja="SequentialCase",Qa="ParallelCase",Ka=i(2,((e,{onDie:t,onEmpty:n,onFail:i,onInterrupt:a,onParallel:r,onSequential:o})=>Ja(e,void 0,{emptyCase:()=>n,failCase:(e,t)=>i(t),dieCase:(e,n)=>t(n),interruptCase:(e,t)=>a(t),sequentialCase:(e,t,n)=>o(t,n),parallelCase:(e,t,n)=>r(t,n)}))),$a=i(3,((e,t,n)=>{let i=t,a=e;const r=[];for(;void 0!==a;){const e=n(i,a);switch(i=bt(e)?e.value:i,a._tag){case Ra:case va:r.push(a.right),a=a.left;break;default:a=void 0}void 0===a&&r.length>0&&(a=r.pop())}return i})),Ja=i(3,((e,t,n)=>{const i=[e],a=[];for(;i.length>0;){const e=i.pop();switch(e._tag){case ba:a.push(tt(n.emptyCase(t)));break;case Ea:a.push(tt(n.failCase(t,e.error)));break;case Sa:a.push(tt(n.dieCase(t,e.defect)));break;case xa:a.push(tt(n.interruptCase(t,e.fiberId)));break;case Ra:i.push(e.right),i.push(e.left),a.push(nt({_tag:ja}));break;case va:i.push(e.right),i.push(e.left),a.push(nt({_tag:Qa}))}}const r=[];for(;a.length>0;){const e=a.pop();switch(e._tag){case"Left":switch(e.left._tag){case ja:{const e=r.pop(),i=r.pop(),a=n.sequentialCase(t,e,i);r.push(a);break}case Qa:{const e=r.pop(),i=r.pop(),a=n.parallelCase(t,e,i);r.push(a);break}}break;case"Right":r.push(e.right)}}if(0===r.length)throw new Error("BUG: Cause.reduceWithContext - please report an issue at https://github.com/Effect-TS/effect/issues");return r.pop()})),Wa=(e,t)=>Na(e)?"All fibers interrupted without errors.":ar(e).map((function(e){return!0!==t?.renderErrorCause||void 0===e.cause?e.stack:`${e.stack} {\n${Ya(e.cause,"  ")}\n}`})).join("\n"),Ya=(e,t)=>{const n=e.stack.split("\n");let i=`${t}[cause]: ${n[0]}`;for(let e=1,a=n.length;e<a;e++)i+=`\n${t}${n[e]}`;return e.cause&&(i+=` {\n${Ya(e.cause,`${t}  `)}\n${t}}`),i};class Xa extends globalThis.Error{span=void 0;constructor(e){const t="object"==typeof e&&null!==e,n=Error.stackTraceLimit;Error.stackTraceLimit=1,super(Za(e),t&&"cause"in e&&void 0!==e.cause?{cause:new Xa(e.cause)}:void 0),""===this.message&&(this.message="An error has occurred"),Error.stackTraceLimit=n,this.name=e instanceof Error?e.name:"Error",t&&(ir in e&&(this.span=e[ir]),Object.keys(e).forEach((t=>{t in this||(this[t]=e[t])}))),this.stack=nr(`${this.name}: ${this.message}`,e instanceof Error&&e.stack?e.stack:"",this.span)}}const Za=e=>{if("string"==typeof e)return e;if("object"==typeof e&&null!==e&&e instanceof Error)return e.message;try{if(I(e,"toString")&&b(e.toString)&&e.toString!==Object.prototype.toString&&e.toString!==globalThis.Array.prototype.toString)return e.toString()}catch{}return se(e)},er=/\((.*)\)/g,tr=p("effect/Tracer/spanToTrace",(()=>new WeakMap)),nr=(e,t,n)=>{const i=[e],a=t.startsWith(e)?t.slice(e.length).split("\n"):t.split("\n");for(let e=1;e<a.length&&!a[e].includes("Generator.next");e++){if(a[e].includes("effect_internal_function")){i.pop();break}i.push(a[e].replace(/at .*effect_instruction_i.*\((.*)\)/,"at $1").replace(/EffectPrimitive\.\w+/,"<anonymous>"))}if(n){let e=n,t=0;for(;e&&"Span"===e._tag&&t<10;){const n=tr.get(e);if("function"==typeof n){const t=n();if("string"==typeof t){const n=t.matchAll(er);let a=!1;for(const[,t]of n)a=!0,i.push(`    at ${e.name} (${t})`);a||i.push(`    at ${e.name} (${t.replace(/^at /,"")})`)}else i.push(`    at ${e.name}`)}else i.push(`    at ${e.name}`);e=It(e.parent),t++}}return i.join("\n")},ir=Symbol.for("effect/SpanAnnotation"),ar=e=>Ja(e,void 0,{emptyCase:()=>[],dieCase:(e,t)=>[new Xa(t)],failCase:(e,t)=>[new Xa(t)],interruptCase:()=>[],parallelCase:(e,t,n)=>[...t,...n],sequentialCase:(e,t,n)=>[...t,...n]}),rr=Symbol.for("effect/Context/Tag"),or=Symbol.for("effect/Context/Reference"),sr=Symbol.for("effect/STM"),lr={...Le,_op:"Tag",[sr]:Oe,[rr]:{_Service:e=>e,_Identifier:e=>e},toString(){return re(this.toJSON())},toJSON(){return{_id:"Tag",key:this.key,stack:this.stack}},[ie](){return this.toJSON()},of:e=>e,context(e){return gr(this,e)}},cr={...lr,[or]:or},ur=Symbol.for("effect/Context"),mr={[ur]:{_Services:e=>e},[X](e){if(fr(e)&&this.unsafeMap.size===e.unsafeMap.size){for(const t of this.unsafeMap.keys())if(!e.unsafeMap.has(t)||!Z(this.unsafeMap.get(t),e.unsafeMap.get(t)))return!1;return!0}return!1},[V](){return Y(this,K(this.unsafeMap.size))},pipe(){return de(this,arguments)},toString(){return re(this.toJSON())},toJSON(){return{_id:"Context",services:Array.from(this.unsafeMap).map(ae)}},[ie](){return this.toJSON()}},dr=e=>{const t=Object.create(mr);return t.unsafeMap=e,t},fr=e=>I(e,ur),pr=dr(new Map),gr=(e,t)=>dr(new Map([[e.key,t]])),hr=i(3,((e,t,n)=>{const i=new Map(e.unsafeMap);return i.set(t.key,n),dr(i)})),yr=p("effect/Context/defaultValueCache",(()=>new Map)),Cr=e=>{if(yr.has(e.key))return yr.get(e.key);const t=e.defaultValue();return yr.set(e.key,t),t},Sr=i(2,((e,t)=>{if(!e.unsafeMap.has(t.key)){if(or in t)return Cr(t);throw(e=>{const t=new Error("Service not found"+(e.key?`: ${String(e.key)}`:""));if(e.stack){const n=e.stack.split("\n");if(n.length>2){const e=n[2].match(/at (.*)/);e&&(t.message=t.message+` (defined at ${e[1]})`)}}if(t.stack){const e=t.stack.split("\n");e.splice(1,3),t.stack=e.join("\n")}return t})(t)}return e.unsafeMap.get(t.key)})),br=Sr,Er=i(2,((e,t)=>e.unsafeMap.has(t.key)?Ke(e.unsafeMap.get(t.key)):I(t,or)?Ke(Cr(t)):Qe)),xr=i(2,((e,t)=>{const n=new Map(e.unsafeMap);for(const[e,i]of t.unsafeMap)n.set(e,i);return dr(n)})),vr=e=>{const t=Error.stackTraceLimit;Error.stackTraceLimit=2;const n=new Error;Error.stackTraceLimit=t;const i=Object.create(lr);return Object.defineProperty(i,"stack",{get:()=>n.stack}),i.key=e,i},Rr=()=>pr,_r=gr,Mr=hr,Ir=br,Dr=Sr,Tr=Er,kr=xr,Pr=()=>(e,t)=>{const n=Error.stackTraceLimit;Error.stackTraceLimit=2;const i=new Error;function a(){}return Error.stackTraceLimit=n,Object.setPrototypeOf(a,cr),a.key=e,a.defaultValue=t.defaultValue,Object.defineProperty(a,"stack",{get:()=>i.stack}),a},Or=Symbol.for("effect/Duration"),Lr=BigInt(0),Ar=BigInt(24),Nr=BigInt(60),wr=BigInt(1e3),Ur=BigInt(1e6),Br=BigInt(1e9),qr=/^(-?\d+(?:\.\d+)?)\s+(nanos?|micros?|millis?|seconds?|minutes?|hours?|days?|weeks?)$/,Fr=e=>{if(jr(e))return e;if(h(e))return Wr(e);if(C(e))return $r(e);if(Array.isArray(e)&&2===e.length&&e.every(h))return e[0]===-1/0||e[1]===-1/0||Number.isNaN(e[0])||Number.isNaN(e[1])?Qr:e[0]===1/0||e[1]===1/0?Kr:$r(BigInt(Math.round(1e9*e[0]))+BigInt(Math.round(e[1])));if(g(e)){const t=qr.exec(e);if(t){const[e,n,i]=t,a=Number(n);switch(i){case"nano":case"nanos":return $r(BigInt(n));case"micro":case"micros":return Jr(BigInt(n));case"milli":case"millis":return Wr(a);case"second":case"seconds":return Yr(a);case"minute":case"minutes":return Xr(a);case"hour":case"hours":return Zr(a);case"day":case"days":return eo(a);case"week":case"weeks":return to(a)}}}throw new Error("Invalid DurationInput")},Vr={_tag:"Millis",millis:0},Gr={_tag:"Infinity"},zr={[Or]:Or,[V](){return Y(this,J(this.value))},[X](e){return jr(e)&&so(this,e)},toString(){return`Duration(${lo(this)})`},toJSON(){switch(this.value._tag){case"Millis":return{_id:"Duration",_tag:"Millis",millis:this.value.millis};case"Nanos":return{_id:"Duration",_tag:"Nanos",hrtime:io(this)};case"Infinity":return{_id:"Duration",_tag:"Infinity"}}},[ie](){return this.toJSON()},pipe(){return de(this,arguments)}},Hr=e=>{const t=Object.create(zr);return h(e)?isNaN(e)||e<=0?t.value=Vr:Number.isFinite(e)?Number.isInteger(e)?t.value={_tag:"Millis",millis:e}:t.value={_tag:"Nanos",nanos:BigInt(Math.round(1e6*e))}:t.value=Gr:t.value=e<=Lr?Vr:{_tag:"Nanos",nanos:e},t},jr=e=>I(e,Or),Qr=Hr(0),Kr=Hr(1/0),$r=e=>Hr(e),Jr=e=>Hr(e*wr),Wr=e=>Hr(e),Yr=e=>Hr(1e3*e),Xr=e=>Hr(6e4*e),Zr=e=>Hr(36e5*e),eo=e=>Hr(864e5*e),to=e=>Hr(6048e5*e),no=e=>ao(e,{onMillis:e=>e,onNanos:e=>Number(e)/1e6}),io=e=>{const t=Fr(e);switch(t.value._tag){case"Infinity":return[1/0,0];case"Nanos":return[Number(t.value.nanos/Br),Number(t.value.nanos%Br)];case"Millis":return[Math.floor(t.value.millis/1e3),Math.round(t.value.millis%1e3*1e6)]}},ao=i(2,((e,t)=>{const n=Fr(e);switch(n.value._tag){case"Nanos":return t.onNanos(n.value.nanos);case"Infinity":return t.onMillis(1/0);case"Millis":return t.onMillis(n.value.millis)}})),ro=i(3,((e,t,n)=>{const i=Fr(e),a=Fr(t);if("Infinity"===i.value._tag||"Infinity"===a.value._tag)return n.onMillis(no(i),no(a));if("Nanos"===i.value._tag||"Nanos"===a.value._tag){const e="Nanos"===i.value._tag?i.value.nanos:BigInt(Math.round(1e6*i.value.millis)),t="Nanos"===a.value._tag?a.value.nanos:BigInt(Math.round(1e6*a.value.millis));return n.onNanos(e,t)}return n.onMillis(i.value.millis,a.value.millis)})),oo=i(2,((e,t)=>ro(e,t,{onMillis:(e,t)=>e>=t,onNanos:(e,t)=>e>=t}))),so=i(2,((e,t)=>((e,t)=>ro(e,t,{onMillis:(e,t)=>e===t,onNanos:(e,t)=>e===t}))(Fr(e),Fr(t)))),lo=e=>{const t=Fr(e);if("Infinity"===t.value._tag)return"Infinity";if((e=>{switch(e.value._tag){case"Millis":return 0===e.value.millis;case"Nanos":return e.value.nanos===Lr;case"Infinity":return!1}})(t))return"0";const n=(e=>{const t=Fr(e);if("Infinity"===t.value._tag)return{days:1/0,hours:1/0,minutes:1/0,seconds:1/0,millis:1/0,nanos:1/0};const n=(e=>{const t=Fr(e);switch(t.value._tag){case"Infinity":throw new Error("Cannot convert infinite duration to nanos");case"Nanos":return t.value.nanos;case"Millis":return BigInt(Math.round(1e6*t.value.millis))}})(t),i=n/Ur,a=i/wr,r=a/Nr,o=r/Nr;return{days:Number(o/Ar),hours:Number(o%Ar),minutes:Number(r%Nr),seconds:Number(a%Nr),millis:Number(i%wr),nanos:Number(n%Ur)}})(t),i=[];return 0!==n.days&&i.push(`${n.days}d`),0!==n.hours&&i.push(`${n.hours}h`),0!==n.minutes&&i.push(`${n.minutes}m`),0!==n.seconds&&i.push(`${n.seconds}s`),0!==n.millis&&i.push(`${n.millis}ms`),0!==n.nanos&&i.push(`${n.nanos}ns`),i.join(" ")},co=Symbol.for("effect/MutableRef"),uo={[co]:co,toString(){return re(this.toJSON())},toJSON(){return{_id:"MutableRef",current:ae(this.current)}},[ie](){return this.toJSON()},pipe(){return de(this,arguments)}},mo=e=>{const t=Object.create(uo);return t.current=e,t},fo=e=>e.current,po=i(2,((e,t)=>(e.current=t,e))),go="effect/FiberId",ho=Symbol.for(go),yo="None",Co="Runtime",So=$(`${go}-${yo}`);class bo{[ho]=ho;_tag=yo;id=-1;startTimeMillis=-1;[V](){return So}[X](e){return vo(e)&&e._tag===yo}toString(){return re(this.toJSON())}toJSON(){return{_id:"FiberId",_tag:this._tag}}[ie](){return this.toJSON()}}class Eo{id;startTimeMillis;[ho]=ho;_tag=Co;constructor(e,t){this.id=e,this.startTimeMillis=t}[V](){return Y(this,$(`${go}-${this._tag}-${this.id}-${this.startTimeMillis}`))}[X](e){return vo(e)&&e._tag===Co&&this.id===e.id&&this.startTimeMillis===e.startTimeMillis}toString(){return re(this.toJSON())}toJSON(){return{_id:"FiberId",_tag:this._tag,id:this.id,startTimeMillis:this.startTimeMillis}}[ie](){return this.toJSON()}}const xo=new bo,vo=e=>I(e,ho),Ro=e=>{switch(e._tag){case yo:return ua();case Co:return ma(e.id);case"Composite":return u(Ro(e.left),ya(Ro(e.right)))}},_o=p(Symbol.for("effect/Fiber/Id/_fiberCounter"),(()=>mo(0))),Mo=e=>Array.from(Ro(e)).map((e=>`#${e}`)).join(","),Io=xo,Do=Mo,To=()=>{const e=fo(_o);return u(_o,po(e+1)),new Eo(e,Date.now())},ko=Pi,Po=e=>{const t=Fi(Pi());for(const n of e)wi(t,n[0],n[1]);return Vi(t)},Oo=Li,Lo=wi,Ao=Bi,No=Gi,wo=ji,Uo=Ki,Bo=Symbol.for("effect/List"),qo=e=>jt(e),Fo=(e=>pt(Tn(e),qo))(Z),Vo={[Bo]:Bo,_tag:"Cons",toString(){return re(this.toJSON())},toJSON(){return{_id:"List",_tag:"Cons",values:qo(this).map(ae)}},[ie](){return this.toJSON()},[X](e){return Qo(e)&&this._tag===e._tag&&Fo(this,e)},[V](){return Y(this,W(qo(this)))},[Symbol.iterator](){let e=!1,t=this;return{next(){if(e)return this.return();if("Nil"===t._tag)return e=!0,this.return();const n=t.head;return t=t.tail,{done:e,value:n}},return:t=>(e||(e=!0),{done:!0,value:t})}},pipe(){return de(this,arguments)}},Go=(e,t)=>{const n=Object.create(Vo);return n.head=e,n.tail=t,n},zo=$("Nil"),Ho={[Bo]:Bo,_tag:"Nil",toString(){return re(this.toJSON())},toJSON:()=>({_id:"List",_tag:"Nil"}),[ie](){return this.toJSON()},[V]:()=>zo,[X](e){return Qo(e)&&this._tag===e._tag},[Symbol.iterator]:()=>({next:()=>({done:!0,value:void 0})}),pipe(){return de(this,arguments)}},jo=Object.create(Ho),Qo=e=>I(e,Bo),Ko=e=>"Nil"===e._tag,$o=(e,t)=>Go(e,t),Jo=()=>jo,Wo=e=>Go(e,jo),Yo=i(2,((e,t)=>Zo(t,e))),Xo=i(2,((e,t)=>$o(t,e))),Zo=i(2,((e,t)=>{if(Ko(e))return t;if(Ko(t))return e;{const n=Go(t.head,e);let i=n,a=t.tail;for(;!Ko(a);){const t=Go(a.head,e);i.tail=t,i=t,a=a.tail}return n}})),es=i(3,((e,t,n)=>{let i=t,a=e;for(;!Ko(a);)i=n(i,a.head),a=a.tail;return i})),ts=e=>{let t=Jo(),n=e;for(;!Ko(n);)t=Xo(t,n.head),n=n.tail;return t},ns=(Array.prototype,function(){function e(e){e&&Object.assign(this,e)}return e.prototype=Ae,e}());ns.prototype;const is=Symbol.for("effect/DifferContextPatch");function as(e){return e}const rs={...ns.prototype,[is]:{_Value:as,_Patch:as}},os=Object.assign(Object.create(rs),{_tag:"Empty"}),ss=Object.create(os),ls=()=>ss,cs=Object.assign(Object.create(rs),{_tag:"AndThen"}),us=Object.assign(Object.create(rs),{_tag:"AddService"}),ms=(e,t)=>{const n=Object.create(us);return n.key=e,n.service=t,n},ds=Object.assign(Object.create(rs),{_tag:"RemoveService"}),fs=e=>{const t=Object.create(ds);return t.key=e,t},ps=Object.assign(Object.create(rs),{_tag:"UpdateService"}),gs=(e,t)=>{const n=Object.create(ps);return n.key=e,n.update=t,n},hs=i(2,((e,t)=>((e,t)=>{const n=Object.create(cs);return n.first=e,n.second=t,n})(e,t))),ys=i(2,((e,t)=>{if("Empty"===e._tag)return t;let n=!1,i=Gn(e);const a=new Map(t.unsafeMap);for(;ei(i);){const e=ni(i),t=ii(i);switch(e._tag){case"Empty":i=t;break;case"AddService":a.set(e.key,e.service),i=t;break;case"AndThen":i=Yn(Yn(t,e.second),e.first);break;case"RemoveService":a.delete(e.key),i=t;break;case"UpdateService":a.set(e.key,e.update(a.get(e.key))),n=!0,i=t}}if(!n)return dr(a);const r=new Map;for(const[e]of t.unsafeMap)a.has(e)&&(r.set(e,a.get(e)),a.delete(e));for(const[e,t]of a)r.set(e,t);return dr(r)}));ns.prototype;const Cs=Symbol.for("effect/DifferHashSetPatch");function Ss(e){return e}const bs={...ns.prototype,[Cs]:{_Value:Ss,_Key:Ss,_Patch:Ss}},Es=Object.assign(Object.create(bs),{_tag:"Empty"}),xs=Object.create(Es),vs=()=>xs,Rs=Object.assign(Object.create(bs),{_tag:"AndThen"}),_s=Object.assign(Object.create(bs),{_tag:"Add"}),Ms=e=>{const t=Object.create(_s);return t.value=e,t},Is=Object.assign(Object.create(bs),{_tag:"Remove"}),Ds=i(2,((e,t)=>((e,t)=>{const n=Object.create(Rs);return n.first=e,n.second=t,n})(e,t))),Ts=i(2,((e,t)=>{if("Empty"===e._tag)return t;let n=t,i=Gn(e);for(;ei(i);){const e=ni(i),t=ii(i);switch(e._tag){case"Empty":i=t;break;case"AndThen":i=Yn(e.first)(Yn(e.second)(t));break;case"Add":n=pa(e.value)(n),i=t;break;case"Remove":n=ga(e.value)(n),i=t}}return n}));ns.prototype;const ks=Symbol.for("effect/DifferReadonlyArrayPatch");function Ps(e){return e}const Os={...ns.prototype,[ks]:{_Value:Ps,_Patch:Ps}},Ls=Object.assign(Object.create(Os),{_tag:"Empty"}),As=Object.create(Ls),Ns=()=>As,ws=Object.assign(Object.create(Os),{_tag:"AndThen"}),Us=Object.assign(Object.create(Os),{_tag:"Append"}),Bs=Object.assign(Object.create(Os),{_tag:"Slice"}),qs=Object.assign(Object.create(Os),{_tag:"Update"}),Fs=(e,t)=>{const n=Object.create(qs);return n.index=e,n.patch=t,n},Vs=i(2,((e,t)=>((e,t)=>{const n=Object.create(ws);return n.first=e,n.second=t,n})(e,t))),Gs=i(3,((e,t,n)=>{if("Empty"===e._tag)return t;let i=t.slice(),a=En(e);for(;Yt(a);){const e=an(a),t=on(a);switch(e._tag){case"Empty":a=t;break;case"AndThen":t.unshift(e.first,e.second),a=t;break;case"Append":for(const t of e.values)i.push(t);a=t;break;case"Slice":i=i.slice(e.from,e.until),a=t;break;case"Update":i[e.index]=n.patch(e.patch,i[e.index]),a=t}}return i})),zs=Symbol.for("effect/Differ"),Hs={[zs]:{_P:a,_V:a},pipe(){return de(this,arguments)}},js=e=>{const t=Object.create(Hs);return t.empty=e.empty,t.diff=e.diff,t.combine=e.combine,t.patch=e.patch,t},Qs=()=>js({empty:vs(),combine:(e,t)=>Ds(t)(e),diff:(e,t)=>((e,t)=>{const[n,i]=Ca([e,vs()],(([e,t],n)=>da(n)(e)?[ga(n)(e),t]:[e,Ds(Ms(n))(t)]))(t);return Ca(i,((e,t)=>Ds((e=>{const t=Object.create(Is);return t.value=e,t})(t))(e)))(n)})(e,t),patch:(e,t)=>Ts(t)(e)}),Ks=e=>js({empty:Ns(),combine:(e,t)=>Vs(e,t),diff:(t,n)=>(e=>{let t=0,n=Ns();for(;t<e.oldValue.length&&t<e.newValue.length;){const i=e.oldValue[t],a=e.newValue[t],r=e.differ.diff(i,a);Z(r,e.differ.empty)||(n=Vs(n,Fs(t,r))),t+=1}return t<e.oldValue.length&&(n=Vs(n,((e,t)=>{const n=Object.create(Bs);return n.from=0,n.until=t,n})(0,t))),t<e.newValue.length&&(n=Vs(n,(e=>{const t=Object.create(Us);return t.values=e,t})(ln(t)(e.newValue)))),n})({oldValue:t,newValue:n,differ:e}),patch:(t,n)=>Gs(t,n,e)}),$s=()=>Js(((e,t)=>t)),Js=e=>js({empty:a,combine:(e,t)=>e===a?t:t===a?e:n=>t(e(n)),diff:(e,t)=>Z(e,t)?a:r(t),patch:(t,n)=>e(n,t(n))}),Ws=255,Ys=e=>e&Ws,Xs=e=>e>>8&Ws,Zs=(e,t)=>(e&Ws)+((t&e&Ws)<<8),el=Zs(0,0),tl=i(2,((e,t)=>Zs(Ys(e)&~t,Xs(e)))),nl=i(2,((e,t)=>e|t)),il=i(2,((e,t)=>e|t)),al=e=>rl(e)&&!ul(e),rl=e=>ol(e,1),ol=i(2,((e,t)=>!!(e&t))),sl=(...e)=>e.reduce(((e,t)=>e|t),0),ll=sl(0),cl=e=>ol(e,4),ul=e=>ol(e,16),ml=i(2,((e,t)=>Zs(e^t,t))),dl=i(2,((e,t)=>e&(~Ys(t)>>>0&Ws|Xs(t))|Ys(t)&Xs(t))),fl=js({empty:el,diff:(e,t)=>ml(e,t),combine:(e,t)=>nl(t)(e),patch:(e,t)=>dl(t,e)}),pl=e=>Zs(e,0),gl=tl,hl="Pending",yl="Done",Cl=Symbol.for("effect/Deferred"),Sl={_E:e=>e,_A:e=>e};class bl{self;called=!1;constructor(e){this.self=e}next(e){return this.called?{value:e,done:!0}:(this.called=!0,{value:this.self,done:!1})}return(e){return{value:e,done:!0}}throw(e){throw e}[Symbol.iterator](){return new bl(this.self)}}const El=(e,t)=>{const n=new Rl("Blocked");return n.effect_instruction_i0=e,n.effect_instruction_i1=t,n},xl=Symbol.for("effect/Effect");class vl{patch;op;_op=Ie;constructor(e,t){this.patch=e,this.op=t}}class Rl{_op;effect_instruction_i0=void 0;effect_instruction_i1=void 0;effect_instruction_i2=void 0;trace=void 0;[xl]=Oe;constructor(e){this._op=e}[X](e){return this===e}[V](){return Y(this,z(this))}pipe(){return de(this,arguments)}toJSON(){return{_id:"Effect",_op:this._op,effect_instruction_i0:ae(this.effect_instruction_i0),effect_instruction_i1:ae(this.effect_instruction_i1),effect_instruction_i2:ae(this.effect_instruction_i2)}}toString(){return re(this.toJSON())}[ie](){return this.toJSON()}[Symbol.iterator](){return new bl(new U(this))}}class _l{_op;effect_instruction_i0=void 0;effect_instruction_i1=void 0;effect_instruction_i2=void 0;trace=void 0;[xl]=Oe;constructor(e){this._op=e,this._tag=e}[X](e){return uu(e)&&"Failure"===e._op&&Z(this.effect_instruction_i0,e.effect_instruction_i0)}[V](){return u($(this._tag),H(G(this.effect_instruction_i0)),Y(this))}get cause(){return this.effect_instruction_i0}pipe(){return de(this,arguments)}toJSON(){return{_id:"Exit",_tag:this._op,cause:this.cause.toJSON()}}toString(){return re(this.toJSON())}[ie](){return this.toJSON()}[Symbol.iterator](){return new bl(new U(this))}}class Ml{_op;effect_instruction_i0=void 0;effect_instruction_i1=void 0;effect_instruction_i2=void 0;trace=void 0;[xl]=Oe;constructor(e){this._op=e,this._tag=e}[X](e){return uu(e)&&"Success"===e._op&&Z(this.effect_instruction_i0,e.effect_instruction_i0)}[V](){return u($(this._tag),H(G(this.effect_instruction_i0)),Y(this))}get value(){return this.effect_instruction_i0}pipe(){return de(this,arguments)}toJSON(){return{_id:"Exit",_tag:this._op,value:ae(this.value)}}toString(){return re(this.toJSON())}[ie](){return this.toJSON()}[Symbol.iterator](){return new bl(new U(this))}}const Il=e=>I(e,xl),Dl=e=>{const t=new Rl(_e);return t.effect_instruction_i0=e,t},Tl=i(3,((e,t,n)=>pc((i=>Jl(e,(e=>Jl(Gl(uc((()=>i(t(e))))),(t=>uc((()=>n(e,t))).pipe(Zl({onFailure:e=>{switch(t._tag){case ge:return jl(La(t.effect_instruction_i0,e));case Se:return jl(e)}},onSuccess:()=>t})))))))))),kl=i(2,((e,t)=>Jl(e,(()=>cc(t))))),Pl=e=>kl(e,void 0),Ol=function(){const e=new Rl(pe);switch(arguments.length){case 2:e.effect_instruction_i0=arguments[0],e.commit=arguments[1];break;case 3:e.effect_instruction_i0=arguments[0],e.effect_instruction_i1=arguments[1],e.commit=arguments[2];break;case 4:e.effect_instruction_i0=arguments[0],e.effect_instruction_i1=arguments[1],e.effect_instruction_i2=arguments[2],e.commit=arguments[3];break;default:throw new Error(O("you're not supposed to end up here"))}return e},Ll=(e,t=Io)=>{const n=new Rl(fe);let i;return n.effect_instruction_i0=t=>{i=e(t)},n.effect_instruction_i1=t,lc(n,(e=>Il(i)?i:gc))},Al=(e,t=Io)=>uc((()=>Ll(e,t))),Nl=(e,t=Io)=>Ol(e,(function(){let e,n;function i(t){e?e(t):void 0===n&&(n=t)}const a=new Rl(fe);let r,o;return a.effect_instruction_i0=t=>{e=t,n&&t(n)},a.effect_instruction_i1=t,1!==this.effect_instruction_i0.length?(o=new AbortController,r=q((()=>this.effect_instruction_i0(i,o.signal)))):r=q((()=>this.effect_instruction_i0(i))),r||o?lc(a,(e=>(o&&o.abort(),r??gc))):a})),wl=i(2,((e,t)=>ec(e,{onFailure:t,onSuccess:cc}))),Ul=Symbol.for("effect/OriginalAnnotation"),Bl=(e,t)=>bt(t)?new Proxy(e,{has:(e,t)=>t===ir||t===Ul||t in e,get:(n,i)=>i===ir?t.value:i===Ul?e:n[i]}):e,ql=e=>M(e)&&!(ir in e)?Dl((t=>jl(ka(Bl(e,Du(t)))))):jl(ka(e)),Fl=e=>Ql((()=>ka(new au(e)))),Vl=e=>ec(e,{onFailure:e=>cc(nt(e)),onSuccess:e=>cc(tt(e))}),Gl=e=>Xl(e,{onFailure:fu,onSuccess:hu}),zl=e=>M(e)&&!(ir in e)?Dl((t=>jl(Ta(Bl(e,Du(t)))))):jl(Ta(e)),Hl=e=>Jl(mc(e),zl),jl=e=>{const t=new _l(ge);return t.effect_instruction_i0=e,t},Ql=e=>Jl(mc(e),jl),Kl=Dl((e=>cc(e.id()))),$l=e=>Dl((t=>e(t.id()))),Jl=i(2,((e,t)=>{const n=new Rl(ye);return n.effect_instruction_i0=e,n.effect_instruction_i1=t,n})),Wl=e=>{const t=new Rl("OnStep");return t.effect_instruction_i0=e,t},Yl=e=>Jl(e,a),Xl=i(2,((e,t)=>Zl(e,{onFailure:e=>cc(t.onFailure(e)),onSuccess:e=>cc(t.onSuccess(e))}))),Zl=i(2,((e,t)=>{const n=new Rl(Ce);return n.effect_instruction_i0=e,n.effect_instruction_i1=t.onFailure,n.effect_instruction_i2=t.onSuccess,n})),ec=i(2,((e,t)=>Zl(e,{onFailure:e=>{if((e=>Qn($a(e,Fn(),((e,t)=>t._tag===Sa?yt(u(e,Yn(t.defect))):ht()))))(e).length>0)return jl((e=>Ka(e,{onEmpty:Da,onFail:ka,onDie:ka,onInterrupt:Pa,onSequential:La,onParallel:Oa}))(e));const n=(e=>Qn($a(e,Fn(),((e,t)=>t._tag===Ea?yt(u(e,Yn(t.error))):ht()))))(e);return n.length>0?t.onFailure(ti(n)):jl(e)},onSuccess:t.onSuccess}))),tc=i(2,((e,t)=>uc((()=>{const n=jt(e),i=zt(n.length);let a=0;return kl(hc({while:()=>a<n.length,body:()=>t(n[a],a),step:e=>{i[a++]=e}}),i)})))),nc=i(2,((e,t)=>uc((()=>{const n=jt(e);let i=0;return hc({while:()=>i<n.length,body:()=>t(n[i],i),step:()=>{i++}})})))),ic=e=>{const t=new Rl(xe);return t.effect_instruction_i0=Zs(n=1,n),t.effect_instruction_i1=()=>e,t;var n},ac=i(2,((e,t)=>Jl(e,(e=>mc((()=>t(e))))))),rc=i(2,((e,t)=>ec(e,{onFailure:e=>Hl((()=>t.onFailure(e))),onSuccess:e=>mc((()=>t.onSuccess(e)))}))),oc=i(2,((e,t)=>Zl(e,{onFailure:e=>{const n=wa(e);switch(n._tag){case"Left":return Hl((()=>t(n.left)));case"Right":return jl(n.right)}},onSuccess:cc}))),sc=i(2,((e,t)=>pc((n=>Zl(n(e),{onFailure:e=>{const n=fu(e);return Zl(t(n),{onFailure:t=>fu(La(e,t)),onSuccess:()=>n})},onSuccess:e=>{const n=hu(e);return bc(t(n),n)}}))))),lc=i(2,((e,t)=>sc(e,gu({onFailure:e=>Na(e)?Pl(t((e=>$a(e,ua(),((e,t)=>t._tag===xa?yt(u(e,pa(t.fiberId))):ht())))(e))):gc,onSuccess:()=>gc})))),cc=e=>{const t=new Ml(Se);return t.effect_instruction_i0=e,t},uc=e=>{const t=new Rl(pe);return t.commit=e,t},mc=e=>{const t=new Rl(be);return t.effect_instruction_i0=e,t},dc=i((e=>3===e.length||2===e.length&&!(M(e[1])&&"onlyEffect"in e[1])),((e,t)=>Jl(e,(e=>{const n="function"==typeof t?t(e):t;return Il(n)?kl(n,e):I(i=n,"then")&&b(i.then)?Ll((t=>{n.then((n=>t(cc(e))),(e=>t(zl(new cu(e,"An unknown error occurred in Effect.tap")))))})):cc(e);var i})))),fc=e=>{const t=new Rl(xe);return t.effect_instruction_i0=pl(1),t.effect_instruction_i1=()=>e,t},pc=e=>Ol(e,(function(){const e=new Rl(xe);return e.effect_instruction_i0=pl(1),e.effect_instruction_i1=e=>rl(e)?q((()=>this.effect_instruction_i0(ic))):q((()=>this.effect_instruction_i0(fc))),e})),gc=cc(void 0),hc=e=>{const t=new Rl(ve);return t.effect_instruction_i0=e.while,t.effect_instruction_i1=e.body,t.effect_instruction_i2=e.step,t},yc=e=>{const t=new Rl(Me);return void 0!==e?.priority?Kc(t,e.priority):t},Cc=i(2,((e,t)=>Jl(e,(e=>ac(t,(t=>[e,t])))))),Sc=i(2,((e,t)=>Jl(e,(e=>kl(t,e))))),bc=i(2,((e,t)=>Jl(e,(()=>t)))),Ec=i(2,((e,t)=>Jl(e.interruptAsFork(t),(()=>e.await)))),xc={_tag:"All",syslog:0,label:"ALL",ordinal:Number.MIN_SAFE_INTEGER,pipe(){return de(this,arguments)}},vc={_tag:"Fatal",syslog:2,label:"FATAL",ordinal:5e4,pipe(){return de(this,arguments)}},Rc={_tag:"Error",syslog:3,label:"ERROR",ordinal:4e4,pipe(){return de(this,arguments)}},_c={_tag:"Warning",syslog:4,label:"WARN",ordinal:3e4,pipe(){return de(this,arguments)}},Mc={_tag:"Info",syslog:6,label:"INFO",ordinal:2e4,pipe(){return de(this,arguments)}},Ic={_tag:"Debug",syslog:7,label:"DEBUG",ordinal:1e4,pipe(){return de(this,arguments)}},Dc={_tag:"Trace",syslog:7,label:"TRACE",ordinal:0,pipe(){return de(this,arguments)}},Tc={_tag:"None",syslog:7,label:"OFF",ordinal:Number.MAX_SAFE_INTEGER,pipe(){return de(this,arguments)}},kc=Symbol.for("effect/FiberRef"),Pc={_A:e=>e},Oc=e=>Dl((t=>hu(t.getFiberRef(e)))),Lc=i(2,((e,t)=>Jl(Oc(e),t))),Ac=i(2,((e,t)=>Nc(e,(()=>[void 0,t])))),Nc=i(2,((e,t)=>Dl((n=>{const[i,a]=t(n.getFiberRef(e));return n.setFiberRef(e,a),cc(i)})))),wc=i(3,((e,t,n)=>Tl(Sc(Oc(t),Ac(t,n)),(()=>e),(e=>Ac(t,e))))),Uc=(e,t)=>qc(e,{differ:$s(),fork:t?.fork??a,join:t?.join}),Bc=e=>{const t=js({empty:ls(),combine:(e,t)=>hs(t)(e),diff:(e,t)=>((e,t)=>{const n=new Map(e.unsafeMap);let i=ls();for(const[e,a]of t.unsafeMap.entries())if(n.has(e)){const t=n.get(e);n.delete(e),Z(t,a)||(i=hs(gs(e,(()=>a)))(i))}else n.delete(e),i=hs(ms(e,a))(i);for(const[e]of n.entries())i=hs(fs(e))(i);return i})(e,t),patch:(e,t)=>ys(t)(e)});return qc(e,{differ:t,fork:t.empty})},qc=(e,t)=>{const n={...Ne,[kc]:Pc,initial:e,commit(){return Oc(this)},diff:(e,n)=>t.differ.diff(e,n),combine:(e,n)=>t.differ.combine(e,n),patch:e=>n=>t.differ.patch(e,n),fork:t.fork,join:t.join??((e,t)=>t)};return n},Fc=e=>qc(e,{differ:fl,fork:fl.empty}),Vc=p(Symbol.for("effect/FiberRef/currentContext"),(()=>Bc(Rr()))),Gc=p(Symbol.for("effect/FiberRef/currentSchedulingPriority"),(()=>Uc(0))),zc=p(Symbol.for("effect/FiberRef/currentMaxOpsBeforeYield"),(()=>Uc(2048))),Hc=p(Symbol.for("effect/FiberRef/currentLogAnnotation"),(()=>Uc(ko()))),jc=p(Symbol.for("effect/FiberRef/currentLogLevel"),(()=>Uc(Mc))),Qc=p(Symbol.for("effect/FiberRef/currentLogSpan"),(()=>Uc(Jo()))),Kc=i(2,((e,t)=>wc(e,Gc,t))),$c=p(Symbol.for("effect/FiberRef/currentConcurrency"),(()=>Uc("unbounded"))),Jc=p(Symbol.for("effect/FiberRef/currentRequestBatching"),(()=>Uc(!0))),Wc=p(Symbol.for("effect/FiberRef/currentUnhandledErrorLogLevel"),(()=>Uc(yt(Ic)))),Yc=p(Symbol.for("effect/FiberRef/currentMetricLabels"),(()=>(()=>{const e=Ks($s());return qc([],{differ:e,fork:e.empty})})())),Xc=p(Symbol.for("effect/FiberRef/currentForkScopeOverride"),(()=>Uc(ht(),{fork:()=>ht(),join:(e,t)=>e}))),Zc=p(Symbol.for("effect/FiberRef/currentInterruptedCause"),(()=>Uc(Da,{fork:()=>Da,join:(e,t)=>e}))),eu=(e,t)=>e.fork(t),tu=function(){class e extends globalThis.Error{commit(){return zl(this)}toJSON(){const e={...this};return this.message&&(e.message=this.message),this.cause&&(e.cause=this.cause),e}[ie](){return this.toString!==globalThis.Error.prototype.toString?this.stack?`${this.toString()}\n${this.stack.split("\n").slice(1).join("\n")}`:this.toString():"Bun"in globalThis?Wa(Ta(this),{renderErrorCause:!0}):this}}return Object.assign(e.prototype,we),e}(),nu=(e,t)=>{class n extends tu{_tag=t}return Object.assign(n.prototype,e),n.prototype.name=t,n},iu=Symbol.for("effect/Cause/errors/RuntimeException"),au=nu({[iu]:iu},"RuntimeException"),ru=Symbol.for("effect/Cause/errors/InterruptedException"),ou=Symbol.for("effect/Cause/errors/NoSuchElement"),su=nu({[ou]:ou},"NoSuchElementException"),lu=Symbol.for("effect/Cause/errors/UnknownException"),cu=function(){class e extends tu{_tag="UnknownException";error;constructor(e,t){super(t??"An unknown error occurred",{cause:e}),this.error=e}}return Object.assign(e.prototype,{[lu]:lu,name:"UnknownException"}),e}(),uu=e=>Il(e)&&"_tag"in e&&("Success"===e._tag||"Failure"===e._tag),mu=(e,t)=>Su(e,t?.parallel?Oa:La),du=e=>fu(Ta(e)),fu=e=>{const t=new _l(ge);return t.effect_instruction_i0=e,t},pu=i(2,((e,t)=>{switch(e._tag){case ge:return fu(e.effect_instruction_i0);case Se:return hu(t(e.effect_instruction_i0))}})),gu=i(2,((e,{onFailure:t,onSuccess:n})=>{switch(e._tag){case ge:return t(e.effect_instruction_i0);case Se:return n(e.effect_instruction_i0)}})),hu=e=>{const t=new Ml(Se);return t.effect_instruction_i0=e,t},yu=hu(void 0),Cu=i(3,((e,t,{onFailure:n,onSuccess:i})=>{switch(e._tag){case ge:switch(t._tag){case Se:return fu(e.effect_instruction_i0);case ge:return fu(n(e.effect_instruction_i0,t.effect_instruction_i0))}case Se:switch(t._tag){case Se:return hu(i(e.effect_instruction_i0,t.effect_instruction_i0));case ge:return fu(t.effect_instruction_i0)}}})),Su=(e,t)=>{const n=zn(e);return ei(n)?u(ii(n),In(u(ni(n),pu(Gn)),((e,n)=>u(e,Cu(n,{onSuccess:(e,t)=>u(e,Yn(t)),onFailure:t})))),pu(Qn),pu((e=>jn(e))),yt):ht()},bu=e=>{var t;return{...Ne,[Cl]:Sl,state:mo((t=[],{_tag:hl,joiners:t})),commit(){return Eu(this)},blockingOn:e}},Eu=e=>Al((t=>{const n=fo(e.state);switch(n._tag){case yl:return t(n.effect);case hl:return n.joiners.push(t),vu(e,t)}}),e.blockingOn),xu=(e,t)=>{const n=fo(e.state);if(n._tag===hl){po(e.state,(e=>({_tag:yl,effect:e}))(t));for(let e=0,i=n.joiners.length;e<i;e++)n.joiners[e](t)}},vu=(e,t)=>mc((()=>{const n=fo(e.state);if(n._tag===hl){const e=n.joiners.indexOf(t);e>=0&&n.joiners.splice(e,1)}})),Ru=Dl((e=>hu(e.currentContext))),_u=e=>Jl(Ru,e),Mu=i(2,((e,t)=>wc(Vc,t)(e))),Iu=i(2,((e,t)=>_u((n=>Mu(e,t(n)))))),Du=e=>{const t=e.currentSpan;return void 0!==t&&"Span"===t._tag?yt(t):ht()},Tu=Wa,ku=Symbol.for("effect/Clock"),Pu=vr("effect/Clock"),Ou={unsafeSchedule(e,t){const n=no(t);if(n>2147483647)return s;let i=!1;const a=setTimeout((()=>{i=!0,e()}),n);return()=>(clearTimeout(a),!i)}},Lu=function(){const e=BigInt(1e6);if("undefined"==typeof performance)return()=>BigInt(Date.now())*e;if("number"==typeof performance.timeOrigin&&0===performance.timeOrigin)return()=>BigInt(Math.round(1e6*performance.now()));const t=BigInt(Date.now())*e-BigInt(Math.round(1e6*performance.now()));return()=>t+BigInt(Math.round(1e6*performance.now()))}(),Au=function(){const e="object"==typeof process&&"hrtime"in process&&"function"==typeof process.hrtime.bigint?process.hrtime:void 0;if(!e)return Lu;const t=Lu()-e.bigint();return()=>t+e.bigint()}();class Nu{[ku]=ku;unsafeCurrentTimeMillis(){return Date.now()}unsafeCurrentTimeNanos(){return Au()}currentTimeMillis=mc((()=>this.unsafeCurrentTimeMillis()));currentTimeNanos=mc((()=>this.unsafeCurrentTimeNanos()));scheduler(){return cc(Ou)}sleep(e){return Nl((t=>{const n=Ou.unsafeSchedule((()=>t(gc)),e);return Pl(mc(n))}))}}const wu=()=>new Nu,Uu=Bt,Bu=e=>e.replace(/[/\\^$*+?.()|[\]{}]/g,"\\$&"),qu="InvalidData",Fu="MissingData",Vu="SourceUnavailable",Gu="Unsupported",zu=Symbol.for("effect/ConfigError"),Hu={_tag:"ConfigError",[zu]:zu},ju=(e,t)=>{const n=Object.create(Hu);return n._op="And",n.left=e,n.right=t,Object.defineProperty(n,"toString",{enumerable:!1,value(){return`${this.left} and ${this.right}`}}),n},Qu=(e,t)=>{const n=Object.create(Hu);return n._op="Or",n.left=e,n.right=t,Object.defineProperty(n,"toString",{enumerable:!1,value(){return`${this.left} or ${this.right}`}}),n},Ku=(e,t,n={pathDelim:"."})=>{const i=Object.create(Hu);return i._op=qu,i.path=e,i.message=t,Object.defineProperty(i,"toString",{enumerable:!1,value(){return`(Invalid data at ${u(this.path,On(n.pathDelim))}: "${this.message}")`}}),i},$u=(e,t,n={pathDelim:"."})=>{const i=Object.create(Hu);return i._op=Fu,i.path=e,i.message=t,Object.defineProperty(i,"toString",{enumerable:!1,value(){return`(Missing data at ${u(this.path,On(n.pathDelim))}: "${this.message}")`}}),i},Ju=(e,t,n,i={pathDelim:"."})=>{const a=Object.create(Hu);return a._op=Vu,a.path=e,a.message=t,a.cause=n,Object.defineProperty(a,"toString",{enumerable:!1,value(){return`(Source unavailable at ${u(this.path,On(i.pathDelim))}: "${this.message}")`}}),a},Wu=(e,t,n={pathDelim:"."})=>{const i=Object.create(Hu);return i._op=Gu,i.path=e,i.message=t,Object.defineProperty(i,"toString",{enumerable:!1,value(){return`(Unsupported operation at ${u(this.path,On(n.pathDelim))}: "${this.message}")`}}),i},Yu=i(2,((e,t)=>{switch(e._op){case"And":return ju(Yu(e.left,t),Yu(e.right,t));case"Or":return Qu(Yu(e.left,t),Yu(e.right,t));case qu:return Ku([...t,...e.path],e.message);case Fu:return $u([...t,...e.path],e.message);case Vu:return Ju([...t,...e.path],e.message,e.cause);case Gu:return Wu([...t,...e.path],e.message)}})),Xu={_tag:"Empty"},Zu=i(2,((e,t)=>{let n=Wo(t),i=e;for(;"Cons"===n._tag;){const e=n.head;switch(e._tag){case"Empty":n=n.tail;break;case"AndThen":n=$o(e.first,$o(e.second,n.tail));break;case"MapName":i=xn(i,e.f),n=n.tail;break;case"Nested":i=Kt(i,e.name),n=n.tail;break;case"Unnested":if(!u(nn(i),At(e.name)))return nt($u(i,`Expected ${e.name} to be in path in ConfigProvider#unnested`));i=on(i),n=n.tail}}return tt(i)})),em=(e,t)=>[...e,...t],tm=Symbol.for("effect/ConfigProvider"),nm=vr("effect/ConfigProvider"),im=Symbol.for("effect/ConfigProviderFlat"),am=e=>({[tm]:tm,pipe(){return de(this,arguments)},...e}),rm=e=>{const{pathDelim:t,seqDelim:n}=Object.assign({},{pathDelim:"_",seqDelim:","},e),i=()=>"undefined"!=typeof process&&"env"in process&&"object"==typeof process.env?process.env:{};return a=(e=>({[im]:im,patch:e.patch,load:(t,n,i=!0)=>e.load(t,n,i),enumerateChildren:e.enumerateChildren}))({load:(e,a,r=!0)=>{const o=(e=>u(e,On(t)))(e),s=i();return u(o in s?yt(s[o]):ht(),oc((()=>$u(e,`Expected ${o} to exist in the process context`))),Jl((t=>lm(t,e,a,n,r))))},enumerateChildren:e=>mc((()=>{const n=i();return(e=>{const t=na(ea());for(const n of e)ra(t,n);return ia(t)})(Object.keys(n).map((e=>e.toUpperCase().split(t))).filter((t=>{for(let n=0;n<e.length;n++){const i=u(e,tn(n)),a=t[n];if(void 0===a||i!==a)return!1}return!0})).flatMap((t=>t.slice(e.length,e.length+1))))})),patch:Xu}),am({load:e=>Jl(om(a,[],e,!1),(t=>Et(nn(t),{onNone:()=>zl($u([],`Expected a single value having structure: ${e}`)),onSome:cc}))),flattened:a});var a},om=(e,t,n,i)=>{const a=n;switch(a._tag){case"Constant":return cc(En(a.value));case"Described":return uc((()=>om(e,t,a.config,i)));case"Fail":return zl($u(t,a.message));case"Fallback":return u(uc((()=>om(e,t,a.first,i))),wl((n=>a.condition(n)?u(om(e,t,a.second,i),wl((e=>zl(Qu(n,e))))):zl(n))));case"Lazy":return uc((()=>om(e,t,a.config(),i)));case"MapOrFail":return uc((()=>u(om(e,t,a.original,i),Jl(tc((e=>u(a.mapOrFail(e),oc(Yu(((e,t)=>{let n=t;if("Nested"===n._tag){const t=e.slice();for(;"Nested"===n._tag;)t.push(n.name),n=n.config;return t}return e})(t,a.original))))))))));case"Nested":return uc((()=>om(e,em(t,En(a.name)),a.config,i)));case"Primitive":return u(Zu(t,e.patch),Jl((t=>u(e.load(t,a,i),Jl((e=>{if(0===e.length){const e=u(Xt(n=t)?yt(rn(n)):ht(),vt((()=>"<n/a>")));return zl($u([],`Expected ${a.description} with name ${e}`))}var n;return cc(e)}))))));case"Sequence":return u(Zu(t,e.patch),Jl((n=>u(e.enumerateChildren(n),Jl(um),Jl((n=>0===n.length?uc((()=>ac(om(e,t,a.config,!0),En))):u(tc(n,(n=>om(e,$t(t,`[${n}]`),a.config,!0))),ac((e=>{const t=Rn(e);return 0===t.length?En([]):En(t)})))))))));case"HashMap":return uc((()=>u(Zu(t,e.patch),Jl((t=>u(e.enumerateChildren(t),Jl((n=>u(n,tc((n=>om(e,em(t,En(n)),a.valueConfig,i))),ac((e=>0===e.length?En(ko()):u(cm(e),xn((e=>Po(dn(jt(n),e))))))))))))))));case"ZipWith":return uc((()=>u(om(e,t,a.left,i),Vl,Jl((n=>u(om(e,t,a.right,i),Vl,Jl((e=>{if(at(n)&&at(e))return zl(ju(n.left,e.left));if(at(n)&&rt(e))return zl(n.left);if(rt(n)&&at(e))return zl(e.left);if(rt(n)&&rt(e)){const i=u(t,On(".")),r=sm(t,i),[o,s]=((e,t,n,i)=>{const a=Dn(n.length,(t=>t>=i.length?ht():yt([e(t),t+1]))),r=Dn(i.length,(e=>e>=n.length?ht():yt([t(e),e+1])));return[em(n,a),em(i,r)]})(r,r,u(n.right,xn(tt)),u(e.right,xn(tt)));return u(o,dn(s),tc((([e,t])=>u(Cc(e,t),ac((([e,t])=>a.zip(e,t)))))))}throw new Error("BUG: ConfigProvider.fromFlatLoop - please report an issue at https://github.com/Effect-TS/effect/issues")}))))))))}},sm=(e,t)=>n=>nt($u(e,`The element at index ${n} in a sequence at path "${t}" was missing`)),lm=(e,t,n,i,a)=>a?u(((e,t)=>e.split(new RegExp(`\\s*${Bu(t)}\\s*`)))(e,i),tc((e=>n.parse(e.trim()))),oc(Yu(t))):u(n.parse(e),rc({onFailure:Yu(t),onSuccess:En})),cm=e=>Object.keys(e[0]).map((t=>e.map((e=>e[t])))),um=e=>u(tc(e,dm),rc({onFailure:()=>[],onSuccess:mn(Uu)}),Vl,ac(ut)),mm=/^(\[(\d+)\])$/,dm=e=>{const t=e.match(mm);if(null!==t){const e=t[2];return u(void 0!==e&&e.length>0?yt(e):ht(),Tt(fm))}return ht()},fm=e=>{const t=Number.parseInt(e);return Number.isNaN(t)?ht():yt(t)},pm=Symbol.for("effect/Console"),gm=vr("effect/Console"),hm={[pm]:pm,assert:(e,...t)=>mc((()=>{console.assert(e,...t)})),clear:mc((()=>{console.clear()})),count:e=>mc((()=>{console.count(e)})),countReset:e=>mc((()=>{console.countReset(e)})),debug:(...e)=>mc((()=>{console.debug(...e)})),dir:(e,t)=>mc((()=>{console.dir(e,t)})),dirxml:(...e)=>mc((()=>{console.dirxml(...e)})),error:(...e)=>mc((()=>{console.error(...e)})),group:e=>mc(e?.collapsed?()=>console.groupCollapsed(e?.label):()=>console.group(e?.label)),groupEnd:mc((()=>{console.groupEnd()})),info:(...e)=>mc((()=>{console.info(...e)})),log:(...e)=>mc((()=>{console.log(...e)})),table:(e,t)=>mc((()=>{console.table(e,t)})),time:e=>mc((()=>console.time(e))),timeEnd:e=>mc((()=>console.timeEnd(e))),timeLog:(e,...t)=>mc((()=>{console.timeLog(e,...t)})),trace:(...e)=>mc((()=>{console.trace(...e)})),warn:(...e)=>mc((()=>{console.warn(...e)})),unsafe:console},ym=Symbol.for("effect/Random"),Cm=vr("effect/Random");class Sm{seed;[ym]=ym;PRNG;constructor(e){this.seed=e,this.PRNG=new A(e)}get next(){return mc((()=>this.PRNG.number()))}get nextBoolean(){return ac(this.next,(e=>e>.5))}get nextInt(){return mc((()=>this.PRNG.integer(Number.MAX_SAFE_INTEGER)))}nextRange(e,t){return ac(this.next,(n=>(t-e)*n+e))}nextIntBetween(e,t){return mc((()=>this.PRNG.integer(t-e)+e))}shuffle(e){return bm(e,(e=>this.nextIntBetween(0,e)))}}const bm=(e,t)=>uc((()=>u(mc((()=>Array.from(e))),Jl((e=>{const n=[];for(let t=e.length;t>=2;t-=1)n.push(t);return u(n,nc((n=>u(t(n),ac((t=>Em(e,n-1,t)))))),kl(zn(e)))}))))),Em=(e,t,n)=>{const i=e[t];return e[t]=e[n],e[n]=i,e},xm=e=>new Sm(G(e)),vm=Symbol.for("effect/Tracer"),Rm=e=>({[vm]:vm,...e}),_m=vr("effect/Tracer"),Mm=vr("effect/ParentSpan"),Im=function(){return function(e){let t="";for(let n=0;n<e;n++)t+="abcdef0123456789".charAt(Math.floor(16*Math.random()));return t}}();class Dm{name;parent;context;startTime;kind;_tag="Span";spanId;traceId="native";sampled=!0;status;attributes;events=[];links;constructor(e,t,n,i,a,r){this.name=e,this.parent=t,this.context=n,this.startTime=a,this.kind=r,this.status={_tag:"Started",startTime:a},this.attributes=new Map,this.traceId="Some"===t._tag?t.value.traceId:Im(32),this.spanId=Im(16),this.links=Array.from(i)}end(e,t){this.status={_tag:"Ended",endTime:e,exit:t,startTime:this.status.startTime}}attribute(e,t){this.attributes.set(e,t)}event(e,t,n){this.events.push([e,t,n??{}])}addLinks(e){this.links.push(...e)}}const Tm=Rm({span:(e,t,n,i,a,r)=>new Dm(e,t,n,i,a,r),context:e=>e()}),km=u(Rr(),Mr(Pu,wu()),Mr(gm,hm),Mr(Cm,xm(Math.random())),Mr(nm,rm()),Mr(_m,Tm)),Pm=p(Symbol.for("effect/DefaultServices/currentServices"),(()=>Bc(km)));const Om=Symbol.for("effect/FiberRefs");class Lm{locals;[Om]=Om;constructor(e){this.locals=e}pipe(){return de(this,arguments)}}const Am=i(3,((e,t,n)=>{const i=new Map(e.locals);return n.locals.forEach(((e,n)=>{const a=e[0][1];if(!e[0][0][X](t)){if(!i.has(n)){if(Z(a,n.initial))return;return void i.set(n,[[t,n.join(n.initial,a)]])}const r=i.get(n),[o,s]=((e,t,n,i=!1)=>{const a=e;let r,o=t,s=n,l=i;for(;void 0===r;)if(Xt(o)&&Xt(s)){const e=an(o)[0],t=on(o),n=an(s)[0],i=an(s)[1],a=on(s);e.startTimeMillis<n.startTimeMillis?(s=a,l=!0):e.startTimeMillis>n.startTimeMillis?o=t:e.id<n.id?(s=a,l=!0):e.id>n.id?o=t:r=[i,l]}else r=[a.initial,!0];return r})(n,r,e);if(s){const e=n.diff(o,a),s=r[0][1],l=n.join(s,n.patch(e)(s));if(!Z(s,l)){let e;const a=r[0][0];e=a[X](t)?[[a,l],...r.slice(1)]:[[t,l],...r],i.set(n,e)}}}})),new Lm(i)})),Nm=i(2,((e,t)=>{const n=new Map;return wm(e,n,t),new Lm(n)})),wm=(e,t,n)=>{e.locals.forEach(((e,i)=>{const a=e[0][1],r=i.patch(i.fork)(a);Z(a,r)?t.set(i,e):t.set(i,[[n,r],...e])}))},Um=i(2,((e,t)=>{const n=new Map(e.locals);return n.delete(t),new Lm(n)})),Bm=i(2,((e,t)=>e.locals.has(t)?yt(an(e.locals.get(t))[1]):ht())),qm=i(2,((e,t)=>u(Bm(e,t),vt((()=>t.initial))))),Fm=i(2,((e,{fiberId:t,fiberRef:n,value:i})=>{if(0===e.locals.size)return new Lm(new Map([[n,[[t,i]]]]));const a=new Map(e.locals);return Vm(a,t,n,i),new Lm(a)})),Vm=(e,t,n,i)=>{const a=e.get(n)??[];let r;if(Xt(a)){const[e,n]=an(a);if(e[X](t)){if(Z(n,i))return;r=[[t,i],...a.slice(1)]}else r=[[t,i],...a]}else r=[[t,i]];e.set(n,r)},Gm=i(2,((e,{entries:t,forkAs:n})=>{if(0===e.locals.size)return new Lm(new Map(t));const i=new Map(e.locals);return void 0!==n&&wm(e,i,n),t.forEach((([e,t])=>{1===t.length?Vm(i,t[0][0],e,t[0][1]):t.forEach((([t,n])=>{Vm(i,t,e,n)}))})),new Lm(i)})),zm=qm,Hm=Gm,jm=function(){return e=new Map,new Lm(e);var e},Qm=xc,Km=vc,$m=Rc,Jm=_c,Wm=Mc,Ym=Ic,Xm=Dc,Zm=Tc,ed=Ft(u(Uu,qt((e=>e.ordinal)))),td=e=>e.replace(/[\s="]/g,"_"),nd=e=>t=>`${td(t.label)}=${e-t.startTime}ms`,id=Le,ad=Ue;class rd extends ad{}const od="Empty",sd="Remove",ld="Update",cd="AndThen",ud={_tag:od},md=i(2,((e,t)=>({_tag:cd,first:e,second:t}))),dd=i(3,((e,t,n)=>{let i=n,a=En(e);for(;Xt(a);){const e=an(a),n=on(a);switch(e._tag){case od:a=n;break;case"Add":i=Fm(i,{fiberId:t,fiberRef:e.fiberRef,value:e.value}),a=n;break;case sd:i=Um(i,e.fiberRef),a=n;break;case ld:{const r=qm(i,e.fiberRef);i=Fm(i,{fiberId:t,fiberRef:e.fiberRef,value:e.fiberRef.patch(e.patch)(r)}),a=n;break}case cd:a=Kt(e.first)(Kt(e.second)(n))}}return i})),fd="effect/MetricLabel",pd=Symbol.for(fd);class gd{key;value;[pd]=pd;_hash;constructor(e,t){this.key=e,this.value=t,this._hash=$(fd+this.key+this.value)}[V](){return this._hash}[X](e){return yd(e)&&this.key===e.key&&this.value===e.value}pipe(){return de(this,arguments)}}const hd=(e,t)=>new gd(e,t),yd=e=>I(e,pd),Cd=(ie,ie,(e,t)=>{switch(t._tag){case"StringKeyword":case"TemplateLiteral":return Object.keys(e);case"SymbolKeyword":return Object.getOwnPropertySymbols(e);case"Refinement":return Cd(e,t.from)}}),Sd=e=>Object.keys(e).concat(Object.getOwnPropertySymbols(e)),bd=e=>{let t,n=!1;return()=>(n||(t=e(),n=!0),t)},Ed=(e,t=!0)=>{if(Array.isArray(e))return`[${e.map((e=>Ed(e,t))).join(",")}]`;if(e instanceof Date)return(e=>{try{return e.toISOString()}catch(t){return String(e)}})(e);if(I(e,"toString")&&b(e.toString)&&e.toString!==Object.prototype.toString)return e.toString();if(g(e))return JSON.stringify(e);if(h(e)||null==e||y(e)||S(e))return String(e);if(C(e))return String(e)+"n";if(P(e))return`${e.constructor.name}(${Ed(Array.from(e),t)})`;try{t&&JSON.stringify(e);const n=`{${Sd(e).map((t=>`${g(t)?JSON.stringify(t):String(t)}:${Ed(e[t],!1)}`)).join(",")}}`,i=e.constructor.name;return e.constructor!==Object.prototype.constructor?`${i}(${n})`:n}catch(e){return"<circular structure>"}},xd=e=>Array.isArray(e),vd=e=>{return`[${t=e,"string"==typeof t?JSON.stringify(t):String(t)}]`;var t},Rd=e=>xd(e)?e.map(vd).join(""):vd(e),_d=(e,t,n,i)=>{let a=e;return n&&Xt(n)&&(a+=`\nat path: ${Rd(n)}`),void 0!==t&&(a+=`\ndetails: ${t}`),i&&(a+=`\nschema (${i._tag}): ${i}`),a},Md=(e,t,n)=>_d("Unsupported schema or overlapping types",`cannot extend ${e} with ${t}`,n),Id=e=>((e,t,n)=>_d("Unsupported schema",e,t,n))(void 0,void 0,e),Dd=e=>_d("Duplicate index signature",`${e} index signature`),Td=_d("Unsupported index signature parameter","An index signature parameter type must be `string`, `symbol`, a template literal type or a refinement of the previous types"),kd=_d("Invalid element","A required element cannot follow an optional element. ts(1257)"),Pd=e=>_d("Duplicate property signature transformation",`Duplicate key ${Ed(e)}`),Od=Symbol.for("effect/SchemaId/GreaterThan"),Ld=Symbol.for("effect/SchemaId/GreaterThanOrEqualTo"),Ad=Symbol.for("effect/SchemaId/Int"),Nd=e=>Object.assign(Object.create(Ae),e),wd=e=>t=>{const n=void 0===t?Object.create(Ae):Nd(t);return n._tag=e,n};function Ud(){if(1===arguments.length){const e=arguments[0];return function(t){return e[t._tag](t)}}const e=arguments[0];return arguments[1][e._tag](e)}const Bd=function(){const e=Symbol.for("effect/Data/Error/plainArgs");return class extends tu{constructor(t){super(t?.message,t?.cause?{cause:t.cause}:void 0),t&&(Object.assign(this,t),Object.defineProperty(this,e,{value:t,enumerable:!1}))}toJSON(){return{...this[e],...this}}}}(),qd=e=>{class t extends Bd{_tag=e}return t.prototype.name=e,t},Fd={_tag:"Sequential"},Vd=Fd,Gd={_tag:"Parallel"},zd=e=>({_tag:"ParallelN",parallelism:e}),Hd=(e,t)=>{const n=new Map(e.locals);let i=ud;for(const[e,a]of t.locals.entries()){const t=an(a)[1],r=n.get(e);if(void 0!==r){const n=an(r)[1];Z(n,t)||(i=md({_tag:ld,fiberRef:e,patch:e.diff(n,t)})(i))}else i=md({_tag:"Add",fiberRef:e,value:t})(i);n.delete(e)}for(const[e]of n.entries())i=md({_tag:sd,fiberRef:e})(i);return i},jd=dd,Qd="effect/FiberStatus",Kd=Symbol.for(Qd),$d="Done",Jd="Running",Wd="Suspended",Yd=$(`${Qd}-${$d}`);class Xd{[Kd]=Kd;_tag=$d;[V](){return Yd}[X](e){return tf(e)&&e._tag===$d}}class Zd{runtimeFlags;[Kd]=Kd;_tag=Jd;constructor(e){this.runtimeFlags=e}[V](){return u(G(Qd),H(G(this._tag)),H(G(this.runtimeFlags)),Y(this))}[X](e){return tf(e)&&e._tag===Jd&&this.runtimeFlags===e.runtimeFlags}}class ef{runtimeFlags;blockingOn;[Kd]=Kd;_tag=Wd;constructor(e,t){this.runtimeFlags=e,this.blockingOn=t}[V](){return u(G(Qd),H(G(this._tag)),H(G(this.runtimeFlags)),H(G(this.blockingOn)),Y(this))}[X](e){return tf(e)&&e._tag===Wd&&this.runtimeFlags===e.runtimeFlags&&Z(this.blockingOn,e.blockingOn)}}const tf=e=>I(e,Kd),nf=new Xd,af=e=>new Zd(e),rf=Symbol.for("effect/Micro"),of=Symbol.for("effect/Micro/MicroExit"),sf=Symbol.for("effect/Micro/MicroCause"),lf={_E:a};class cf extends globalThis.Error{_tag;traces;[sf];constructor(e,t,n){const i=`MicroCause.${e}`;let a,r,o;if(t instanceof globalThis.Error){a=`(${i}) ${t.name}`,r=t.message;const e=r.split("\n").length;o=t.stack?`(${i}) ${t.stack.split("\n").slice(0,e+3).join("\n")}`:`${a}: ${r}`}else a=i,r=oe(t,0),o=`${a}: ${r}`;n.length>0&&(o+=`\n    ${n.join("\n    ")}`),super(r),this._tag=e,this.traces=n,this[sf]=lf,this.name=a,this.stack=o}pipe(){return de(this,arguments)}toString(){return this.stack}[ie](){return this.stack}}class uf extends cf{defect;constructor(e,t=[]){super("Die",e,t),this.defect=e}}class mf extends cf{constructor(e=[]){super("Interrupt","interrupted",e)}}const df=(e=[])=>new mf(e),ff=Symbol.for("effect/Micro/MicroFiber"),pf={_A:a,_E:a};class gf{context;interruptible;[ff];_stack=[];_observers=[];_exit;_children;currentOpCount=0;constructor(e,t=!0){this.context=e,this.interruptible=t,this[ff]=pf}getRef(e){return((e,t)=>e.unsafeMap.has(t.key)?e.unsafeMap.get(t.key):Cr(t))(this.context,e)}addObserver(e){return this._exit?(e(this._exit),c):(this._observers.push(e),()=>{const t=this._observers.indexOf(e);t>=0&&this._observers.splice(t,1)})}_interrupted=!1;unsafeInterrupt(){this._exit||(this._interrupted=!0,this.interruptible&&this.evaluate(Ff))}unsafePoll(){return this._exit}evaluate(e){if(this._exit)return;if(void 0!==this._yielded){const e=this._yielded;this._yielded=void 0,e()}const t=this.runLoop(e);if(t===vf)return;const n=hf.interruptChildren&&hf.interruptChildren(this);if(void 0!==n)return this.evaluate(Nf(n,(()=>t)));this._exit=t;for(let e=0;e<this._observers.length;e++)this._observers[e](t);this._observers.length=0}runLoop(e){let t=!1,n=e;this.currentOpCount=0;try{for(;;){if(this.currentOpCount++,!t&&this.getRef($f).shouldYield(this)){t=!0;const e=n;n=Nf(Of,(()=>e))}if(n=n[Sf](this),n===vf){const e=this._yielded;return of in e?(this._yielded=void 0,e):vf}}}catch(e){return I(n,Sf)?Vf(e):Vf(`MicroFiber.runLoop: Not a valid effect: ${String(n)}`)}}getCont(e){for(;;){const t=this._stack.pop();if(!t)return;const n=t[xf]&&t[xf](this);if(n)return{[e]:n};if(t[e])return t}}_yielded=void 0;yieldWith(e){return this._yielded=e,vf}children(){return this._children??=new Set}}const hf=p("effect/Micro/fiberMiddleware",(()=>({interruptChildren:void 0}))),yf=Symbol.for("effect/Micro/identifier"),Cf=Symbol.for("effect/Micro/args"),Sf=Symbol.for("effect/Micro/evaluate"),bf=Symbol.for("effect/Micro/successCont"),Ef=Symbol.for("effect/Micro/failureCont"),xf=Symbol.for("effect/Micro/ensureCont"),vf=Symbol.for("effect/Micro/Yield"),Rf={_A:a,_E:a,_R:a},_f={...id,_op:"Micro",[rf]:Rf,pipe(){return de(this,arguments)},[Symbol.iterator](){return new L(new U(this))},toJSON(){return{_id:"Micro",op:this[yf],...Cf in this?{args:this[Cf]}:void 0}},toString(){return re(this)},[ie](){return re(this)}};function Mf(e){return Vf("Micro.evaluate: Not implemented")}const If=e=>({..._f,[yf]:e.op,[Sf]:e.eval??Mf,[bf]:e.contA,[Ef]:e.contE,[xf]:e.ensure}),Df=e=>{const t=If(e);return function(){const n=Object.create(t);return n[Cf]=!1===e.single?arguments:arguments[0],n}},Tf=e=>{const t={...If(e),[of]:of,_tag:e.op,get[e.prop](){return this[Cf]},toJSON(){return{_id:"MicroExit",_tag:e.op,[e.prop]:this[Cf]}},[X](t){return Uf(t)&&t._tag===e.op&&Z(this[Cf],t[Cf])},[V](){return Y(this,H($(e.op))(G(this[Cf])))}};return function(e){const n=Object.create(t);return n[Cf]=e,n[bf]=void 0,n[Ef]=void 0,n[xf]=void 0,n}},kf=Tf({op:"Success",prop:"value",eval(e){const t=e.getCont(bf);return t?t[bf](this[Cf],e):e.yieldWith(this)}}),Pf=Tf({op:"Failure",prop:"cause",eval(e){let t=e.getCont(Ef);for(;"Interrupt"===this[Cf]._tag&&t&&e.interruptible;)t=e.getCont(Ef);return t?t[Ef](this[Cf],e):e.yieldWith(this)}}),Of=Df({op:"Yield",eval(e){let t=!1;return e.getRef($f).scheduleTask((()=>{t||e.evaluate(Gf)}),this[Cf]??0),e.yieldWith((()=>{t=!0}))}})(0),Lf=kf(void 0),Af=Df({op:"WithMicroFiber",eval(e){return this[Cf](e)}}),Nf=i(2,((e,t)=>{const n=Object.create(wf);return n[Cf]=e,n[bf]=t,n})),wf=If({op:"OnSuccess",eval(e){return e._stack.push(this),this[Cf]}}),Uf=e=>I(e,of),Bf=kf,qf=Pf,Ff=qf(df()),Vf=e=>qf(((e,t=[])=>new uf(e,t))(e)),Gf=Bf(void 0),zf="setImmediate"in globalThis?globalThis.setImmediate:e=>setTimeout(e,0);class Hf{tasks=[];running=!1;scheduleTask(e,t){this.tasks.push(e),this.running||(this.running=!0,zf(this.afterScheduled))}afterScheduled=()=>{this.running=!1,this.runTasks()};runTasks(){const e=this.tasks;this.tasks=[];for(let t=0,n=e.length;t<n;t++)e[t]()}shouldYield(e){return e.currentOpCount>=e.getRef(Kf)}flush(){for(;this.tasks.length>0;)this.runTasks()}}const jf=i(2,((e,t)=>Af((n=>{const i=n.context;return n.context=t(i),Yf(e,(()=>(n.context=i,Lf)))})))),Qf=i(2,((e,t)=>jf(e,kr(t))));class Kf extends(Pr()("effect/Micro/currentMaxOpsBeforeYield",{defaultValue:()=>2048})){}class $f extends(Pr()("effect/Micro/currentScheduler",{defaultValue:()=>new Hf})){}const Jf=i(2,((e,t)=>{const n=Object.create(Wf);return n[Cf]=e,n[bf]=t.onSuccess,n[Ef]=t.onFailure,n})),Wf=If({op:"OnSuccessAndFailure",eval(e){return e._stack.push(this),this[Cf]}}),Yf=i(2,((e,t)=>ep((n=>Jf(n(e),{onFailure:e=>Nf(t(qf(e)),(()=>Pf(e))),onSuccess:e=>Nf(t(Bf(e)),(()=>kf(e)))}))))),Xf=Df({op:"SetInterruptible",ensure(e){if(e.interruptible=this[Cf],e._interrupted&&e.interruptible)return()=>Ff}}),Zf=e=>Af((t=>t.interruptible?e:(t.interruptible=!0,t._stack.push(Xf(!1)),t._interrupted?Ff:e))),ep=e=>Af((t=>t.interruptible?(t.interruptible=!1,t._stack.push(Xf(!0)),e(Zf)):e(a)));class tp{buckets=[];scheduleTask(e,t){const n=this.buckets.length;let i,a=0;for(;a<n&&this.buckets[a][0]<=t;a++)i=this.buckets[a];i&&i[0]===t?i[1].push(e):a===n?this.buckets.push([t,[e]]):this.buckets.splice(a,0,[t,[e]])}}class np{maxNextTickBeforeTimer;running=!1;tasks=new tp;constructor(e){this.maxNextTickBeforeTimer=e}starveInternal(e){const t=this.tasks.buckets;this.tasks.buckets=[];for(const[e,n]of t)for(let e=0;e<n.length;e++)n[e]();0===this.tasks.buckets.length?this.running=!1:this.starve(e)}starve(e=0){e>=this.maxNextTickBeforeTimer?setTimeout((()=>this.starveInternal(0)),0):Promise.resolve(void 0).then((()=>this.starveInternal(e+1)))}shouldYield(e){return e.currentOpCount>e.getFiberRef(zc)&&e.getFiberRef(Gc)}scheduleTask(e,t){this.tasks.scheduleTask(e,t),this.running||(this.running=!0,this.starve())}}const ip=p(Symbol.for("effect/Scheduler/defaultScheduler"),(()=>new np(2048)));class ap{tasks=new tp;deferred=!1;scheduleTask(e,t){this.deferred?ip.scheduleTask(e,t):this.tasks.scheduleTask(e,t)}shouldYield(e){return e.currentOpCount>e.getFiberRef(zc)&&e.getFiberRef(Gc)}flush(){for(;this.tasks.buckets.length>0;){const e=this.tasks.buckets;this.tasks.buckets=[];for(const[t,n]of e)for(let e=0;e<n.length;e++)n[e]()}this.deferred=!0}}const rp=p(Symbol.for("effect/FiberRef/currentScheduler"),(()=>Uc(ip))),op=(e,t)=>({_tag:"Par",left:e,right:t}),sp=(e,t)=>({_tag:"Seq",left:e,right:t}),lp=e=>{let t=e,n=fp(),i=Jo(),a=Jo();for(;;)switch(t._tag){case"Empty":if(Ko(i))return[n,a];t=i.head,i=i.tail;break;case"Par":i=$o(t.right,i),t=t.left;break;case"Seq":{const e=t.left,n=t.right;switch(e._tag){case"Empty":t=n;break;case"Par":{const i=e.left,a=e.right;t=op(sp(i,n),sp(a,n));break}case"Seq":{const i=e.left,a=e.right;t=sp(i,sp(a,n));break}case"Single":t=e,a=$o(n,a)}break}case"Single":if(n=pp(n,t),Ko(i))return[n,a];t=i.head,i=i.tail}throw new Error("BUG: BlockedRequests.step - please report an issue at https://github.com/Effect-TS/effect/issues")},cp=(e,t)=>{if(Ko(e))return Wo(Cp(t));if(hp(t))return e;const n=Rp(e.head),i=yp(t);return 1===n.length&&1===i.length&&Z(n[0],i[0])?$o(vp(e.head,Cp(t)),e.tail):$o(Cp(t),e)},up=Symbol.for("effect/RequestBlock/RequestBlockParallel"),mp={_R:e=>e};class dp{map;[up]=mp;constructor(e){this.map=e}}const fp=()=>new dp(ko()),pp=(e,t)=>new dp(No(e.map,t.dataSource,(e=>_t(Dt(e,Wn(t.blockedRequest)),(()=>Gn(t.blockedRequest)))))),gp=(e,t)=>new dp(Uo(e.map,t.map,((e,t,n)=>Lo(e,n,Et(Oo(e,n),{onNone:()=>t,onSome:e=>Zn(t,e)}))))),hp=e=>(e=>e&&pi(e._root))(e.map),yp=e=>Array.from(Ao(e.map)),Cp=e=>xp(wo(e.map,(e=>Gn(e)))),Sp=Symbol.for("effect/RequestBlock/RequestBlockSequential"),bp={_R:e=>e};class Ep{map;[Sp]=bp;constructor(e){this.map=e}}const xp=e=>new Ep(e),vp=(e,t)=>new Ep(Uo(t.map,e.map,((e,t,n)=>Lo(e,n,Et(Oo(e,n),{onNone:()=>Fn(),onSome:e=>Zn(e,t)}))))),Rp=e=>Array.from(Ao(e.map)),_p=p(Symbol.for("effect/FiberRef/currentRequestMap"),(()=>Uc(new Map))),Mp=(e,t,n,i)=>{switch(e){case void 0:return t();case"unbounded":return n();case"inherit":return Lc($c,(e=>"unbounded"===e?n():e>1?i(e):t()));default:return e>1?i(e):t()}},Ip=e=>"Success"===e._tag,Dp="InterruptSignal",Tp="Stateful",kp="Resume",Pp="YieldNow",Op=e=>({_tag:Dp,cause:e}),Lp=e=>({_tag:Tp,onFiber:e}),Ap=e=>({_tag:kp,effect:e}),Np=Symbol.for("effect/FiberScope");class wp{[Np]=Np;fiberId=Io;roots=new Set;add(e,t){this.roots.add(t),t.addObserver((()=>{this.roots.delete(t)}))}}class Up{fiberId;parent;[Np]=Np;constructor(e,t){this.fiberId=e,this.parent=t}add(e,t){this.parent.tell(Lp((e=>{e.addChild(t),t.addObserver((()=>{e.removeChild(t)}))})))}}const Bp=p(Symbol.for("effect/FiberScope/Global"),(()=>new wp)),qp=Symbol.for("effect/Fiber"),Fp={_E:e=>e,_A:e=>e},Vp=Symbol.for("effect/Fiber"),Gp=e=>Sc(Yl(e.await),e.inheritAll),zp="effect/FiberCurrent",Hp=Symbol.for("effect/Logger"),jp={_Message:e=>e,_Output:e=>e},Qp=e=>({[Hp]:jp,log:e,pipe(){return de(this,arguments)}}),Kp=/^[^\s"=]*$/,$p=(e,t)=>({annotations:n,cause:i,date:a,fiberId:r,logLevel:o,message:s,spans:l})=>{const c=(t,n)=>`${td(t)}=${(t=>t.match(Kp)?t:e(t))(n)}`,u=(e,t)=>" "+c(e,t);let m=c("timestamp",a.toISOString());m+=u("level",o.label),m+=u("fiber",Mo(r));const d=(f=s,Array.isArray(f)?f:[f]);var f;for(let e=0;e<d.length;e++)m+=u("message",oe(d[e],t));(e=>e._tag===ba)(i)||(m+=u("cause",Wa(i,{renderErrorCause:!0})));for(const e of l)m+=" "+nd(a.getTime())(e);for(const[e,i]of n)m+=u(e,oe(i,t));return m},Jp=Qp($p((e=>`"${e.replace(/\\([\s\S])|(")/g,"\\$1$2")}"`))),Wp=(JSON.stringify,"object"==typeof process&&null!==process&&"object"==typeof process.stdout&&null!==process.stdout),Yp=(Wp&&process.stdout.isTTY,Wp||globalThis,Symbol.for("effect/MetricKeyType")),Xp="effect/MetricKeyType/Counter",Zp=Symbol.for(Xp),eg=Symbol.for("effect/MetricKeyType/Frequency"),tg=Symbol.for("effect/MetricKeyType/Gauge"),ng="effect/MetricKeyType/Histogram",ig=Symbol.for(ng),ag=Symbol.for("effect/MetricKeyType/Summary"),rg={_In:e=>e,_Out:e=>e};class og{incremental;bigint;[Yp]=rg;[Zp]=Zp;constructor(e,t){this.incremental=e,this.bigint=t,this._hash=$(Xp)}_hash;[V](){return this._hash}[X](e){return lg(e)}pipe(){return de(this,arguments)}}class sg{boundaries;[Yp]=rg;[ig]=ig;constructor(e){this.boundaries=e,this._hash=u($(ng),H(G(this.boundaries)))}_hash;[V](){return this._hash}[X](e){return cg(e)&&Z(this.boundaries,e.boundaries)}pipe(){return de(this,arguments)}}const lg=e=>I(e,Zp),cg=e=>I(e,ig),ug=Symbol.for("effect/MetricKey"),mg={_Type:e=>e},dg=Tn(Z);class fg{name;keyType;description;tags;[ug]=mg;constructor(e,t,n,i=[]){this.name=e,this.keyType=t,this.description=n,this.tags=i,this._hash=u($(this.name+this.description),H(G(this.keyType)),H(W(this.tags)))}_hash;[V](){return this._hash}[X](e){return pg(e)&&this.name===e.name&&Z(this.keyType,e.keyType)&&Z(this.description,e.description)&&dg(this.tags,e.tags)}pipe(){return de(this,arguments)}}const pg=e=>I(e,ug),gg=i(2,((e,t)=>0===t.length?e:new fg(e.name,e.keyType,e.description,Sn(e.tags,t)))),hg=Symbol.for("effect/MutableHashMap"),yg={[hg]:hg,[Symbol.iterator](){return new Cg(this)},toString(){return re(this.toJSON())},toJSON(){return{_id:"MutableHashMap",values:Array.from(this).map(ae)}},[ie](){return this.toJSON()},pipe(){return de(this,arguments)}};class Cg{self;referentialIterator;bucketIterator;constructor(e){this.self=e,this.referentialIterator=e.referential[Symbol.iterator]()}next(){if(void 0!==this.bucketIterator)return this.bucketIterator.next();const e=this.referentialIterator.next();return e.done?(this.bucketIterator=new Sg(this.self.buckets.values()),this.next()):e}[Symbol.iterator](){return new Cg(this.self)}}class Sg{backing;constructor(e){this.backing=e}currentBucket;next(){if(void 0===this.currentBucket){const e=this.backing.next();if(e.done)return e;this.currentBucket=e.value[Symbol.iterator]()}const e=this.currentBucket.next();return e.done?(this.currentBucket=void 0,this.next()):e}}const bg=()=>{const e=Object.create(yg);return e.referential=new Map,e.buckets=new Map,e.bucketsSize=0,e},Eg=i(2,((e,t)=>{if(!1===te(t))return e.referential.has(t)?yt(e.referential.get(t)):ht();const n=t[V](),i=e.buckets.get(n);return void 0===i?ht():xg(e,i,t)})),xg=(e,t,n,i=!1)=>{for(let a=0,r=t.length;a<r;a++)if(n[X](t[a][0])){const n=t[a][1];return i&&(t.splice(a,1),e.bucketsSize--),yt(n)}return ht()},vg=i(2,((e,t)=>bt(Eg(e,t)))),Rg=i(3,((e,t,n)=>{if(!1===te(t))return e.referential.set(t,n),e;const i=t[V](),a=e.buckets.get(i);return void 0===a?(e.buckets.set(i,[[t,n]]),e.bucketsSize++,e):(_g(e,a,t),a.push([t,n]),e.bucketsSize++,e)})),_g=(e,t,n)=>{for(let i=0,a=t.length;i<a;i++)if(n[X](t[i][0]))return t.splice(i,1),void e.bucketsSize--},Mg=Symbol.for("effect/MetricState"),Ig="effect/MetricState/Counter",Dg=Symbol.for(Ig),Tg="effect/MetricState/Frequency",kg=Symbol.for(Tg),Pg="effect/MetricState/Gauge",Og=Symbol.for(Pg),Lg="effect/MetricState/Histogram",Ag=Symbol.for(Lg),Ng="effect/MetricState/Summary",wg=Symbol.for(Ng),Ug={_A:e=>e};class Bg{count;[Mg]=Ug;[Dg]=Dg;constructor(e){this.count=e}[V](){return u(G(Ig),H(G(this.count)),Y(this))}[X](e){return Hg(e)&&this.count===e.count}pipe(){return de(this,arguments)}}const qg=Tn(Z);class Fg{occurrences;[Mg]=Ug;[kg]=kg;constructor(e){this.occurrences=e}_hash;[V](){return u($(Tg),H(W(jt(this.occurrences.entries()))),Y(this))}[X](e){return jg(e)&&qg(jt(this.occurrences.entries()),jt(e.occurrences.entries()))}pipe(){return de(this,arguments)}}class Vg{value;[Mg]=Ug;[Og]=Og;constructor(e){this.value=e}[V](){return u(G(Pg),H(G(this.value)),Y(this))}[X](e){return Qg(e)&&this.value===e.value}pipe(){return de(this,arguments)}}class Gg{buckets;count;min;max;sum;[Mg]=Ug;[Ag]=Ag;constructor(e,t,n,i,a){this.buckets=e,this.count=t,this.min=n,this.max=i,this.sum=a}[V](){return u(G(Lg),H(G(this.buckets)),H(G(this.count)),H(G(this.min)),H(G(this.max)),H(G(this.sum)),Y(this))}[X](e){return Kg(e)&&Z(this.buckets,e.buckets)&&this.count===e.count&&this.min===e.min&&this.max===e.max&&this.sum===e.sum}pipe(){return de(this,arguments)}}class zg{error;quantiles;count;min;max;sum;[Mg]=Ug;[wg]=wg;constructor(e,t,n,i,a,r){this.error=e,this.quantiles=t,this.count=n,this.min=i,this.max=a,this.sum=r}[V](){return u(G(Ng),H(G(this.error)),H(G(this.quantiles)),H(G(this.count)),H(G(this.min)),H(G(this.max)),H(G(this.sum)),Y(this))}[X](e){return $g(e)&&this.error===e.error&&Z(this.quantiles,e.quantiles)&&this.count===e.count&&this.min===e.min&&this.max===e.max&&this.sum===e.sum}pipe(){return de(this,arguments)}}const Hg=e=>I(e,Dg),jg=e=>I(e,kg),Qg=e=>I(e,Og),Kg=e=>I(e,Ag),$g=e=>I(e,wg),Jg=Symbol.for("effect/MetricHook"),Wg={_In:e=>e,_Out:e=>e},Yg=e=>({[Jg]:Wg,pipe(){return de(this,arguments)},...e}),Xg=BigInt(0),Zg=(e,t,n)=>{const i=n.length;if(!Xt(t))return[];const a=t[0],r=t.slice(1),o=eh(e,i,ht(),0,a,n),s=En(o);return r.forEach((t=>{s.push(eh(e,i,o.value,o.consumed,t,o.rest))})),xn(s,(e=>[e.quantile,e.value]))},eh=(e,t,n,i,a,r)=>{let o=e,s=t,l=n,c=i,u=a,m=r,d=e,f=t,p=n,g=i,h=a,y=r;for(;;){if(!Xt(m))return{quantile:u,value:ht(),consumed:c,rest:[]};if(1===u)return{quantile:u,value:yt(rn(m)),consumed:c+m.length,rest:[]};const e=sn(m,(e=>e<=m[0])),t=u*s,n=o/2*t,i=c+e[0].length,a=Math.abs(i-t);if(i<t-n)d=o,f=s,p=nn(m),g=i,h=u,y=e[1],o=d,s=f,l=p,c=g,u=h,m=y;else{if(i>t+n)return{quantile:u,value:l,consumed:c,rest:m};switch(l._tag){case"None":d=o,f=s,p=nn(m),g=i,h=u,y=e[1],o=d,s=f,l=p,c=g,u=h,m=y;continue;case"Some":if(a<Math.abs(t-l.value)){d=o,f=s,p=nn(m),g=i,h=u,y=e[1],o=d,s=f,l=p,c=g,u=h,m=y;continue}return{quantile:u,value:yt(l.value),consumed:c,rest:m}}}}throw new Error("BUG: MetricHook.resolveQuantiles - please report an issue at https://github.com/Effect-TS/effect/issues")},th=Symbol.for("effect/MetricPair"),nh={_Type:e=>e},ih=(e,t)=>({[th]:nh,metricKey:e,metricState:t,pipe(){return de(this,arguments)}}),ah=Symbol.for("effect/MetricRegistry");class rh{[ah]=ah;map=bg();snapshot(){const e=[];for(const[t,n]of this.map)e.push(ih(t,n.get()));return e}get(e){const t=u(this.map,Eg(e),It);if(null==t){if(lg(e.keyType))return this.getCounter(e);if(n=e.keyType,I(n,tg))return this.getGauge(e);if((e=>I(e,eg))(e.keyType))return this.getFrequency(e);if(cg(e.keyType))return this.getHistogram(e);if((e=>I(e,ag))(e.keyType))return this.getSummary(e);throw new Error("BUG: MetricRegistry.get - unknown MetricKeyType - please report an issue at https://github.com/Effect-TS/effect/issues")}var n;return t}getCounter(e){let t=u(this.map,Eg(e),It);if(null==t){const n=(e=>{let t=e.keyType.bigint?Xg:0;const n=e.keyType.incremental?e.keyType.bigint?e=>e>=Xg:e=>e>=0:e=>!0,i=e=>{n(e)&&(t+=e)};return Yg({get:()=>new Bg(t),update:i,modify:i})})(e);u(this.map,vg(e))||u(this.map,Rg(e,n)),t=n}return t}getFrequency(e){let t=u(this.map,Eg(e),It);if(null==t){const n=(e=>{const t=new Map;for(const n of e.keyType.preregisteredWords)t.set(n,0);const n=e=>{const n=t.get(e)??0;t.set(e,n+1)};return Yg({get:()=>new Fg(t),update:n,modify:n})})(e);u(this.map,vg(e))||u(this.map,Rg(e,n)),t=n}return t}getGauge(e){let t=u(this.map,Eg(e),It);if(null==t){const n=((e,t)=>{let n=t;return Yg({get:()=>new Vg(n),update:e=>{n=e},modify:e=>{n+=e}})})(0,e.keyType.bigint?BigInt(0):0);u(this.map,vg(e))||u(this.map,Rg(e,n)),t=n}return t}getHistogram(e){let t=u(this.map,Eg(e),It);if(null==t){const n=(e=>{const t=e.keyType.boundaries.values,n=t.length,i=new Uint32Array(n+1),a=new Float32Array(n);let r=0,o=0,s=Number.MAX_VALUE,l=Number.MIN_VALUE;u(t,mn(Uu),xn(((e,t)=>{a[t]=e})));const c=e=>{let t=0,c=n;for(;t!==c;){const n=Math.floor(t+(c-t)/2);e<=a[n]?c=n:t=n,c===t+1&&(e<=a[t]?c=t:t=c)}i[t]=i[t]+1,r+=1,o+=e,e<s&&(s=e),e>l&&(l=e)},m=()=>{const e=zt(n);let t=0;for(let r=0;r<n;r++){const n=a[r];t+=i[r],e[r]=[n,t]}return e};return Yg({get:()=>{return e={buckets:m(),count:r,min:s,max:l,sum:o},new Gg(e.buckets,e.count,e.min,e.max,e.sum);var e},update:c,modify:c})})(e);u(this.map,vg(e))||u(this.map,Rg(e,n)),t=n}return t}getSummary(e){let t=u(this.map,Eg(e),It);if(null==t){const n=(e=>{const{error:t,maxAge:n,maxSize:i,quantiles:a}=e.keyType,r=u(a,mn(Uu)),o=zt(i);let s=0,l=0,c=0,m=Number.MAX_VALUE,d=Number.MIN_VALUE;const f=e=>{const a=[];let s=0;for(;s!==i-1;){const t=o[s];if(null!=t){const[i,r]=t,o=Wr(e-i);oo(o,Qr)&&o<=n&&a.push(r)}s+=1}return Zg(t,r,mn(a,Uu))},p=(e,t)=>{i>0&&(s+=1,o[s%i]=[t,e]),l+=1,c+=e,e<m&&(m=e),e>d&&(d=e)};return Yg({get:()=>{return e={error:t,quantiles:f(Date.now()),count:l,min:m,max:d,sum:c},new zg(e.error,e.quantiles,e.count,e.min,e.max,e.sum);var e},update:([e,t])=>p(e,t),modify:([e,t])=>p(e,t)})})(e);u(this.map,vg(e))||u(this.map,Rg(e,n)),t=n}return t}}const oh=Symbol.for("effect/Metric"),sh={_Type:e=>e,_In:e=>e,_Out:e=>e},lh=p(Symbol.for("effect/Metric/globalMetricRegistry"),(()=>new rh)),ch=function(e,t,n,i){const a=Object.assign((e=>dc(e,(e=>gh(a,e)))),{[oh]:sh,keyType:e,unsafeUpdate:t,unsafeValue:n,unsafeModify:i,register(){return this.unsafeValue([]),this},pipe(){return de(this,arguments)}});return a},uh=(e,t)=>mh(((e,t)=>new fg(e,(e=>new og(e?.incremental??!1,e?.bigint??!1))(t),Mt(t?.description)))(e,t)),mh=e=>{let t;const n=new WeakMap,i=i=>{if(0===i.length)return void 0!==t||(t=lh.get(e)),t;let a=n.get(i);return void 0!==a||(a=lh.get(gg(e,i)),n.set(i,a)),a};return ch(e.keyType,((e,t)=>i(t).update(e)),(e=>i(e).get()),((e,t)=>i(t).modify(e)))},dh=(e,t,n)=>mh(((e,t,n)=>new fg(e,(e=>new sg(e))(t),Mt(n)))(e,t,n)),fh=i(3,((e,t,n)=>ph(e,[hd(t,n)]))),ph=i(2,((e,t)=>ch(e.keyType,((n,i)=>e.unsafeUpdate(n,Sn(t,i))),(n=>e.unsafeValue(Sn(t,n))),((n,i)=>e.unsafeModify(n,Sn(t,i)))))),gh=i(2,((e,t)=>Lc(Yc,(n=>mc((()=>e.unsafeUpdate(t,n))))))),hh="effect/MetricBoundaries",yh=Symbol.for(hh);class Ch{values;[yh]=yh;constructor(e){this.values=e,this._hash=u($(hh),H(W(this.values)))}_hash;[V](){return this._hash}[X](e){return Sh(e)&&Z(this.values,e.values)}pipe(){return de(this,arguments)}}const Sh=e=>I(e,yh),bh=e=>{const t=u(e,Jt(Gn(Number.POSITIVE_INFINITY)),Pn);return new Ch(t)},Eh=e=>u(Ht(e.count-1,(t=>e.start*Math.pow(e.factor,t))),Kn,bh),xh=i(2,((e,t)=>Lc(_p,(n=>mc((()=>{if(n.has(e)){const i=n.get(e);i.state.completed||(i.state.completed=!0,xu(i.result,t))}})))))),vh=Symbol.for("effect/Supervisor"),Rh={_T:e=>e};class _h{underlying;value0;[vh]=Rh;constructor(e,t){this.underlying=e,this.value0=t}get value(){return this.value0}onStart(e,t,n,i){this.underlying.onStart(e,t,n,i)}onEnd(e,t){this.underlying.onEnd(e,t)}onEffect(e,t){this.underlying.onEffect(e,t)}onSuspend(e){this.underlying.onSuspend(e)}onResume(e){this.underlying.onResume(e)}map(e){return new _h(this,u(this.value,ac(e)))}zip(e){return new Mh(this,e)}}class Mh{left;right;_tag="Zip";[vh]=Rh;constructor(e,t){this.left=e,this.right=t}get value(){return Cc(this.left.value,this.right.value)}onStart(e,t,n,i){this.left.onStart(e,t,n,i),this.right.onStart(e,t,n,i)}onEnd(e,t){this.left.onEnd(e,t),this.right.onEnd(e,t)}onEffect(e,t){this.left.onEffect(e,t),this.right.onEffect(e,t)}onSuspend(e){this.left.onSuspend(e),this.right.onSuspend(e)}onResume(e){this.left.onResume(e),this.right.onResume(e)}map(e){return new _h(this,u(this.value,ac(e)))}zip(e){return new Mh(this,e)}}const Ih=e=>I(e,vh)&&D(e,"Zip");class Dh{effect;[vh]=Rh;constructor(e){this.effect=e}get value(){return this.effect}onStart(e,t,n,i){}onEnd(e,t){}onEffect(e,t){}onSuspend(e){}onResume(e){}map(e){return new _h(this,u(this.value,ac(e)))}zip(e){return new Mh(this,e)}onRun(e,t){return e()}}const Th=p("effect/Supervisor/none",(()=>new Dh(gc))),kh="Empty",Ph="AddSupervisor",Oh="RemoveSupervisor",Lh="AndThen",Ah={_tag:kh},Nh=(e,t)=>({_tag:Lh,first:e,second:t}),wh=(e,t)=>Z(e,t)?Th:Ih(e)?wh(e.left,t).zip(wh(e.right,t)):e,Uh=e=>Z(e,Th)?ua():Ih(e)?u(Uh(e.left),ya(Uh(e.right))):ma(e),Bh=js({empty:Ah,patch:(e,t)=>((e,t)=>{let n=e,i=t;for(;ei(i);){const e=ni(i);switch(e._tag){case kh:i=ii(i);break;case Ph:n=n.zip(e.supervisor),i=ii(i);break;case Oh:n=wh(n,e.supervisor),i=ii(i);break;case Lh:i=Yn(e.first)(Yn(e.second)(ii(i)))}}return n})(t,Gn(e)),combine:Nh,diff:(e,t)=>{if(Z(e,t))return Ah;const n=Uh(e),i=Uh(t),a=u(i,ha(n),Ca(Ah,((e,t)=>Nh(e,{_tag:Ph,supervisor:t})))),r=u(n,ha(i),Ca(Ah,((e,t)=>Nh(e,{_tag:Oh,supervisor:t}))));return Nh(a,r)}}),qh=uh("effect_fiber_started",{incremental:!0}),Fh=uh("effect_fiber_active"),Vh=uh("effect_fiber_successes",{incremental:!0}),Gh=uh("effect_fiber_failures",{incremental:!0}),zh=fh(dh("effect_fiber_lifetimes",Eh({start:.5,factor:2,count:35})),"time_unit","milliseconds"),Hh="Continue",jh="Yield",Qh={_E:e=>e,_A:e=>e},Kh=e=>{throw new Error(`BUG: FiberRuntime - ${oe(e)} - please report an issue at https://github.com/Effect-TS/effect/issues`)},$h=Symbol.for("effect/internal/fiberRuntime/YieldedOp"),Jh=p("effect/internal/fiberRuntime/yieldedOpChannel",(()=>({currentOp:null}))),Wh={[ye]:(e,t,n)=>q((()=>t.effect_instruction_i1(n))),OnStep:(e,t,n)=>hu(hu(n)),[Ce]:(e,t,n)=>q((()=>t.effect_instruction_i2(n))),[Ie]:(e,t,n)=>(e.patchRuntimeFlags(e.currentRuntimeFlags,t.patch),al(e.currentRuntimeFlags)&&e.isInterrupted()?fu(e.getInterruptedCause()):hu(n)),[ve]:(e,t,n)=>(q((()=>t.effect_instruction_i2(n))),q((()=>t.effect_instruction_i0()))?(e.pushStack(t),q((()=>t.effect_instruction_i1()))):gc),[Re]:(e,t,n)=>{const i=q((()=>t.effect_instruction_i0.next(n)));return i.done?hu(i.value):(e.pushStack(t),function(e){if("object"==typeof e&&null!==e&&w in e)return e[w]();throw new Error(O("yieldWrapGet"))}(i.value))}},Yh={[Dp]:(e,t,n,i)=>(e.processNewInterruptSignal(i.cause),al(t)?fu(i.cause):n),[kp]:(e,t,n,i)=>{throw new Error("It is illegal to have multiple concurrent run loops in a single fiber")},[Tp]:(e,t,n,i)=>(i.onFiber(e,af(t)),n),[Pp]:(e,t,n,i)=>Jl(yc(),(()=>n))},Xh=m();class Zh extends rd{[qp]=Fp;[Vp]=Qh;_fiberRefs;_fiberId;_queue=new Array;_children=null;_observers=new Array;_running=!1;_stack=[];_asyncInterruptor=null;_asyncBlockingOn=null;_exitValue=null;_steps=[];_isYielding=!1;currentRuntimeFlags;currentOpCount=0;currentSupervisor;currentScheduler;currentTracer;currentSpan;currentContext;currentDefaultServices;constructor(e,t,n){if(super(),this.currentRuntimeFlags=n,this._fiberId=e,this._fiberRefs=t,cl(n)){const e=this.getFiberRef(Yc);qh.unsafeUpdate(1,e),Fh.unsafeUpdate(1,e)}this.refreshRefCache()}commit(){return Gp(this)}id(){return this._fiberId}resume(e){this.tell(Ap(e))}get status(){return this.ask(((e,t)=>t))}get runtimeFlags(){return this.ask(((e,t)=>t._tag===$d?e.currentRuntimeFlags:t.runtimeFlags))}scope(){return new Up((e=this).id(),e);var e}get children(){return this.ask((e=>Array.from(e.getChildren())))}getChildren(){return null===this._children&&(this._children=new Set),this._children}getInterruptedCause(){return this.getFiberRef(Zc)}fiberRefs(){return this.ask((e=>e.getFiberRefs()))}ask(e){return uc((()=>{const t=bu(this._fiberId);return this.tell(Lp(((n,i)=>{xu(t,mc((()=>e(n,i))))}))),Eu(t)}))}tell(e){this._queue.push(e),this._running||(this._running=!0,this.drainQueueLaterOnExecutor())}get await(){return Nl((e=>{const t=t=>e(cc(t));return this.tell(Lp(((e,n)=>{null!==e._exitValue?t(this._exitValue):e.addObserver(t)}))),mc((()=>this.tell(Lp(((e,n)=>{e.removeObserver(t)})))))}),this.id())}get inheritAll(){return Dl(((e,t)=>{const n=e.id(),i=e.getFiberRefs(),a=t.runtimeFlags,r=this.getFiberRefs(),o=Am(i,n,r);e.setFiberRefs(o);const s=e.getFiberRef(Sy);return(e=>{const t=new Rl(xe);return t.effect_instruction_i0=e,t.effect_instruction_i1=void 0,t})(u(ml(a,s),gl(1),gl(16)))}))}get poll(){return mc((()=>Mt(this._exitValue)))}unsafePoll(){return this._exitValue}interruptAsFork(e){return mc((()=>this.tell(Op(Pa(e)))))}unsafeInterruptAsFork(e){this.tell(Op(Pa(e)))}addObserver(e){null!==this._exitValue?e(this._exitValue):this._observers.push(e)}removeObserver(e){this._observers=this._observers.filter((t=>t!==e))}getFiberRefs(){return this.setFiberRef(Sy,this.currentRuntimeFlags),this._fiberRefs}unsafeDeleteFiberRef(e){this._fiberRefs=Um(this._fiberRefs,e)}getFiberRef(e){return this._fiberRefs.locals.has(e)?this._fiberRefs.locals.get(e)[0][1]:e.initial}setFiberRef(e,t){this._fiberRefs=Fm(this._fiberRefs,{fiberId:this._fiberId,fiberRef:e,value:t}),this.refreshRefCache()}refreshRefCache(){this.currentDefaultServices=this.getFiberRef(Pm),this.currentTracer=this.currentDefaultServices.unsafeMap.get(_m.key),this.currentSupervisor=this.getFiberRef(by),this.currentScheduler=this.getFiberRef(rp),this.currentContext=this.getFiberRef(Vc),this.currentSpan=this.currentContext.unsafeMap.get(Mm.key)}setFiberRefs(e){this._fiberRefs=e,this.refreshRefCache()}addChild(e){this.getChildren().add(e)}removeChild(e){this.getChildren().delete(e)}transferChildren(e){const t=this._children;if(this._children=null,null!==t&&t.size>0)for(const n of t)null===n._exitValue&&e.add(this.currentRuntimeFlags,n)}drainQueueOnCurrentThread(){let e=!0;for(;e;){let t=Hh;const n=globalThis[zp];globalThis[zp]=this;try{for(;t===Hh;)t=0===this._queue.length?"Done":this.evaluateMessageWhileSuspended(this._queue.splice(0,1)[0])}finally{this._running=!1,globalThis[zp]=n}this._queue.length>0&&!this._running?(this._running=!0,t===jh?(this.drainQueueLaterOnExecutor(),e=!1):e=!0):e=!1}}drainQueueLaterOnExecutor(){this.currentScheduler.scheduleTask(this.run,this.getFiberRef(Gc))}drainQueueWhileRunning(e,t){let n=t;for(;this._queue.length>0;){const t=this._queue.splice(0,1)[0];n=Yh[t._tag](this,e,n,t)}return n}isInterrupted(){return!((e=this.getFiberRef(Zc))._tag===ba||$a(e,!0,((e,t)=>{switch(t._tag){case ba:return yt(e);case Sa:case Ea:case xa:return yt(!1);default:return ht()}})));var e}addInterruptedCause(e){const t=this.getFiberRef(Zc);this.setFiberRef(Zc,La(t,e))}processNewInterruptSignal(e){this.addInterruptedCause(e),this.sendInterruptSignalToAllChildren()}sendInterruptSignalToAllChildren(){if(null===this._children||0===this._children.size)return!1;let e=!1;for(const t of this._children)t.tell(Op(Pa(this.id()))),e=!0;return e}interruptAllChildren(){if(this.sendInterruptSignalToAllChildren()){const e=this._children.values();this._children=null;let t=!1;return hc({while:()=>!t,body:()=>{const n=e.next();return n.done?mc((()=>{t=!0})):Pl(n.value.await)},step:()=>{}})}return null}reportExitValue(e){if(cl(this.currentRuntimeFlags)){const t=this.getFiberRef(Yc),n=this.id().startTimeMillis,i=Date.now();switch(zh.unsafeUpdate(i-n,t),Fh.unsafeUpdate(-1,t),e._tag){case Se:Vh.unsafeUpdate(1,t);break;case ge:Gh.unsafeUpdate(1,t)}}if("Failure"===e._tag){const t=this.getFiberRef(Wc);Na(e.cause)||"Some"!==t._tag||this.log("Fiber terminated with an unhandled error",e.cause,t)}}setExitValue(e){this._exitValue=e,this.reportExitValue(e);for(let t=this._observers.length-1;t>=0;t--)this._observers[t](e);this._observers=[]}getLoggers(){return this.getFiberRef(iy)}log(e,t,n){const i=bt(n)?n.value:this.getFiberRef(jc),a=this.getFiberRef(ey);if(ed(a,i))return;const r=this.getFiberRef(Qc),o=this.getFiberRef(Hc),s=this.getLoggers(),l=this.getFiberRefs();if(fa(s)>0){const n=Ir(this.getFiberRef(Pm),Pu),a=new Date(n.unsafeCurrentTimeMillis());((e,t)=>{const n=ue.fiberRefs;ue.fiberRefs=e;try{return t()}finally{ue.fiberRefs=n}})(l,(()=>{for(const n of s)n.log({fiberId:this.id(),logLevel:i,message:e,cause:t,context:l,spans:r,annotations:o,date:a})}))}}evaluateMessageWhileSuspended(e){switch(e._tag){case Pp:return jh;case Dp:return this.processNewInterruptSignal(e.cause),null!==this._asyncInterruptor&&(this._asyncInterruptor(fu(e.cause)),this._asyncInterruptor=null),Hh;case kp:return this._asyncInterruptor=null,this._asyncBlockingOn=null,this.evaluateEffect(e.effect),Hh;case Tp:return e.onFiber(this,null!==this._exitValue?nf:(t=this.currentRuntimeFlags,n=this._asyncBlockingOn,new ef(t,n))),Hh;default:return Kh(e)}var t,n}evaluateEffect(e){this.currentSupervisor.onResume(this);try{let n=al(this.currentRuntimeFlags)&&this.isInterrupted()?fu(this.getInterruptedCause()):e;for(;null!==n;){const e=n,i=this.runLoop(e);if(i===$h){const e=Jh.currentOp;Jh.currentOp=null,e._op===Me?(t=this.currentRuntimeFlags,ol(t,32)?(this.tell({_tag:Pp}),this.tell(Ap(yu)),n=null):n=yu):e._op===fe&&(n=null)}else{this.currentRuntimeFlags=u(this.currentRuntimeFlags,il(16));const e=this.interruptAllChildren();null!==e?n=Jl(e,(()=>i)):(0===this._queue.length?this.setExitValue(i):this.tell(Ap(i)),n=null)}}}finally{this.currentSupervisor.onSuspend(this)}var t}start(e){if(this._running)this.tell(Ap(e));else{this._running=!0;const t=globalThis[zp];globalThis[zp]=this;try{this.evaluateEffect(e)}finally{this._running=!1,globalThis[zp]=t,this._queue.length>0&&this.drainQueueLaterOnExecutor()}}}startFork(e){this.tell(Ap(e))}patchRuntimeFlags(e,t){const n=dl(e,t);return globalThis[zp]=this,this.currentRuntimeFlags=n,n}initiateAsync(e,t){let n=!1;const i=e=>{n||(n=!0,this.tell(Ap(e)))};al(e)&&(this._asyncInterruptor=i);try{t(i)}catch(e){i(jl(ka(e)))}}pushStack(e){this._stack.push(e),"OnStep"===e._op&&this._steps.push({refs:this.getFiberRefs(),flags:this.currentRuntimeFlags})}popStack(){const e=this._stack.pop();if(e)return"OnStep"===e._op&&this._steps.pop(),e}getNextSuccessCont(){let e=this.popStack();for(;e;){if(e._op!==he)return e;e=this.popStack()}}getNextFailCont(){let e=this.popStack();for(;e;){if(e._op!==ye&&e._op!==ve&&e._op!==Re)return e;e=this.popStack()}}[Ee](e){return mc((()=>Dr(this.currentContext,e)))}Left(e){return zl(e.left)}None(e){return zl(new su)}Right(e){return hu(e.right)}Some(e){return hu(e.value)}Micro(e){return Ll((t=>{let n=t;const i=((e,t)=>{const n=new gf($f.context(t?.scheduler??new Hf));if(n.evaluate(e),t?.signal)if(t.signal.aborted)n.unsafeInterrupt();else{const e=()=>n.unsafeInterrupt();t.signal.addEventListener("abort",e,{once:!0}),n.addObserver((()=>t.signal.removeEventListener("abort",e)))}return n})(Qf(e,this.currentContext));return i.addObserver((e=>{if("Success"===e._tag)return n(hu(e.value));switch(e.cause._tag){case"Interrupt":return n(fu(Pa(Io)));case"Fail":return n(zl(e.cause.error));case"Die":return n(ql(e.cause.defect))}})),Ll((e=>{n=t=>{e(gc)},i.unsafeInterrupt()}))}))}[be](e){const t=q((()=>e.effect_instruction_i0())),n=this.getNextSuccessCont();return void 0!==n?(n._op in Wh||Kh(n),Wh[n._op](this,n,t)):(Jh.currentOp=hu(t),$h)}[Se](e){const t=e,n=this.getNextSuccessCont();return void 0!==n?(n._op in Wh||Kh(n),Wh[n._op](this,n,t.effect_instruction_i0)):(Jh.currentOp=t,$h)}[ge](e){const t=e.effect_instruction_i0,n=this.getNextFailCont();if(void 0===n)return Jh.currentOp=fu(t),$h;switch(n._op){case he:case Ce:return al(this.currentRuntimeFlags)&&this.isInterrupted()?fu(Ba(t)):q((()=>n.effect_instruction_i1(t)));case"OnStep":return al(this.currentRuntimeFlags)&&this.isInterrupted()?fu(Ba(t)):hu(fu(t));case Ie:return this.patchRuntimeFlags(this.currentRuntimeFlags,n.patch),al(this.currentRuntimeFlags)&&this.isInterrupted()?fu(La(t,this.getInterruptedCause())):fu(t);default:Kh(n)}}[_e](e){return q((()=>e.effect_instruction_i0(this,af(this.currentRuntimeFlags))))}Blocked(e){const t=this.getFiberRefs(),n=this.currentRuntimeFlags;if(this._steps.length>0){const i=[],a=this._steps[this._steps.length-1];let r=this.popStack();for(;r&&"OnStep"!==r._op;)i.push(r),r=this.popStack();this.setFiberRefs(a.refs),this.currentRuntimeFlags=a.flags;const o=Hd(a.refs,t),s=ml(a.flags,n);return hu(El(e.effect_instruction_i0,Dl((t=>{for(;i.length>0;)t.pushStack(i.pop());return t.setFiberRefs(jd(t.id(),t.getFiberRefs())(o)),t.currentRuntimeFlags=dl(s)(t.currentRuntimeFlags),e.effect_instruction_i1}))))}return pc((t=>Jl(ly((e=>{const t=new Rl("RunBlocked");return t.effect_instruction_i0=e,t})(e.effect_instruction_i0)),(()=>t(e.effect_instruction_i1)))))}RunBlocked(e){return t=e.effect_instruction_i0,nc((e=>{let t=Wo(e),n=Jo();for(;;){const[e,i]=es(t,[fp(),Jo()],(([e,t],n)=>{const[i,a]=lp(n);return[gp(e,i),Yo(t,a)]}));if(n=cp(n,e),Ko(i))return ts(n);t=i}throw new Error("BUG: BlockedRequests.flatten - please report an issue at https://github.com/Effect-TS/effect/issues")})(t),(e=>oy((e=>Array.from(e.map))(e),(([e,t])=>{const n=new Map,i=[];for(const e of t){i.push(jn(e));for(const t of e)n.set(t.request,t)}const a=i.flat();return wc(Ey(e.runAll(i),a,(()=>a.forEach((e=>{e.listeners.interrupted=!0})))),_p,n)}),!1,!1)));var t}[xe](e){const t=e.effect_instruction_i0,n=this.currentRuntimeFlags,i=dl(n,t);if(al(i)&&this.isInterrupted())return fu(this.getInterruptedCause());if(this.patchRuntimeFlags(this.currentRuntimeFlags,t),e.effect_instruction_i1){const t=ml(i,n);return this.pushStack(new vl(t,e)),q((()=>e.effect_instruction_i1(n)))}return yu}[ye](e){return this.pushStack(e),e.effect_instruction_i0}OnStep(e){return this.pushStack(e),e.effect_instruction_i0}[he](e){return this.pushStack(e),e.effect_instruction_i0}[Ce](e){return this.pushStack(e),e.effect_instruction_i0}[fe](e){return this._asyncBlockingOn=e.effect_instruction_i1,this.initiateAsync(this.currentRuntimeFlags,e.effect_instruction_i0),Jh.currentOp=e,$h}[Me](e){return this._isYielding=!1,Jh.currentOp=e,$h}[ve](e){const t=e.effect_instruction_i0,n=e.effect_instruction_i1;return t()?(this.pushStack(e),n()):yu}[Re](e){return Wh[Re](this,e,void 0)}[pe](e){return q((()=>e.commit()))}runLoop(e){let t=e;for(this.currentOpCount=0;;){if(2&this.currentRuntimeFlags&&this.currentSupervisor.onEffect(this,t),this._queue.length>0&&(t=this.drainQueueWhileRunning(this.currentRuntimeFlags,t)),!this._isYielding){this.currentOpCount+=1;const e=this.currentScheduler.shouldYield(this);if(!1!==e){this._isYielding=!0,this.currentOpCount=0;const n=t;t=Jl(yc({priority:e}),(()=>n))}}try{if(t=this.currentTracer.context((()=>Xh!==t[xl]._V?Fl(`Cannot execute an Effect versioned ${t[xl]._V} with a Runtime of version 3.14.1`):this[t._op](t)),this),t===$h){const e=Jh.currentOp;return e._op===Me||e._op===fe?$h:(Jh.currentOp=null,e._op===Se||e._op===ge?e:fu(ka(e)))}}catch(e){t=t!==$h&&!I(t,"_op")||!(t._op in this)?Fl(`Not a valid effect: ${oe(t)}`):I(e,ru)?fu(La(ka(e),Pa(Io))):ql(e)}}}run=()=>{this.drainQueueOnCurrentThread()}}const ey=p("effect/FiberRef/currentMinimumLogLevel",(()=>Uc((e=>{switch(e){case"All":return Qm;case"Debug":return Ym;case"Error":return $m;case"Fatal":return Km;case"Info":return Wm;case"Trace":return Xm;case"None":return Zm;case"Warning":return Jm}})("Info")))),ty=p(Symbol.for("effect/Logger/defaultLogger"),(()=>{return e=Jp,Qp((t=>{const n=zm(t.context,Pm);Ir(n,gm).unsafe.log(e.log(t))}));var e})),ny=p(Symbol.for("effect/Logger/tracerLogger"),(()=>Qp((({annotations:e,cause:t,context:n,fiberId:i,logLevel:a,message:r})=>{const o=Tr(qm(n,Vc),Mm);if("None"===o._tag||"ExternalSpan"===o.value._tag)return;const s=Dr(qm(n,Pm),Pu),l={};for(const[t,n]of e)l[t]=n;l["effect.fiberId"]=Do(i),l["effect.logLevel"]=a.label,null!==t&&"Empty"!==t._tag&&(l["effect.cause"]=Wa(t,{renderErrorCause:!0})),o.value.event(oe(Array.isArray(r)?r[0]:r),s.unsafeCurrentTimeNanos(),l)})))),iy=p(Symbol.for("effect/FiberRef/currentLoggers"),(()=>(e=>{const t=Qs();return qc(e,{differ:t,fork:t.empty})})(ma(ty,ny)))),ay=i((e=>P(e[0])),((e,t,n)=>Dl((i=>{const a=!0===n?.batching||"inherit"===n?.batching&&i.getFiberRef(Jc);return n?.discard?Mp(n.concurrency,(()=>py(Vd,n?.concurrentFinalizers)((n=>a?oy(e,((e,i)=>n(t(e,i))),!0,!1,1):nc(e,((e,i)=>n(t(e,i))))))),(()=>py(Gd,n?.concurrentFinalizers)((n=>oy(e,((e,i)=>n(t(e,i))),a,!1)))),(i=>py(zd(i),n?.concurrentFinalizers)((n=>oy(e,((e,i)=>n(t(e,i))),a,!1,i))))):Mp(n?.concurrency,(()=>py(Vd,n?.concurrentFinalizers)((n=>a?sy(e,1,((e,i)=>n(t(e,i))),!0):tc(e,((e,i)=>n(t(e,i))))))),(()=>py(Gd,n?.concurrentFinalizers)((n=>ry(e,((e,i)=>n(t(e,i))),a)))),(i=>py(zd(i),n?.concurrentFinalizers)((n=>sy(e,i,((e,i)=>n(t(e,i))),a)))))})))),ry=(e,t,n)=>uc((()=>{const i=jt(e),a=new Array(i.length);return bc(oy(i,((e,n)=>Jl(t(e,n),(e=>mc((()=>a[n]=e))))),n,!1),cc(a))})),oy=(e,t,n,i,a)=>pc((r=>(e=>Dl((t=>{const n=u(t.getFiberRef(Xc),vt((()=>t.scope())));return e(wc(Xc,yt(n)))})))((o=>Dl((s=>{let l=Array.from(e).reverse(),c=l.length;if(0===c)return gc;let u=0,m=!1;const d=a?Math.min(l.length,a):l.length,f=new Set,p=new Array,g=new Array,h=new Array,y=new Array,C=()=>{const e=p.filter((({exit:e})=>"Failure"===e._tag)).sort(((e,t)=>e.index<t.index?-1:e.index===t.index?0:1)).map((({exit:e})=>e));return 0===e.length&&e.push(yu),e},S=(e,t=!1)=>{const n=fc(o(e)),i=cy(n,s,s.currentRuntimeFlags,Bp);return s.currentScheduler.scheduleTask((()=>{t&&i.unsafeInterruptAsFork(s.id()),i.resume(n)}),0),i},b=()=>{i||(c-=l.length,l=[]),m=!0,f.forEach((e=>{e.currentScheduler.scheduleTask((()=>{e.unsafeInterruptAsFork(s.id())}),0)}))},E=n?Wl:Gl,x=S(Nl((e=>{const i=(e,t)=>{"Blocked"===e._op?y.push(e):(p.push({index:t,exit:e}),"Failure"!==e._op||m||b())},o=()=>{if(l.length>0){const d=l.pop();let b=u++;const x=()=>{const e=l.pop();return b=u++,Jl(yc(),(()=>Jl(E(r(t(e,b))),v)))},v=e=>l.length>0&&(i(e,b),l.length>0)?x():cc(e),R=Jl(E(r(t(d,b))),v),_=S(R);g.push(_),f.add(_),m&&_.currentScheduler.scheduleTask((()=>{_.unsafeInterruptAsFork(s.id())}),0),_.addObserver((t=>{let r;if(r="Failure"===t._op?t:t.effect_instruction_i0,h.push(_),f.delete(_),i(r,b),p.length===c)e(cc(vt(mu(C(),{parallel:!0}),(()=>yu))));else if(y.length+p.length===c){const t=C(),i=y.map((e=>e.effect_instruction_i0)).reduce(op);e(cc(El(i,oy([vt(mu(t,{parallel:!0}),(()=>yu)),...y.map((e=>e.effect_instruction_i1))],(e=>e),n,!0,a))))}else o()}))}};for(let e=0;e<d;e++)o()})));return Pl(sc(Yl(r(Gp(x))),gu({onFailure:e=>{b();const t=y.length+1,n=Math.min("number"==typeof a?a:y.length,y.length),i=Array.from(y);return Nl((a=>{const r=[];let o=0,s=0;const l=(n,s)=>l=>{r[n]=l,o++,o===t&&a(hu(fu(e))),i.length>0&&s&&c()},c=()=>{S(i.pop(),!0).addObserver(l(s,!0)),s++};x.addObserver(l(s,!1)),s++;for(let e=0;e<n;e++)c()}))},onSuccess:()=>tc(h,(e=>e.inheritAll))})))})))))),sy=(e,t,n,i)=>uc((()=>{const a=jt(e),r=new Array(a.length);return bc(oy(a,((e,t)=>ac(n(e,t),(e=>r[t]=e))),i,!1,t),cc(r))})),ly=e=>my(e,Bp),cy=(e,t,n,i=null)=>uy(e,t,n,i),uy=(e,t,n,i=null)=>{const a=To(),r=t.getFiberRefs(),o=Nm(r,a),s=new Zh(a,o,n),l=qm(o,Vc),c=s.currentSupervisor;return c.onStart(l,e,yt(t),s),s.addObserver((e=>c.onEnd(e,s))),(null!==i?i:u(t.getFiberRef(Xc),vt((()=>t.scope())))).add(n,s),s},my=(e,t)=>Dl(((n,i)=>cc(((e,t,n,i=null)=>{const a=uy(e,t,n,i);return a.resume(e),a})(e,n,i.runtimeFlags,t)))),dy=e=>_u((t=>Et(Tr(t,hy),{onNone:()=>e,onSome:t=>{switch(t.strategy._tag){case"Parallel":return e;case"Sequential":case"ParallelN":return Jl(eu(t,Gd),(t=>yy(e,t)))}}}))),fy=e=>t=>_u((n=>Et(Tr(n,hy),{onNone:()=>t,onSome:n=>"ParallelN"===n.strategy._tag&&n.strategy.parallelism===e?t:Jl(eu(n,zd(e)),(e=>yy(t,e)))}))),py=(e,t)=>n=>_u((i=>Et(Tr(i,hy),{onNone:()=>n(a),onSome:i=>{if(!0!==t)return n(a);{const t="Parallel"===e._tag?dy:"Sequential"===e._tag?gy:fy(e.parallelism);switch(i.strategy._tag){case"Parallel":return t(n(dy));case"Sequential":return t(n(gy));case"ParallelN":return t(n(fy(i.strategy.parallelism)))}}}}))),gy=e=>_u((t=>Et(Tr(t,hy),{onNone:()=>e,onSome:t=>{switch(t.strategy._tag){case"Sequential":return e;case"Parallel":case"ParallelN":return Jl(eu(t,Vd),(t=>yy(e,t)))}}}))),hy=vr("effect/Scope"),yy=i(2,((e,t)=>Iu(e,kr(_r(hy,t))))),Cy=e=>qc(e,{differ:Bh,fork:Ah}),Sy=Fc(ll),by=Cy(Th),Ey=(e,t,n)=>$l((i=>Jl(Jl(ly(ic(e)),(e=>Nl((i=>{const a=t.map((e=>e.listeners.count)),r=()=>{a.every((e=>0===e))&&t.every((e=>"Pending"===e.result.state.current._tag||!("Done"!==e.result.state.current._tag||!uu(e.result.state.current.effect)||"Failure"!==e.result.state.current.effect._tag||!(e=>bt(Ua(e)))(e.result.state.current.effect.cause))))&&(o.forEach((e=>e())),n?.(),i((e=>Jl(Kl,(t=>u(e,Ec(t)))))(e)))};e.addObserver((e=>{o.forEach((e=>e())),i(e)}));const o=t.map(((e,t)=>{const n=e=>{a[t]=e,r()};return e.listeners.addObserver(n),()=>e.listeners.removeObserver(n)}));return r(),mc((()=>{o.forEach((e=>e()))}))})))),(()=>uc((()=>{const e=t.flatMap((e=>e.state.completed?[]:[e]));return nc(e,(e=>xh(e.request,(e=>fu(Pa(e)))(i))))})))))),xy=(e,t)=>e.close(t),vy=eu,Ry=e=>function(){if(1===arguments.length){const t=arguments[0];return(n,...i)=>e(t,n,...i)}return e.apply(this,arguments)},_y=Ry(((e,t,n)=>{const i=To(),a=[[Vc,[[i,e.context]]]];n?.scheduler&&a.push([rp,[[i,n.scheduler]]]);let r=Hm(e.fiberRefs,{entries:a,forkAs:i});n?.updateRefs&&(r=n.updateRefs(r,i));const o=new Zh(i,r,e.runtimeFlags);let s=t;n?.scope&&(s=Jl(vy(n.scope,Fd),(e=>bc(((e,t)=>e.addFinalizer((()=>Pl(t))))(e,$l((e=>Z(e,o.id())?gc:Ec(o,e)))),sc(t,(t=>xy(e,t)))))));const l=o.currentSupervisor;return l!==Th&&(l.onStart(e.context,s,ht(),o),o.addObserver((e=>l.onEnd(e,o)))),Bp.add(e.runtimeFlags,o),!1===n?.immediate?o.resume(s):o.start(s),o})),My=Ry(((e,t)=>{const n=Oy(e)(t);if("Failure"===n._tag)throw Py(n.effect_instruction_i0);return n.effect_instruction_i0}));class Iy extends Error{fiber;_tag="AsyncFiberException";constructor(e){super(`Fiber #${e.id().id} cannot be resolved synchronously. This is caused by using runSync on an effect that performs async work`),this.fiber=e,this.name=this._tag,this.stack=this.message}}const Dy=Symbol.for("effect/Runtime/FiberFailure"),Ty=Symbol.for("effect/Runtime/FiberFailure/Cause");class ky extends Error{[Dy];[Ty];constructor(e){const t=ar(e)[0];super(t?.message||"An error has occurred"),this[Dy]=Dy,this[Ty]=e,this.name=t?`(FiberFailure) ${t.name}`:"FiberFailure",t?.stack&&(this.stack=t.stack)}toJSON(){return{_id:"FiberFailure",cause:this[Ty].toJSON()}}toString(){return"(FiberFailure) "+Wa(this[Ty],{renderErrorCause:!0})}[ie](){return this.toString()}}const Py=e=>{const t=Error.stackTraceLimit;Error.stackTraceLimit=0;const n=new ky(e);return Error.stackTraceLimit=t,n},Oy=Ry(((e,t)=>{const n=(e=>{const t=e;switch(t._op){case"Failure":case"Success":return t;case"Left":return du(t.left);case"Right":return hu(t.right);case"Some":return hu(t.value);case"None":return du(su())}})(t);if(n)return n;const i=new ap,a=_y(e)(t,{scheduler:i});i.flush();return a.unsafePoll()||(r=Bl((e=>{const t=Error.stackTraceLimit;Error.stackTraceLimit=0;const n=new Iy(e);return Error.stackTraceLimit=t,n})(a),Du(a)),fu(ka(r)));var r}));class Ly{context;runtimeFlags;fiberRefs;constructor(e,t,n){this.context=e,this.runtimeFlags=t,this.fiberRefs=n}pipe(){return de(this,arguments)}}const Ay=e=>new Ly(e.context,e.runtimeFlags,e.fiberRefs),Ny=sl(1,32,4),wy=Ay({context:Rr(),runtimeFlags:Ny,fiberRefs:jm()}),Uy=_y(wy),By=My(wy);Symbol.iterator;Symbol.iterator;const qy=Il,Fy=ay,Vy=uc,Gy=gc,zy=wl,Hy=ac,jy=rc,Qy=oc,Ky=Vl,$y=Jl,Jy=Uy,Wy=By,Yy=Symbol.for("effect/annotation/Brand"),Xy=Symbol.for("effect/annotation/SchemaId"),Zy=Symbol.for("effect/annotation/Message"),eC=Symbol.for("effect/annotation/MissingMessage"),tC=Symbol.for("effect/annotation/Identifier"),nC=Symbol.for("effect/annotation/Title"),iC=Symbol.for("effect/annotation/AutoTitle"),aC=Symbol.for("effect/annotation/Description"),rC=Symbol.for("effect/annotation/Examples"),oC=Symbol.for("effect/annotation/Default"),sC=Symbol.for("effect/annotation/JSONSchema"),lC=Symbol.for("effect/annotation/Arbitrary"),cC=Symbol.for("effect/annotation/Pretty"),uC=Symbol.for("effect/annotation/Equivalence"),mC=Symbol.for("effect/annotation/Documentation"),dC=Symbol.for("effect/annotation/Concurrency"),fC=Symbol.for("effect/annotation/Batching"),pC=Symbol.for("effect/annotation/ParseIssueTitle"),gC=Symbol.for("effect/annotation/ParseOptions"),hC=Symbol.for("effect/annotation/DecodingFallback"),yC=Symbol.for("effect/annotation/Surrogate"),CC=Symbol.for("effect/annotation/StableFilter"),SC=i(2,((e,t)=>Object.prototype.hasOwnProperty.call(e.annotations,t)?yt(e.annotations[t]):ht())),bC=SC(Yy),EC=SC(Zy),xC=SC(eC),vC=SC(nC),RC=SC(iC),_C=SC(tC),MC=SC(aC),IC=SC(dC),DC=SC(fC),TC=SC(pC),kC=SC(gC),PC=SC(hC),OC=SC(yC),LC=SC(CC),AC=e=>Nt(LC(e),(e=>!0===e)),NC=Symbol.for("effect/annotation/JSONIdentifier"),wC=SC(NC);class UC{typeParameters;decodeUnknown;encodeUnknown;annotations;_tag="Declaration";constructor(e,t,n,i={}){this.typeParameters=e,this.decodeUnknown=t,this.encodeUnknown=n,this.annotations=i}toString(){return vt(yb(this),(()=>"<declaration schema>"))}toJSON(){return{_tag:this._tag,typeParameters:this.typeParameters.map((e=>e.toJSON())),annotations:fb(this.annotations)}}}const BC=e=>t=>t._tag===e;class qC{literal;annotations;_tag="Literal";constructor(e,t={}){this.literal=e,this.annotations=t}toString(){return vt(yb(this),(()=>Ed(this.literal)))}toJSON(){return{_tag:this._tag,literal:C(this.literal)?String(this.literal):this.literal,annotations:fb(this.annotations)}}}const FC=BC("Literal"),VC=new qC(null);class GC{symbol;annotations;_tag="UniqueSymbol";constructor(e,t={}){this.symbol=e,this.annotations=t}toString(){return vt(yb(this),(()=>Ed(this.symbol)))}toJSON(){return{_tag:this._tag,symbol:String(this.symbol),annotations:fb(this.annotations)}}}class zC{annotations;_tag="UndefinedKeyword";constructor(e={}){this.annotations=e}toString(){return gb(this)}toJSON(){return{_tag:this._tag,annotations:fb(this.annotations)}}}const HC=new zC({[nC]:"undefined"});class jC{annotations;_tag="NeverKeyword";constructor(e={}){this.annotations=e}toString(){return gb(this)}toJSON(){return{_tag:this._tag,annotations:fb(this.annotations)}}}const QC=new jC({[nC]:"never"});class KC{annotations;_tag="UnknownKeyword";constructor(e={}){this.annotations=e}toString(){return gb(this)}toJSON(){return{_tag:this._tag,annotations:fb(this.annotations)}}}const $C=new KC({[nC]:"unknown"});class JC{annotations;_tag="AnyKeyword";constructor(e={}){this.annotations=e}toString(){return gb(this)}toJSON(){return{_tag:this._tag,annotations:fb(this.annotations)}}}const WC=new JC({[nC]:"any"});class YC{annotations;_tag="StringKeyword";constructor(e={}){this.annotations=e}toString(){return gb(this)}toJSON(){return{_tag:this._tag,annotations:fb(this.annotations)}}}const XC=new YC({[nC]:"string",[aC]:"a string"}),ZC=BC("StringKeyword");class eS{annotations;_tag="NumberKeyword";constructor(e={}){this.annotations=e}toString(){return gb(this)}toJSON(){return{_tag:this._tag,annotations:fb(this.annotations)}}}const tS=new eS({[nC]:"number",[aC]:"a number"}),nS=BC("NumberKeyword");class iS{annotations;_tag="BooleanKeyword";constructor(e={}){this.annotations=e}toString(){return gb(this)}toJSON(){return{_tag:this._tag,annotations:fb(this.annotations)}}}const aS=new iS({[nC]:"boolean",[aC]:"a boolean"}),rS=BC("BooleanKeyword"),oS=BC("SymbolKeyword"),sS=e=>{switch(e._tag){case"Literal":case"NumberKeyword":case"StringKeyword":case"TemplateLiteral":return!0;case"Union":return e.types.every(sS)}return!1},lS=e=>{switch(e._tag){case"Literal":return JSON.stringify(String(e.literal));case"StringKeyword":return"string";case"NumberKeyword":return"number";case"TemplateLiteral":return String(e);case"Union":return e.types.map(lS).join(" | ")}};class cS{literal;type;constructor(e,t){if(this.literal=t,!sS(e))throw new Error(_d("Unsupported template literal span",void 0,void 0,e));this.type=e}toString(){return(e=>{switch(e._tag){case"Literal":return String(e.literal);case"StringKeyword":return"${string}";case"NumberKeyword":return"${number}";case"TemplateLiteral":return"${"+String(e)+"}";case"Union":return"${"+e.types.map(lS).join(" | ")+"}"}})(this.type)+this.literal}toJSON(){return{type:this.type.toJSON(),literal:this.literal}}}class uS{head;spans;annotations;_tag="TemplateLiteral";constructor(e,t,n={}){this.head=e,this.spans=t,this.annotations=n}toString(){return vt(yb(this),(()=>mS(this)))}toJSON(){return{_tag:this._tag,head:this.head,spans:this.spans.map((e=>e.toJSON())),annotations:fb(this.annotations)}}}const mS=e=>"`"+e.head+e.spans.map(String).join("")+"`",dS=BC("TemplateLiteral");class fS{type;annotations;constructor(e,t={}){this.type=e,this.annotations=t}toJSON(){return{type:this.type.toJSON(),annotations:fb(this.annotations)}}toString(){return String(this.type)}}class pS extends fS{isOptional;constructor(e,t,n={}){super(e,n),this.isOptional=t}toJSON(){return{type:this.type.toJSON(),isOptional:this.isOptional,annotations:fb(this.annotations)}}toString(){return String(this.type)+(this.isOptional?"?":"")}}const gS=e=>e.map((e=>e.type));class hS{elements;rest;isReadonly;annotations;_tag="TupleType";constructor(e,t,n,i={}){this.elements=e,this.rest=t,this.isReadonly=n,this.annotations=i;let a=!1,r=!1;for(const t of e)if(t.isOptional)a=!0;else if(a){r=!0;break}if(r||a&&t.length>1)throw new Error(kd)}toString(){return vt(yb(this),(()=>yS(this)))}toJSON(){return{_tag:this._tag,elements:this.elements.map((e=>e.toJSON())),rest:this.rest.map((e=>e.toJSON())),isReadonly:this.isReadonly,annotations:fb(this.annotations)}}}const yS=e=>{const t=e.elements.map(String).join(", ");return Qt(e.rest,{onEmpty:()=>`readonly [${t}]`,onNonEmpty:(n,i)=>{const a=String(n),r=a.includes(" | ")?`(${a})`:a;if(i.length>0){const n=i.map(String).join(", ");return e.elements.length>0?`readonly [${t}, ...${r}[], ${n}]`:`readonly [...${r}[], ${n}]`}return e.elements.length>0?`readonly [${t}, ...${r}[]]`:`ReadonlyArray<${a}>`}})};class CS extends pS{name;isReadonly;constructor(e,t,n,i,a){super(t,n,a),this.name=e,this.isReadonly=i}toString(){return(this.isReadonly?"readonly ":"")+String(this.name)+(this.isOptional?"?":"")+": "+this.type}toJSON(){return{name:String(this.name),type:this.type.toJSON(),isOptional:this.isOptional,isReadonly:this.isReadonly,annotations:fb(this.annotations)}}}const SS=e=>{switch(e._tag){case"StringKeyword":case"SymbolKeyword":case"TemplateLiteral":return!0;case"Refinement":return SS(e.from)}return!1};class bS{type;isReadonly;parameter;constructor(e,t,n){if(this.type=t,this.isReadonly=n,!SS(e))throw new Error(Td);this.parameter=e}toString(){return(this.isReadonly?"readonly ":"")+`[x: ${this.parameter}]: ${this.type}`}toJSON(){return{parameter:this.parameter.toJSON(),type:this.type.toJSON(),isReadonly:this.isReadonly}}}class ES{annotations;_tag="TypeLiteral";propertySignatures;indexSignatures;constructor(e,t,n={}){this.annotations=n;const i={};for(let t=0;t<e.length;t++){const n=e[t].name;if(Object.prototype.hasOwnProperty.call(i,n))throw new Error(_d("Duplicate property signature",`Duplicate key ${Ed(n)}`));i[n]=null}const a={string:!1,symbol:!1};for(let e=0;e<t.length;e++){const n=pb(t[e].parameter);if(ZC(n)){if(a.string)throw new Error(Dd("string"));a.string=!0}else if(oS(n)){if(a.symbol)throw new Error(Dd("symbol"));a.symbol=!0}}this.propertySignatures=e,this.indexSignatures=t}toString(){return vt(yb(this),(()=>vS(this)))}toJSON(){return{_tag:this._tag,propertySignatures:this.propertySignatures.map((e=>e.toJSON())),indexSignatures:this.indexSignatures.map((e=>e.toJSON())),annotations:fb(this.annotations)}}}const xS=e=>e.map(String).join("; "),vS=e=>{if(e.propertySignatures.length>0){const t=e.propertySignatures.map(String).join("; ");return e.indexSignatures.length>0?`{ ${t}; ${xS(e.indexSignatures)} }`:`{ ${t} }`}return e.indexSignatures.length>0?`{ ${xS(e.indexSignatures)} }`:"{}"},RS=BC("TypeLiteral"),_S=mn(qt(Uu,(e=>{switch(e._tag){case"AnyKeyword":return 0;case"UnknownKeyword":return 1;case"ObjectKeyword":return 2;case"StringKeyword":case"NumberKeyword":case"BooleanKeyword":case"BigIntKeyword":case"SymbolKeyword":return 3}return 4}))),MS={string:"StringKeyword",number:"NumberKeyword",boolean:"BooleanKeyword",bigint:"BigIntKeyword"},IS=e=>vn(e,(e=>kS(e)?IS(e.types):[e]));class DS{types;annotations;static make=(e,t)=>TS(e)?new DS(e,t):1===e.length?e[0]:QC;static unify=(e,t)=>DS.make((e=>{const t=_S(e),n=[],i={},a=[];for(const e of t)switch(e._tag){case"NeverKeyword":break;case"AnyKeyword":return[WC];case"UnknownKeyword":return[$C];case"ObjectKeyword":case"UndefinedKeyword":case"VoidKeyword":case"StringKeyword":case"NumberKeyword":case"BooleanKeyword":case"BigIntKeyword":case"SymbolKeyword":i[e._tag]||(i[e._tag]=e,n.push(e));break;case"Literal":{const t=typeof e.literal;switch(t){case"string":case"number":case"bigint":case"boolean":i[MS[t]]||a.includes(e.literal)||(a.push(e.literal),n.push(e));break;case"object":a.includes(e.literal)||(a.push(e.literal),n.push(e))}break}case"UniqueSymbol":i.SymbolKeyword||a.includes(e.symbol)||(a.push(e.symbol),n.push(e));break;case"TupleType":i.ObjectKeyword||n.push(e);break;case"TypeLiteral":0===e.propertySignatures.length&&0===e.indexSignatures.length?i["{}"]||(i["{}"]=e,n.push(e)):i.ObjectKeyword||n.push(e);break;default:n.push(e)}return n})(IS(e)),t);_tag="Union";constructor(e,t={}){this.types=e,this.annotations=t}toString(){return vt(yb(this),(()=>this.types.map(String).join(" | ")))}toJSON(){return{_tag:this._tag,types:this.types.map((e=>e.toJSON())),annotations:fb(this.annotations)}}}const TS=e=>e.length>1,kS=BC("Union"),PS=p(Symbol.for("effect/Schema/AST/toJSONMemoMap"),(()=>new WeakMap));class OS{f;annotations;_tag="Suspend";constructor(e,t={}){this.f=e,this.annotations=t,this.f=bd(e)}toString(){return yb(this).pipe(Rt((()=>{return Tt((e=this.f,(...t)=>{try{return yt(e(...t))}catch(e){return ht()}})(),(e=>yb(e)));var e})),vt((()=>"<suspended schema>")))}toJSON(){const e=this.f();let t=PS.get(e);return t||(PS.set(e,{_tag:this._tag}),t={_tag:this._tag,ast:e.toJSON(),annotations:fb(this.annotations)},PS.set(e,t),t)}}class LS{from;filter;annotations;_tag="Refinement";constructor(e,t,n={}){this.from=e,this.filter=t,this.annotations=n}toString(){return _C(this).pipe(vt((()=>Et(hb(this),{onNone:()=>`{ ${this.from} | filter }`,onSome:e=>AS(this.from)?String(this.from)+" & "+e:e}))))}toJSON(){return{_tag:this._tag,from:this.from.toJSON(),annotations:fb(this.annotations)}}}const AS=BC("Refinement"),NS={};class wS{from;to;transformation;annotations;_tag="Transformation";constructor(e,t,n,i={}){this.from=e,this.to=t,this.transformation=n,this.annotations=i}toString(){return vt(yb(this),(()=>`(${String(this.from)} <-> ${String(this.to)})`))}toJSON(){return{_tag:this._tag,from:this.from.toJSON(),to:this.to.toJSON(),annotations:fb(this.annotations)}}}const US=BC("Transformation");class BS{decode;encode;_tag="FinalTransformation";constructor(e,t){this.decode=e,this.encode=t}}const qS=e=>t=>t._tag===e;class FS{_tag="ComposeTransformation"}const VS=new FS;class GS{from;to;decode;encode;constructor(e,t,n,i){this.from=e,this.to=t,this.decode=n,this.encode=i}}const zS=e=>e.decode===a&&e.encode===a;class HS{propertySignatureTransformations;_tag="TypeLiteralTransformation";constructor(e){this.propertySignatureTransformations=e;const t={},n={};for(const i of e){const e=i.from;if(t[e])throw new Error(Pd(e));t[e]=!0;const a=i.to;if(n[a])throw new Error(Pd(a));n[a]=!0}}}const jS=qS("TypeLiteralTransformation"),QS=(e,t)=>{const n=Object.getOwnPropertyDescriptors(e),i={...e.annotations,...t},a=OC(e);return bt(a)&&(i[yC]=QS(a.value,t)),n.annotations.value=i,Object.create(Object.getPrototypeOf(e),n)},KS=(e,t)=>{switch(e._tag){case"Literal":return Bu(String(e.literal));case"StringKeyword":return"[\\s\\S]*";case"NumberKeyword":return"[+-]?\\d*\\.?\\d+(?:[Ee][+-]?\\d+)?";case"TemplateLiteral":return JS(e,t,!1);case"Union":return e.types.map((e=>KS(e,t))).join("|")}},$S=(e,t,n,i)=>{if(kS(e)){if(n&&!i)return`(?:${t})`}else if(!n||!i)return t;return`(${t})`},JS=(e,t,n)=>{let i="";if(""!==e.head){const a=Bu(e.head);i+=t&&n?`(${a})`:a}for(const a of e.spans){const e=KS(a.type,t);if(i+=$S(a.type,e,t,n),""!==a.literal){const e=Bu(a.literal);i+=t&&n?`(${e})`:e}}return i},WS=e=>new RegExp(`^${JS(e,!1,!0)}$`),YS=e=>{const t=OC(e);if(bt(t))return YS(t.value);switch(e._tag){case"TypeLiteral":return e.indexSignatures.slice();case"Suspend":return YS(e.f());case"Refinement":return YS(e.from)}return[]},XS=(e,t)=>{const n=cn(e.propertySignatures,(e=>e.name===t));if(bt(n))return n.value;if(g(t)){let n;for(const i of e.indexSignatures){const e=pb(i.parameter);switch(e._tag){case"TemplateLiteral":if(WS(e).test(t))return new CS(t,i.type,!1,!0);break;case"StringKeyword":void 0===n&&(n=new CS(t,i.type,!1,!0))}}if(n)return n}else if(S(t))for(const n of e.indexSignatures){const e=pb(n.parameter);if(oS(e))return new CS(t,n.type,!1,!0)}},ZS=(e,t)=>{const n=OC(e);if(bt(n))return ZS(n.value,t);switch(e._tag){case"TypeLiteral":{const n=XS(e,t);if(n)return n;break}case"Union":return new CS(t,DS.make(e.types.map((e=>ZS(e,t).type))),!1,!0);case"Suspend":return ZS(e.f(),t);case"Refinement":return ZS(e.from,t)}throw new Error(Id(e))},eb=e=>{const t=OC(e);if(bt(t))return eb(t.value);switch(e._tag){case"TypeLiteral":return e.propertySignatures.map((e=>e.name));case"Union":return e.types.slice(1).reduce(((e,t)=>bn(e,eb(t))),eb(e.types[0]));case"Suspend":return eb(e.f());case"Refinement":return eb(e.from);case"Transformation":return eb(e.to)}return[]},tb=(e,t)=>{const n=[],i=[],a=e=>{switch(e._tag){case"NeverKeyword":break;case"StringKeyword":case"SymbolKeyword":case"TemplateLiteral":case"Refinement":i.push(new bS(e,t,!0));break;case"Literal":if(!g(e.literal)&&!h(e.literal))throw new Error((r=e.literal,_d("Unsupported literal",`literal value: ${Ed(r)}`)));n.push(new CS(e.literal,t,!1,!0));break;case"Enums":for(const[i,a]of e.enums)n.push(new CS(a,t,!1,!0));break;case"UniqueSymbol":n.push(new CS(e.symbol,t,!1,!0));break;case"Union":e.types.forEach(a);break;default:throw new Error(_d("Unsupported key schema",void 0,void 0,e))}var r};return a(e),{propertySignatures:n,indexSignatures:i}},nb=(e,t)=>{const n=OC(e);if(bt(n))return nb(n.value,t);switch(e._tag){case"TypeLiteral":{const n=[],i={};for(const a of e.propertySignatures)i[a.name]=null,t.includes(a.name)&&n.push(a);for(const a of t)if(!(a in i)){const t=XS(e,a);t&&n.push(t)}return new ES(n,[])}case"Union":return new ES(t.map((t=>ZS(e,t))),[]);case"Suspend":return nb(e.f(),t);case"Refinement":return nb(e.from,t);case"Transformation":switch(e.transformation._tag){case"ComposeTransformation":return new wS(nb(e.from,t),nb(e.to,t),VS);case"TypeLiteralTransformation":{const n=[],i=[];for(const a of t){const t=e.transformation.propertySignatureTransformations.find((e=>e.to===a));t?(n.push(t),i.push(t.from)):i.push(a)}return Xt(n)?new wS(nb(e.from,i),nb(e.to,t),new HS(n)):nb(e.from,i)}}}throw new Error(Id(e))},ib=e=>{switch(e._tag){case"TupleType":return new hS(e.elements.map((e=>new pS(e.type,!1))),e.rest,e.isReadonly);case"TypeLiteral":return new ES(e.propertySignatures.map((e=>new CS(e.name,e.type,!1,e.isReadonly,e.annotations))),e.indexSignatures);case"Union":return DS.make(e.types.map((e=>ib(e))));case"Suspend":return new OS((()=>ib(e.f())));case"Declaration":case"Refinement":throw new Error(Id(e));case"Transformation":if(jS(e.transformation)&&e.transformation.propertySignatureTransformations.every(zS))return new wS(ib(e.from),ib(e.to),e.transformation);throw new Error(Id(e))}return e},ab=e=>t=>{let n;for(const i of e)Object.prototype.hasOwnProperty.call(t.annotations,i)&&(void 0===n&&(n={}),n[i]=t.annotations[i]);return n},rb=e=>t=>{const n={...t.annotations};for(const t of e)delete n[t];return n},ob=ab([rC,oC,sC,lC,cC,uC]),sb=e=>{switch(e._tag){case"Declaration":{const t=cb(e.typeParameters,sb);return t===e.typeParameters?e:new UC(t,e.decodeUnknown,e.encodeUnknown,e.annotations)}case"TupleType":{const t=cb(e.elements,(e=>{const t=sb(e.type);return t===e.type?e:new pS(t,e.isOptional)})),n=gS(e.rest),i=cb(n,sb);return t===e.elements&&i===n?e:new hS(t,i.map((e=>new fS(e))),e.isReadonly,e.annotations)}case"TypeLiteral":{const t=cb(e.propertySignatures,(e=>{const t=sb(e.type);return t===e.type?e:new CS(e.name,t,e.isOptional,e.isReadonly)})),n=cb(e.indexSignatures,(e=>{const t=sb(e.type);return t===e.type?e:new bS(e.parameter,t,e.isReadonly)}));return t===e.propertySignatures&&n===e.indexSignatures?e:new ES(t,n,e.annotations)}case"Union":{const t=cb(e.types,sb);return t===e.types?e:DS.make(t,e.annotations)}case"Suspend":return new OS((()=>sb(e.f())),e.annotations);case"Refinement":{const t=sb(e.from);return t===e.from?e:new LS(t,e.filter,e.annotations)}case"Transformation":{const t=ob(e);return sb(void 0!==t?QS(e.to,t):e.to)}}return e},lb=e=>Et((e=>Rt(wC(e),(()=>_C(e))))(e),{onNone:()=>{},onSome:e=>({[NC]:e})});function cb(e,t){let n=!1;const i=zt(e.length);for(let a=0;a<e.length;a++){const r=e[a],o=t(r);o!==r&&(n=!0),i[a]=o}return n?i:e}const ub=e=>{switch(e._tag){case"Transformation":return e.from;case"Refinement":return ub(e.from);case"Suspend":return ub(e.f())}},mb=(e,t)=>{switch(e._tag){case"Declaration":{const n=cb(e.typeParameters,(e=>mb(e,t)));return n===e.typeParameters?e:new UC(n,e.decodeUnknown,e.encodeUnknown,e.annotations)}case"TupleType":{const n=cb(e.elements,(e=>{const n=mb(e.type,t);return n===e.type?e:new pS(n,e.isOptional)})),i=gS(e.rest),a=cb(i,(e=>mb(e,t)));return n===e.elements&&a===i?e:new hS(n,a.map((e=>new fS(e))),e.isReadonly,lb(e))}case"TypeLiteral":{const n=cb(e.propertySignatures,(e=>{const n=mb(e.type,t);return n===e.type?e:new CS(e.name,n,e.isOptional,e.isReadonly)})),i=cb(e.indexSignatures,(e=>{const n=mb(e.type,t);return n===e.type?e:new bS(e.parameter,n,e.isReadonly)}));return n===e.propertySignatures&&i===e.indexSignatures?e:new ES(n,i,lb(e))}case"Union":{const n=cb(e.types,(e=>mb(e,t)));return n===e.types?e:DS.make(n,lb(e))}case"Suspend":return new OS((()=>mb(e.f(),t)),lb(e));case"Refinement":{const n=mb(e.from,t);if(t){if(n===e.from)return e;if(void 0===ub(e.from)&&AC(e))return new LS(n,e.filter,e.annotations)}const i=lb(e);return i?QS(n,i):n}case"Transformation":{const n=lb(e);return mb(n?QS(e.from,n):e.from,t)}}return e},db=e=>mb(e,!1),fb=e=>{const t={};for(const n of Object.getOwnPropertySymbols(e))t[String(n)]=e[n];return t},pb=e=>{switch(e._tag){case"StringKeyword":case"SymbolKeyword":case"TemplateLiteral":return e;case"Refinement":return pb(e.from)}},gb=e=>vt(yb(e),(()=>e._tag)),hb=e=>vC(e).pipe(Rt((()=>MC(e))),Rt((()=>RC(e))),Dt((t=>t+function(e){return Et(bC(e),{onNone:()=>"",onSome:e=>e.map((e=>` & Brand<${Ed(e)}>`)).join("")})}(e)))),yb=e=>Rt(_C(e),(()=>hb(e)));class Cb{path;actual;issue;_tag="Pointer";constructor(e,t,n){this.path=e,this.actual=t,this.issue=n}}class Sb{actual;message;_tag="Unexpected";constructor(e,t){this.actual=e,this.message=t}}class bb{ast;message;_tag="Missing";actual=void 0;constructor(e,t){this.ast=e,this.message=t}}class Eb{ast;actual;issues;output;_tag="Composite";constructor(e,t,n,i){this.ast=e,this.actual=t,this.issues=n,this.output=i}}class xb{ast;actual;kind;issue;_tag="Refinement";constructor(e,t,n,i){this.ast=e,this.actual=t,this.kind=n,this.issue=i}}class vb{ast;actual;kind;issue;_tag="Transformation";constructor(e,t,n,i){this.ast=e,this.actual=t,this.kind=n,this.issue=i}}class Rb{ast;actual;message;_tag="Type";constructor(e,t,n){this.ast=e,this.actual=t,this.message=n}}class _b{ast;actual;message;_tag="Forbidden";constructor(e,t,n){this.ast=e,this.actual=t,this.message=n}}const Mb=Symbol.for("effect/Schema/ParseErrorTypeId");class Ib extends(qd("ParseError")){[Mb]=Mb;get message(){return this.toString()}toString(){return lE.formatIssueSync(this.issue)}toJSON(){return{_id:"ParseError",message:this.toString()}}[ie](){return this.toJSON()}}const Db=e=>new Ib({issue:e}),Tb=tt,kb=nt,Pb=it,Ob=i(2,((e,t)=>Pb(e)?ct(e,{onLeft:nt,onRight:t}):$y(e,t))),Lb=i(2,((e,t)=>Pb(e)?lt(e,t):Hy(e,t))),Ab=i(2,((e,t)=>Pb(e)?st(e,t):Qy(e,t))),Nb=i(2,((e,t)=>Pb(e)?ot(e,{onLeft:t.onFailure,onRight:t.onSuccess}):jy(e,t))),wb=i(2,((e,t)=>Pb(e)?ct(e,{onLeft:t,onRight:tt}):zy(e,t))),Ub=(e,t)=>void 0===t||h(t)?e:void 0===e?t:{...e,...t},Bb=(e,t,n)=>{const i=Jb(e,t);return(e,t)=>i(e,Ub(n,t))},qb=(e,t,n)=>{const i=Bb(e,t,n);return(e,t)=>mt(i(e,t),Db)},Fb=(e,t,n)=>{const i=Jb(e,t);return(e,t)=>i(e,{...Ub(n,t),isEffectAllowed:!0})},Vb=(e,t)=>qb(e.ast,!0,t),Gb=(e,t)=>Fb(e.ast,!0,t),zb=Vb,Hb=(e,t)=>((e,t,n)=>{const i=Bb(e,t,n);return(e,t)=>xt(i(e,t))})(e.ast,!0,t),jb=(e,t)=>qb(sb(e.ast),!0,t),Qb=(e,t)=>{const n=Jb(sb(e.ast),!0);return(e,i)=>rt(n(e,{exact:!0,...Ub(t,i)}))},Kb=p(Symbol.for("effect/ParseResult/decodeMemoMap"),(()=>new WeakMap)),$b=p(Symbol.for("effect/ParseResult/encodeMemoMap"),(()=>new WeakMap)),Jb=(e,t)=>{const n=t?Kb:$b,i=n.get(e);if(i)return i;const a=Xb(e,t),r=kC(e),o=bt(r)?(e,t)=>a(e,Ub(t,r.value)):a,s=PC(e),l=t&&bt(s)?(t,n)=>iE(wb(o(t,n),s.value),e,t,n):o;return n.set(e,l),l},Wb=e=>It(IC(e)),Yb=e=>It(DC(e)),Xb=(e,t)=>{switch(e._tag){case"Refinement":if(t){const t=Jb(e.from,!0);return(n,i)=>{i=i??NS;const a="all"===i?.errors,r=Ob(wb(t(n,i),(t=>{const r=new xb(e,n,"From",t);return a&&AC(e)&&hE(t)?Et(e.filter(n,i,e),{onNone:()=>nt(r),onSome:t=>nt(new Eb(e,n,[r,new xb(e,n,"Predicate",t)]))}):nt(r)})),(t=>Et(e.filter(t,i,e),{onNone:()=>tt(t),onSome:t=>nt(new xb(e,n,"Predicate",t))})));return iE(r,e,n,i)}}{const t=Jb(sb(e),!0),n=Jb(nE(e.from),!1);return(i,a)=>iE(Ob(t(i,a),(e=>n(e,a))),e,i,a)}case"Transformation":{const n=oE(e.transformation,t),i=t?Jb(e.from,!0):Jb(e.to,!1),a=t?Jb(e.to,!0):Jb(e.from,!1);return(r,o)=>iE(Ob(Ab(i(r,o),(n=>new vb(e,r,t?"Encoded":"Type",n))),(i=>Ob(Ab(n(i,o??NS,e,r),(t=>new vb(e,r,"Transformation",t))),(n=>Ab(a(n,o),(n=>new vb(e,r,t?"Type":"Encoded",n))))))),e,r,o)}case"Declaration":{const n=t?e.decodeUnknown(...e.typeParameters):e.encodeUnknown(...e.typeParameters);return(t,i)=>iE(n(t,i??NS,e),e,t,i)}case"Literal":return Zb(e,(t=>t===e.literal));case"UniqueSymbol":return Zb(e,(t=>t===e.symbol));case"UndefinedKeyword":return Zb(e,E);case"NeverKeyword":return Zb(e,R);case"UnknownKeyword":case"AnyKeyword":case"VoidKeyword":return tt;case"StringKeyword":return Zb(e,g);case"NumberKeyword":return Zb(e,h);case"BooleanKeyword":return Zb(e,y);case"BigIntKeyword":return Zb(e,C);case"SymbolKeyword":return Zb(e,S);case"ObjectKeyword":return Zb(e,M);case"Enums":return Zb(e,(t=>e.enums.some((([e,n])=>n===t))));case"TemplateLiteral":{const t=WS(e);return Zb(e,(e=>g(e)&&t.test(e)))}case"TupleType":{const n=e.elements.map((e=>Jb(e.type,t))),i=e.rest.map((e=>Jb(e.type,t)));let a=e.elements.filter((e=>!e.isOptional));e.rest.length>0&&(a=a.concat(e.rest.slice(1)));const r=a.length,o=e.elements.length>0?e.elements.map(((e,t)=>t)).join(" | "):"never",s=Wb(e),l=Yb(e);return(t,c)=>{if(!Wt(t))return nt(new Rb(e,t));const u="all"===c?.errors,m=[];let d=0;const f=[],p=t.length;for(let n=p;n<=r-1;n++){const i=new Cb(n,t,new bb(a[n-p]));if(!u)return nt(new Eb(e,t,i,f));m.push([d++,i])}if(0===e.rest.length)for(let n=e.elements.length;n<=p-1;n++){const i=new Cb(n,t,new Sb(t[n],`is unexpected, expected: ${o}`));if(!u)return nt(new Eb(e,t,i,f));m.push([d++,i])}let g,h=0;for(;h<n.length;h++)if(p<h+1){if(e.elements[h].isOptional)continue}else{const i=(0,n[h])(t[h],c);if(Pb(i)){if(at(i)){const n=new Cb(h,t,i.left);if(u){m.push([d++,n]);continue}return nt(new Eb(e,t,n,rE(f)))}f.push([d++,i.right])}else{const n=d++,a=h;g||(g=[]),g.push((({es:r,output:o})=>$y(Ky(i),(i=>{if(at(i)){const s=new Cb(a,t,i.left);return u?(r.push([n,s]),Gy):nt(new Eb(e,t,s,rE(o)))}return o.push([n,i.right]),Gy}))))}}if(Xt(i)){const[n,...a]=i;for(;h<p-a.length;h++){const i=n(t[h],c);if(Pb(i)){if(at(i)){const n=new Cb(h,t,i.left);if(u){m.push([d++,n]);continue}return nt(new Eb(e,t,n,rE(f)))}f.push([d++,i.right])}else{const n=d++,a=h;g||(g=[]),g.push((({es:r,output:o})=>$y(Ky(i),(i=>{if(at(i)){const s=new Cb(a,t,i.left);return u?(r.push([n,s]),Gy):nt(new Eb(e,t,s,rE(o)))}return o.push([n,i.right]),Gy}))))}}for(let n=0;n<a.length;n++)if(h+=n,!(p<h+1)){const i=a[n](t[h],c);if(Pb(i)){if(at(i)){const n=new Cb(h,t,i.left);if(u){m.push([d++,n]);continue}return nt(new Eb(e,t,n,rE(f)))}f.push([d++,i.right])}else{const n=d++,a=h;g||(g=[]),g.push((({es:r,output:o})=>$y(Ky(i),(i=>{if(at(i)){const s=new Cb(a,t,i.left);return u?(r.push([n,s]),Gy):nt(new Eb(e,t,s,rE(o)))}return o.push([n,i.right]),Gy}))))}}}const y=({es:n,output:i})=>Yt(n)?nt(new Eb(e,t,rE(n),rE(i))):tt(rE(i));if(g&&g.length>0){const e=g;return Vy((()=>{const t={es:yn(m),output:yn(f)};return $y(Fy(e,(e=>e(t)),{concurrency:s,batching:l,discard:!0}),(()=>y(t)))}))}return y({output:f,es:m})}}case"TypeLiteral":{if(0===e.propertySignatures.length&&0===e.indexSignatures.length)return Zb(e,k);const n=[],i={},a=[];for(const r of e.propertySignatures)n.push([Jb(r.type,t),r]),i[r.name]=null,a.push(r.name);const r=e.indexSignatures.map((e=>[Jb(e.parameter,t),Jb(e.type,t),e.parameter])),o=DS.make(e.indexSignatures.map((e=>e.parameter)).concat(a.map((e=>S(e)?new GC(e):new qC(e))))),s=Jb(o,t),l=Wb(e),c=Yb(e);return(t,u)=>{if(!(e=>_(e)&&!Array.isArray(e))(t))return nt(new Rb(e,t));const m="all"===u?.errors,d=[];let f=0;const p="error"===u?.onExcessProperty,g={};let h,y;if(p||"preserve"===u?.onExcessProperty){h=Sd(t);for(const n of h){const i=s(n,u);if(Pb(i)&&at(i)){if(p){const i=new Cb(n,t,new Sb(t[n],`is unexpected, expected: ${String(o)}`));if(m){d.push([f++,i]);continue}return nt(new Eb(e,t,i,g))}g[n]=t[n]}}}const C=!0===u?.exact;for(let i=0;i<n.length;i++){const a=n[i][1],r=a.name,o=Object.prototype.hasOwnProperty.call(t,r);if(!o){if(a.isOptional)continue;if(C){const n=new Cb(r,t,new bb(a));if(m){d.push([f++,n]);continue}return nt(new Eb(e,t,n,g))}}const s=(0,n[i][0])(t[r],u);if(Pb(s)){if(at(s)){const n=new Cb(r,t,o?s.left:new bb(a));if(m){d.push([f++,n]);continue}return nt(new Eb(e,t,n,g))}g[r]=s.right}else{const n=f++,i=r;y||(y=[]),y.push((({es:r,output:l})=>$y(Ky(s),(s=>{if(at(s)){const c=new Cb(i,t,o?s.left:new bb(a));return m?(r.push([n,c]),Gy):nt(new Eb(e,t,c,l))}return l[i]=s.right,Gy}))))}}for(let n=0;n<r.length;n++){const a=r[n],o=a[0],s=a[1],l=Cd(t,a[2]);for(const n of l){const a=o(n,u);if(Pb(a)&&rt(a)){const a=s(t[n],u);if(Pb(a)){if(at(a)){const i=new Cb(n,t,a.left);if(m){d.push([f++,i]);continue}return nt(new Eb(e,t,i,g))}Object.prototype.hasOwnProperty.call(i,n)||(g[n]=a.right)}else{const r=f++,o=n;y||(y=[]),y.push((({es:s,output:l})=>$y(Ky(a),(a=>{if(at(a)){const n=new Cb(o,t,a.left);return m?(s.push([r,n]),Gy):nt(new Eb(e,t,n,l))}return Object.prototype.hasOwnProperty.call(i,n)||(l[n]=a.right),Gy}))))}}}}const S=({es:n,output:i})=>{if(Yt(n))return nt(new Eb(e,t,rE(n),i));if("original"===u?.propertyOrder){const e=h||Sd(t);for(const t of a)-1===e.indexOf(t)&&e.push(t);const n={};for(const t of e)Object.prototype.hasOwnProperty.call(i,t)&&(n[t]=i[t]);return tt(n)}return tt(i)};if(y&&y.length>0){const e=y;return Vy((()=>{const t={es:yn(d),output:Object.assign({},g)};return $y(Fy(e,(e=>e(t)),{concurrency:l,batching:c,discard:!0}),(()=>S(t)))}))}return S({es:d,output:g})}}case"Union":{const n=tE(e.types,t),i=Sd(n.keys),a=i.length,r=e.types.length,o=new Map;for(let n=0;n<r;n++)o.set(e.types[n],Jb(e.types[n],t));const s=Wb(e)??1,l=Yb(e);return(t,c)=>{const u=[];let m,d=0,f=[];if(a>0)if(_(t))for(let e=0;e<a;e++){const a=i[e],o=n.keys[a].buckets;if(Object.prototype.hasOwnProperty.call(t,a)){const e=String(t[a]);if(Object.prototype.hasOwnProperty.call(o,e))f=f.concat(o[e]);else{const{candidates:e,literals:i}=n.keys[a],o=DS.make(i),s=e.length===r?new ES([new CS(a,o,!1,!0)],[]):DS.make(e);u.push([d++,new Eb(s,t,new Cb(a,t,new Rb(o,t[a])))])}}else{const{candidates:e,literals:i}=n.keys[a],o=new CS(a,DS.make(i),!1,!0),s=e.length===r?new ES([o],[]):DS.make(e);u.push([d++,new Eb(s,t,new Cb(a,t,new bb(o)))])}}else{const i=n.candidates.length===r?e:DS.make(n.candidates);u.push([d++,new Rb(i,t)])}n.otherwise.length>0&&(f=f.concat(n.otherwise));for(let e=0;e<f.length;e++){const n=f[e],i=o.get(n)(t,c);if(!Pb(i)||m&&0!==m.length){const e=d++;m||(m=[]),m.push((t=>Vy((()=>"finalResult"in t?Gy:$y(Ky(i),(n=>(rt(n)?t.finalResult=n:t.es.push([e,n.left]),Gy)))))))}else{if(rt(i))return i;u.push([d++,i.left])}}const p=n=>Yt(n)?1===n.length&&"Type"===n[0][1]._tag?nt(n[0][1]):nt(new Eb(e,t,rE(n))):nt(new Rb(e,t));if(m&&m.length>0){const e=m;return Vy((()=>{const t={es:yn(u)};return $y(Fy(e,(e=>e(t)),{concurrency:s,batching:l,discard:!0}),(()=>"finalResult"in t?t.finalResult:p(t.es)))}))}return p(u)}}case"Suspend":{const n=bd((()=>Jb(QS(e.f(),e.annotations),t)));return(e,t)=>n()(e,t)}}},Zb=(e,t)=>n=>t(n)?tt(n):nt(new Rb(e,n)),eE=(e,t)=>{switch(e._tag){case"Declaration":{const n=OC(e);if(bt(n))return eE(n.value,t);break}case"TypeLiteral":{const n=[];for(let i=0;i<e.propertySignatures.length;i++){const a=e.propertySignatures[i],r=t?db(a.type):sb(a.type);FC(r)&&!a.isOptional&&n.push([a.name,r])}return n}case"TupleType":{const n=[];for(let i=0;i<e.elements.length;i++){const a=e.elements[i],r=t?db(a.type):sb(a.type);FC(r)&&!a.isOptional&&n.push([i,r])}return n}case"Refinement":return eE(e.from,t);case"Suspend":return eE(e.f(),t);case"Transformation":return eE(t?e.from:e.to,t)}return[]},tE=(e,t)=>{const n={},i=[],a=[];for(let r=0;r<e.length;r++){const o=e[r],s=eE(o,t);if(s.length>0){a.push(o);for(let e=0;e<s.length;e++){const[t,i]=s[e],a=String(i.literal);n[t]=n[t]||{buckets:{},literals:[],candidates:[]};const r=n[t].buckets;if(!Object.prototype.hasOwnProperty.call(r,a)){r[a]=[o],n[t].literals.push(i),n[t].candidates.push(o);break}e<s.length-1||(r[a].push(o),n[t].literals.push(i),n[t].candidates.push(o))}}else i.push(o)}return{keys:n,otherwise:i,candidates:a}},nE=e=>AS(e)?nE(e.from):e,iE=(e,t,n,i)=>{if(!0===i?.isEffectAllowed)return e;if(Pb(e))return e;const a=new ap,r=Jy(e,{scheduler:a});a.flush();const o=r.unsafePoll();if(o){if(Ip(o))return tt(o.value);const e=o.cause;return e._tag===Ea?nt(e.error):nt(new _b(t,n,Tu(e)))}return nt(new _b(t,n,"cannot be be resolved synchronously, this is caused by using runSync on an effect that performs async work"))},aE=([e],[t])=>e>t?1:e<t?-1:0;function rE(e){return e.sort(aE).map((e=>e[1]))}const oE=(e,t)=>{switch(e._tag){case"FinalTransformation":return t?e.decode:e.encode;case"ComposeTransformation":return tt;case"TypeLiteralTransformation":return n=>{let i=tt(n);for(const n of e.propertySignatureTransformations){const[e,a]=t?[n.from,n.to]:[n.to,n.from],r=t?n.decode:n.encode,o=t=>{const n=r(Object.prototype.hasOwnProperty.call(t,e)?yt(t[e]):ht());return delete t[e],bt(n)&&(t[a]=n.value),t};i=Lb(i,o)}return i}}},sE=(e,t=[])=>({value:e,forest:t}),lE={formatIssue:e=>Lb(RE(e),cE),formatIssueSync:e=>{const t=lE.formatIssue(e);return Pb(t)?dt(t):Wy(t)},formatError:e=>lE.formatIssue(e.issue),formatErrorSync:e=>lE.formatIssueSync(e.issue)},cE=e=>e.value+uE("\n",e.forest),uE=(e,t)=>{let n="";const i=t.length;let a;for(let r=0;r<i;r++){a=t[r];const o=r===i-1;n+=e+(o?"└":"├")+"─ "+a.value,n+=uE(e+(i>1&&!o?"│  ":"   "),a.forest)}return n},mE=e=>{switch(e){case"Encoded":return"Encoded side transformation failure";case"Transformation":return"Transformation process failure";case"Type":return"Type side transformation failure"}},dE=e=>{switch(e){case"From":return"From side refinement failure";case"Predicate":return"Predicate refinement failure"}},fE=e=>"ast"in e?yt(e.ast):ht(),pE=tt(void 0),gE=e=>t=>t._tag===e,hE=gE("Composite"),yE=gE("Refinement"),CE=gE("Transformation"),SE=e=>Ob((e=>fE(e).pipe(Tt(EC),Et({onNone:()=>pE,onSome:t=>{const n=t(e);return g(n)?tt({message:n,override:!1}):qy(n)?Hy(n,(e=>({message:e,override:!1}))):g(n.message)?tt({message:n.message,override:n.override}):Hy(n.message,(e=>({message:e,override:n.override})))}})))(e),(t=>void 0!==t?!t.override&&(hE(e)||yE(e)&&"From"===e.kind||CE(e)&&"Transformation"!==e.kind)?CE(e)||yE(e)?SE(e.issue):pE:tt(t.message):pE)),bE=e=>fE(e).pipe(Tt(TC),kt((t=>t(e))),It);const EE=e=>Lb(SE(e),(t=>t??bE(e)??function(e){return void 0!==e.message?e.message:`Expected ${AS(e.ast)?(t=e.ast,MC(t).pipe(Rt((()=>vC(t))),Rt((()=>RC(t))),Rt((()=>_C(t))),vt((()=>`{ ${t.from} | filter }`)))):String(e.ast)}, actual ${Ed(e.actual)}`;var t}(e))),xE=e=>bE(e)??String(e.ast),vE=e=>e.message??"is forbidden",RE=e=>{switch(e._tag){case"Type":return Lb(EE(e),sE);case"Forbidden":return tt(sE(xE(e),[sE(vE(e))]));case"Unexpected":return tt(sE((e=>e.message??"is unexpected")(e)));case"Missing":return Lb((e=>{const t=xC(e.ast);if(bt(t)){const e=t.value();return g(e)?tt(e):e}return tt(e.message??"is missing")})(e),sE);case"Transformation":return Ob(SE(e),(t=>void 0!==t?tt(sE(t)):Lb(RE(e.issue),(t=>sE(xE(e),[sE(mE(e.kind),[t])])))));case"Refinement":return Ob(SE(e),(t=>void 0!==t?tt(sE(t)):Lb(RE(e.issue),(t=>sE(xE(e),[sE(dE(e.kind),[t])])))));case"Pointer":return Lb(RE(e.issue),(t=>sE(Rd(e.path),[t])));case"Composite":return Ob(SE(e),(t=>{if(void 0!==t)return tt(sE(t));const n=xE(e);return xd(e.issues)?Lb(Fy(e.issues,RE),(e=>sE(n,e))):Lb(RE(e.issues),(e=>sE(n,[e])))}))}},_E=e=>0===e.length?e:(e=>e.toUpperCase())(e[0])+e.slice(1),ME=e=>0===e.length?e:(e=>e.toLowerCase())(e[0])+e.slice(1);Symbol.iterator;const IE=i((e=>M(e[0])),((e,...t)=>{const n={};for(const i of t)i in e&&(n[i]=e[i]);return n})),DE=i((e=>M(e[0])),((e,...t)=>{const n={...e};for(const e of t)delete n[e];return n})),TE=Symbol.for("effect/Schema");function kE(e){return class{[TE]=PE;static ast=e;static annotations(e){return kE(AE(this.ast,e))}static pipe(){return de(this,arguments)}static toString(){return String(e)}static Type;static Encoded;static Context;static[TE]=PE}}const PE={_A:e=>e,_I:e=>e,_R:e=>e},OE={schemaId:Xy,message:Zy,missingMessage:eC,identifier:tC,title:nC,description:aC,examples:rC,default:oC,documentation:mC,jsonSchema:sC,arbitrary:lC,pretty:cC,equivalence:uC,concurrency:dC,batching:fC,parseIssueTitle:pC,parseOptions:gC,decodingFallback:hC},LE=e=>{if(!e)return{};const t={...e};for(const n in OE)n in e&&(t[OE[n]]=e[n],delete t[n]);return t},AE=(e,t)=>QS(e,LE(t)),NE=e=>kE(sb(e.ast)),wE=(e,t)=>{const n=Gb(e,t);return(e,t)=>Ab(n(e,t),Db)},UE=wE,BE=e=>I(e,TE)&&M(e[TE]);function qE(e,t=function(e){return TS(e)?DS.make((t=e=>new qC(e),e.map(t))):new qC(e[0]);var t}(e)){return class extends(kE(t)){static annotations(e){return qE(this.literals,AE(this.ast,e))}static literals=[...e]}}function FE(...e){return Xt(e)?qE(e):KE}const VE=e=>kE(new GC(e)),GE=(...[e,...t])=>{const n=[];let i="",a=t;BE(e)?FC(e.ast)?i=String(e.ast.literal):a=[e,...a]:i=String(e);for(let e=0;e<a.length;e++){const t=a[e];if(BE(t)){if(e<a.length-1){const i=a[e+1];if(!BE(i)){n.push(new cS(t.ast,String(i))),e++;continue}if(FC(i.ast)){n.push(new cS(t.ast,String(i.ast.literal))),e++;continue}}n.push(new cS(t.ast,""))}else n.push(new cS(new qC(t),""))}return Yt(n)?kE(new uS(i,n)):kE(new uS("",[new cS(new qC(i),"")]))};function zE(e,t){return class extends(kE(t)){static annotations(e){return zE(this.typeParameters,AE(this.ast,e))}static typeParameters=[...e]}}const HE=function(){return Array.isArray(arguments[0])?(t=arguments[1],n=arguments[2],zE(e=arguments[0],new UC(e.map((e=>e.ast)),((...e)=>t.decode(...e.map(kE))),((...e)=>t.encode(...e.map(kE))),LE(n)))):((e,t)=>{const n=()=>(t,n,i)=>e(t)?Tb(t):kb(new Rb(i,t));return zE([],new UC([],n,n,LE(t)))})(arguments[0],arguments[1]);var e,t,n};class jE extends(kE(HC)){}class QE extends(kE(VC)){}class KE extends(kE(QC)){}class $E extends(kE(XC)){}class JE extends(kE(tS)){}class WE extends(kE(aS)){}function YE(e,t=(e=>DS.make(e.map((e=>e.ast))))(e)){return class extends(kE(t)){static annotations(e){return YE(this.members,AE(this.ast,e))}static members=[...e]}}function XE(...e){return TS(e)?YE(e):Xt(e)?e[0]:KE}const ZE=e=>XE(e,QE),ex=e=>XE(e,jE),tx=e=>XE(e,QE,jE);function nx(e,t,n=((e,t)=>new hS(e.map((e=>BE(e)?new pS(e.ast,!1):e.ast)),t.map((e=>BE(e)?new fS(e.ast):e.ast)),!0))(e,t)){return class extends(kE(n)){static annotations(e){return nx(this.elements,this.rest,AE(this.ast,e))}static elements=[...e];static rest=[...t]}}function ix(e,t){return class extends(nx([],[e],t)){static annotations(e){return ix(this.value,AE(this.ast,e))}static value=e}}const ax=e=>ix(e);function rx(e,t){return class extends(nx([e],[e],t)){static annotations(e){return rx(this.value,AE(this.ast,e))}static value=e}}const ox=e=>rx(e),sx=e=>e?'"?:"':'":"';class lx extends pS{isReadonly;defaultValue;_tag="PropertySignatureDeclaration";constructor(e,t,n,i,a){super(e,t,i),this.isReadonly=n,this.defaultValue=a}toString(){const e=sx(this.isOptional),t=String(this.type);return`PropertySignature<${e}, ${t}, never, ${e}, ${t}>`}}class cx extends pS{isReadonly;fromKey;constructor(e,t,n,i,a){super(e,t,i),this.isReadonly=n,this.fromKey=a}}class ux extends pS{isReadonly;defaultValue;constructor(e,t,n,i,a){super(e,t,i),this.isReadonly=n,this.defaultValue=a}}class mx{from;to;decode;encode;_tag="PropertySignatureTransformation";constructor(e,t,n,i){this.from=e,this.to=t,this.decode=n,this.encode=i}toString(){return`PropertySignature<${sx(this.to.isOptional)}, ${this.to.type}, ${e=this.from.fromKey,void 0===e?"never":g(e)?JSON.stringify(e):String(e)}, ${sx(this.from.isOptional)}, ${this.from.type}>`;var e}}const dx=(e,t)=>{switch(e._tag){case"PropertySignatureDeclaration":return new lx(e.type,e.isOptional,e.isReadonly,{...e.annotations,...t},e.defaultValue);case"PropertySignatureTransformation":return new mx(new cx(e.from.type,e.from.isOptional,e.from.isReadonly,e.from.annotations),new ux(e.to.type,e.to.isOptional,e.to.isReadonly,{...e.to.annotations,...t},e.to.defaultValue),e.decode,e.encode)}},fx=Symbol.for("effect/PropertySignature"),px=e=>I(e,fx);class gx{ast;[TE];[fx]=null;_TypeToken;_Key;_EncodedToken;_HasDefault;constructor(e){this.ast=e}pipe(){return de(this,arguments)}annotations(e){return new gx(dx(this.ast,LE(e)))}toString(){return String(this.ast)}}const hx=e=>new gx(e);class yx extends gx{from;constructor(e,t){super(e),this.from=t}annotations(e){return new yx(dx(this.ast,LE(e)),this.from)}}const Cx=e=>new yx(new lx(e.ast,!1,!0,{},void 0),e),Sx=i(2,((e,t)=>{const n=e.ast;switch(n._tag){case"PropertySignatureDeclaration":return hx(new lx(n.type,n.isOptional,n.isReadonly,n.annotations,t));case"PropertySignatureTransformation":return hx(new mx(n.from,new ux(n.to.type,n.to.isOptional,n.to.isReadonly,n.to.annotations,t),n.decode,n.encode))}})),bx=(e,t,n)=>hx(new mx(new cx(e.ast,!0,!0,{},void 0),new ux(t.ast,!1,!0,{},void 0),(e=>yt(n.decode(e))),Tt(n.encode))),Ex=(e,t,n)=>hx(new mx(new cx(e.ast,!0,!0,{},void 0),new ux(t.ast,!0,!0,{},void 0),n.decode,n.encode)),xx=i((e=>BE(e[0])),((e,t)=>new yx(((e,t)=>{const n=t?.exact,i=t?.default,r=t?.nullable,o="Option"==t?.as,s=t?.onNoneEncoding?Rt(t.onNoneEncoding):a;return n?i?r?Sx(bx(ZE(e),NE(e),{decode:Et({onNone:i,onSome:e=>null===e?i():e}),encode:yt}),i).ast:Sx(bx(e,NE(e),{decode:Et({onNone:i,onSome:a}),encode:yt}),i).ast:o?r?bx(ZE(e),iv(NE(e)),{decode:Ot(v),encode:s}).ast:bx(e,iv(NE(e)),{decode:a,encode:a}).ast:r?Ex(ZE(e),NE(e),{decode:Ot(v),encode:a}).ast:new lx(e.ast,!0,!0,{},void 0):i?r?Sx(bx(tx(e),NE(e),{decode:Et({onNone:i,onSome:e=>null==e?i():e}),encode:yt}),i).ast:Sx(bx(ex(e),NE(e),{decode:Et({onNone:i,onSome:e=>void 0===e?i():e}),encode:yt}),i).ast:o?r?bx(tx(e),iv(NE(e)),{decode:Ot((e=>null!=e)),encode:s}).ast:bx(ex(e),iv(NE(e)),{decode:Ot(x),encode:s}).ast:r?Ex(tx(e),ex(NE(e)),{decode:Ot(v),encode:a}).ast:new lx(ex(e).ast,!0,!0,{},void 0)})(e,t),e))),vx=ab([eC]);function Rx(e,t,n=((e,t)=>{const n=Sd(e),i=[];if(n.length>0){const a=[],r=[],o=[];for(let t=0;t<n.length;t++){const s=n[t],l=e[s];if(px(l)){const e=l.ast;switch(e._tag){case"PropertySignatureDeclaration":{const t=e.type,n=e.isOptional,o=e.annotations;a.push(new CS(s,t,n,!0,vx(e))),r.push(new CS(s,sb(t),n,!0,o)),i.push(new CS(s,t,n,!0,o));break}case"PropertySignatureTransformation":{const t=e.from.fromKey??s;a.push(new CS(t,e.from.type,e.from.isOptional,!0,e.from.annotations)),r.push(new CS(s,e.to.type,e.to.isOptional,!0,e.to.annotations)),o.push(new GS(t,s,e.decode,e.encode));break}}}else a.push(new CS(s,l.ast,!1,!0)),r.push(new CS(s,sb(l.ast),!1,!0)),i.push(new CS(s,l.ast,!1,!0))}if(Xt(o)){const e=[],n=[];for(const i of t){const{indexSignatures:t,propertySignatures:o}=tb(i.key.ast,i.value.ast);o.forEach((e=>{a.push(e),r.push(new CS(e.name,sb(e.type),e.isOptional,e.isReadonly,e.annotations))})),t.forEach((t=>{e.push(t),n.push(new bS(t.parameter,sb(t.type),t.isReadonly))}))}return new wS(new ES(a,e,{[iC]:"Struct (Encoded side)"}),new ES(r,n,{[iC]:"Struct (Type side)"}),new HS(o))}}const a=[];for(const e of t){const{indexSignatures:t,propertySignatures:n}=tb(e.key.ast,e.value.ast);n.forEach((e=>i.push(e))),t.forEach((e=>a.push(e)))}return new ES(i,a)})(e,t)){return class extends(kE(n)){static annotations(e){return Rx(this.fields,this.records,AE(this.ast,e))}static fields={...e};static records=[...t];static make=(t,n)=>{const i=((e,t)=>{const n=Sd(e);for(const i of n){const n=e[i];if(void 0===t[i]&&px(n)){const e=n.ast,a="PropertySignatureDeclaration"===e._tag?e.defaultValue:e.to.defaultValue;void 0!==a&&(t[i]=a())}}return t})(e,{...t});return av(n)?i:jb(this)(i)};static pick(...t){return _x(IE(e,...t))}static omit(...t){return _x(DE(e,...t))}}}function _x(e,...t){return Rx(e,t)}const Mx=e=>FE(e).pipe(Cx,Sx((()=>e))),Ix=(e,t)=>_x({_tag:Mx(e),...t}),Dx=(...e)=>t=>kE(nb(t.ast,e)),Tx=e=>kE(ib(e.ast)),kx=(e,t,n)=>{if(RS(e)&&RS(t)){const i=[...e.propertySignatures];for(const e of t.propertySignatures){const t=e.name,a=i.findIndex((e=>e.name===t));if(-1===a)i.push(e);else{const{isOptional:r,type:o}=i[a];i[a]=new CS(t,Lx(o,e.type,n.concat(t)),r,!0)}}return new ES(i,e.indexSignatures.concat(t.indexSignatures))}throw new Error(Md(e,t,n))},Px=rb([tC]),Ox=(e,t)=>t.map((t=>new LS(t,e.filter,Px(e)))),Lx=(e,t,n)=>DS.make(Nx([e],[t],n)),Ax=e=>kS(e)?e.types:[e],Nx=(e,t,n)=>vn(e,(e=>vn(t,(t=>{switch(t._tag){case"Literal":if(g(t.literal)&&ZC(e)||h(t.literal)&&nS(e)||y(t.literal)&&rS(e))return[t];break;case"StringKeyword":if(t===XC){if(ZC(e)||FC(e)&&g(e.literal))return[e];if(AS(e))return Ox(e,Nx(Ax(e.from),[t],n))}else if(e===XC)return[t];break;case"NumberKeyword":if(t===tS){if(nS(e)||FC(e)&&h(e.literal))return[e];if(AS(e))return Ox(e,Nx(Ax(e.from),[t],n))}else if(e===tS)return[t];break;case"BooleanKeyword":if(t===aS){if(rS(e)||FC(e)&&y(e.literal))return[e];if(AS(e))return Ox(e,Nx(Ax(e.from),[t],n))}else if(e===aS)return[t];break;case"Union":return Nx(Ax(e),t.types,n);case"Suspend":return[new OS((()=>Lx(e,t.f(),n)))];case"Refinement":return Ox(t,Nx(Ax(e),Ax(t.from),n));case"TypeLiteral":switch(e._tag){case"Union":return Nx(e.types,[t],n);case"Suspend":return[new OS((()=>Lx(e.f(),t,n)))];case"Refinement":return Ox(e,Nx(Ax(e.from),[t],n));case"TypeLiteral":return[kx(e,t,n)];case"Transformation":{const i=e.transformation,a=kx(e.from,t,n),r=kx(e.to,sb(t),n);switch(i._tag){case"TypeLiteralTransformation":return[new wS(a,r,new HS(i.propertySignatureTransformations))];case"ComposeTransformation":return[new wS(a,r,VS)];case"FinalTransformation":return[new wS(a,r,new BS(((e,t,n,a)=>Lb(i.decode(e,t,n,a),(t=>({...e,...t})))),((e,t,n,a)=>Lb(i.encode(e,t,n,a),(t=>({...e,...t}))))))]}}}break;case"Transformation":if(!US(e))return Nx([t],[e],n);if(jS(t.transformation)&&jS(e.transformation))return[new wS(kx(e.from,t.from,n),kx(e.to,t.to,n),new HS(t.transformation.propertySignatureTransformations.concat(e.transformation.propertySignatureTransformations)))]}throw new Error(Md(e,t,n))})))),wx=i(2,((e,t)=>kE(Lx(e.ast,t.ast,[])))),Ux=e=>kE(new OS((()=>e().ast))),Bx=Symbol.for("effect/SchemaId/Refine");function qx(e,t,n){return class extends(kE(n)){static annotations(e){return qx(this.from,this.filter,AE(this.ast,e))}static[Bx]=e;static from=e;static filter=t;static make=(e,t)=>av(t)?e:jb(this)(e)}}const Fx=(e,t,n)=>{if(y(e))return e?ht():yt(new Rb(t,n));if(g(e))return yt(new Rb(t,n,e));if(void 0!==e){if("_tag"in e)return yt(e);const i=new Rb(t,n,e.message);return yt(Xt(e.path)?new Cb(e.path,n,i):i)}return ht()};function Vx(e,t){return n=>{function i(t,n,i){return((e,t,n)=>{if(i=e,!Array.isArray(i))return Fx(e,t,n);var i;if(Xt(e)){const i=_n(e,(e=>Fx(e,t,n)));if(Xt(i))return yt(1===i.length?i[0]:new Eb(t,n,i))}return ht()})(e(t,n,i),i,t)}return qx(n,i,new LS(n.ast,i,LE(t)))}}function Gx(e,t,n){return class extends(kE(n)){static annotations(e){return Gx(this.from,this.to,AE(this.ast,e))}static from=e;static to=t}}const zx=i((e=>BE(e[0])&&BE(e[1])),((e,t,n)=>Gx(e,t,new wS(e.ast,t.ast,new BS(n.decode,n.encode))))),Hx=i((e=>BE(e[0])&&BE(e[1])),((e,t,n)=>zx(e,t,{strict:!0,decode:(e,t,i,a)=>Tb(n.decode(e,a)),encode:(e,t,i,a)=>Tb(n.encode(e,a))}))),jx=i((e=>BE(e[0])),((e,t,n,i)=>{const a=wx(NE(e),_x({[t]:S(n)?VE(n):FE(n)})).ast;return kE(new wS(e.ast,i?AE(a,i):a,new HS([new GS(t,t,(()=>yt(n)),(()=>ht()))])))}));URL;const Qx=Od,Kx=Ld,$x=Ad,Jx=e=>t=>t.pipe(Vx((e=>Number.isSafeInteger(e)),{schemaId:$x,title:"int",description:"an integer",jsonSchema:{type:"integer"},...e})),Wx=e=>((e,t)=>e=>e.pipe(Vx((e=>e>0),{schemaId:Qx,title:"greaterThan(0)",description:"a positive number",jsonSchema:{exclusiveMinimum:0},...t})))(0,{title:"positive",...e}),Yx=e=>((e,t)=>e=>e.pipe(Vx((e=>e>=0),{schemaId:Kx,title:"greaterThanOrEqualTo(0)",description:"a non-negative number",jsonSchema:{minimum:0},...t})))(0,{title:"nonNegative",...e});const Xx=class extends(JE.pipe(Yx({identifier:"NonNegative"}))){}.pipe(Jx()).annotations({identifier:"NonNegativeInt"}),Zx=e=>"None"===e._tag?ht():yt(e.value),ev=(e,t)=>n=>n.oneof(t,n.record({_tag:n.constant("None")}),n.record({_tag:n.constant("Some"),value:e(n)})).map(Zx),tv=e=>Et({onNone:()=>"none()",onSome:t=>`some(${e(t)})`}),nv=e=>(t,n,i)=>Ct(t)?St(t)?Tb(ht()):((e,t,n,i)=>Nb(e,{onFailure:e=>new Eb(n,i,e),onSuccess:t}))(e(t.value,n),yt,i,t):kb(new Rb(i,t)),iv=e=>{return HE([e],{decode:e=>nv(Gb(e)),encode:e=>{return nv(Fb(e.ast,!1,t));var t}},{description:`Option<${t=e,String(t.ast)}>`,pretty:tv,arbitrary:ev,equivalence:Lt});var t};function av(e){return y(e)?e:e?.disableValidation??!1}const rv=FE("Resource","BackboneElement","Reference","Extension","System.String","positiveInt","string","boolean","Period","Identifier","uri","code","Meta","Narrative","CodeableConcept","date","ContactDetail","markdown","dateTime","Dosage","Expression","canonical","Quantity","RelatedArtifact","Age","Duration","Range","Timing","UsageContext","decimal","Annotation","instant","unsignedInt","base64Binary","url","Coding","integer","Attachment","Signature","ContactPoint","Money","Address","time","Element","ProdCharacteristic","ProductShelfLife","Ratio","id","Contributor","Count","DataRequirement","Distance","HumanName","oid","ParameterDefinition","SampledData","TriggerDefinition","uuid","MarketingStatus","Population","xhtml","ElementDefinition","SubstanceAmount","System.Boolean","System.Date","System.DateTime","System.Decimal","System.Integer","System.Time"),ov=FE("0.01","0.05","0.06","0.11","0.0","0.0.80","0.0.81","0.0.82","0.4","0.4.0","0.5","0.5.0","1.0","1.0.0","1.0.1","1.0.2","1.1","1.1.0","1.4","1.4.0","1.6","1.6.0","1.8","1.8.0","3.0","3.0.0","3.0.1","3.0.2","3.3","3.3.0","3.5","3.5.0","4.0","4.0.0","4.0.1","4.1","4.1.0","4.2","4.2.0","4.3","4.3.0","4.3.0-cibuild","4.3.0-snapshot1","4.4","4.4.0","4.5","4.5.0","4.6","4.6.0","5.0","5.0.0","5.0.0-cibuild","5.0.0-snapshot1","5.0.0-snapshot2","5.0.0-ballot","5.0.0-snapshot3","5.0.0-draft-final"),sv=(FE("Account","ActivityDefinition","AdverseEvent","AllergyIntolerance","Appointment","AppointmentResponse","AuditEvent","Basic","Binary","BiologicallyDerivedProduct","BodyStructure","Bundle","CapabilityStatement","CarePlan","CareTeam","CatalogEntry","ChargeItem","ChargeItemDefinition","Claim","ClaimResponse","ClinicalImpression","CodeSystem","Communication","CommunicationRequest","CompartmentDefinition","Composition","ConceptMap","Condition","Consent","Contract","Coverage","CoverageEligibilityRequest","CoverageEligibilityResponse","DetectedIssue","Device","DeviceDefinition","DeviceMetric","DeviceRequest","DeviceUseStatement","DiagnosticReport","DocumentManifest","DocumentReference","DomainResource","EffectEvidenceSynthesis","Encounter","Endpoint","EnrollmentRequest","EnrollmentResponse","EpisodeOfCare","EventDefinition","Evidence","EvidenceVariable","ExampleScenario","ExplanationOfBenefit","FamilyMemberHistory","Flag","Goal","GraphDefinition","Group","GuidanceResponse","HealthcareService","ImagingStudy","Immunization","ImmunizationEvaluation","ImmunizationRecommendation","ImplementationGuide","InsurancePlan","Invoice","Library","Linkage","List","Location","Measure","MeasureReport","Media","Medication","MedicationAdministration","MedicationDispense","MedicationKnowledge","MedicationRequest","MedicationStatement","MedicinalProduct","MedicinalProductAuthorization","MedicinalProductContraindication","MedicinalProductIndication","MedicinalProductIngredient","MedicinalProductInteraction","MedicinalProductManufactured","MedicinalProductPackaged","MedicinalProductPharmaceutical","MedicinalProductUndesirableEffect","MessageDefinition","MessageHeader","MetadataResource","MolecularSequence","NamingSystem","NutritionOrder","Observation","ObservationDefinition","OperationDefinition","OperationOutcome","Organization","OrganizationAffiliation","Parameters","Patient","PaymentNotice","PaymentReconciliation","Person","PlanDefinition","Practitioner","PractitionerRole","Procedure","Provenance","Questionnaire","QuestionnaireResponse","RelatedPerson","RequestGroup","ResearchDefinition","ResearchElementDefinition","ResearchStudy","ResearchSubject","RiskAssessment","RiskEvidenceSynthesis","Schedule","SearchParameter","ServiceRequest","Slot","Specimen","SpecimenDefinition","StructureDefinition","StructureMap","Subscription","Substance","SubstanceNucleicAcid","SubstancePolymer","SubstanceProtein","SubstanceReferenceInformation","SubstanceSourceMaterial","SubstanceSpecification","SupplyDelivery","SupplyRequest","Task","TerminologyCapabilities","TestReport","TestScript","ValueSet","VerificationResult","VisionPrescription"),FE("base64Binary","boolean","canonical","code","date","dateTime","decimal","id","instant","integer","oid","string","positiveInt","time","unsignedInt","uri","url","uuid")),lv=FE(...sv.literals.map((e=>_E(e)))),cv=(GE(FE("value"),lv),e=>`value${_E(e)}`);function uv(e){return u(e,Object.keys,cn((e=>e.startsWith("value"))))}sv.literals.map(cv);const mv=$E,dv=WE,fv=$E,pv=$E,gv=$E,hv=$E,yv=JE,Cv=$E,Sv=$E,bv=class extends(JE.pipe(Jx({identifier:"Int"}))){},Ev=$E,xv=$E,vv=class extends(JE.pipe(Wx({identifier:"Positive"}))){}.pipe(Jx()),Rv=$E,_v=Xx,Mv=$E,Iv=$E,Dv=$E,Tv=xx,kv=_x({start:Tv($E,{exact:!0}),end:Tv($E,{exact:!0})}),Pv=_x({system:Tv($E,{exact:!0}),version:Tv($E,{exact:!0}),code:Tv($E,{exact:!0}),display:Tv($E,{exact:!0}),userSelected:Tv(WE,{exact:!0})}),Ov=_x({text:xx($E,{exact:!0}),coding:Tv(ax(Pv),{exact:!0})}),Lv=_x({value:Tv(JE,{exact:!0}),comparator:Tv(FE(">","<=",">=",">"),{exact:!0}),unit:Tv($E,{exact:!0}),system:Tv($E,{exact:!0}),code:Tv($E,{exact:!0})}),Av=(Lv.pick("value","unit"),_x({low:Tv(Lv.pick("value","unit"),{exact:!0}),high:Tv(Lv.pick("value","unit"),{exact:!0})})),Nv=_x({system:Tv(FE("phone","fax","email","pager","url","sms","other"),{exact:!0}),value:Tv($E,{exact:!0}),use:Tv(FE("home","work","temp","old","mobile"),{exact:!0}),rank:Tv(vv,{exact:!0}),period:Tv(kv,{exact:!0})}),wv=_x({name:Tv($E,{exact:!0}),telecom:Tv(ax(Nv),{exact:!0})}),Uv=_x({versionId:Tv($E,{exact:!0}),lastUpdated:Tv($E,{exact:!0}),source:Tv($E,{exact:!0}),profile:Tv(ax($E),{exact:!0}),security:Tv(ax(Pv),{exact:!0}),tag:Tv(ax(Pv),{exact:!0})}),Bv=_x({use:xx(FE("usual","official","temp","secondary","old"),{exact:!0}),type:Tv(Ov,{exact:!0}),system:Tv($E,{exact:!0}),value:Tv($E,{exact:!0}),period:Tv(kv,{exact:!0}),assigner:Tv(Ux((()=>Fv)),{exact:!0})}),qv=Bv,Fv=_x({reference:Tv($E,{exact:!0}),type:Tv($E,{exact:!0}),identifier:Tv(Ux((()=>Bv)),{exact:!0}),display:Tv($E,{exact:!0})}),Vv=_x({code:Pv,valueCodeableConcept:Tv(Ov,{exact:!0}),valueQuantity:Tv(Lv,{exact:!0}),valueRange:Tv(Av,{exact:!0}),valueReference:Tv(Fv,{exact:!0})}),Gv=_x({name:$E,value:$E}),zv=_x({path:$E,name:$E,description:Tv($E,{exact:!0}),collection:Tv(WE,{exact:!0,default:()=>!1}),type:Tv($E,{exact:!0}),tags:Tv(ax(Gv),{exact:!0,default:()=>[]})}),Hv=_x({path:$E,description:Tv($E,{exact:!0})}),jv=_x({column:Tv(ax(zv),{exact:!0}),select:Tv(ax(Ux((()=>jv))),{exact:!0}),forEach:Tv($E,{exact:!0}),forEachOrNull:Tv($E,{exact:!0}),unionAll:Tv(ax(Ux((()=>jv))),{exact:!0})}),Qv=jv,Kv=_x({name:$E,valueBase64Binary:Tv(mv,{exact:!0}),valueBoolean:Tv(dv,{exact:!0}),valueCanonical:Tv(fv,{exact:!0}),valueCode:Tv(pv,{exact:!0}),valueDate:Tv(gv,{exact:!0}),valueDateTime:Tv(hv,{exact:!0}),valueDecimal:Tv(yv,{exact:!0}),valueId:Tv(Cv,{exact:!0}),valueInstant:Tv(Sv,{exact:!0}),valueInteger:Tv(bv,{exact:!0}),valueOid:Tv(Ev,{exact:!0}),valuePositiveInt:Tv(vv,{exact:!0}),valueString:Tv(xv,{exact:!0}),valueTime:Tv(Rv,{exact:!0}),valueUnsignedInt:Tv(_v,{exact:!0}),valueUri:Tv(Mv,{exact:!0}),valueUrl:Tv(Iv,{exact:!0}),valueUuid:Tv(Dv,{exact:!0})}),$v=Kv,Jv=_x({status:FE("draft","active","retired","unknown"),url:Tv($E,{exact:!0}),identifier:Tv(ax(qv),{exact:!0}),name:Tv($E,{exact:!0}),title:Tv($E,{exact:!0}),meta:Tv(Uv,{exact:!0}),experimental:Tv(WE,{exact:!0}),publisher:Tv($E,{exact:!0}),contact:Tv(ax(wv),{exact:!0}),description:Tv($E,{exact:!0}),useContext:Tv(Vv,{exact:!0}),copyright:Tv($E,{exact:!0}),resource:$E,fhirVersion:Tv(ov,{exact:!0}),constant:Tv(ax(Kv),{exact:!0}),where:Tv(ax(Hv),{exact:!0}),select:ox(Qv)}),Wv=(Vb(Jv),zb(Jv),Qb(kE(db(Jv.ast))),_x({resourceType:$E},{key:$E,value:class extends(kE(WC)){}})),Yv=Symbol.for("@effect/matcher/Matcher");const Xv={[Yv]:{_input:a,_filters:a,_result:a,_return:a},_tag:"ValueMatcher",add(e){return"Right"===this.value._tag?this:"When"===e._tag&&!0===e.guard(this.provided)||"Not"===e._tag&&!1===e.guard(this.provided)?Zv(this.provided,tt(e.evaluate(this.provided))):this},pipe(){return de(this,arguments)}};function Zv(e,t){const n=Object.create(Xv);return n.provided=e,n.value=t,n}const eR=e=>{if("function"==typeof e)return e;if(Array.isArray(e)){const t=e.map(eR),n=t.length;return e=>{if(!Array.isArray(e))return!1;for(let i=0;i<n;i++)if(!1===t[i](e[i]))return!1;return!0}}if(null!==e&&"object"==typeof e){const t=Object.entries(e).map((([e,t])=>[e,eR(t)])),n=t.length;return e=>{if("object"!=typeof e||null===e)return!1;for(let i=0;i<n;i++){const[n,a]=t[i];if(!(n in e)||!1===a(e[n]))return!1}return!0}}return t=>t===e},tR=e=>{if("ValueMatcher"===e._tag)return e.value;const t=e.cases.length;if(1===t){const t=e.cases[0];return e=>"When"===t._tag&&!0===t.guard(e)||"Not"===t._tag&&!1===t.guard(e)?tt(t.evaluate(e)):nt(e)}return n=>{for(let i=0;i<t;i++){const t=e.cases[i];if("When"===t._tag&&!0===t.guard(n))return tt(t.evaluate(n));if("Not"===t._tag&&!1===t.guard(n))return tt(t.evaluate(n))}return nt(n)}},nR=e=>Zv(e,nt(e)),iR=(e,t)=>n=>n.add({_tag:"When",guard:eR(e),evaluate:t}),aR=e=>null!=e,rR=e=>t=>{const n=tR(t);return it(n)?"Right"===n._tag?n.right:e(n.left):t=>{const i=n(t);return"Right"===i._tag?i.right:e(i.left)}},oR=_x({name:FE("sql"),value:XE(FE("NOT NULL"),GE("REFERENCES ",$E))}),sR=Qb(oR),lR=zv.pipe(NE,Dx("path","name","collection"),Tx).pipe(wx(_x({type:rv,tags:ax(oR)}))),cR=Hx(NE(zv),lR,{strict:!0,decode:({tags:e,type:t,...n})=>u(e,Mn((e=>sR(e))),kn(((e,t)=>e.value===t.value)),(e=>{return{...n,tags:e,type:(i=t,"string"==typeof i&&rv.literals.includes(i)?t:"System.String")};var i})),encode:a}),uR=cR,mR=Hb(uR),{Select:dR,Column:fR,ForEach:pR,ForEachOrNull:gR,UnionAll:hR,$match:yR}=new Proxy({},{get:(e,t,n)=>"$is"===t?D:"$match"===t?Ud:wd(t)}),CR=XE(Ix("Column",{column:ax(NE(uR))}),Ix("Select",{select:ax(Ux((()=>CR)))}),Ix("ForEach",{forEach:$E,select:ax(Ux((()=>CR)))}),Ix("ForEachOrNull",{forEachOrNull:$E,select:ax(Ux((()=>CR)))}),Ix("UnionAll",{unionAll:ax(Ux((()=>CR)))}));function SR(e){return nR(e).pipe(iR({forEach:aR,forEachOrNull:aR},(()=>{throw new TypeError(`Invalid SELECT node. Cannot have both a forEach and a forEachOrNull at the same level. Bad node is: ${JSON.stringify(e,null,2)}`)})),iR({forEach:aR},(({forEach:e,select:t=[],unionAll:n,column:i})=>pR({forEach:e,select:[...n?[hR({unionAll:n.map((e=>SR(e)))})]:[],...i?[fR({column:_n(i,(e=>mR(e)))})]:[],...t.map(SR)]}))),iR({forEachOrNull:aR},(({forEachOrNull:e,select:t=[],unionAll:n,column:i})=>gR({forEachOrNull:e,select:[...n?[hR({unionAll:n.map((e=>SR(e)))})]:[],...i?[fR({column:_n(i,(e=>mR(e)))})]:[],...t.map(SR)]}))),iR({column:Wt,select:Wt,unionAll:Wt},(({column:e=[],select:t=[],unionAll:n=[]})=>dR({select:[hR({unionAll:n.map(SR)}),fR({column:_n(e,(e=>mR(e)))}),...t.map(SR)]}))),iR({unionAll:Wt,select:Wt},(({unionAll:e=[],select:t=[]})=>dR({select:[hR({unionAll:e.map(SR)}),...t.map(SR)]}))),iR({select:Wt,column:Wt},(({select:e=[],column:t=[]})=>dR({select:[fR({column:_n(t,(e=>mR(e)))}),...e.map(SR)]}))),iR({column:Wt,unionAll:Wt},(({column:e=[],unionAll:t=[],select:n=[]})=>dR({select:[fR({column:_n(e,(e=>mR(e)))}),hR({unionAll:t.map(SR)}),...n.map(SR)]}))),iR({select:Wt},(({select:e=[]})=>dR({select:e.map(SR)}))),rR((e=>e.unionAll?hR({unionAll:e.unionAll.map(SR)}):e.column?fR({column:_n(e.column,(e=>mR(e)))}):e.forEach?pR({forEach:e.forEach,select:e.select?.map(SR)??[]}):e.forEachOrNull?gR({forEachOrNull:e.forEachOrNull,select:e.select?.map(SR)??[]}):e.select?dR({select:e.select.map(SR)}):dR({select:[]}))))}const bR=zb(Hx(Qv,CR,{strict:!0,encode:({_tag:e,...t})=>t,decode:e=>SR(e)})),ER=e=>$v.pipe(Dx(cv(e),"name"),Tx,jx("_tag",e)),xR=XE(ER("boolean"),ER("base64Binary"),ER("canonical"),ER("code"),ER("date"),ER("dateTime"),ER("decimal"),ER("id"),ER("instant"),ER("integer"),ER("oid"),ER("string"),ER("positiveInt"),ER("time"),ER("unsignedInt"),ER("uri"),ER("url"),ER("uuid")),vR=$v.pipe((e=>zx(NE(e),NE(xR),{strict:!0,decode:(e,t,n)=>u(e,uv,Et({onNone:()=>kb(new Rb(n,e,"Failed to extract at least 1 value[x] key")),onSome:t=>{if(void 0===e[t])return kb(new Rb(n,e,"data[value[x]] present with undefined value"));const i={_tag:(a=t,u(a,(e=>e.replace("value","")),ME)),name:e.name,[t]:e[t]};var a;return Tb(i)}})),encode:({_tag:e,...t})=>Tb(t)}))),RR=Hb(vR),_R=(UE(vR),Jv.pipe(((...e)=>t=>kE(((e,t)=>{let n=YS(e);return n.length>0?(n.some((e=>ZC(pb(e.parameter))))&&(n=n.filter((e=>!dS(pb(e.parameter))))),new ES([],n)):nb(e,eb(e).filter((e=>!t.includes(e))))})(t.ast,e)))("constant","select","where","name"),wx(_x({_tag:Mx("Select"),select:ox(CR),constant:ax(vR),where:ax(Hv),name:$E})))),MR=Hx(NE(Jv),NE(_R),{strict:!0,decode:({name:e,where:t,constant:n,select:i,...a})=>({...a,_tag:"Select",name:e??a.resource,select:xn(i,(e=>bR(e))),constant:_n(n??[],(e=>RR(e))),where:t??[]}),encode:({_tag:e,...t})=>t}),IR=MR,DR=(UE(IR),zb(IR),wd("Select")),TR=_x({relation:$E,url:$E}),kR=_x({fullUrl:Tv($E,{exact:!0}),link:Tv(ax(TR),{exact:!0}),resource:Tv(Wv,{exact:!0})}),PR=(FE("document","message","transaction","transaction-response","batch","batch-response","history","searchset","collection","subscription-notification"),_x({resourceType:Mx("Bundle"),link:Tv(ax(TR),{exact:!0,default:()=>[]}),entry:Tv(ax(kR),{exact:!0,default:()=>[]})})),OR=PR;PR.make,wE(OR),Qb(OR);var LR=n(6394),AR=n(4310),NR=n.n(AR);const wR={getResourceKey:{fn:e=>e.map((e=>e.id)),arity:{0:[]}},getReferenceKey:{fn:(e,t)=>e.map((e=>function({reference:e}){if(void 0===e)return null;if(e.startsWith("urn"))return e.slice(9);const t=e.split("/");return 2===t.length?t[1]:null}(e))),arity:{0:[],1:["String"]}},code:{fn:e=>e.flatMap((e=>e.coding?.map((e=>{return`${t=e.system,nR(t).pipe(iR(void 0,(()=>"UNKNOWN")),iR("http://loinc.org",(()=>"LOINC")),iR("http://snomed.info/sct",(()=>"SCT")),iR("http://www.ama-assn.org/go/cpt",(()=>"CPT")),iR("http://hl7.org/fhir/sid/icd-10",(()=>"ICD10")),iR("http://hl7.org/fhir/sid/icd-9",(()=>"ICD9")),iR("http://www.nlm.nih.gov/research/umls/rxnorm",(()=>"RXNORM")),iR((e=>e.startsWith("http://terminology.hl7.org")),(()=>"FHIR")),rR((e=>(console.error(`I don't know this code system ${e}`),"UNKNOWN"))))}#${e.code??"NOCODE"}`;var t})))),arity:{0:[]}}};const UR=e=>function(t){const n=new Int32Array(t.sharedSignal,0,1);n[0]=0,e.postMessage({...t,type:"request"}),Atomics.wait(n,0,0)};function BR(e){if("string"!=typeof e)return e[0];let t=e;for(;t.match(/\.\w+\([^)]*\)$/);)t=t.replace(/\.\w+\([^)]*\)$/,"");const n=t.split(".");return n[n.length-1]}function qR(e){return e.split(".")[0]}function FR(e){return e.split(".").length}async function VR(e,t){const{wasm:n,capi:i,vtab:a}=e,r=await async function(e){const{port1:t,port2:n}=new MessageChannel;return new Worker(e,{type:"module"}).postMessage({type:"init"},[n]),await new Promise(((e,n)=>{t.onmessage=i=>{"ready"===i.data?e(t):n()}}))}(t[0]).then(UR),o=e=>a.xCursor.get(e);return{xCreate:0,xConnect(t,n,r,o,s,l){let c=i.SQLITE_OK;return c+=i.sqlite3_declare_vtab(t,"CREATE TABLE resource(\n                    id TEXT,\n                    json TEXT,\n                    type HIDDEN,\n                    fp   HIDDEN\n                )"),c||(a.xVtab.create(s).baseUrl=function({wasm:e},t){const n=new DataView(e.heap8().buffer,t,4).getUint32(0,!0),i=new DataView(e.heap8().buffer,t+4,n);return(new TextDecoder).decode(i)}(e,n)),c},xBestIndex(e,t){const n=a.xIndexInfo(t);for(let e=0;e<n.$nConstraint;e++){const t=n.nthConstraint(e),a=n.nthConstraintUsage(e);switch(t.$op){case i.SQLITE_INDEX_CONSTRAINT_LIMIT:case i.SQLITE_INDEX_CONSTRAINT_OFFSET:}a.$argvIndex=e+1,a.$omit=1}return n.dispose(),i.SQLITE_OK},xDestroy:!0,xDisconnect:e=>(a.xVtab.unget(e),i.SQLITE_OK),xOpen:(e,t)=>{const n=a.xCursor.create(t);return n.pVtab=e,n.index=0,n.rows=[],i.SQLITE_OK},xClose:e=>(a.xCursor.unget(e),i.SQLITE_OK),xNext:e=>(o(e).index++,i.SQLITE_OK),xColumn(e,t,n){const a=o(e),r=a.rows[a.index];switch(n){case 0:i.sqlite3_result_text(t,r.id,-1,i.SQLITE_TRANSIENT);break;case 1:{const e=JSON.stringify(r);i.sqlite3_result_text(t,e,-1,i.SQLITE_TRANSIENT);break}}return i.SQLITE_OK},xRowid:(e,t)=>{const n=o(e);return a.xRowid(t,n.index),i.SQLITE_OK},xEof:e=>{const t=o(e),n=t.index>=t.rows.length;return Number(n)},xFilter:(e,t,n,s,l)=>{const c=i.sqlite3_values_to_js(s,l),[m]=c;if("string"!=typeof m)return i.SQLITE_ERROR;const d=o(e),{baseUrl:f}=(p=d.pVtab,a.xVtab.get(p));var p;let g="/"===f[f.length-1]?`${f}${m}`:`${f}/${m}`,h=[];const y=new SharedArrayBuffer(3145736);for(;null!=g;){r({sharedSignal:y,url:g});const e=new DataView(y,4,4).getUint32(0,!0),t=new Uint8Array(y,8,e),n=(new TextDecoder).decode(t.slice()),i=JSON.parse(n),a=i.entry.map((({resource:e})=>e));h.push(...a),g=i.link?.find((e=>"next"===e.relation))?.url}const C=function(e,t){const[n,i]=e;if(!n)throw new Error("medfetch: unexpected falsy resourceType in args[0]");if(!i)return null;const a=JSON.parse(i),r=new Set,o=[];for(let e=0;e<t.length&&r.size!==a.length;e++){const n=t[e];for(const e of a)if(qR(e)in n){const t=n[e],i=BR(e),a=Array.isArray(t)||FR(e)>1;r.add(e),o.push({path:e,name:i,collection:a,type:"string",tags:[]})}}return DR({status:"active",name:n,resource:n,constant:[],select:[fR({column:o})],where:[]})}(c,h);if(C){const e=function(e,t){let n=t.filter((t=>t.resourceType===e.resource));if(0===n.length)return[];const i=In(e.constant,{},((e,t)=>Vt(e,t.name,(e=>{switch(e._tag){case"string":return e.valueString;case"boolean":return e.valueBoolean;case"base64Binary":return e.valueBase64Binary;case"canonical":return e.valueCanonical;case"code":return e.valueCode;case"date":return e.valueDate;case"dateTime":return e.valueDateTime;case"decimal":return e.valueDecimal;case"id":return e.valueId;case"instant":return e.valueInstant;case"integer":return e.valueInteger;case"oid":return e.valueOid;case"positiveInt":return e.valuePositiveInt;case"time":return e.valueTime;case"unsignedInt":return e.valueUnsignedInt;case"uri":return e.valueUri;case"url":return e.valueUrl;case"uuid":return e.valueUuid}})(t)))),a=(e,t)=>(0,LR.evaluate)(e,t,i,NR(),{async:!1,userInvocationTable:wR});for(const{path:t}of e.where)n=Mn(n,(e=>a(e,`where(${t})`).length>0));return function(e,t,n){const i=(e,t)=>yR(e,{ForEach:({forEach:e,select:a})=>t.flatMap((t=>n(t,e).flatMap((e=>i(dR({select:a}),[e]))))),ForEachOrNull:({forEachOrNull:e,select:a})=>t.flatMap((t=>{const r=n(t,e);return 0===r.length?i(dR({select:a}),[{}]):r.flatMap((e=>i(dR({select:a}),[e])))})),Select:({select:e})=>vn(t,(t=>In(e,[],((e,n)=>{const a=i(n,[t]);return 0===e.length?a:vn(e,(e=>xn(a,(t=>({...e,...t})))))})))),UnionAll:({unionAll:e})=>e.flatMap((e=>i(e,t))),Column:({column:e})=>xn(t,(t=>In(e,{},((e,i)=>u(n(t,i.path),(t=>Vt(e,i.name,i.collection?t:t[0]??null)))))))});return i(e,t)}(e,n,a)}(C,h);d.rows=e}else d.rows=h;return 0}}}export{VR as default};