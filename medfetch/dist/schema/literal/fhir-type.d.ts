import { fhirR4 } from "@smile-cdr/fhirts";
import { Schema } from "effect";
export type InferResource<TResourceType extends fhirR4.Resource["resourceType"]> = Extract<fhirR4.Resource, {
    resourceType: TResourceType;
}>;
export type FhirType = "Resource" | "BackboneElement" | "Reference" | "Extension" | "System.String" | "positiveInt" | "string" | "boolean" | "Period" | "Identifier" | "uri" | "code" | "Meta" | "Narrative" | "CodeableConcept" | "date" | "ContactDetail" | "markdown" | "dateTime" | "Dosage" | "Expression" | "canonical" | "Quantity" | "RelatedArtifact" | "Age" | "Duration" | "Range" | "Timing" | "UsageContext" | "decimal" | "Annotation" | "instant" | "unsignedInt" | "base64Binary" | "url" | "Coding" | "integer" | "Attachment" | "Signature" | "ContactPoint" | "Money" | "Address" | "time" | "Element" | "ProdCharacteristic" | "ProductShelfLife" | "Ratio" | "id" | "Contributor" | "Count" | "DataRequirement" | "Distance" | "HumanName" | "oid" | "ParameterDefinition" | "SampledData" | "TriggerDefinition" | "uuid" | "MarketingStatus" | "Population" | "xhtml" | "ElementDefinition" | "SubstanceAmount" | "System.Boolean" | "System.Date" | "System.DateTime" | "System.Decimal" | "System.Integer" | "System.Time";
export declare function isSystemType(fhirType: string): fhirType is "System.String" | "System.Boolean" | "System.Date" | "System.DateTime" | "System.Decimal" | "System.Integer" | "System.Time";
export declare function isPrimitiveType(fhirType: string): fhirType is "positiveInt" | "string" | "boolean" | "uri" | "code" | "date" | "markdown" | "dateTime" | "canonical" | "decimal" | "instant" | "unsignedInt" | "base64Binary" | "url" | "integer" | "time" | "id" | "oid" | "uuid" | "xhtml";
export declare const FhirType: Schema.Literal<["Resource", "BackboneElement", "Reference", "Extension", "System.String", "positiveInt", "string", "boolean", "Period", "Identifier", "uri", "code", "Meta", "Narrative", "CodeableConcept", "date", "ContactDetail", "markdown", "dateTime", "Dosage", "Expression", "canonical", "Quantity", "RelatedArtifact", "Age", "Duration", "Range", "Timing", "UsageContext", "decimal", "Annotation", "instant", "unsignedInt", "base64Binary", "url", "Coding", "integer", "Attachment", "Signature", "ContactPoint", "Money", "Address", "time", "Element", "ProdCharacteristic", "ProductShelfLife", "Ratio", "id", "Contributor", "Count", "DataRequirement", "Distance", "HumanName", "oid", "ParameterDefinition", "SampledData", "TriggerDefinition", "uuid", "MarketingStatus", "Population", "xhtml", "ElementDefinition", "SubstanceAmount", "System.Boolean", "System.Date", "System.DateTime", "System.Decimal", "System.Integer", "System.Time"]>;
export declare const isFhirType: (u: unknown) => u is FhirType;
