{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Medfetch API"
  },
  "components": {
    "schemas": {
      "TableResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "nullable": true
              }
            }
          },
          "total": {
            "type": "number"
          },
          "page": {
            "type": "number"
          },
          "pageSize": {
            "type": "number"
          },
          "error": {
            "type": "string"
          }
        },
        "required": [
          "data",
          "total",
          "page",
          "pageSize"
        ]
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          }
        },
        "required": [
          "error"
        ]
      },
      "Filter": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string"
          },
          "operator": {
            "type": "string",
            "enum": [
              "equals",
              "contains",
              "greaterThan",
              "lessThan",
              "between"
            ]
          },
          "value": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              },
              {
                "type": "array",
                "items": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "number"
                    }
                  ]
                }
              }
            ]
          }
        },
        "required": [
          "field",
          "operator",
          "value"
        ]
      },
      "Sort": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string"
          },
          "direction": {
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ]
          }
        },
        "required": [
          "field",
          "direction"
        ]
      },
      "Pagination": {
        "type": "object",
        "properties": {
          "page": {
            "type": "number",
            "minimum": 1,
            "default": 1
          },
          "pageSize": {
            "type": "number",
            "minimum": 1,
            "maximum": 100,
            "default": 20
          }
        }
      },
      "TableOperation": {
        "type": "object",
        "properties": {
          "table": {
            "type": "string",
            "enum": [
              "Patient",
              "Procedure"
            ]
          },
          "operation": {
            "type": "string",
            "enum": [
              "select",
              "insert",
              "update",
              "delete"
            ]
          },
          "filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Filter"
            }
          },
          "sort": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Sort"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          },
          "data": {
            "type": "object",
            "additionalProperties": {
              "nullable": true
            }
          }
        },
        "required": [
          "table",
          "operation"
        ]
      },
      "BulkResponse": {
        "type": "object",
        "properties": {
          "affectedRows": {
            "type": "number"
          },
          "error": {
            "type": "string"
          }
        },
        "required": [
          "affectedRows"
        ]
      },
      "BulkOperation": {
        "type": "object",
        "properties": {
          "table": {
            "type": "string",
            "enum": [
              "Patient",
              "Procedure"
            ]
          },
          "operation": {
            "type": "string",
            "enum": [
              "update",
              "delete"
            ]
          },
          "filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Filter"
            }
          },
          "data": {
            "type": "object",
            "additionalProperties": {
              "nullable": true
            }
          }
        },
        "required": [
          "table",
          "operation",
          "filters"
        ]
      },
      "SchemaResponse": {
        "type": "object",
        "properties": {
          "schema": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "nullable": {
                  "type": "boolean"
                }
              },
              "required": [
                "name",
                "type",
                "nullable"
              ]
            }
          },
          "error": {
            "type": "string"
          }
        },
        "required": [
          "schema"
        ]
      },
      "SchemaOperation": {
        "type": "object",
        "properties": {
          "operation": {
            "type": "string",
            "enum": [
              "get",
              "addColumn",
              "removeColumn"
            ]
          },
          "table": {
            "type": "string",
            "enum": [
              "Patient",
              "Procedure"
            ]
          },
          "column": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "TEXT",
                  "INTEGER",
                  "REAL",
                  "BOOLEAN",
                  "DATE"
                ]
              },
              "nullable": {
                "type": "boolean",
                "default": true
              }
            },
            "required": [
              "name",
              "type"
            ]
          }
        },
        "required": [
          "operation",
          "table"
        ]
      },
      "SQL": {
        "type": "object",
        "properties": {
          "summary": {
            "type": "string"
          },
          "sql": {
            "type": "string",
            "example": "SELECT * FROM Patient"
          },
          "error": {
            "type": "string"
          }
        },
        "required": [
          "summary"
        ]
      },
      "POST": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string",
            "example": "Get me all happy Patients"
          }
        },
        "required": [
          "query"
        ]
      }
    },
    "parameters": {}
  },
  "paths": {
    "/table": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TableOperation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Table operation successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/bulk": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkOperation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Bulk operation successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/schema": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SchemaOperation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Schema operation successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchemaResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/nl2sql": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/POST"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "SQL from natural language",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SQL"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/fhir/Patient": {
      "get": {
        "responses": {
          "200": {
            "description": "Patient instance search response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "resourceType": {
                      "type": "string",
                      "enum": [
                        "Bundle"
                      ],
                      "description": "This is a Bundle resource"
                    },
                    "id": {
                      "nullable": true,
                      "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes."
                    },
                    "meta": {
                      "nullable": true,
                      "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource."
                    },
                    "implicitRules": {
                      "nullable": true,
                      "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc."
                    },
                    "_implicitRules": {
                      "nullable": true,
                      "description": "Extensions for implicitRules"
                    },
                    "language": {
                      "nullable": true,
                      "description": "The base language in which the resource is written."
                    },
                    "_language": {
                      "nullable": true,
                      "description": "Extensions for language"
                    },
                    "identifier": {
                      "nullable": true,
                      "description": "A persistent identifier for the bundle that won't change as a bundle is copied from server to server."
                    },
                    "type": {
                      "nullable": true,
                      "description": "Indicates the purpose of this bundle - how it is intended to be used."
                    },
                    "_type": {
                      "nullable": true,
                      "description": "Extensions for type"
                    },
                    "timestamp": {
                      "nullable": true,
                      "description": "The date/time that the bundle was assembled - i.e. when the resources were placed in the bundle."
                    },
                    "_timestamp": {
                      "nullable": true,
                      "description": "Extensions for timestamp"
                    },
                    "total": {
                      "nullable": true,
                      "description": "If a set of search matches or a history, this is the (potentially estimated) total number of entries of type 'match' across all pages in the search.  It does not include search.mode = 'include' or 'outcome' entries and it does not provide a count of the number of entries in the Bundle."
                    },
                    "_total": {
                      "nullable": true,
                      "description": "Extensions for total"
                    },
                    "link": {
                      "type": "array",
                      "items": {
                        "nullable": true
                      },
                      "description": "A series of links that provide context to this bundle."
                    },
                    "entry": {
                      "type": "array",
                      "items": {
                        "nullable": true
                      },
                      "description": "An entry in a bundle resource - will either contain a resource or information about a resource (transactions and history only)."
                    },
                    "signature": {
                      "nullable": true,
                      "description": "Digital Signature - base64 encoded. XML-DSig or a JWS."
                    },
                    "issues": {
                      "nullable": true,
                      "description": "An OperationOutcome that captures issues and warnings that relate to the construction of the Bundle and the content within it."
                    }
                  },
                  "required": [
                    "resourceType"
                  ],
                  "additionalProperties": false,
                  "description": "A container for a collection of resources."
                }
              }
            }
          }
        }
      }
    },
    "/fhir/Condition": {
      "get": {
        "responses": {
          "200": {
            "description": "Condition instance search response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "resourceType": {
                      "type": "string",
                      "enum": [
                        "Bundle"
                      ],
                      "description": "This is a Bundle resource"
                    },
                    "id": {
                      "nullable": true,
                      "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes."
                    },
                    "meta": {
                      "nullable": true,
                      "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource."
                    },
                    "implicitRules": {
                      "nullable": true,
                      "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc."
                    },
                    "_implicitRules": {
                      "nullable": true,
                      "description": "Extensions for implicitRules"
                    },
                    "language": {
                      "nullable": true,
                      "description": "The base language in which the resource is written."
                    },
                    "_language": {
                      "nullable": true,
                      "description": "Extensions for language"
                    },
                    "identifier": {
                      "nullable": true,
                      "description": "A persistent identifier for the bundle that won't change as a bundle is copied from server to server."
                    },
                    "type": {
                      "nullable": true,
                      "description": "Indicates the purpose of this bundle - how it is intended to be used."
                    },
                    "_type": {
                      "nullable": true,
                      "description": "Extensions for type"
                    },
                    "timestamp": {
                      "nullable": true,
                      "description": "The date/time that the bundle was assembled - i.e. when the resources were placed in the bundle."
                    },
                    "_timestamp": {
                      "nullable": true,
                      "description": "Extensions for timestamp"
                    },
                    "total": {
                      "nullable": true,
                      "description": "If a set of search matches or a history, this is the (potentially estimated) total number of entries of type 'match' across all pages in the search.  It does not include search.mode = 'include' or 'outcome' entries and it does not provide a count of the number of entries in the Bundle."
                    },
                    "_total": {
                      "nullable": true,
                      "description": "Extensions for total"
                    },
                    "link": {
                      "type": "array",
                      "items": {
                        "nullable": true
                      },
                      "description": "A series of links that provide context to this bundle."
                    },
                    "entry": {
                      "type": "array",
                      "items": {
                        "nullable": true
                      },
                      "description": "An entry in a bundle resource - will either contain a resource or information about a resource (transactions and history only)."
                    },
                    "signature": {
                      "nullable": true,
                      "description": "Digital Signature - base64 encoded. XML-DSig or a JWS."
                    },
                    "issues": {
                      "nullable": true,
                      "description": "An OperationOutcome that captures issues and warnings that relate to the construction of the Bundle and the content within it."
                    }
                  },
                  "required": [
                    "resourceType"
                  ],
                  "additionalProperties": false,
                  "description": "A container for a collection of resources."
                }
              }
            }
          }
        }
      }
    },
    "/fhir/Procedure": {
      "get": {
        "responses": {
          "200": {
            "description": "Procedure instance search response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "resourceType": {
                      "type": "string",
                      "enum": [
                        "Bundle"
                      ],
                      "description": "This is a Bundle resource"
                    },
                    "id": {
                      "nullable": true,
                      "description": "The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes."
                    },
                    "meta": {
                      "nullable": true,
                      "description": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource."
                    },
                    "implicitRules": {
                      "nullable": true,
                      "description": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc."
                    },
                    "_implicitRules": {
                      "nullable": true,
                      "description": "Extensions for implicitRules"
                    },
                    "language": {
                      "nullable": true,
                      "description": "The base language in which the resource is written."
                    },
                    "_language": {
                      "nullable": true,
                      "description": "Extensions for language"
                    },
                    "identifier": {
                      "nullable": true,
                      "description": "A persistent identifier for the bundle that won't change as a bundle is copied from server to server."
                    },
                    "type": {
                      "nullable": true,
                      "description": "Indicates the purpose of this bundle - how it is intended to be used."
                    },
                    "_type": {
                      "nullable": true,
                      "description": "Extensions for type"
                    },
                    "timestamp": {
                      "nullable": true,
                      "description": "The date/time that the bundle was assembled - i.e. when the resources were placed in the bundle."
                    },
                    "_timestamp": {
                      "nullable": true,
                      "description": "Extensions for timestamp"
                    },
                    "total": {
                      "nullable": true,
                      "description": "If a set of search matches or a history, this is the (potentially estimated) total number of entries of type 'match' across all pages in the search.  It does not include search.mode = 'include' or 'outcome' entries and it does not provide a count of the number of entries in the Bundle."
                    },
                    "_total": {
                      "nullable": true,
                      "description": "Extensions for total"
                    },
                    "link": {
                      "type": "array",
                      "items": {
                        "nullable": true
                      },
                      "description": "A series of links that provide context to this bundle."
                    },
                    "entry": {
                      "type": "array",
                      "items": {
                        "nullable": true
                      },
                      "description": "An entry in a bundle resource - will either contain a resource or information about a resource (transactions and history only)."
                    },
                    "signature": {
                      "nullable": true,
                      "description": "Digital Signature - base64 encoded. XML-DSig or a JWS."
                    },
                    "issues": {
                      "nullable": true,
                      "description": "An OperationOutcome that captures issues and warnings that relate to the construction of the Bundle and the content within it."
                    }
                  },
                  "required": [
                    "resourceType"
                  ],
                  "additionalProperties": false,
                  "description": "A container for a collection of resources."
                }
              }
            }
          }
        }
      }
    }
  }
}